2022-10-09 22:00:13,800 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 22:00:13,802 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 22:00:13,855 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 22:00:13,856 - mmflow - INFO - Distributed training: False
2022-10-09 22:00:14,724 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dCADDY'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dKITTI'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09_h21'
auto_resume = False
gpu_ids = [0]

2022-10-09 22:00:14,768 - mmflow - INFO - Set random seed to 755703922, deterministic: False
2022-10-09 22:00:14,876 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 22:00:15,820 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 22:00:15,874 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 22:00:16,889 - mmflow - INFO - dataset size 800
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 22:00:19,233 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 22:00:19,339 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21
2022-10-09 22:00:19,340 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 22:00:19,341 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 22:00:19,341 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-1.8960e-02, -4.0816e-03,  8.8857e-03,  ..., -1.4094e-02,
            5.2073e-02, -4.1861e-02],
          [-1.4657e-05, -6.6580e-03,  6.5536e-03,  ...,  4.3432e-02,
            7.1227e-03, -4.6400e-03],
          [-4.8963e-02,  2.8134e-02,  1.7680e-02,  ..., -1.4164e-02,
           -5.1323e-02,  1.1660e-02],
          ...,
          [ 1.5436e-03,  2.6797e-02, -1.3107e-02,  ..., -7.7931e-03,
            1.6441e-02,  1.9285e-02],
          [-3.0790e-02, -2.2051e-02,  1.3806e-02,  ..., -9.6138e-05,
           -1.4406e-02,  1.5452e-02],
          [ 3.1939e-02, -2.5468e-03, -9.5425e-03,  ...,  1.0156e-02,
           -2.6898e-03,  4.6157e-03]],

         [[-4.4295e-02, -2.0627e-02, -1.7009e-02,  ..., -1.0703e-02,
            2.2781e-02,  2.0184e-02],
          [-2.8965e-02,  2.6849e-02,  1.3162e-02,  ..., -2.4756e-03,
            2.1617e-02,  4.1705e-02],
          [ 1.9723e-02, -3.2911e-02,  5.0870e-03,  ..., -1.4788e-02,
            1.6880e-02, -1.2077e-02],
          ...,
          [ 1.7568e-02,  3.8729e-02,  1.2207e-02,  ..., -2.2033e-02,
            5.0176e-02,  2.8472e-02],
          [ 7.3291e-02, -1.2008e-02, -2.3555e-02,  ..., -2.5254e-03,
           -9.6802e-03,  6.7930e-02],
          [-1.2035e-04,  1.0381e-02,  3.0954e-02,  ...,  1.6067e-02,
           -3.1063e-02, -3.3863e-03]],

         [[-7.3360e-03,  1.8520e-02,  2.3875e-02,  ...,  2.6914e-03,
           -1.1131e-02, -1.2989e-03],
          [ 2.7042e-02, -6.0850e-03,  2.7354e-02,  ..., -4.5180e-03,
           -8.3470e-03, -9.5670e-03],
          [ 4.5892e-02,  3.7559e-02, -5.3006e-02,  ...,  3.8877e-02,
           -1.3737e-02, -4.3099e-02],
          ...,
          [-2.9368e-02, -8.8052e-03, -2.3944e-02,  ...,  3.5843e-02,
            2.2596e-02,  2.4520e-03],
          [-4.7106e-04,  2.0882e-02, -2.6886e-02,  ...,  3.1767e-02,
            1.9640e-03,  3.6010e-02],
          [ 1.8559e-02,  1.2893e-02,  2.2902e-02,  ..., -1.3806e-02,
            2.9102e-02,  1.3248e-02]]],


        [[[-2.3843e-03,  3.4371e-02,  3.3874e-02,  ...,  1.0369e-02,
           -1.4417e-03, -8.3269e-03],
          [ 2.2097e-02, -3.9186e-02, -1.1845e-02,  ..., -7.5049e-03,
            4.6883e-04,  8.7229e-03],
          [-1.3460e-02,  2.9256e-03, -4.7132e-02,  ...,  5.1840e-02,
           -1.9559e-02,  2.3123e-02],
          ...,
          [-5.2365e-03,  4.5466e-02,  2.9222e-02,  ..., -4.8655e-02,
            1.5245e-02, -7.5320e-03],
          [ 2.4591e-03,  4.8029e-02,  3.3194e-02,  ..., -1.5358e-02,
           -2.2677e-02, -2.2677e-02],
          [ 1.2330e-04, -2.6289e-03,  2.6318e-02,  ...,  1.1916e-02,
            9.8144e-03, -1.2228e-02]],

         [[-7.8439e-03, -1.9124e-02, -4.1998e-02,  ..., -5.4470e-02,
           -1.5714e-02,  2.5970e-03],
          [ 6.6479e-02,  1.0354e-02,  3.7368e-02,  ...,  4.5992e-02,
           -5.1381e-02, -1.8173e-02],
          [-1.7371e-02, -5.7734e-03, -3.0711e-02,  ..., -1.1930e-02,
            1.6217e-02, -2.2542e-02],
          ...,
          [ 1.5402e-03, -1.4022e-02,  3.0091e-02,  ...,  5.3266e-03,
            1.8689e-02,  4.3801e-02],
          [ 3.3718e-02, -3.7657e-02, -4.1597e-02,  ..., -2.5645e-03,
            5.5263e-03,  1.5588e-02],
          [-2.8226e-02, -5.3981e-02, -7.8276e-03,  ..., -5.0925e-03,
            3.1045e-02,  2.7446e-02]],

         [[-4.6924e-02, -4.7555e-03, -3.1066e-03,  ...,  3.2198e-02,
            3.5051e-02,  2.5209e-02],
          [-1.5994e-02, -2.5167e-02,  3.3317e-02,  ..., -1.4774e-03,
            8.9429e-03, -7.0029e-03],
          [ 2.9602e-02,  1.1365e-02, -4.6123e-02,  ..., -1.7499e-02,
            8.3248e-03, -1.1950e-02],
          ...,
          [-1.0091e-02,  2.1105e-02,  2.2960e-02,  ...,  1.5498e-02,
           -1.4334e-02, -3.5537e-02],
          [-2.4035e-02, -2.0531e-03,  1.1297e-02,  ..., -1.4426e-02,
            2.6567e-02,  2.9637e-02],
          [ 1.1362e-02,  1.7485e-02,  3.0349e-02,  ...,  6.1943e-03,
            9.2967e-03,  8.0152e-03]]],


        [[[-3.2213e-03, -1.3669e-02, -1.0802e-03,  ...,  6.1166e-03,
            1.7912e-02, -5.7355e-03],
          [ 2.1412e-02, -3.1961e-02,  3.0001e-02,  ..., -3.4777e-03,
            1.8868e-02,  2.1112e-02],
          [-1.2582e-02, -2.6815e-03,  3.7820e-02,  ..., -1.3769e-02,
           -2.3649e-02, -2.2355e-02],
          ...,
          [ 1.0730e-03,  1.7695e-02, -1.3230e-02,  ...,  4.3787e-03,
           -3.1796e-02, -6.0419e-02],
          [ 1.3529e-02,  3.8314e-03, -1.7635e-03,  ..., -2.7605e-02,
           -3.0584e-02,  4.0656e-03],
          [ 4.0281e-02,  1.2717e-02,  5.7117e-02,  ...,  4.3630e-02,
           -4.9804e-03, -9.2734e-03]],

         [[ 5.4484e-03,  1.3118e-02, -4.5272e-03,  ...,  1.7404e-03,
           -2.8930e-02,  9.5036e-03],
          [ 3.1126e-02,  1.1227e-02,  1.4417e-02,  ...,  2.3008e-02,
            1.3814e-02, -4.4041e-03],
          [ 1.8106e-02,  2.9821e-03, -1.4379e-02,  ...,  3.1040e-02,
           -2.0666e-02,  2.8334e-02],
          ...,
          [-3.5347e-02,  1.8563e-02,  1.3828e-02,  ..., -1.5780e-02,
           -6.4212e-03, -2.8503e-02],
          [-1.5185e-02, -2.9741e-02,  1.6915e-02,  ...,  2.0489e-02,
           -2.4969e-02,  4.5478e-02],
          [ 1.4900e-02, -1.8057e-02,  7.6159e-03,  ..., -1.2678e-02,
           -2.1909e-02, -3.7973e-04]],

         [[-2.3063e-02, -1.0360e-02,  1.1459e-02,  ...,  2.0106e-02,
           -9.3985e-03, -9.0686e-03],
          [-8.8706e-03, -2.4303e-02, -9.3239e-03,  ..., -2.0378e-02,
           -1.7040e-02, -2.8512e-02],
          [-7.5172e-02, -2.3586e-02, -9.6402e-03,  ..., -1.3077e-02,
            2.8121e-02, -1.6655e-02],
          ...,
          [-1.2036e-02,  2.2612e-02, -4.4118e-02,  ...,  2.3290e-02,
           -1.5896e-02,  1.2329e-02],
          [ 1.5978e-02, -5.3937e-02,  2.4694e-02,  ...,  6.2485e-04,
           -2.5735e-02,  1.7338e-03],
          [ 3.8823e-02,  2.3313e-02, -1.5029e-02,  ..., -3.2348e-03,
            1.6733e-02, -3.6327e-02]]],


        ...,


        [[[-2.5098e-02, -2.3531e-02, -3.0519e-02,  ..., -2.0896e-02,
           -7.8438e-03, -1.6384e-02],
          [-7.6704e-03, -1.4379e-02,  1.9504e-02,  ...,  4.8913e-03,
           -1.8725e-02,  1.6860e-02],
          [-1.1287e-02, -6.3107e-02,  3.2870e-02,  ...,  3.7239e-02,
           -1.2519e-03,  6.8590e-02],
          ...,
          [-1.7384e-02, -1.8677e-02, -5.4716e-03,  ...,  7.0947e-03,
           -3.5344e-02,  2.2114e-02],
          [-1.1896e-02,  3.1821e-02,  7.6514e-02,  ...,  1.6385e-02,
            1.1673e-02, -5.4133e-02],
          [-3.2451e-02, -1.6854e-02, -2.3765e-02,  ...,  4.6440e-03,
           -5.8881e-03, -2.7749e-02]],

         [[ 8.4977e-03,  5.5508e-03, -2.8767e-02,  ...,  6.7991e-03,
           -7.1290e-03,  2.3720e-02],
          [-1.2590e-02,  9.0728e-04, -2.8838e-02,  ..., -1.7082e-03,
            1.7085e-02,  6.9380e-03],
          [ 8.8449e-03, -1.4254e-02,  1.4379e-02,  ...,  2.2627e-02,
            1.5422e-02,  1.7934e-03],
          ...,
          [-5.8718e-03,  5.4151e-02, -4.6693e-02,  ...,  4.7650e-03,
           -3.8591e-02,  5.4625e-02],
          [ 2.5215e-02, -4.4601e-02, -9.1905e-03,  ..., -1.6162e-02,
            9.9695e-03, -6.2097e-02],
          [ 9.2256e-03,  4.7314e-02, -4.7719e-03,  ...,  1.0892e-02,
           -3.1743e-02,  1.7502e-02]],

         [[-2.5928e-02, -4.9366e-02,  1.6081e-02,  ...,  5.2967e-03,
           -7.5034e-03,  3.6168e-02],
          [ 2.5465e-02,  3.9280e-03,  3.6468e-03,  ...,  6.8688e-03,
           -2.2088e-02, -6.2145e-03],
          [ 3.9102e-02,  4.0289e-03,  7.3980e-03,  ...,  6.5406e-03,
           -5.8197e-03,  1.3165e-02],
          ...,
          [-2.0047e-02, -2.9088e-02,  6.9202e-02,  ...,  9.0589e-03,
           -1.3053e-02, -7.8463e-03],
          [-1.5017e-02, -3.6604e-02,  6.0921e-02,  ..., -5.3768e-03,
           -2.7735e-02,  2.0737e-02],
          [-7.0832e-02,  9.6820e-03, -6.4820e-03,  ..., -2.4227e-02,
            4.8446e-02, -2.7048e-02]]],


        [[[-2.3914e-02, -8.9174e-03, -2.8786e-02,  ..., -2.6918e-02,
            2.6655e-02,  1.8483e-02],
          [ 2.5996e-03, -1.9098e-03,  3.7545e-02,  ...,  1.0624e-02,
           -3.4210e-03,  1.5654e-02],
          [ 1.2366e-02, -1.4297e-02, -5.6731e-02,  ...,  6.6403e-03,
           -3.4736e-03, -5.2388e-02],
          ...,
          [ 3.7876e-02,  9.5446e-03,  4.4691e-02,  ..., -4.8188e-02,
           -2.8888e-02,  2.3315e-02],
          [-4.1430e-02, -2.9226e-02,  7.3510e-03,  ...,  1.8910e-02,
            1.6730e-02, -6.6253e-03],
          [ 9.0500e-03,  7.1934e-03,  1.7998e-02,  ...,  4.6891e-02,
           -4.1599e-02, -1.9525e-02]],

         [[-3.6011e-02,  1.7261e-02,  1.0203e-02,  ...,  2.2268e-02,
            2.5912e-02, -4.2324e-02],
          [ 3.4082e-02,  5.9618e-02,  3.0210e-02,  ..., -3.5442e-02,
           -1.8675e-02, -1.3943e-02],
          [-2.4133e-02, -1.3959e-02,  4.1866e-02,  ...,  1.8689e-02,
            4.7278e-03, -6.7649e-03],
          ...,
          [ 3.4905e-02,  2.4593e-02, -7.0054e-03,  ...,  3.2300e-02,
           -4.7766e-03,  2.2004e-03],
          [-1.6586e-02, -1.5789e-02,  4.0740e-02,  ...,  1.7339e-02,
            1.2548e-03,  4.5627e-02],
          [-7.7542e-04,  1.5870e-02,  7.7336e-03,  ...,  3.5292e-02,
            3.8523e-02,  5.0723e-02]],

         [[-1.5946e-02, -2.5943e-02, -1.1060e-02,  ..., -8.2846e-03,
           -1.0788e-02,  1.0041e-02],
          [-3.2317e-02,  7.9934e-03, -6.6754e-03,  ..., -1.1557e-02,
           -3.3674e-02, -1.9229e-02],
          [ 1.8595e-02, -2.9442e-02,  3.9005e-02,  ..., -2.3884e-02,
           -2.9903e-02, -2.3520e-02],
          ...,
          [-2.5781e-02, -3.7842e-03,  6.8285e-03,  ..., -5.7880e-03,
            2.4289e-02,  2.2107e-02],
          [ 3.3215e-02,  2.3247e-03,  2.4123e-03,  ...,  1.5648e-03,
            1.4361e-02,  1.0357e-02],
          [ 2.6615e-02,  1.4383e-02,  3.0850e-02,  ...,  1.9589e-02,
            5.1032e-03,  2.4714e-02]]],


        [[[ 4.8337e-03, -1.7679e-02,  2.8612e-02,  ...,  1.9994e-02,
           -1.1394e-02, -9.2830e-03],
          [ 6.8246e-02, -1.8227e-02,  1.1067e-02,  ..., -9.2401e-03,
            1.3011e-02, -1.8067e-02],
          [ 4.5230e-04,  2.3024e-02, -2.7800e-02,  ...,  1.6538e-02,
            6.6182e-03, -5.4173e-03],
          ...,
          [ 1.1615e-02, -2.5745e-02, -2.4423e-02,  ...,  2.5896e-02,
            4.2536e-02, -1.7221e-02],
          [-2.0307e-02, -2.3003e-02,  9.4817e-03,  ...,  2.0153e-02,
           -1.2113e-02, -1.1594e-02],
          [-4.5633e-03,  1.0765e-02, -6.2228e-02,  ..., -2.7122e-02,
            9.3371e-03,  4.5564e-03]],

         [[ 1.5214e-02, -5.9552e-02,  1.9180e-02,  ..., -2.0724e-02,
            3.6145e-02,  3.8540e-02],
          [ 4.6790e-02,  1.0210e-02,  2.0757e-02,  ...,  9.8520e-03,
           -7.3363e-03,  2.2390e-02],
          [ 1.6427e-03,  1.3374e-02, -6.7259e-03,  ..., -1.7550e-02,
           -4.8174e-02, -1.4231e-02],
          ...,
          [-4.1034e-02, -1.0903e-02,  3.5737e-02,  ...,  1.5131e-02,
            4.0776e-04,  4.6385e-02],
          [ 1.5206e-02, -4.1895e-02, -5.4948e-04,  ..., -1.2248e-02,
           -2.1841e-02, -1.2615e-03],
          [ 3.7198e-02, -2.8704e-02,  5.2663e-02,  ...,  7.4805e-03,
           -2.2093e-02,  5.6559e-05]],

         [[ 2.5033e-02,  6.3382e-03, -4.5424e-02,  ..., -3.0171e-02,
           -2.6862e-02,  9.5948e-03],
          [ 5.7186e-03,  1.1211e-02, -6.0648e-02,  ..., -2.9134e-02,
            1.1228e-02,  3.2663e-03],
          [ 3.4312e-02,  2.2183e-02,  4.2018e-04,  ..., -4.0195e-02,
            6.6989e-03, -3.4976e-02],
          ...,
          [-3.3025e-03, -3.4768e-02, -3.8177e-02,  ...,  2.2928e-02,
           -3.2719e-02,  3.2527e-02],
          [ 5.0309e-03,  8.7080e-03, -2.1475e-02,  ..., -4.7050e-02,
           -2.7272e-02, -2.5844e-02],
          [-6.0892e-02, -1.6422e-02, -2.2562e-02,  ...,  1.4391e-02,
           -7.3330e-02, -3.7181e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0632, -0.0441,  0.0514],
          [ 0.0988, -0.0615,  0.0432],
          [ 0.1600,  0.0568,  0.0176]],

         [[-0.0171, -0.0064, -0.0143],
          [ 0.0020,  0.0682,  0.1249],
          [-0.0251,  0.0468,  0.0737]],

         [[ 0.0386, -0.0604,  0.0347],
          [ 0.0417,  0.0017, -0.0338],
          [-0.0517, -0.0101,  0.0282]],

         ...,

         [[ 0.0524,  0.0005, -0.0153],
          [ 0.0324, -0.0578, -0.0599],
          [ 0.0147, -0.1036,  0.0115]],

         [[-0.0240, -0.0402,  0.0453],
          [ 0.0555, -0.0441, -0.0184],
          [-0.1053, -0.0611,  0.0090]],

         [[-0.0579,  0.0199,  0.0488],
          [-0.0394,  0.0698, -0.0648],
          [ 0.0762, -0.0612, -0.0964]]],


        [[[-0.0586, -0.0439, -0.0870],
          [-0.0258,  0.0898, -0.0726],
          [-0.0114,  0.0791,  0.0528]],

         [[-0.0085,  0.0135,  0.0227],
          [-0.0522, -0.0027, -0.0431],
          [-0.0473, -0.0560,  0.0099]],

         [[ 0.0053, -0.0498,  0.0665],
          [-0.0045, -0.0062, -0.0643],
          [-0.0438, -0.0095,  0.1334]],

         ...,

         [[-0.0398, -0.0236, -0.0951],
          [ 0.0653, -0.0008,  0.0523],
          [ 0.0236,  0.0547, -0.0509]],

         [[ 0.1105, -0.0157,  0.0318],
          [ 0.0578, -0.0070,  0.0323],
          [ 0.0350,  0.1252,  0.0058]],

         [[-0.1004, -0.0128,  0.0261],
          [-0.0682,  0.0294,  0.0216],
          [ 0.0050, -0.0296, -0.0159]]],


        [[[ 0.0363, -0.0326,  0.0083],
          [-0.0162, -0.0213, -0.0420],
          [-0.0469, -0.0206, -0.1589]],

         [[ 0.0609,  0.0222, -0.0030],
          [ 0.0734, -0.0048,  0.0674],
          [-0.0048,  0.0718, -0.0280]],

         [[ 0.0142, -0.0415,  0.0273],
          [ 0.0037,  0.1442, -0.0537],
          [ 0.0645,  0.0338,  0.1297]],

         ...,

         [[-0.0431,  0.0692,  0.0056],
          [-0.0191, -0.0943, -0.0663],
          [ 0.0096, -0.0761,  0.0373]],

         [[-0.1180, -0.1336, -0.0375],
          [-0.0168,  0.0529, -0.0156],
          [ 0.0361,  0.0612,  0.0155]],

         [[-0.0852, -0.0491,  0.0349],
          [ 0.1156,  0.0729,  0.0869],
          [-0.0810,  0.0221,  0.0299]]],


        ...,


        [[[ 0.1148,  0.0128, -0.0507],
          [-0.0892,  0.0521, -0.0527],
          [ 0.0415, -0.0420, -0.1287]],

         [[ 0.0454, -0.0063, -0.0306],
          [-0.0408,  0.0573, -0.0356],
          [ 0.0808,  0.0493, -0.0636]],

         [[ 0.0103,  0.0340, -0.0104],
          [-0.0528, -0.0924, -0.0586],
          [ 0.0481, -0.0122, -0.0591]],

         ...,

         [[-0.0553, -0.0069, -0.0233],
          [ 0.0165, -0.1096,  0.0158],
          [ 0.0071, -0.0109, -0.1311]],

         [[-0.0766,  0.0685,  0.0506],
          [-0.0436, -0.0141,  0.0656],
          [-0.0396,  0.0271, -0.0724]],

         [[ 0.0829, -0.0285, -0.0251],
          [ 0.0933, -0.1629,  0.0121],
          [-0.0023,  0.0330, -0.0366]]],


        [[[ 0.0603, -0.0380, -0.1439],
          [ 0.0854, -0.0074,  0.0374],
          [ 0.0129,  0.0406, -0.0307]],

         [[ 0.0602,  0.0356, -0.0176],
          [-0.0401, -0.0437,  0.0960],
          [ 0.0263,  0.0667,  0.0064]],

         [[-0.0879,  0.0890, -0.0264],
          [ 0.0298, -0.0250,  0.0228],
          [ 0.0565, -0.0506, -0.0056]],

         ...,

         [[ 0.0643, -0.0185, -0.0158],
          [-0.0315, -0.1503, -0.0101],
          [-0.0528, -0.0048, -0.0314]],

         [[-0.0211,  0.0027, -0.0290],
          [-0.0206,  0.0670,  0.0503],
          [-0.0708, -0.0479, -0.0714]],

         [[ 0.0353, -0.0468,  0.0181],
          [ 0.0453,  0.0266,  0.0094],
          [-0.0601,  0.0618, -0.0273]]],


        [[[ 0.1308,  0.1034,  0.1048],
          [ 0.0295,  0.0155, -0.0085],
          [ 0.0172, -0.0637, -0.0700]],

         [[ 0.0232, -0.0371, -0.0650],
          [-0.0232, -0.0220, -0.1041],
          [-0.0470,  0.0831,  0.0057]],

         [[ 0.0180, -0.0802,  0.0469],
          [ 0.0970,  0.0399,  0.1135],
          [ 0.0070,  0.0134,  0.0170]],

         ...,

         [[ 0.0006,  0.0324,  0.0554],
          [-0.0801,  0.0504,  0.0365],
          [-0.0663,  0.1050,  0.0198]],

         [[ 0.1473, -0.0347, -0.0318],
          [ 0.0573,  0.0104, -0.0928],
          [ 0.0129, -0.1103, -0.0563]],

         [[ 0.0220,  0.0975,  0.0205],
          [ 0.0590,  0.0185, -0.0944],
          [-0.0740, -0.0988,  0.0003]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-0.0095,  0.0466,  0.0086],
          [-0.0113,  0.0830,  0.1071],
          [-0.0110,  0.0505,  0.0034]],

         [[-0.0725, -0.1060, -0.0694],
          [ 0.0160, -0.0601, -0.0852],
          [-0.0100,  0.0093,  0.0385]],

         [[ 0.0175, -0.0277, -0.1145],
          [ 0.0390,  0.0427, -0.0222],
          [-0.0782, -0.0133, -0.0427]],

         ...,

         [[-0.0208, -0.0330, -0.0232],
          [-0.0850, -0.0212, -0.0654],
          [ 0.0361,  0.0519, -0.0722]],

         [[ 0.0833, -0.0519,  0.0740],
          [ 0.0037, -0.0069, -0.0184],
          [ 0.0594,  0.1012, -0.0523]],

         [[-0.1153,  0.0775, -0.0516],
          [-0.0662,  0.0535, -0.0768],
          [ 0.0571,  0.0582,  0.0035]]],


        [[[-0.1074,  0.1179,  0.0170],
          [ 0.0841,  0.0174,  0.0551],
          [ 0.0574,  0.0918,  0.0207]],

         [[ 0.0834, -0.0045,  0.0625],
          [-0.0270, -0.0932,  0.0135],
          [-0.0325,  0.0039,  0.0214]],

         [[ 0.0443, -0.0397, -0.0134],
          [ 0.0547, -0.0906,  0.0552],
          [ 0.1231, -0.0512, -0.0377]],

         ...,

         [[ 0.0154,  0.0256,  0.0096],
          [ 0.1013, -0.0779,  0.0129],
          [-0.0479,  0.0491,  0.0191]],

         [[-0.0041, -0.0585, -0.0918],
          [-0.0059, -0.0198,  0.0093],
          [-0.0082,  0.0403,  0.0631]],

         [[-0.0609, -0.0339,  0.0589],
          [ 0.0140, -0.1214, -0.0761],
          [-0.0901,  0.0794, -0.0267]]],


        [[[-0.0584, -0.0648, -0.0519],
          [-0.0349,  0.0496,  0.0039],
          [-0.0287, -0.0308, -0.0282]],

         [[-0.0713,  0.0019, -0.0080],
          [ 0.0788, -0.0381,  0.0179],
          [-0.0222,  0.0219, -0.0596]],

         [[-0.0082, -0.0187,  0.1043],
          [ 0.0739,  0.0568, -0.0600],
          [-0.0046, -0.0233,  0.0635]],

         ...,

         [[ 0.0473,  0.0285,  0.0381],
          [ 0.1260,  0.0845,  0.0036],
          [ 0.0467,  0.0234,  0.0103]],

         [[ 0.0941,  0.0102, -0.0323],
          [ 0.0752,  0.1430,  0.0376],
          [-0.0425,  0.0142,  0.0162]],

         [[ 0.0128, -0.0301,  0.0121],
          [-0.0718, -0.1055, -0.0960],
          [-0.0229,  0.0661, -0.1114]]],


        ...,


        [[[-0.0319,  0.1221,  0.0051],
          [ 0.0326, -0.0712, -0.0151],
          [-0.0458,  0.0430, -0.0217]],

         [[ 0.0378, -0.0084,  0.0576],
          [ 0.0097, -0.0842, -0.0284],
          [-0.0662,  0.0214, -0.0567]],

         [[ 0.0496, -0.1112,  0.0535],
          [-0.0284,  0.0124, -0.0576],
          [-0.1655, -0.0290,  0.0396]],

         ...,

         [[-0.0570, -0.0219, -0.0499],
          [-0.1140,  0.0980, -0.0248],
          [-0.0074,  0.0427,  0.0319]],

         [[-0.0106,  0.0483,  0.0737],
          [-0.0507,  0.0045,  0.0202],
          [ 0.0427,  0.0312, -0.0213]],

         [[-0.0454, -0.0827,  0.0418],
          [ 0.0565,  0.0154,  0.0218],
          [-0.0046,  0.0276,  0.0036]]],


        [[[-0.0504, -0.0958, -0.0032],
          [-0.0339,  0.1110,  0.0716],
          [-0.0445, -0.0611, -0.0940]],

         [[-0.0185, -0.0234, -0.0087],
          [-0.0796, -0.0306,  0.0050],
          [-0.1168,  0.0850,  0.0582]],

         [[-0.0099,  0.0548, -0.0729],
          [ 0.0435, -0.0176, -0.0964],
          [ 0.0039, -0.0783,  0.0152]],

         ...,

         [[-0.0554,  0.0420,  0.1016],
          [-0.0804, -0.0863, -0.1421],
          [-0.0288, -0.0037, -0.0612]],

         [[ 0.0132,  0.0122, -0.0056],
          [ 0.0098, -0.0908, -0.0280],
          [ 0.0743,  0.1091,  0.0613]],

         [[-0.0287, -0.0919,  0.0590],
          [ 0.0012,  0.0572,  0.0765],
          [-0.0718, -0.0235, -0.0493]]],


        [[[-0.0159, -0.0477, -0.0554],
          [ 0.0254,  0.0072,  0.0342],
          [ 0.0285,  0.1849, -0.0098]],

         [[ 0.0106, -0.0521, -0.1328],
          [-0.0584,  0.0247, -0.0017],
          [ 0.0133, -0.0797,  0.0469]],

         [[-0.0135, -0.0197,  0.1008],
          [ 0.0626,  0.0221,  0.1377],
          [ 0.0641, -0.0768, -0.0033]],

         ...,

         [[ 0.0191, -0.0407, -0.0405],
          [-0.0723, -0.0223,  0.0276],
          [ 0.0283, -0.0502, -0.0124]],

         [[-0.0551, -0.0216, -0.0258],
          [-0.0039,  0.0003, -0.0497],
          [ 0.0110, -0.0294,  0.0912]],

         [[ 0.1151,  0.0326,  0.0329],
          [ 0.0661,  0.0173,  0.0331],
          [ 0.0520, -0.0230,  0.0638]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 0.0412,  0.0148,  0.0825],
          [-0.0256,  0.0331, -0.0352],
          [ 0.0038, -0.0040, -0.0080]],

         [[-0.0886, -0.0755,  0.0570],
          [-0.0567,  0.0932, -0.0213],
          [ 0.0441,  0.0110,  0.0614]],

         [[ 0.0559, -0.0087,  0.0428],
          [ 0.0180, -0.0522,  0.0969],
          [-0.0229, -0.0029, -0.0211]],

         ...,

         [[-0.0539,  0.0590,  0.0102],
          [-0.0198, -0.1127, -0.0128],
          [-0.1106, -0.1050, -0.0756]],

         [[-0.0141,  0.0182,  0.0632],
          [ 0.0636, -0.0094, -0.0450],
          [ 0.1087,  0.0680, -0.0267]],

         [[ 0.0541,  0.0013,  0.0233],
          [ 0.0712, -0.0241, -0.0254],
          [-0.0465,  0.0197, -0.2011]]],


        [[[ 0.0841, -0.0454,  0.0569],
          [-0.0156,  0.0765,  0.0337],
          [ 0.0492, -0.0124, -0.0155]],

         [[ 0.0160, -0.0665, -0.0401],
          [ 0.0026, -0.0037, -0.0809],
          [-0.0351,  0.0725, -0.0621]],

         [[ 0.0751, -0.0428,  0.0065],
          [-0.0189, -0.0159,  0.0463],
          [ 0.1113,  0.0312,  0.0865]],

         ...,

         [[-0.0434, -0.0747, -0.0765],
          [ 0.0089,  0.0232,  0.0062],
          [ 0.0065,  0.0206, -0.0704]],

         [[-0.0312,  0.0315, -0.0010],
          [-0.0758, -0.0138,  0.0346],
          [ 0.0390, -0.0853,  0.0515]],

         [[-0.0036,  0.1224, -0.0495],
          [-0.0041, -0.0486,  0.0507],
          [ 0.0247,  0.0033, -0.0046]]],


        [[[ 0.1193, -0.0116, -0.0420],
          [-0.0439,  0.0866,  0.0086],
          [-0.1099, -0.0253,  0.0488]],

         [[-0.0547,  0.0046,  0.0823],
          [ 0.0576,  0.0189, -0.0927],
          [ 0.0464, -0.0149,  0.0992]],

         [[-0.0490, -0.0282,  0.0102],
          [-0.0142,  0.0086, -0.0794],
          [ 0.0300,  0.0062,  0.0713]],

         ...,

         [[ 0.1111, -0.0298,  0.0468],
          [ 0.0059, -0.0426, -0.0532],
          [-0.0239, -0.0532,  0.0289]],

         [[-0.0373,  0.0516,  0.0131],
          [ 0.0552,  0.0870,  0.0385],
          [ 0.0076, -0.0264, -0.0415]],

         [[ 0.0153, -0.0418,  0.0655],
          [-0.0283, -0.0152,  0.0071],
          [ 0.1121,  0.0569,  0.0216]]],


        ...,


        [[[-0.0528,  0.0986, -0.0792],
          [-0.1099,  0.0208, -0.0498],
          [ 0.0127,  0.0714,  0.0072]],

         [[ 0.0815, -0.0528, -0.0502],
          [-0.0907, -0.0375,  0.0455],
          [ 0.0733, -0.0508,  0.0183]],

         [[-0.1064, -0.0388, -0.0511],
          [-0.0331, -0.0903,  0.0303],
          [ 0.0721, -0.0454,  0.0434]],

         ...,

         [[-0.0561,  0.0420,  0.0265],
          [-0.0222,  0.0040,  0.0824],
          [ 0.0624,  0.0045,  0.0294]],

         [[ 0.0101,  0.0407,  0.1067],
          [-0.0217, -0.0405, -0.1420],
          [ 0.0737,  0.0335,  0.0877]],

         [[ 0.1158,  0.0317,  0.0267],
          [-0.0047,  0.0588,  0.0310],
          [ 0.0343,  0.0680,  0.0087]]],


        [[[ 0.0987, -0.0346, -0.0887],
          [-0.0124, -0.0606,  0.0733],
          [-0.0476,  0.0246, -0.0234]],

         [[ 0.0233,  0.0275,  0.0271],
          [-0.0493, -0.0287, -0.0144],
          [-0.0668, -0.0531,  0.0534]],

         [[-0.0193, -0.1067,  0.0235],
          [ 0.0827,  0.0274,  0.0517],
          [-0.0259, -0.0039,  0.0133]],

         ...,

         [[-0.0287, -0.0856, -0.0491],
          [-0.0217, -0.0115, -0.0314],
          [ 0.0597,  0.0043, -0.0089]],

         [[-0.0745, -0.1384,  0.0533],
          [ 0.0128, -0.0693, -0.0171],
          [ 0.0549,  0.1163,  0.0971]],

         [[-0.0241,  0.0936, -0.1177],
          [ 0.0259, -0.0356, -0.0484],
          [ 0.0148, -0.0579,  0.0304]]],


        [[[ 0.0121, -0.0102, -0.1284],
          [-0.0621,  0.0150,  0.0210],
          [-0.0162,  0.1320,  0.1083]],

         [[ 0.0420, -0.0881,  0.0112],
          [ 0.0287,  0.0266, -0.1123],
          [-0.0054,  0.0230,  0.1134]],

         [[ 0.0419,  0.0221,  0.0837],
          [ 0.0202,  0.0153, -0.0437],
          [-0.0594,  0.0043, -0.0193]],

         ...,

         [[-0.0983, -0.0595, -0.0741],
          [ 0.1013,  0.0350, -0.1569],
          [ 0.0348,  0.0950, -0.0754]],

         [[ 0.0133,  0.0061,  0.0576],
          [ 0.0208, -0.0529,  0.0781],
          [-0.0256,  0.0280, -0.0473]],

         [[-0.0479, -0.0088, -0.1114],
          [ 0.0087,  0.0845,  0.0784],
          [-0.0452,  0.0385, -0.0382]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 0.0897,  0.0618, -0.0050],
          [-0.1505,  0.0145,  0.0578],
          [ 0.0593,  0.0150, -0.0773]],

         [[ 0.0177,  0.0512,  0.1338],
          [-0.0636, -0.0502,  0.0460],
          [-0.0460, -0.0010, -0.0069]],

         [[-0.0599, -0.0337,  0.0430],
          [-0.0327, -0.0651, -0.0456],
          [ 0.0106,  0.0346, -0.0614]],

         ...,

         [[-0.0205,  0.0164,  0.0062],
          [ 0.0433,  0.0339, -0.0101],
          [ 0.0404,  0.0169,  0.0995]],

         [[ 0.0468,  0.0042, -0.0550],
          [ 0.0901, -0.0598,  0.0295],
          [ 0.0069,  0.0178,  0.1041]],

         [[ 0.0159, -0.1191, -0.0650],
          [-0.0473, -0.0180,  0.0031],
          [-0.1037, -0.0549,  0.0671]]],


        [[[ 0.0543,  0.0077,  0.0219],
          [ 0.0149, -0.0074,  0.0069],
          [-0.0325, -0.0444, -0.0329]],

         [[ 0.0673, -0.0347, -0.0214],
          [ 0.1605, -0.0724, -0.0168],
          [ 0.0482,  0.0833,  0.0431]],

         [[ 0.0349, -0.0255,  0.0175],
          [ 0.0382,  0.0883,  0.0775],
          [-0.0568,  0.0237, -0.0239]],

         ...,

         [[ 0.0584,  0.0081, -0.0619],
          [-0.0623, -0.1100, -0.0728],
          [-0.0318,  0.1018,  0.0633]],

         [[-0.0784,  0.0463, -0.0825],
          [ 0.0484,  0.0370,  0.0171],
          [-0.0207,  0.0350,  0.1006]],

         [[ 0.0362,  0.0190,  0.1025],
          [ 0.0381,  0.0017,  0.0335],
          [ 0.0767, -0.0452, -0.0914]]],


        [[[-0.0189,  0.0616,  0.0779],
          [-0.1452, -0.0262,  0.0071],
          [-0.0003, -0.0817,  0.0153]],

         [[-0.1215,  0.0899, -0.1541],
          [-0.0447,  0.0107,  0.0133],
          [ 0.1011, -0.0518, -0.0797]],

         [[ 0.0911, -0.0475, -0.0776],
          [ 0.0880, -0.0700, -0.0127],
          [-0.1334,  0.0373, -0.1636]],

         ...,

         [[-0.0153, -0.0489,  0.0224],
          [ 0.0579,  0.0588,  0.0969],
          [ 0.0767,  0.0857, -0.0361]],

         [[-0.0710,  0.0308,  0.0031],
          [-0.0443,  0.0321,  0.0732],
          [ 0.0202, -0.0212, -0.0540]],

         [[ 0.0144, -0.0206,  0.0759],
          [ 0.0217,  0.0698, -0.0185],
          [ 0.0400,  0.0196,  0.1023]]],


        ...,


        [[[-0.1083, -0.1084, -0.0411],
          [ 0.0459, -0.0008,  0.0984],
          [ 0.0377,  0.0168,  0.0204]],

         [[-0.0795,  0.0272,  0.0687],
          [-0.1220, -0.0106, -0.0597],
          [-0.0148,  0.1142, -0.0029]],

         [[ 0.1144, -0.0144, -0.0159],
          [-0.0349, -0.0667, -0.0183],
          [-0.0404,  0.0207, -0.0191]],

         ...,

         [[-0.0082,  0.0283, -0.0572],
          [-0.0123,  0.0007, -0.0354],
          [ 0.0710,  0.0127,  0.0671]],

         [[-0.0345,  0.0711, -0.0589],
          [ 0.0032,  0.0692, -0.0448],
          [-0.0572, -0.0009, -0.0042]],

         [[ 0.0257, -0.0566,  0.0012],
          [-0.0204, -0.0396,  0.0278],
          [-0.0618, -0.0618, -0.0086]]],


        [[[ 0.0285, -0.0897,  0.0050],
          [ 0.0554, -0.0306,  0.1244],
          [-0.0065, -0.0166, -0.0240]],

         [[ 0.0137, -0.0590,  0.0817],
          [-0.1134,  0.0096, -0.0165],
          [-0.0093,  0.0143,  0.0264]],

         [[-0.0487, -0.0995,  0.0021],
          [-0.0682,  0.0413, -0.0168],
          [-0.0044,  0.0537,  0.0501]],

         ...,

         [[ 0.0497,  0.0080,  0.0246],
          [-0.0209, -0.0642,  0.0017],
          [ 0.0236,  0.0333, -0.0425]],

         [[ 0.0592, -0.0434, -0.0474],
          [ 0.0438,  0.0856, -0.0467],
          [-0.0322, -0.1458, -0.0265]],

         [[-0.0754,  0.0460,  0.0329],
          [ 0.0047,  0.0155,  0.0152],
          [ 0.0203,  0.1083, -0.0002]]],


        [[[-0.0184,  0.1092,  0.0292],
          [-0.0238, -0.0981,  0.0710],
          [ 0.0558,  0.0099,  0.0047]],

         [[-0.0490, -0.0061,  0.0243],
          [ 0.0425, -0.0154,  0.0124],
          [-0.0975,  0.0384,  0.1148]],

         [[-0.0743,  0.0295, -0.0507],
          [ 0.0958,  0.0647,  0.0855],
          [ 0.0362,  0.0440,  0.0316]],

         ...,

         [[-0.0457,  0.0303,  0.0702],
          [ 0.0452,  0.0421,  0.0106],
          [ 0.0770,  0.0079, -0.0505]],

         [[-0.0787, -0.0364,  0.1177],
          [-0.0074,  0.0352,  0.0452],
          [ 0.0405, -0.0218,  0.0793]],

         [[-0.0903, -0.0081,  0.0602],
          [ 0.1240, -0.0060,  0.0088],
          [-0.0937,  0.0548,  0.0713]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.0626]],

         [[-0.0445]],

         [[-0.0317]],

         ...,

         [[ 0.0035]],

         [[ 0.2318]],

         [[-0.0458]]],


        [[[-0.1377]],

         [[-0.1325]],

         [[ 0.0796]],

         ...,

         [[-0.0796]],

         [[-0.2002]],

         [[-0.1125]]],


        [[[ 0.0381]],

         [[ 0.0541]],

         [[-0.0948]],

         ...,

         [[-0.0321]],

         [[-0.1163]],

         [[-0.0262]]],


        ...,


        [[[-0.1635]],

         [[ 0.0019]],

         [[ 0.0014]],

         ...,

         [[-0.0851]],

         [[ 0.1572]],

         [[ 0.0727]]],


        [[[-0.0422]],

         [[-0.0023]],

         [[ 0.1327]],

         ...,

         [[-0.0367]],

         [[-0.0015]],

         [[-0.0215]]],


        [[[ 0.1457]],

         [[ 0.0018]],

         [[ 0.0424]],

         ...,

         [[-0.0273]],

         [[ 0.0547]],

         [[-0.1206]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 5.2601e-02,  1.5053e-02,  4.7031e-02],
          [-3.1631e-02, -4.0650e-02,  2.2283e-02],
          [ 4.0707e-02, -2.4294e-02, -1.0013e-02]],

         [[ 3.7272e-02,  2.9740e-02, -2.3894e-02],
          [ 1.7804e-02,  8.8709e-02,  5.1972e-02],
          [ 8.1183e-02, -1.4684e-02,  6.2971e-02]],

         [[ 1.1218e-03,  9.2513e-02, -4.2334e-02],
          [-3.3447e-03, -1.0388e-01,  3.9135e-02],
          [ 1.2949e-02,  3.4265e-02,  2.2564e-02]],

         ...,

         [[-1.9231e-02, -7.0998e-02, -4.1278e-02],
          [-1.8306e-02, -2.9394e-03,  2.3867e-02],
          [-8.6336e-03,  3.0722e-02,  5.4668e-02]],

         [[-4.0569e-02, -7.5795e-02,  4.2180e-02],
          [ 4.4708e-02, -2.2409e-02,  4.5498e-02],
          [-2.0265e-02, -6.5910e-02,  2.9363e-02]],

         [[ 3.9505e-02,  7.2843e-02, -1.5864e-03],
          [ 7.3333e-03,  4.1776e-02, -5.2916e-02],
          [ 3.3117e-03, -7.1417e-03,  2.5027e-02]]],


        [[[-7.3699e-02,  3.2780e-02,  5.7433e-03],
          [-6.0632e-02,  1.7220e-02,  4.9556e-02],
          [-9.9667e-02,  3.3559e-02,  3.0340e-02]],

         [[ 2.3785e-02, -5.3682e-02,  7.1404e-02],
          [ 1.0728e-02,  2.9235e-02,  1.9663e-02],
          [ 2.5377e-02, -9.4647e-02, -1.1513e-02]],

         [[-5.9392e-02, -2.2327e-02,  4.6582e-02],
          [ 2.9407e-02, -1.0710e-02,  4.2795e-02],
          [ 6.7436e-02, -2.6525e-02, -7.1164e-03]],

         ...,

         [[ 6.2704e-02,  6.0622e-03, -2.8746e-02],
          [-1.3581e-02, -3.1118e-02, -7.4675e-03],
          [-1.3065e-03, -6.6657e-02, -6.1587e-02]],

         [[-7.5333e-02, -8.3930e-02, -1.3874e-02],
          [-5.3317e-02,  4.8753e-02,  1.7541e-02],
          [ 8.3320e-02, -4.7110e-02, -4.3863e-02]],

         [[ 1.9734e-02,  2.3255e-03,  2.8229e-02],
          [ 4.9856e-02,  2.8313e-02,  3.1157e-02],
          [-1.2980e-02,  1.3000e-02, -4.8993e-03]]],


        [[[-2.6928e-02,  9.2500e-03,  2.8388e-02],
          [-1.1485e-01,  4.0891e-02,  7.4444e-03],
          [ 1.4404e-03,  4.0810e-02,  6.2699e-02]],

         [[-1.1455e-02, -4.2662e-02, -5.5162e-02],
          [ 8.8791e-05, -2.5846e-02, -1.0023e-02],
          [-6.0956e-02, -3.2917e-02, -3.4206e-02]],

         [[-5.1340e-02, -1.9028e-02, -7.9982e-02],
          [ 7.2074e-03,  8.9531e-02, -6.0425e-03],
          [ 9.5097e-02,  6.8287e-03,  6.1554e-02]],

         ...,

         [[-4.4082e-02, -1.7100e-02,  6.7793e-03],
          [ 4.6308e-02,  2.7900e-02, -8.3516e-02],
          [-5.5708e-02, -1.8051e-02,  1.4901e-02]],

         [[-3.4506e-02, -1.2253e-01, -8.3699e-03],
          [ 1.2243e-02,  1.1939e-02,  7.2180e-02],
          [ 4.7938e-02, -3.2312e-02,  6.6684e-03]],

         [[-6.2176e-02, -4.8266e-02, -1.2663e-02],
          [-4.8225e-02, -1.4868e-02,  5.8425e-02],
          [ 8.2478e-02,  7.9646e-03, -1.7860e-03]]],


        ...,


        [[[-8.1712e-03, -1.7356e-02, -1.2749e-02],
          [ 6.0089e-02,  6.9129e-02, -6.4041e-02],
          [-1.6146e-02, -9.8247e-03, -8.7841e-04]],

         [[ 6.0572e-02,  4.3753e-02, -2.5976e-02],
          [ 3.3635e-02,  5.3681e-02, -1.3700e-02],
          [ 4.2903e-02, -5.6813e-03,  5.8540e-03]],

         [[-4.2493e-02,  3.6114e-03, -1.7018e-03],
          [ 2.0483e-02,  4.6943e-02,  8.6576e-02],
          [ 4.1016e-02, -2.3086e-02, -8.1197e-02]],

         ...,

         [[ 1.0832e-02, -3.8884e-02, -3.5826e-03],
          [ 9.4470e-02,  6.7772e-03,  3.1419e-02],
          [ 2.8286e-02,  8.5136e-02,  9.6628e-02]],

         [[ 3.0182e-02,  1.3232e-02,  6.0119e-02],
          [ 6.2746e-02, -1.9915e-02,  8.1840e-02],
          [-9.0594e-02, -2.0736e-02, -7.2887e-02]],

         [[-7.9982e-03,  6.9003e-02, -4.2980e-02],
          [ 7.4578e-02,  3.1500e-03, -2.9153e-02],
          [-4.5894e-02,  3.6682e-02, -9.0058e-03]]],


        [[[ 1.7727e-02, -1.1605e-02,  2.5895e-03],
          [ 9.7383e-02,  7.2694e-02, -8.2876e-03],
          [-3.6049e-02, -8.8713e-02,  3.5686e-02]],

         [[ 4.6826e-02,  6.8591e-04,  1.2869e-02],
          [ 1.0692e-02,  1.0801e-02, -2.1006e-02],
          [-2.9668e-03,  1.1031e-01,  7.6945e-02]],

         [[ 1.5908e-02, -1.0803e-02,  3.9967e-02],
          [ 1.3212e-02,  6.1216e-02,  1.3008e-02],
          [-3.0742e-02,  3.5220e-02, -4.1250e-02]],

         ...,

         [[-2.6494e-03, -5.2281e-02,  3.6920e-02],
          [ 5.1569e-02,  1.9801e-02, -6.8297e-02],
          [ 7.1591e-02, -7.5539e-02, -3.5049e-02]],

         [[ 2.5103e-02,  1.6292e-02,  1.1882e-02],
          [-2.1265e-02,  1.1706e-01,  3.6841e-02],
          [ 3.3649e-02, -8.6209e-02, -8.6640e-02]],

         [[ 5.2847e-02,  5.7704e-02, -5.8456e-02],
          [ 5.3186e-02,  8.3085e-02, -1.5908e-03],
          [-7.8805e-03,  2.9857e-02,  7.8892e-03]]],


        [[[ 3.1227e-03,  8.6018e-02, -3.5290e-02],
          [-1.9864e-02, -6.4465e-02, -7.5426e-03],
          [-1.8975e-02, -2.5848e-02, -1.1749e-01]],

         [[ 8.3712e-02, -4.9602e-02,  3.2834e-02],
          [ 3.5528e-02,  3.8265e-02,  2.0273e-02],
          [ 7.6098e-02, -6.4701e-02, -2.2866e-02]],

         [[ 1.2705e-02,  5.2283e-04, -3.6904e-02],
          [ 3.8229e-04,  2.1703e-02, -1.1106e-01],
          [-1.0242e-02, -5.9785e-02, -3.3866e-02]],

         ...,

         [[-8.7872e-02, -5.2027e-03, -4.5788e-02],
          [-9.7395e-03,  9.3371e-02, -2.7255e-02],
          [-3.8479e-02, -8.5182e-02, -1.8519e-02]],

         [[ 4.0417e-02,  9.0748e-02, -2.7082e-02],
          [ 6.2295e-02, -6.6450e-02,  1.7060e-02],
          [-3.6967e-02,  2.8467e-02, -9.7021e-03]],

         [[-4.4516e-02,  7.3569e-02, -1.1687e-02],
          [ 7.0969e-02,  7.6819e-02, -2.6100e-02],
          [-2.7519e-02, -1.3326e-03, -1.0959e-01]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-0.0924, -0.0049, -0.0070],
          [ 0.0102,  0.0703, -0.0543],
          [ 0.0184,  0.0599,  0.0251]],

         [[ 0.0452, -0.0339, -0.1173],
          [ 0.0386,  0.0361, -0.0212],
          [ 0.0511,  0.0002, -0.0151]],

         [[-0.0015,  0.0543,  0.0834],
          [-0.0206,  0.0845, -0.0133],
          [ 0.0710,  0.0222,  0.0334]],

         ...,

         [[ 0.0170,  0.0191,  0.0177],
          [ 0.0521, -0.0438,  0.0453],
          [ 0.0318, -0.0016,  0.0241]],

         [[-0.0610,  0.0004,  0.0668],
          [-0.0455, -0.0451, -0.0205],
          [-0.0154, -0.0337, -0.0088]],

         [[ 0.0792, -0.0170, -0.0223],
          [-0.0065, -0.1132,  0.0420],
          [-0.0223,  0.0390,  0.0062]]],


        [[[-0.0627,  0.0197,  0.0861],
          [ 0.0819,  0.0221, -0.0175],
          [-0.0421, -0.0562,  0.0757]],

         [[ 0.0633, -0.0108,  0.0152],
          [-0.0222,  0.0262,  0.0092],
          [-0.0712, -0.0036, -0.0126]],

         [[ 0.0272,  0.0164,  0.0177],
          [-0.1189, -0.0186, -0.0067],
          [ 0.0514,  0.0905,  0.0792]],

         ...,

         [[-0.0196, -0.0366, -0.0367],
          [ 0.0019,  0.0108, -0.0049],
          [-0.0137,  0.0479, -0.0412]],

         [[-0.0358,  0.0010,  0.0351],
          [-0.0088,  0.0459,  0.0315],
          [ 0.0063,  0.0286,  0.0146]],

         [[-0.0215,  0.0835,  0.0382],
          [-0.0193, -0.0566,  0.0110],
          [ 0.0357,  0.0468,  0.0304]]],


        [[[ 0.0431,  0.0134, -0.0932],
          [-0.0748, -0.0157, -0.0640],
          [-0.0760,  0.0308,  0.0138]],

         [[ 0.0456,  0.0247,  0.0360],
          [-0.0418,  0.0357,  0.0459],
          [ 0.0164, -0.1364, -0.0640]],

         [[ 0.0027,  0.0363,  0.0093],
          [ 0.0514, -0.0143, -0.0292],
          [-0.0294, -0.0190,  0.0566]],

         ...,

         [[-0.0367, -0.0320, -0.0151],
          [-0.0287,  0.0721, -0.0095],
          [-0.0566,  0.0312, -0.0039]],

         [[-0.0570, -0.0012,  0.0049],
          [ 0.0349, -0.0068,  0.0587],
          [ 0.0034,  0.0639,  0.0667]],

         [[-0.0322,  0.0707, -0.1036],
          [-0.0204,  0.0407, -0.0024],
          [-0.0780,  0.0130, -0.0244]]],


        ...,


        [[[-0.0749, -0.0608, -0.0811],
          [ 0.0120, -0.0739,  0.0755],
          [-0.0147, -0.0604, -0.0205]],

         [[-0.0040,  0.0531,  0.0163],
          [-0.0356,  0.0449, -0.0629],
          [ 0.0488, -0.0124, -0.0469]],

         [[-0.0056, -0.0240, -0.0010],
          [ 0.0272,  0.0204, -0.0003],
          [ 0.0095, -0.0391,  0.0381]],

         ...,

         [[-0.0457, -0.0005,  0.0145],
          [ 0.0256, -0.0038, -0.0118],
          [ 0.0775, -0.0978, -0.0223]],

         [[ 0.0010,  0.0039,  0.0005],
          [ 0.0074, -0.0943, -0.0395],
          [-0.0019,  0.0299,  0.0340]],

         [[ 0.0097, -0.0271,  0.1065],
          [-0.0148, -0.0614, -0.1168],
          [ 0.0955, -0.0134,  0.0582]]],


        [[[ 0.0082,  0.0698, -0.0346],
          [-0.0662,  0.0148, -0.0805],
          [ 0.0370, -0.0550,  0.0440]],

         [[-0.0606, -0.0643,  0.0372],
          [ 0.0059, -0.0130,  0.0274],
          [-0.0389, -0.0354,  0.0615]],

         [[-0.0041, -0.0428, -0.0051],
          [-0.0390,  0.0110, -0.0119],
          [ 0.0468,  0.0025,  0.0661]],

         ...,

         [[ 0.0224,  0.0367,  0.0075],
          [-0.0699, -0.0704,  0.0605],
          [-0.0393,  0.0309, -0.0073]],

         [[-0.0314, -0.0657, -0.0870],
          [-0.0571, -0.0180, -0.0519],
          [-0.0562, -0.0232,  0.0204]],

         [[-0.0232, -0.0429, -0.0613],
          [-0.0476,  0.0185,  0.0162],
          [ 0.0311, -0.0123,  0.0250]]],


        [[[ 0.0192, -0.0147,  0.0483],
          [-0.0727,  0.0323,  0.0158],
          [ 0.0185, -0.0373, -0.0421]],

         [[-0.0506, -0.0776,  0.0002],
          [-0.0020,  0.0246,  0.0036],
          [ 0.0493,  0.0373, -0.0227]],

         [[ 0.0077,  0.1048, -0.0417],
          [ 0.0701, -0.0407,  0.0216],
          [ 0.0836,  0.0555, -0.0236]],

         ...,

         [[ 0.0202,  0.0027,  0.0066],
          [ 0.0576, -0.0108, -0.0370],
          [-0.0413,  0.0043,  0.0570]],

         [[-0.0150, -0.0476, -0.0268],
          [ 0.0252, -0.0526, -0.0009],
          [-0.0117, -0.0345,  0.0483]],

         [[-0.0362, -0.0489, -0.0372],
          [-0.0177,  0.0054,  0.0331],
          [-0.0253, -0.0270,  0.0267]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0314]],

         [[ 0.0779]],

         [[ 0.0209]],

         ...,

         [[-0.0238]],

         [[ 0.0514]],

         [[ 0.3075]]],


        [[[-0.0258]],

         [[-0.1270]],

         [[ 0.0671]],

         ...,

         [[ 0.0379]],

         [[-0.1589]],

         [[ 0.0048]]],


        [[[-0.0088]],

         [[-0.0352]],

         [[-0.1455]],

         ...,

         [[-0.1743]],

         [[-0.0627]],

         [[-0.4150]]],


        ...,


        [[[-0.0890]],

         [[-0.0655]],

         [[-0.0179]],

         ...,

         [[ 0.0769]],

         [[-0.0566]],

         [[ 0.1667]]],


        [[[-0.2300]],

         [[ 0.0785]],

         [[-0.0239]],

         ...,

         [[-0.0048]],

         [[-0.0530]],

         [[-0.1038]]],


        [[[-0.0471]],

         [[ 0.3151]],

         [[-0.1568]],

         ...,

         [[-0.1640]],

         [[-0.1107]],

         [[-0.1148]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0224, -0.0433, -0.0881],
          [-0.0891, -0.0827, -0.0696],
          [-0.0406, -0.0869, -0.0356]],

         [[ 0.0861, -0.0269, -0.0017],
          [ 0.0410,  0.0321,  0.0822],
          [ 0.0661,  0.0542, -0.0303]],

         [[-0.0500,  0.0260,  0.0067],
          [-0.0195, -0.0047, -0.0276],
          [ 0.0134,  0.0468,  0.0622]],

         ...,

         [[-0.0078, -0.0082,  0.0249],
          [ 0.0524,  0.0168, -0.0052],
          [ 0.0389, -0.0290,  0.0387]],

         [[ 0.0229,  0.0728,  0.0429],
          [-0.0377,  0.0593,  0.0417],
          [ 0.0164,  0.0390, -0.0538]],

         [[-0.0164, -0.0462,  0.0646],
          [-0.0102,  0.0197,  0.0629],
          [ 0.0025, -0.0869,  0.0415]]],


        [[[ 0.0202, -0.0105, -0.0115],
          [-0.0008, -0.0116, -0.0340],
          [ 0.0018,  0.0324,  0.0489]],

         [[-0.1521, -0.0620,  0.0857],
          [ 0.0345, -0.0070, -0.0213],
          [-0.0330,  0.0420, -0.0117]],

         [[-0.0762,  0.0371,  0.0748],
          [ 0.1053, -0.0564, -0.0259],
          [-0.0031, -0.0243, -0.0228]],

         ...,

         [[-0.0812, -0.0547,  0.0335],
          [-0.0352,  0.0084,  0.0380],
          [ 0.0338, -0.0414,  0.0148]],

         [[-0.1690,  0.0130, -0.0405],
          [-0.0617, -0.0160,  0.0689],
          [ 0.0610, -0.0408, -0.0317]],

         [[ 0.0266, -0.1059, -0.0389],
          [-0.0727, -0.0233,  0.0012],
          [-0.0016, -0.0052, -0.0190]]],


        [[[ 0.0161,  0.0226, -0.0586],
          [-0.0423,  0.0406,  0.0535],
          [ 0.0665, -0.0064,  0.0808]],

         [[-0.0432, -0.0825, -0.0412],
          [ 0.0523, -0.0204,  0.0011],
          [-0.0643, -0.0037,  0.0061]],

         [[-0.0795,  0.0137,  0.0560],
          [ 0.0199, -0.0519, -0.0661],
          [-0.0057,  0.0437,  0.1440]],

         ...,

         [[-0.0757, -0.0366, -0.0607],
          [ 0.0149,  0.0362,  0.0335],
          [ 0.0425,  0.0460,  0.0214]],

         [[ 0.0061, -0.0260, -0.0233],
          [-0.0963,  0.0402,  0.0134],
          [-0.0292, -0.0750, -0.0050]],

         [[-0.0234,  0.0119, -0.0188],
          [ 0.0120,  0.0308,  0.0743],
          [ 0.0063,  0.0028, -0.0289]]],


        ...,


        [[[-0.0797, -0.0156,  0.0185],
          [-0.0405,  0.0006,  0.0289],
          [-0.0956, -0.0763,  0.0577]],

         [[-0.0389,  0.0159,  0.0022],
          [ 0.0752,  0.0274, -0.0207],
          [ 0.0064, -0.0327, -0.0196]],

         [[ 0.0686,  0.0310,  0.0590],
          [ 0.0283, -0.0302, -0.0551],
          [-0.0395, -0.0420, -0.0108]],

         ...,

         [[ 0.0187,  0.0590, -0.0190],
          [-0.0128,  0.0551, -0.0247],
          [-0.0076,  0.0673,  0.0380]],

         [[ 0.0129, -0.0478,  0.0143],
          [ 0.0278,  0.0103, -0.0087],
          [-0.0196,  0.0666, -0.0866]],

         [[-0.0994,  0.0007,  0.0388],
          [ 0.0151,  0.0645,  0.0180],
          [ 0.0176,  0.0052, -0.0237]]],


        [[[ 0.0285, -0.1172,  0.0179],
          [-0.0712, -0.0718, -0.0548],
          [-0.0215,  0.0405, -0.0788]],

         [[-0.0294, -0.0242, -0.0325],
          [-0.0741, -0.0222,  0.1097],
          [-0.0187,  0.0045,  0.0732]],

         [[-0.0472,  0.0393, -0.0360],
          [ 0.0143,  0.0078, -0.0491],
          [-0.0391,  0.0418,  0.0768]],

         ...,

         [[-0.0058, -0.0805,  0.1179],
          [-0.0509,  0.0758, -0.0435],
          [ 0.0313, -0.0083,  0.0334]],

         [[ 0.0364,  0.0750,  0.0265],
          [ 0.0422, -0.0186,  0.0003],
          [-0.0074,  0.0845,  0.0640]],

         [[-0.0110, -0.0275,  0.1001],
          [-0.0575,  0.0070,  0.0071],
          [ 0.0306, -0.0157,  0.0056]]],


        [[[ 0.0830,  0.0542, -0.0147],
          [ 0.0262, -0.0602, -0.0308],
          [ 0.0396, -0.1081, -0.0329]],

         [[-0.0906, -0.0206,  0.0131],
          [-0.0606,  0.1369, -0.1216],
          [-0.0218, -0.0541,  0.0696]],

         [[-0.0135, -0.0465, -0.0048],
          [-0.0106, -0.0096, -0.0027],
          [-0.0571,  0.0132,  0.0343]],

         ...,

         [[-0.0823, -0.0303, -0.0862],
          [ 0.0695, -0.0107, -0.1255],
          [ 0.0207, -0.0916, -0.0163]],

         [[-0.0081,  0.0714,  0.0118],
          [-0.0392,  0.0257,  0.0029],
          [ 0.0436, -0.0202,  0.0418]],

         [[ 0.0320,  0.0484,  0.0175],
          [ 0.0469, -0.1079,  0.0086],
          [ 0.0364,  0.0179,  0.0068]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-4.9884e-03, -7.9481e-03, -8.0606e-02],
          [ 7.0340e-02,  6.7150e-03,  1.7662e-02],
          [ 3.3483e-03,  3.3022e-02, -7.6008e-03]],

         [[-2.4004e-02,  2.1482e-02,  8.9458e-02],
          [-7.2478e-02,  1.4766e-02, -5.9323e-03],
          [ 9.4066e-02, -5.3285e-03,  9.6546e-03]],

         [[ 4.0238e-02, -1.4197e-02, -5.9544e-02],
          [ 5.3132e-03,  6.3482e-03,  1.3503e-02],
          [ 2.2882e-02,  9.1350e-02,  3.5566e-02]],

         ...,

         [[-1.1858e-02, -4.5814e-02, -7.1399e-02],
          [ 2.8998e-02,  2.6638e-02, -1.8076e-02],
          [-1.5534e-04, -6.2294e-02, -9.8214e-03]],

         [[-4.2470e-02,  8.4480e-02, -1.2226e-02],
          [-3.5798e-02,  3.3604e-02,  2.3233e-02],
          [ 5.9434e-03,  2.6022e-02, -5.7496e-02]],

         [[ 3.1204e-02,  2.0889e-02, -2.8620e-02],
          [ 7.9421e-03,  1.0310e-02, -2.9500e-03],
          [-3.1555e-02,  7.9626e-03, -1.4137e-01]]],


        [[[-6.1101e-02, -8.4975e-02,  1.8692e-02],
          [ 2.0199e-02,  5.4725e-02,  4.9183e-02],
          [ 7.4807e-02, -6.3208e-02, -1.0092e-01]],

         [[-1.7544e-02, -2.8477e-03, -4.0543e-02],
          [ 5.2873e-02, -5.9676e-02, -1.0896e-02],
          [-8.3387e-03, -7.6223e-02, -8.7296e-03]],

         [[ 3.0767e-02,  3.7032e-02,  3.4630e-02],
          [ 4.6563e-02,  1.5082e-02, -6.7379e-02],
          [-2.6647e-02, -3.8781e-02,  6.4547e-02]],

         ...,

         [[ 8.0965e-02,  2.5731e-03,  3.6714e-02],
          [-5.1227e-02,  2.3584e-02, -8.3667e-02],
          [-4.8437e-02,  2.9820e-02, -1.4249e-02]],

         [[-5.2178e-02,  2.2505e-02,  4.8711e-02],
          [-1.6324e-02, -8.1698e-02,  3.5823e-02],
          [-2.6656e-02,  4.6689e-02, -6.3931e-03]],

         [[-2.4580e-02, -4.6022e-02,  3.4479e-02],
          [-7.7241e-02, -6.6197e-02, -8.5291e-03],
          [-5.1266e-02,  6.1502e-02, -2.5822e-02]]],


        [[[ 2.6469e-02, -2.7858e-02,  7.8381e-02],
          [ 1.1362e-01,  1.2929e-02,  7.9939e-02],
          [-6.9302e-02, -1.2432e-02,  1.0584e-01]],

         [[ 5.9131e-02,  5.8660e-02,  3.8305e-02],
          [-2.6686e-02, -9.6728e-03, -5.5439e-02],
          [ 5.3971e-02,  2.3075e-03, -4.8670e-03]],

         [[-2.7069e-02,  3.1576e-02,  9.5942e-03],
          [-7.5387e-03,  5.3971e-02, -5.5831e-02],
          [ 2.4276e-02, -1.1907e-02,  1.4062e-02]],

         ...,

         [[-4.3527e-02,  4.8921e-03, -6.7219e-02],
          [ 1.1240e-02, -3.2074e-02, -3.5281e-02],
          [-5.9753e-02, -6.7758e-03, -1.0892e-01]],

         [[-9.9898e-02, -2.1126e-02,  4.6951e-02],
          [ 1.2448e-02,  3.3134e-02,  4.4701e-02],
          [-1.1411e-02, -7.2868e-03, -6.4846e-02]],

         [[-4.7064e-02, -4.3195e-02,  7.3586e-02],
          [ 3.9989e-02,  6.8078e-02,  6.2381e-02],
          [ 2.7237e-02, -3.8078e-03, -1.6613e-02]]],


        ...,


        [[[ 4.8768e-02,  5.8731e-02, -4.3456e-02],
          [ 4.6023e-02, -1.8738e-02,  9.4021e-02],
          [-2.1735e-02, -1.2479e-02,  1.9521e-02]],

         [[-3.3739e-02,  3.6463e-02, -3.5297e-02],
          [ 9.9857e-04, -3.0139e-02, -4.6652e-02],
          [ 1.9832e-02, -3.4001e-02,  1.2151e-02]],

         [[-5.4386e-05,  3.2625e-02,  2.2115e-04],
          [-3.9561e-04, -7.2740e-02,  1.1476e-02],
          [ 3.2835e-02, -4.8853e-02,  9.5007e-03]],

         ...,

         [[-1.8120e-02, -2.3791e-02,  4.3708e-02],
          [ 3.2925e-02, -8.8874e-03, -5.2574e-03],
          [ 1.1215e-01,  2.3650e-02, -8.1022e-02]],

         [[-1.0705e-01,  6.6647e-02,  1.6545e-02],
          [-3.8360e-02,  4.4054e-02,  3.0937e-02],
          [-1.7188e-02,  6.5351e-03,  2.4761e-02]],

         [[ 2.7155e-02, -7.5113e-02, -2.9212e-02],
          [-2.1839e-02, -1.5813e-02,  3.7229e-02],
          [-1.1608e-02, -2.5015e-02,  1.9049e-02]]],


        [[[-6.3627e-02, -4.7978e-02, -7.3316e-02],
          [ 4.0039e-02,  4.9936e-03, -2.9205e-03],
          [-3.8416e-02, -6.0174e-02,  5.9419e-02]],

         [[ 5.1544e-03, -8.8133e-02, -1.9096e-02],
          [-7.8947e-02, -8.2798e-02, -2.4377e-02],
          [ 7.5899e-03,  1.4163e-02, -3.0066e-02]],

         [[-3.4580e-02,  1.0062e-03,  9.5260e-04],
          [-5.0869e-02,  1.6392e-02, -6.5094e-02],
          [-3.0988e-02,  4.7685e-02, -2.2495e-02]],

         ...,

         [[ 3.0245e-02,  1.1458e-01,  3.9617e-02],
          [ 1.0536e-02,  2.2392e-02, -8.6759e-02],
          [-4.4569e-02,  2.8456e-02, -7.5011e-02]],

         [[ 4.5323e-02,  6.1219e-03, -3.7074e-02],
          [-2.5808e-02, -5.7048e-02,  2.0166e-02],
          [ 1.6314e-03,  1.6493e-02, -6.5356e-03]],

         [[-5.7169e-03, -2.6132e-02,  5.1703e-02],
          [-7.3488e-03,  1.0608e-02,  7.2423e-03],
          [-6.9475e-02, -1.0471e-01, -2.2467e-02]]],


        [[[-3.2212e-02,  2.7373e-02, -1.5520e-02],
          [-5.4789e-02,  5.4112e-02,  1.0881e-01],
          [ 1.1482e-01, -1.5917e-02, -2.5359e-02]],

         [[-8.4101e-02,  8.1401e-02,  1.1629e-02],
          [ 3.2067e-02,  5.9589e-04, -4.2561e-02],
          [-1.1837e-02,  6.1752e-03, -1.3187e-02]],

         [[ 1.8515e-03, -2.7247e-04, -1.0321e-02],
          [-7.8370e-02,  1.5357e-02,  4.3210e-02],
          [-5.3554e-02,  4.7561e-03,  3.7183e-02]],

         ...,

         [[ 8.9779e-03,  2.8108e-03, -6.2571e-02],
          [ 5.5470e-02,  5.9251e-02, -8.0395e-02],
          [-2.7866e-02, -1.4922e-02, -2.3172e-02]],

         [[ 1.4779e-02, -1.3703e-02,  7.0014e-03],
          [-4.3499e-02, -5.8534e-03,  4.8370e-02],
          [-1.1489e-01,  3.2473e-02,  8.3200e-02]],

         [[-1.7218e-02,  1.8711e-02, -2.0702e-02],
          [ 2.0201e-02, -4.2638e-02, -3.6690e-03],
          [ 7.1280e-02, -7.6075e-03,  4.8007e-02]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 2.6845e-03,  8.3130e-04, -7.5412e-02],
          [-4.5612e-02, -6.7735e-02,  8.5708e-03],
          [ 1.1719e-02, -6.9076e-02, -2.9938e-02]],

         [[-6.4382e-02,  1.4213e-02, -7.3162e-03],
          [ 3.9846e-03,  4.9785e-02,  4.2063e-04],
          [ 4.0638e-02,  5.4681e-02,  2.1914e-02]],

         [[ 6.5294e-02,  8.2266e-03, -3.4426e-02],
          [-1.3495e-01,  1.1229e-02, -3.5700e-03],
          [ 1.5690e-02,  2.4149e-02,  9.1540e-02]],

         ...,

         [[ 2.6405e-02, -4.6182e-02,  6.6941e-02],
          [-7.4898e-03,  1.6538e-02,  4.9379e-02],
          [ 4.3034e-02, -1.3348e-02, -3.0046e-02]],

         [[ 1.4945e-02,  5.6799e-02, -1.2493e-02],
          [-4.8349e-02, -1.5774e-03, -6.0276e-02],
          [-5.2116e-03, -1.1274e-02, -4.0116e-02]],

         [[ 1.0475e-02,  2.8776e-02, -4.3416e-03],
          [ 3.9002e-02,  7.2227e-03,  2.9849e-02],
          [ 6.4540e-02,  2.9089e-03,  3.0097e-02]]],


        [[[-4.8617e-02, -4.4008e-02,  2.8846e-02],
          [-1.6158e-03,  8.3607e-05,  8.4048e-03],
          [ 4.1214e-02,  1.9921e-02,  3.3760e-02]],

         [[-4.6551e-02,  4.8497e-02,  3.9481e-02],
          [-2.1759e-02, -4.4040e-02, -3.3126e-02],
          [-2.5238e-02, -2.2890e-02,  1.0132e-02]],

         [[ 1.0419e-01, -7.1211e-02,  2.2492e-02],
          [-7.9991e-02,  2.1718e-03,  7.0424e-02],
          [-2.7954e-02, -8.2910e-02, -3.5184e-02]],

         ...,

         [[ 8.2896e-03, -1.2562e-02,  6.4890e-02],
          [ 7.6288e-02,  2.2357e-02,  8.5239e-03],
          [-5.4650e-02, -5.6121e-02, -8.6734e-02]],

         [[ 3.3923e-02,  3.7550e-02, -3.2053e-02],
          [-1.8051e-02,  3.8566e-02, -4.2221e-02],
          [ 5.2232e-02, -2.1080e-03, -2.6959e-02]],

         [[ 5.7706e-02, -5.1433e-02, -7.1984e-02],
          [-2.8255e-02,  6.5743e-02, -1.5631e-02],
          [-1.3840e-02, -2.7699e-02,  8.4788e-03]]],


        [[[ 4.4388e-02,  1.8960e-02,  4.3464e-03],
          [ 4.8486e-03,  5.3486e-02, -9.9987e-03],
          [ 1.8119e-02,  1.3925e-02,  2.6280e-02]],

         [[-5.6485e-02,  4.6079e-02, -1.2116e-02],
          [-4.0043e-02, -4.1870e-02,  2.1222e-03],
          [ 9.2217e-03,  2.8147e-02, -2.3868e-02]],

         [[ 2.1403e-02, -3.9370e-02,  6.7361e-03],
          [-4.0878e-02, -6.1997e-03, -3.2937e-02],
          [-3.5689e-02,  2.1915e-03,  7.6755e-02]],

         ...,

         [[-4.9133e-03, -4.8445e-03, -2.0028e-02],
          [ 5.7988e-02, -5.1878e-03, -4.8572e-02],
          [ 1.6491e-02,  4.5568e-02, -1.1836e-03]],

         [[-2.2121e-02, -1.2752e-04, -3.1691e-02],
          [ 2.5036e-02, -5.0522e-02,  2.6544e-02],
          [-6.3314e-02,  4.4412e-02,  3.5459e-02]],

         [[ 4.3742e-02,  4.6670e-03, -1.9318e-02],
          [-4.0864e-02, -1.8838e-02,  7.2250e-02],
          [ 3.7571e-02,  4.8408e-02,  7.4527e-02]]],


        ...,


        [[[-9.3878e-03, -4.2608e-02,  1.9008e-02],
          [-2.8648e-02,  4.0723e-02, -1.0144e-01],
          [-4.1742e-02, -3.2153e-02,  1.9131e-02]],

         [[-4.4458e-04,  6.1149e-02, -1.5752e-02],
          [ 1.6189e-02,  3.6200e-02,  3.0373e-02],
          [-4.9149e-02,  4.3456e-02,  9.3078e-02]],

         [[ 1.7175e-02,  3.8316e-02, -1.9322e-02],
          [-3.1191e-03,  1.4167e-02,  5.7017e-03],
          [ 3.9111e-02,  2.2054e-02, -9.2408e-02]],

         ...,

         [[ 7.2591e-02,  3.5720e-02, -2.4533e-02],
          [ 4.7600e-02,  7.0119e-02,  2.0262e-02],
          [ 2.3786e-02,  8.3852e-03,  4.5077e-03]],

         [[-2.6449e-02, -3.3531e-02, -1.7658e-02],
          [ 1.0518e-02,  3.7127e-02, -3.3974e-02],
          [-1.3152e-02, -7.4255e-02,  3.5367e-02]],

         [[ 7.9506e-02, -7.7196e-02,  6.7411e-02],
          [ 4.9850e-03,  2.4869e-02, -1.4387e-02],
          [ 1.8121e-02, -1.3280e-02,  8.3878e-03]]],


        [[[-1.2574e-02,  7.3383e-03,  5.4332e-03],
          [ 5.5190e-02, -2.9380e-02,  2.1839e-02],
          [ 6.7565e-03,  2.6504e-02,  9.0123e-05]],

         [[-3.0433e-02, -6.8623e-02,  7.0013e-03],
          [ 3.7184e-02, -3.0281e-02,  1.4038e-03],
          [-4.5294e-02,  1.6396e-02, -9.3607e-03]],

         [[ 2.0474e-02,  3.3400e-02, -4.8382e-02],
          [-1.3620e-02,  1.3360e-02, -7.3719e-03],
          [ 2.3268e-02,  3.4046e-02, -5.1403e-02]],

         ...,

         [[-9.9467e-03, -1.5189e-02,  5.4146e-02],
          [ 4.9824e-02, -1.0697e-03,  3.8865e-02],
          [-5.4086e-02,  4.7396e-02,  1.6363e-02]],

         [[ 2.2994e-02, -3.0228e-02,  6.5632e-03],
          [-1.5332e-02, -5.6204e-04, -2.6611e-02],
          [ 6.7988e-03, -3.2825e-02, -6.1872e-03]],

         [[ 1.4775e-02, -8.3700e-03,  7.4695e-02],
          [-1.4400e-02,  9.5631e-05, -5.6617e-02],
          [ 2.5514e-02, -3.9043e-02,  2.2198e-02]]],


        [[[-1.6483e-02,  7.5683e-02,  5.4212e-02],
          [ 7.5636e-02,  4.8568e-03, -1.8018e-02],
          [-1.0180e-02,  3.7764e-03,  1.3169e-02]],

         [[ 1.6835e-02, -1.1530e-02,  3.0366e-02],
          [-5.7921e-03, -1.9011e-02, -4.4596e-03],
          [-2.3398e-02, -4.5302e-02, -6.9649e-02]],

         [[ 3.4722e-03,  5.3409e-03,  2.6340e-02],
          [-3.7302e-02, -2.7798e-02, -2.2164e-02],
          [-6.8666e-02, -4.5858e-02,  2.2008e-02]],

         ...,

         [[-2.2367e-02, -3.0925e-02,  2.4767e-02],
          [-9.9599e-02, -7.9464e-03,  5.0884e-02],
          [ 1.8433e-02,  9.2442e-03, -1.0740e-01]],

         [[ 3.2216e-02, -3.8240e-02,  4.2232e-02],
          [-8.0274e-03, -1.2878e-02,  1.2272e-02],
          [-1.2172e-02,  3.2177e-02,  3.7436e-02]],

         [[-6.3062e-02, -5.6512e-03, -1.6884e-02],
          [ 2.4862e-02, -4.1317e-02, -1.1304e-02],
          [-1.7015e-03,  2.8343e-02, -6.8600e-03]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-8.6179e-03,  9.9722e-02, -7.0407e-02],
          [ 9.0583e-02, -3.4072e-02, -4.4040e-02],
          [ 5.1639e-02, -6.5610e-02,  1.4682e-02]],

         [[-2.7048e-02,  3.4372e-02,  6.0705e-04],
          [ 4.0978e-02, -3.6020e-02,  1.0923e-01],
          [-1.1833e-03,  3.1879e-02, -9.9234e-02]],

         [[-4.1472e-02,  1.6413e-02, -5.9237e-03],
          [ 6.9510e-03, -3.3980e-02, -4.5324e-02],
          [ 2.5460e-02, -1.9889e-02,  8.9774e-03]],

         ...,

         [[ 2.2958e-02,  2.7901e-03,  7.9695e-02],
          [ 2.8361e-02,  1.3697e-02, -2.2357e-02],
          [-4.7538e-02, -1.9642e-02, -1.1701e-02]],

         [[-7.4201e-02,  3.7808e-02,  1.2929e-02],
          [-3.9584e-02, -2.8291e-02, -2.0535e-02],
          [-4.4772e-02, -9.6974e-02,  4.3283e-02]],

         [[-2.2483e-03,  3.7219e-02,  4.1508e-02],
          [-9.1977e-02, -6.6314e-03,  6.2071e-02],
          [ 3.9484e-02,  1.5330e-02,  3.6607e-02]]],


        [[[ 5.0431e-02,  7.3239e-04, -3.9228e-02],
          [ 4.7382e-02,  7.0277e-02,  3.5909e-02],
          [ 3.1055e-02, -2.2353e-02, -4.0095e-02]],

         [[-4.1320e-02,  8.6257e-02, -3.0272e-02],
          [-3.9205e-02,  1.0002e-02,  2.1348e-03],
          [ 2.5986e-02,  7.6844e-02,  5.2579e-02]],

         [[-4.4885e-02, -2.0253e-02,  4.5072e-02],
          [-1.2042e-02,  1.5971e-03, -7.5734e-02],
          [ 5.3147e-03, -1.4824e-02, -1.5602e-02]],

         ...,

         [[ 2.6114e-02,  4.0014e-02,  5.4073e-02],
          [ 4.5170e-02,  6.8827e-02,  2.8896e-03],
          [-2.2857e-02,  5.3352e-02,  7.0902e-02]],

         [[-1.1164e-02,  2.7879e-02, -9.1804e-03],
          [-1.6471e-02,  1.8834e-02, -3.6949e-02],
          [ 1.0834e-02,  1.3021e-02, -4.6047e-02]],

         [[ 6.5274e-02,  4.5082e-02, -6.8819e-02],
          [ 4.6641e-02,  5.4941e-02,  2.1467e-02],
          [ 4.3111e-02,  1.0014e-01, -6.0799e-03]]],


        [[[ 1.8759e-03, -2.2174e-03,  8.6356e-03],
          [ 2.6924e-02, -7.7046e-03, -1.3245e-02],
          [ 8.4339e-02, -3.0223e-04, -2.1187e-02]],

         [[-1.9918e-03, -4.4996e-02, -8.1971e-02],
          [ 2.7106e-02, -2.1333e-02,  1.2223e-02],
          [-4.9641e-02,  2.4280e-02, -4.5979e-02]],

         [[ 7.7189e-03, -9.6634e-02, -1.4322e-02],
          [-1.9128e-02, -6.5772e-02,  8.4437e-02],
          [-3.4199e-02, -1.1478e-01,  1.7780e-02]],

         ...,

         [[-3.5842e-02,  9.2661e-03, -1.4503e-02],
          [ 7.2265e-03,  5.3790e-02, -7.6558e-03],
          [-5.0334e-02,  4.6312e-02,  5.7808e-02]],

         [[-1.7309e-02,  5.3572e-02,  3.5123e-03],
          [ 4.4674e-02,  5.9283e-02, -5.1587e-02],
          [-6.6042e-02,  6.2183e-03,  3.1707e-02]],

         [[-1.0817e-02,  4.2518e-02,  2.7151e-02],
          [ 1.8308e-02,  4.3384e-02, -2.1929e-03],
          [ 4.7072e-02,  8.9702e-03,  2.3952e-02]]],


        ...,


        [[[ 6.4423e-03,  8.4723e-03,  4.7119e-03],
          [ 5.5086e-03,  7.3639e-02, -2.1663e-02],
          [-3.4949e-02,  1.1365e-02,  1.6245e-02]],

         [[ 5.4280e-03,  8.9206e-02, -1.9253e-02],
          [-1.5134e-02,  5.3484e-02,  9.0095e-02],
          [-6.6737e-02, -1.7146e-02,  1.8407e-02]],

         [[ 4.7288e-02,  3.6574e-02,  3.2712e-02],
          [ 7.0756e-02, -3.5604e-02, -3.1989e-02],
          [ 5.4141e-02,  1.1243e-02,  6.0464e-02]],

         ...,

         [[-1.6334e-03,  3.6684e-02,  2.0924e-02],
          [ 1.2740e-02,  4.9166e-03, -1.9677e-02],
          [-1.6316e-02, -1.1623e-01,  1.0773e-02]],

         [[-6.4949e-02,  9.8455e-02,  2.5029e-02],
          [-1.2166e-01,  3.1528e-02, -5.7251e-02],
          [-3.5813e-03,  5.4446e-02, -5.0629e-02]],

         [[-2.1231e-02,  1.8191e-02,  8.7103e-03],
          [-8.5774e-02,  4.3565e-05, -1.0102e-02],
          [-2.0424e-02,  3.2028e-02,  6.1755e-02]]],


        [[[ 5.0938e-03, -6.3722e-02, -5.0080e-02],
          [-4.3141e-02, -5.8889e-02, -2.3116e-02],
          [-2.6459e-02, -2.2228e-02,  5.5475e-03]],

         [[ 1.3088e-02, -1.6166e-02,  4.0323e-02],
          [-9.9399e-02, -8.1584e-03, -5.9611e-02],
          [-4.3842e-02, -3.4983e-02,  1.8956e-02]],

         [[ 1.1030e-02, -4.1303e-02, -4.4392e-02],
          [-1.8417e-02,  2.9774e-02, -7.4872e-02],
          [-5.8568e-02, -4.6321e-02, -3.7066e-02]],

         ...,

         [[ 1.4516e-02, -7.5818e-04, -6.6029e-04],
          [ 6.2193e-02,  1.0622e-01,  3.0988e-02],
          [ 1.0367e-02,  3.4115e-02, -1.1630e-02]],

         [[-2.4866e-02, -1.6561e-03, -5.5001e-02],
          [-2.6228e-02,  2.0867e-02, -7.4831e-02],
          [ 4.9122e-02, -4.7676e-02, -2.4389e-02]],

         [[ 1.0171e-01, -2.2208e-03,  7.5540e-03],
          [-4.8056e-02, -1.8392e-02, -3.6285e-03],
          [ 4.5585e-02,  4.0905e-02, -3.6874e-02]]],


        [[[ 4.3631e-02, -5.2847e-02, -1.7329e-02],
          [-6.4979e-03,  9.3271e-03,  1.2731e-02],
          [-7.9527e-02,  1.0268e-01,  8.0782e-02]],

         [[ 7.4654e-03,  5.3418e-02,  1.9824e-02],
          [ 5.1349e-02,  1.1658e-02,  6.3795e-02],
          [ 3.8372e-03,  4.8946e-02,  1.8519e-02]],

         [[ 5.6350e-02,  1.1047e-02,  9.7048e-02],
          [ 2.3158e-02,  5.0003e-02,  2.1718e-02],
          [ 4.4558e-02,  5.7101e-02, -3.0766e-02]],

         ...,

         [[-3.9739e-02, -2.0909e-02, -1.0021e-03],
          [ 1.0022e-01, -2.3037e-02, -9.1416e-02],
          [-2.6178e-02,  6.6066e-04,  6.1672e-02]],

         [[ 6.7283e-02, -4.0985e-02, -1.8471e-02],
          [ 2.0354e-02,  2.8931e-02, -4.6206e-03],
          [-5.1328e-02,  9.0519e-04, -8.8718e-03]],

         [[-5.5629e-02,  1.3517e-02, -1.5339e-02],
          [-2.9458e-02, -4.3556e-03,  3.1402e-02],
          [ 8.3467e-02,  1.8374e-02, -4.3111e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0648]],

         [[-0.0166]],

         [[ 0.0589]],

         ...,

         [[-0.1192]],

         [[-0.0840]],

         [[ 0.0521]]],


        [[[-0.1677]],

         [[-0.0767]],

         [[ 0.1363]],

         ...,

         [[-0.1744]],

         [[ 0.0652]],

         [[ 0.0949]]],


        [[[-0.0340]],

         [[-0.1733]],

         [[ 0.0323]],

         ...,

         [[ 0.2903]],

         [[ 0.1341]],

         [[-0.0912]]],


        ...,


        [[[-0.2315]],

         [[-0.1158]],

         [[ 0.0097]],

         ...,

         [[-0.0452]],

         [[ 0.1665]],

         [[ 0.0731]]],


        [[[-0.0539]],

         [[ 0.0254]],

         [[ 0.0665]],

         ...,

         [[ 0.1649]],

         [[-0.1002]],

         [[ 0.1006]]],


        [[[ 0.0506]],

         [[-0.0492]],

         [[-0.0399]],

         ...,

         [[-0.0930]],

         [[-0.0937]],

         [[-0.1001]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0395,  0.0253,  0.0271],
          [-0.0143,  0.0551,  0.0232],
          [-0.0927,  0.0027, -0.0437]],

         [[ 0.0243,  0.0244, -0.0086],
          [ 0.0779, -0.0216, -0.0003],
          [-0.0102, -0.0069, -0.0021]],

         [[ 0.0456,  0.0084, -0.0253],
          [ 0.0338,  0.0197,  0.0679],
          [ 0.0222, -0.0937, -0.0436]],

         ...,

         [[ 0.0226,  0.0064,  0.0287],
          [-0.0291, -0.0247,  0.0200],
          [ 0.0233, -0.0055, -0.0201]],

         [[-0.0033,  0.0077,  0.0095],
          [-0.0632,  0.0486,  0.0194],
          [ 0.0060,  0.0316,  0.0237]],

         [[-0.0044, -0.0093, -0.0555],
          [-0.0233,  0.0589,  0.0243],
          [-0.0463, -0.0334,  0.0105]]],


        [[[ 0.0591, -0.0242,  0.0069],
          [-0.0031,  0.0166, -0.0332],
          [-0.0179, -0.0026,  0.0153]],

         [[ 0.0380, -0.0377, -0.0357],
          [-0.0697, -0.0039,  0.0209],
          [ 0.0251,  0.0197,  0.0774]],

         [[-0.0327,  0.0274, -0.0146],
          [ 0.0233, -0.0015, -0.0419],
          [ 0.0139,  0.0182,  0.0467]],

         ...,

         [[-0.0730,  0.0286,  0.0260],
          [ 0.0332, -0.0228, -0.0061],
          [ 0.0663, -0.0226,  0.0290]],

         [[ 0.0154, -0.0062,  0.0052],
          [-0.0492, -0.0632, -0.0187],
          [ 0.0064, -0.0428, -0.0118]],

         [[ 0.0051, -0.0061,  0.0228],
          [ 0.0266,  0.0401,  0.0367],
          [-0.0861, -0.0344,  0.0184]]],


        [[[ 0.0253, -0.0189, -0.0222],
          [ 0.0212, -0.0517,  0.0173],
          [-0.0106,  0.0124,  0.0152]],

         [[-0.0215, -0.0089, -0.0568],
          [-0.0684,  0.0245, -0.0128],
          [ 0.0102, -0.0252, -0.0152]],

         [[-0.0231,  0.0112,  0.0894],
          [-0.0221, -0.0487, -0.0202],
          [-0.0401, -0.0354,  0.0211]],

         ...,

         [[ 0.0299, -0.0106, -0.0284],
          [-0.0119,  0.0281,  0.0284],
          [-0.0336, -0.0363,  0.0034]],

         [[-0.0778,  0.0142, -0.0789],
          [-0.0276, -0.0477,  0.0470],
          [ 0.0018, -0.0057,  0.0263]],

         [[-0.0232, -0.0161, -0.0629],
          [-0.0319,  0.0175, -0.0140],
          [ 0.0264, -0.0358,  0.1489]]],


        ...,


        [[[ 0.0009, -0.0377, -0.0163],
          [ 0.0109,  0.0445, -0.0039],
          [-0.0012, -0.0094,  0.0237]],

         [[ 0.0637,  0.0293, -0.0279],
          [-0.0858, -0.0546, -0.0184],
          [ 0.0200,  0.0213, -0.0298]],

         [[-0.0228,  0.0181, -0.0485],
          [ 0.0118, -0.0215,  0.0462],
          [ 0.0214, -0.0046,  0.0815]],

         ...,

         [[-0.0221, -0.0063, -0.0250],
          [-0.0342,  0.0154,  0.0460],
          [ 0.0117, -0.0112,  0.0810]],

         [[-0.0091, -0.1221, -0.0289],
          [-0.0741, -0.0560, -0.0533],
          [-0.0284,  0.0037,  0.0798]],

         [[ 0.0104,  0.0331, -0.0114],
          [ 0.0390,  0.0180,  0.0306],
          [-0.0318,  0.0530, -0.0261]]],


        [[[ 0.0150, -0.0103, -0.0104],
          [-0.0198, -0.0006,  0.0240],
          [-0.0425, -0.0468, -0.0701]],

         [[ 0.0452, -0.0473,  0.0103],
          [ 0.0269, -0.0215, -0.0083],
          [-0.0182, -0.0223, -0.0534]],

         [[-0.0159,  0.0119,  0.0411],
          [-0.0258,  0.0105,  0.0411],
          [-0.0061, -0.0248,  0.0144]],

         ...,

         [[ 0.0536, -0.0318, -0.1283],
          [ 0.0104,  0.0012,  0.0441],
          [ 0.0064,  0.0063, -0.0299]],

         [[ 0.0206, -0.0366, -0.0165],
          [ 0.0012,  0.0082, -0.0122],
          [-0.0041,  0.0750,  0.0003]],

         [[-0.0393,  0.0179, -0.0035],
          [-0.0261,  0.0135, -0.0273],
          [-0.0419, -0.0304, -0.0215]]],


        [[[ 0.0450, -0.0791,  0.0572],
          [ 0.0473,  0.0338,  0.0521],
          [-0.0435, -0.0196,  0.0394]],

         [[-0.0172,  0.0601,  0.0375],
          [-0.0555,  0.0081,  0.0360],
          [ 0.0219, -0.0397, -0.0105]],

         [[-0.0198,  0.0430,  0.0418],
          [-0.0164,  0.0170, -0.0685],
          [ 0.0081, -0.0618, -0.0477]],

         ...,

         [[ 0.0391, -0.0257, -0.0194],
          [-0.0295, -0.0159, -0.0414],
          [-0.0012,  0.0392,  0.0324]],

         [[-0.0128,  0.0435,  0.0007],
          [-0.0200,  0.0268,  0.0969],
          [ 0.0067,  0.0060, -0.0354]],

         [[-0.0248, -0.0102,  0.0274],
          [-0.0455, -0.0195,  0.0357],
          [ 0.0076, -0.0270, -0.0519]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 3.1680e-02,  6.0405e-02,  1.8839e-02],
          [ 3.3769e-04, -1.8209e-02, -1.9119e-02],
          [-2.3775e-03, -1.3931e-02, -3.0489e-02]],

         [[-1.9332e-02, -3.9933e-02,  1.0767e-04],
          [ 6.1705e-03, -3.1496e-02, -2.3302e-02],
          [ 8.7542e-02, -1.3234e-02, -4.1328e-04]],

         [[-7.3376e-02,  1.1967e-02,  9.0107e-03],
          [-3.8778e-02, -3.5148e-02, -6.2053e-03],
          [ 9.6962e-04, -1.4051e-02, -3.3384e-02]],

         ...,

         [[ 7.7826e-03, -9.9859e-03,  4.0803e-02],
          [-4.1150e-02,  1.7399e-02,  1.1801e-03],
          [ 3.3352e-02,  2.4617e-02,  1.3538e-02]],

         [[ 2.1991e-03,  3.6063e-03, -7.0723e-02],
          [ 3.0289e-02,  5.5416e-03,  2.8956e-02],
          [-1.3536e-02,  4.4649e-02, -3.2534e-02]],

         [[-2.1547e-02,  2.7395e-02,  6.3479e-02],
          [-2.7290e-02,  3.2480e-02,  3.8455e-02],
          [-8.9686e-02,  1.0288e-02,  7.6812e-03]]],


        [[[ 1.4349e-02,  6.3060e-02,  4.2075e-02],
          [ 5.8151e-02, -2.4202e-02,  2.5440e-02],
          [-5.4787e-02,  5.0266e-03,  1.8514e-02]],

         [[ 5.7124e-02,  1.5704e-02,  5.4136e-02],
          [-4.7437e-02, -4.7612e-02,  9.2725e-03],
          [ 6.8720e-03,  1.7231e-02,  3.8590e-03]],

         [[-1.0828e-01,  9.4313e-03,  5.5668e-02],
          [-5.0893e-02,  2.3981e-02, -5.9471e-03],
          [-4.7949e-02, -9.6419e-03, -7.2292e-03]],

         ...,

         [[ 1.3722e-02,  5.0721e-02,  2.7837e-02],
          [-1.5726e-02,  1.9825e-02, -4.1130e-03],
          [-9.2281e-03, -1.9798e-02, -7.9409e-02]],

         [[-2.9932e-03,  1.1548e-01, -4.5814e-02],
          [-3.6460e-02, -1.0900e-02,  2.1550e-02],
          [-7.0114e-03,  9.6592e-03,  3.9080e-02]],

         [[ 2.0302e-02,  1.7633e-02,  5.4906e-02],
          [-2.8703e-02, -4.5957e-02, -3.0526e-03],
          [-1.5060e-02,  2.7955e-02,  1.1243e-02]]],


        [[[ 6.7082e-02, -5.6392e-02,  8.5212e-02],
          [-1.0264e-02,  4.2660e-02, -1.3928e-02],
          [ 5.1119e-02,  2.4198e-02,  3.2480e-03]],

         [[ 3.5997e-02, -3.3233e-02, -7.9815e-02],
          [ 3.6977e-02,  5.9370e-03, -5.4041e-03],
          [ 1.0729e-02, -4.4712e-02, -1.9704e-02]],

         [[-3.2037e-02, -1.7759e-03,  1.1664e-02],
          [-5.3867e-02, -4.1694e-04,  1.1674e-02],
          [ 5.2930e-02,  4.5509e-03,  4.2934e-02]],

         ...,

         [[-4.2356e-02, -4.5326e-02,  2.4279e-02],
          [-5.9802e-02, -3.8592e-02, -8.9925e-02],
          [ 3.5760e-03, -1.3960e-02, -1.8028e-02]],

         [[ 5.5622e-02, -9.4987e-03,  1.3228e-02],
          [ 1.6056e-02, -2.0312e-02, -4.0496e-02],
          [-2.7816e-02, -4.5788e-02,  1.5490e-02]],

         [[-1.1285e-01, -5.2076e-02,  4.6251e-02],
          [ 5.0461e-02, -1.1822e-02,  5.4843e-03],
          [ 3.5471e-02,  4.9567e-02,  3.6612e-02]]],


        ...,


        [[[ 4.1131e-02,  1.3745e-03, -3.3192e-02],
          [-8.1574e-03,  4.4700e-02,  2.4801e-02],
          [-5.6349e-02,  1.8051e-02, -4.3128e-02]],

         [[ 1.3472e-02, -2.9890e-02,  7.1255e-03],
          [-6.6286e-02,  1.7897e-02, -5.7426e-04],
          [ 1.7743e-02,  5.3232e-03,  7.0872e-03]],

         [[ 3.8289e-02,  7.1182e-02,  2.1279e-02],
          [ 3.0506e-02,  6.9623e-02,  2.5174e-02],
          [-3.3738e-02, -4.0223e-02,  1.9329e-03]],

         ...,

         [[-9.4439e-03, -1.1478e-02, -2.1998e-02],
          [ 5.2754e-02,  4.3357e-02,  8.6912e-02],
          [ 9.1034e-02,  8.1282e-04, -2.4217e-02]],

         [[-2.0287e-02, -3.2797e-02,  4.2432e-02],
          [ 4.6743e-02,  3.2008e-02,  2.4949e-02],
          [-5.0163e-02,  1.8960e-02, -1.2078e-02]],

         [[ 5.7701e-03,  2.9080e-02, -4.4631e-02],
          [-5.8386e-02, -1.7879e-02,  5.6433e-02],
          [ 4.1225e-02, -7.0956e-02,  1.3926e-02]]],


        [[[-5.2195e-03, -1.7376e-02,  5.1704e-02],
          [ 2.8111e-02,  6.9418e-02,  1.0268e-02],
          [ 9.8853e-03, -5.6621e-02,  3.1806e-02]],

         [[ 3.0105e-02, -2.1054e-03, -1.7504e-02],
          [-1.6050e-02, -8.8329e-03, -3.6524e-02],
          [-3.9673e-02,  1.9111e-02,  1.3596e-02]],

         [[-2.3881e-03,  3.0003e-03,  6.1704e-02],
          [-6.1127e-02,  2.1429e-02,  3.5743e-02],
          [ 4.6314e-02, -9.4644e-03,  6.7327e-02]],

         ...,

         [[-6.6551e-02, -3.1792e-02,  2.4412e-02],
          [ 3.3461e-02, -1.4585e-02, -9.5391e-03],
          [ 1.8680e-02,  8.2040e-02,  6.3773e-02]],

         [[ 4.9289e-02, -3.1784e-02,  1.2231e-02],
          [-1.7423e-03, -2.4458e-02, -7.6960e-03],
          [ 3.4295e-02, -5.7764e-02, -1.7278e-02]],

         [[-4.4175e-02,  3.1485e-02,  2.6096e-02],
          [ 6.9602e-02,  7.7084e-03, -2.4911e-02],
          [ 1.0802e-02,  1.5589e-02, -2.1519e-03]]],


        [[[ 5.9200e-02,  2.2416e-02,  3.0847e-03],
          [ 3.4363e-02, -5.6129e-02, -1.0017e-01],
          [ 5.4405e-02, -3.9040e-02, -7.5267e-02]],

         [[-6.7506e-03,  1.5473e-02,  4.9376e-02],
          [ 1.9322e-02,  1.9184e-02, -4.6805e-03],
          [-5.9525e-03, -8.3789e-02, -2.8388e-02]],

         [[-2.5664e-04, -3.0297e-02, -3.1425e-02],
          [-8.2929e-02, -4.7169e-02,  1.6076e-02],
          [-7.9512e-02,  1.4420e-03,  4.8337e-02]],

         ...,

         [[ 1.2945e-02, -7.5296e-02, -2.7570e-02],
          [-2.9400e-02, -3.8045e-02,  1.2293e-02],
          [-4.3308e-03, -1.4056e-02, -1.2275e-02]],

         [[-3.3499e-02, -1.3284e-02,  1.0222e-02],
          [-4.8662e-02,  3.0062e-02,  1.5913e-02],
          [ 6.0011e-03, -2.0475e-02,  1.2522e-02]],

         [[ 7.9303e-02, -3.6750e-02, -3.5883e-02],
          [ 1.6937e-02, -1.7968e-02, -1.0265e-02],
          [ 1.5333e-02,  5.0667e-02, -1.6913e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 0.2175]],

         [[ 0.0875]],

         [[ 0.1960]],

         ...,

         [[-0.0391]],

         [[-0.1202]],

         [[-0.0750]]],


        [[[ 0.1182]],

         [[ 0.1088]],

         [[ 0.1953]],

         ...,

         [[-0.0548]],

         [[-0.0214]],

         [[ 0.0358]]],


        [[[-0.0421]],

         [[-0.0548]],

         [[-0.0484]],

         ...,

         [[ 0.1095]],

         [[-0.0519]],

         [[ 0.0153]]],


        ...,


        [[[-0.0794]],

         [[ 0.0235]],

         [[-0.0607]],

         ...,

         [[ 0.1018]],

         [[ 0.1081]],

         [[-0.0042]]],


        [[[ 0.0802]],

         [[-0.0506]],

         [[-0.0160]],

         ...,

         [[ 0.1517]],

         [[ 0.0700]],

         [[ 0.0237]]],


        [[[ 0.2464]],

         [[ 0.0875]],

         [[ 0.0164]],

         ...,

         [[ 0.0075]],

         [[-0.0473]],

         [[-0.0586]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[-6.0870e-02,  4.0881e-02,  4.4366e-02],
          [-5.1527e-02,  4.3919e-03,  4.2856e-02],
          [ 3.8146e-02, -4.7863e-02, -2.4380e-02]],

         [[ 4.6431e-03,  1.7013e-02, -3.5555e-03],
          [ 3.1309e-02, -1.4271e-02, -1.6690e-02],
          [ 2.0225e-02, -5.8492e-03, -4.8772e-02]],

         [[ 2.3174e-02,  1.3241e-02, -1.7311e-02],
          [ 2.0984e-02, -3.0058e-03,  2.4168e-02],
          [ 4.8113e-02, -2.1110e-02, -3.5588e-02]],

         ...,

         [[-4.6474e-03,  3.0517e-02,  3.5599e-02],
          [-1.3521e-02, -1.2031e-02,  7.6628e-03],
          [ 1.7782e-02, -2.1655e-02, -3.1101e-02]],

         [[ 1.5957e-02,  4.5705e-02, -9.4142e-05],
          [-1.1380e-02, -1.0352e-02, -1.4707e-02],
          [-5.7740e-02, -2.9557e-03, -5.4329e-02]],

         [[-8.9420e-03, -1.3003e-02,  4.0077e-02],
          [ 2.0024e-02,  2.5981e-02,  2.7704e-02],
          [-4.0221e-02, -6.2369e-02,  5.1798e-03]]],


        [[[-3.7071e-02, -1.2826e-02,  2.3376e-03],
          [ 5.8977e-03, -4.9499e-02,  5.9526e-02],
          [ 1.1415e-02,  5.3204e-03, -6.4709e-02]],

         [[ 5.0120e-03,  1.6138e-02,  3.0530e-02],
          [-3.0167e-02,  1.6346e-02, -7.9574e-04],
          [-1.3411e-02, -1.4182e-02,  3.0624e-03]],

         [[ 2.6720e-02, -1.4316e-02, -8.5062e-03],
          [ 2.7700e-02,  1.6727e-02, -1.2913e-02],
          [ 2.6747e-02, -7.1721e-02,  1.7448e-02]],

         ...,

         [[-1.9956e-02,  3.0247e-02,  3.0267e-02],
          [-4.0499e-02, -1.1762e-02,  4.9969e-02],
          [ 4.2945e-02, -1.7252e-02, -1.9553e-02]],

         [[ 5.6619e-02,  3.8605e-02, -1.1849e-02],
          [ 4.8171e-03, -4.8679e-03,  2.9452e-02],
          [-4.9602e-02,  8.0883e-03, -1.1881e-02]],

         [[ 1.6290e-02,  1.4454e-02, -1.0274e-02],
          [-3.1839e-02, -2.3881e-02, -1.3632e-02],
          [ 5.0836e-02,  2.2655e-02, -4.1272e-02]]],


        [[[ 1.4156e-02, -2.2725e-02, -5.0592e-03],
          [-3.5066e-02, -2.9965e-03,  2.7322e-02],
          [-1.8745e-02,  1.2161e-02, -3.9951e-02]],

         [[ 1.3307e-02, -1.6610e-03,  2.1236e-04],
          [-2.8914e-02, -4.7954e-02, -1.1251e-01],
          [ 5.4829e-02,  2.9529e-02,  1.1274e-01]],

         [[ 7.2887e-03,  7.9066e-03,  4.2488e-02],
          [ 4.4484e-02,  3.4531e-02, -3.0595e-02],
          [ 6.0332e-02, -2.4952e-02, -1.2461e-02]],

         ...,

         [[-3.5044e-02,  4.1116e-02, -2.3008e-04],
          [-4.5529e-03,  3.6930e-02,  5.2484e-04],
          [ 3.6244e-02, -6.1358e-02, -3.3676e-02]],

         [[ 1.5690e-02,  3.7668e-04,  7.3424e-03],
          [-3.3207e-02, -3.3470e-02, -5.4145e-03],
          [-3.6671e-02, -3.2498e-02,  4.3939e-02]],

         [[-4.1358e-02,  1.5067e-03, -1.4451e-02],
          [ 4.1695e-02,  3.5054e-04,  5.8070e-02],
          [ 2.8748e-02,  3.6246e-02,  1.9393e-02]]],


        ...,


        [[[ 6.5230e-03, -2.1081e-02, -1.2557e-02],
          [ 4.5026e-02,  3.2273e-02,  5.0741e-02],
          [ 2.4304e-02, -2.1259e-02, -3.0470e-02]],

         [[ 4.1443e-03,  1.3640e-02, -5.5476e-02],
          [ 3.4840e-02,  5.3972e-02, -5.9445e-02],
          [ 7.9996e-03,  3.6531e-02,  1.3242e-03]],

         [[-5.8919e-02, -2.3406e-02,  3.2395e-02],
          [-1.0736e-02,  2.6454e-02,  1.0278e-02],
          [-9.2413e-03,  9.6634e-03, -3.3119e-02]],

         ...,

         [[-1.2180e-02, -2.1976e-02,  2.6228e-02],
          [ 2.8084e-02,  7.1032e-03,  4.5743e-02],
          [-1.8559e-02, -2.3847e-02, -1.7261e-02]],

         [[-1.7123e-04, -1.4901e-02, -3.1086e-02],
          [-7.0282e-05, -2.3052e-02,  6.9331e-02],
          [-2.5299e-02, -1.0120e-03, -1.8042e-02]],

         [[ 5.4733e-02,  5.4010e-02, -1.8757e-02],
          [ 3.4724e-02, -6.6632e-02,  5.1689e-02],
          [ 1.1907e-02,  4.5364e-02,  1.1068e-02]]],


        [[[ 1.4824e-02, -1.3852e-02,  4.4865e-03],
          [ 4.2766e-03, -1.2551e-02, -4.5927e-02],
          [-2.4993e-02,  3.5664e-02, -5.6675e-03]],

         [[ 4.7724e-02,  3.0355e-02,  1.1129e-02],
          [ 5.5846e-04,  1.3432e-02,  1.4066e-02],
          [ 5.0688e-02, -2.6084e-02,  4.7066e-02]],

         [[ 3.4073e-02, -3.0866e-04,  1.8630e-02],
          [ 1.4772e-02,  1.5009e-02,  5.8454e-02],
          [ 4.5162e-03, -4.3348e-02,  5.2703e-04]],

         ...,

         [[ 3.4721e-02, -1.3384e-02, -1.5415e-02],
          [ 4.2787e-02, -1.1384e-02,  3.4835e-02],
          [ 2.5261e-02,  3.2247e-02,  4.9362e-02]],

         [[-3.3894e-02,  3.1099e-02, -8.6895e-02],
          [ 3.4381e-02,  4.3033e-02, -3.3777e-02],
          [ 2.5223e-02, -1.3028e-02,  3.0942e-02]],

         [[-8.7339e-04, -1.0669e-03, -3.1948e-03],
          [ 9.4118e-04, -5.7465e-02,  6.0578e-02],
          [ 1.7421e-02, -2.3768e-02, -4.0186e-02]]],


        [[[-5.4635e-03, -4.5667e-02, -2.7625e-02],
          [-3.0696e-02, -4.4125e-02, -1.2060e-02],
          [ 3.5857e-02,  1.3294e-02,  3.8769e-02]],

         [[-1.9618e-02,  1.1813e-02,  1.3764e-02],
          [ 1.7679e-02,  4.9927e-03, -4.7717e-02],
          [-2.9548e-03,  2.6755e-02,  1.8842e-02]],

         [[-3.8450e-02, -7.1589e-02,  4.4130e-02],
          [ 5.1162e-03,  2.5027e-02, -7.8879e-03],
          [ 5.1226e-03,  1.3092e-02, -4.8730e-02]],

         ...,

         [[-3.3831e-02, -1.0892e-02, -6.2967e-03],
          [ 5.3136e-03,  1.5447e-02, -9.2443e-03],
          [-7.4030e-03, -1.2523e-02,  1.0883e-02]],

         [[ 3.1312e-03, -4.9035e-02,  4.2888e-03],
          [-3.7516e-02,  7.4342e-03,  2.2144e-02],
          [-7.2375e-03,  1.4319e-02, -1.8062e-02]],

         [[ 4.1972e-02,  3.5041e-02,  2.3256e-02],
          [ 1.1803e-02, -5.6551e-02, -1.7720e-02],
          [ 1.7731e-02,  3.6076e-02, -3.5847e-02]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 3.2763e-03,  4.0567e-02,  2.4559e-02,  ...,  9.2302e-04,
           -1.6416e-02, -2.2976e-02],
          [-4.7642e-03,  1.4057e-02, -1.0394e-02,  ..., -7.6110e-03,
           -2.7709e-02, -3.8470e-02],
          [-1.4813e-02, -5.3819e-03,  7.9266e-03,  ...,  1.9141e-03,
           -5.0210e-03,  1.5234e-03],
          ...,
          [ 1.7494e-02, -4.2755e-02,  4.4350e-03,  ..., -1.9984e-02,
            2.7879e-03,  2.5955e-02],
          [ 3.1094e-03,  7.9159e-03, -1.3251e-03,  ...,  1.2398e-02,
           -1.7878e-03,  1.2919e-02],
          [-1.6971e-02, -1.2369e-02, -2.8684e-02,  ..., -1.4861e-02,
           -1.4866e-02,  6.9205e-03]],

         [[ 3.4041e-03,  3.5464e-02, -4.6040e-03,  ...,  4.4391e-03,
            3.2617e-02, -2.4479e-02],
          [ 1.5913e-02,  6.2330e-03, -1.6674e-03,  ..., -8.2512e-04,
           -6.5955e-03,  1.3632e-02],
          [ 6.0035e-03,  1.3913e-02, -3.0722e-02,  ...,  4.2231e-02,
            3.3110e-02, -1.7664e-02],
          ...,
          [-2.4425e-02,  2.1456e-02, -1.7721e-02,  ...,  8.4823e-04,
            4.4727e-03, -2.9862e-02],
          [-3.6899e-04, -1.4795e-02, -6.4246e-03,  ...,  1.1508e-02,
            2.6358e-02, -6.9287e-03],
          [-1.2922e-03,  1.9608e-02, -2.1576e-03,  ..., -1.4771e-02,
            1.9918e-02,  2.2764e-02]]],


        [[[-1.2341e-02, -1.9338e-02,  6.6354e-04,  ...,  1.5467e-02,
           -4.1700e-03, -7.4810e-03],
          [-9.4833e-03, -5.6448e-02,  8.1845e-03,  ...,  2.9118e-02,
           -1.8864e-02, -3.9107e-02],
          [-3.2529e-02,  2.7782e-03,  2.7558e-02,  ...,  2.0694e-02,
            7.0901e-03,  1.0911e-02],
          ...,
          [-2.7580e-03,  1.1370e-02,  2.3407e-02,  ..., -6.7882e-03,
           -1.1914e-02, -1.6424e-02],
          [ 1.5735e-02, -1.9410e-02,  1.1228e-03,  ..., -9.3658e-03,
           -1.2502e-03, -4.8207e-03],
          [ 1.3597e-02, -2.4547e-02, -3.4108e-02,  ..., -1.6389e-02,
           -1.0373e-02,  3.8596e-02]],

         [[ 9.3019e-03, -4.7272e-03, -2.7871e-02,  ..., -3.6889e-02,
            3.8442e-03, -9.2494e-03],
          [-3.1527e-02,  8.8316e-03,  2.3126e-02,  ..., -4.5764e-03,
           -4.3064e-03,  7.8151e-03],
          [-6.5776e-03,  6.9874e-03,  1.9197e-03,  ...,  3.5185e-03,
           -3.1408e-03, -1.8427e-02],
          ...,
          [-4.2010e-03, -7.9392e-03, -1.4324e-02,  ..., -2.1903e-02,
           -1.6575e-02, -3.8026e-02],
          [-8.1868e-03, -9.0208e-03, -3.9441e-03,  ..., -2.6330e-03,
            3.7667e-03,  5.3087e-02],
          [-1.0389e-02, -5.3972e-03, -1.2815e-03,  ..., -2.4938e-02,
           -4.6380e-03, -5.8197e-03]]],


        [[[-2.2747e-04, -2.1703e-02,  1.1513e-03,  ...,  8.2840e-03,
           -3.5565e-02, -1.7446e-02],
          [-8.5894e-03, -1.5228e-02,  1.9925e-02,  ..., -6.8988e-04,
           -9.3010e-03, -1.6313e-02],
          [ 2.0167e-02, -1.7742e-02,  2.5209e-02,  ..., -1.9462e-02,
            2.8755e-02, -2.1234e-02],
          ...,
          [-2.7461e-02,  3.7825e-04,  4.0629e-02,  ...,  1.7049e-02,
            2.6725e-02,  3.3599e-02],
          [ 2.8968e-02, -8.9212e-04, -2.3332e-02,  ...,  1.8476e-02,
            1.0114e-02, -1.4966e-02],
          [-1.4495e-03, -2.6207e-03,  1.8966e-03,  ...,  2.0594e-02,
           -1.3823e-02, -1.7654e-02]],

         [[-1.3446e-02, -4.4730e-03, -9.7396e-03,  ...,  1.9293e-02,
            4.4458e-03,  4.6439e-03],
          [-2.8692e-03,  2.3401e-02,  3.7017e-03,  ..., -2.9742e-02,
            2.8517e-02, -1.3676e-02],
          [-7.5244e-03, -6.2564e-03,  5.9438e-03,  ...,  1.7017e-02,
           -9.4391e-03, -2.7278e-03],
          ...,
          [ 1.8597e-02,  1.3409e-02, -7.0570e-03,  ..., -1.7554e-02,
           -4.6871e-03, -1.9269e-02],
          [-7.3344e-04, -1.7187e-02, -3.7401e-02,  ...,  1.9187e-02,
           -1.2897e-02,  1.2373e-02],
          [ 9.8529e-03, -6.0741e-03, -1.8146e-02,  ...,  1.6174e-02,
           -1.4067e-02, -1.5383e-02]]],


        ...,


        [[[ 6.0122e-03,  2.2499e-03, -2.1138e-05,  ..., -7.9852e-03,
           -6.2444e-03,  7.5135e-03],
          [-5.1136e-03,  2.8557e-04, -1.8955e-02,  ...,  1.3189e-03,
            2.9131e-03,  6.9250e-03],
          [-2.5136e-02,  2.5096e-02, -6.5062e-03,  ..., -6.0852e-02,
            5.4132e-03, -1.2709e-02],
          ...,
          [ 8.2930e-03,  4.4747e-02,  2.3048e-02,  ...,  1.0533e-02,
            1.0157e-02, -8.1653e-03],
          [-1.0080e-02,  2.2757e-02,  2.7586e-02,  ..., -2.9044e-02,
            3.2767e-02,  5.4763e-03],
          [-1.0797e-03,  6.5590e-03, -2.5330e-02,  ...,  2.2724e-03,
            1.1613e-04,  2.9957e-02]],

         [[ 1.1695e-03,  8.1775e-03, -2.7681e-03,  ..., -2.1683e-02,
           -3.9208e-03, -3.6346e-02],
          [-8.4388e-04, -1.9163e-02, -1.3818e-02,  ..., -8.1544e-04,
            1.8582e-02, -2.0507e-03],
          [ 2.2498e-02,  3.8432e-03, -3.4532e-02,  ...,  1.3116e-02,
           -2.7665e-03, -1.5530e-02],
          ...,
          [ 5.8077e-02,  1.2089e-02,  2.4889e-03,  ...,  9.6527e-03,
           -2.1619e-03, -8.6102e-03],
          [-4.8779e-03, -3.5814e-03, -6.2264e-03,  ...,  1.5824e-03,
            1.4346e-02, -1.9735e-02],
          [ 2.2753e-02,  4.0160e-04,  2.1110e-02,  ..., -1.4310e-03,
           -5.9106e-04, -1.1642e-02]]],


        [[[ 2.1102e-02, -1.2039e-02, -1.8450e-02,  ..., -2.9725e-02,
            2.6088e-02,  3.9873e-02],
          [-7.9402e-03,  1.7104e-03,  2.5787e-02,  ..., -1.5288e-02,
           -7.1277e-03, -2.8897e-02],
          [-7.0015e-03, -5.2415e-02, -6.5528e-03,  ...,  3.2760e-03,
           -1.9181e-02, -1.4060e-02],
          ...,
          [ 2.7342e-03,  1.9703e-02,  1.9636e-02,  ..., -3.6097e-02,
            4.4486e-02, -2.1913e-02],
          [ 2.3617e-02,  5.9323e-03, -2.0235e-02,  ...,  4.0111e-03,
           -2.7030e-03,  1.1906e-02],
          [ 4.0544e-03, -4.8868e-03,  2.4247e-02,  ..., -1.9676e-02,
           -8.7153e-03, -3.5449e-02]],

         [[-1.4297e-02,  1.6864e-02,  2.0394e-02,  ..., -1.0339e-02,
           -2.9993e-02,  2.1437e-02],
          [-2.7949e-02,  1.6190e-02, -8.8697e-03,  ...,  1.2769e-02,
            3.2764e-02, -2.1397e-02],
          [ 1.0525e-02,  1.0491e-02, -1.9759e-02,  ...,  3.2083e-02,
            1.8331e-02, -9.3906e-03],
          ...,
          [ 1.7417e-02, -2.9313e-02,  3.9866e-02,  ..., -3.3368e-02,
            1.1249e-02,  3.1325e-02],
          [-7.9549e-03,  1.9683e-02, -3.4999e-02,  ...,  2.5666e-02,
           -7.1903e-04,  1.3235e-02],
          [-4.3446e-02,  1.3995e-02, -1.1415e-02,  ..., -4.2873e-03,
            2.1067e-02,  7.8442e-03]]],


        [[[ 1.0152e-02, -2.7382e-02,  3.8842e-02,  ..., -1.7361e-02,
           -2.1804e-02, -2.4919e-02],
          [-1.0136e-02,  5.9148e-03,  1.6513e-02,  ..., -1.2200e-02,
            2.7127e-02,  3.3288e-02],
          [ 1.7476e-02, -1.1101e-02, -3.6576e-02,  ..., -2.8373e-02,
           -3.6944e-02, -6.7681e-03],
          ...,
          [ 3.4614e-02, -3.5081e-02,  4.7019e-03,  ...,  4.3757e-03,
           -1.1395e-02,  1.5971e-02],
          [ 1.8359e-02, -1.7824e-02,  1.7501e-02,  ...,  2.3658e-02,
            5.6448e-03,  1.6983e-02],
          [-7.5380e-03, -9.8078e-03, -2.3681e-02,  ...,  5.4616e-03,
            6.4760e-03, -3.5362e-02]],

         [[ 2.3095e-02,  2.6919e-02, -1.5012e-02,  ...,  4.9541e-03,
            6.3692e-03, -3.7108e-03],
          [ 1.0750e-02,  1.4224e-02,  5.8954e-03,  ..., -2.3815e-03,
            3.7930e-02, -9.1164e-03],
          [-7.7719e-03, -1.7615e-02, -6.1345e-03,  ...,  5.7871e-03,
            8.6139e-03,  1.5176e-03],
          ...,
          [-2.4365e-03,  8.3712e-03, -3.6917e-02,  ..., -5.2363e-03,
            1.5377e-02, -1.9390e-02],
          [-3.7038e-02, -3.2082e-02, -1.5037e-02,  ..., -1.6503e-02,
            5.1984e-03,  3.7777e-03],
          [ 4.0557e-02,  9.1974e-03, -2.3155e-02,  ...,  2.3881e-02,
           -1.5871e-02,  3.9099e-03]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[-1.1885e-02, -8.0898e-02, -1.5775e-02],
          [-9.7156e-03,  2.0004e-03,  4.7673e-02],
          [ 4.6416e-02,  5.7951e-02,  5.6028e-02]],

         [[ 6.1084e-02, -3.7796e-03,  6.2341e-03],
          [-3.7876e-02, -5.5759e-03, -6.7146e-02],
          [ 6.4366e-02,  2.5810e-02,  1.9473e-02]],

         [[-6.1322e-02, -7.6476e-02, -9.5577e-02],
          [ 1.0391e-02, -6.0485e-02, -4.9083e-02],
          [-1.3948e-03, -1.3857e-02, -5.3969e-02]],

         ...,

         [[-4.1150e-02, -2.6909e-02,  2.7766e-02],
          [-6.9512e-02, -1.9076e-02, -3.1899e-02],
          [-5.7277e-02, -6.8266e-02,  5.9808e-02]],

         [[-3.7505e-02, -6.1248e-03,  7.4306e-03],
          [ 7.7637e-02,  1.4669e-04,  8.4351e-02],
          [ 6.1811e-03,  5.5351e-02, -7.2475e-02]],

         [[ 7.5612e-02, -3.0600e-02, -9.4515e-02],
          [-2.0183e-02, -1.1991e-02,  2.1976e-02],
          [ 1.6226e-02,  8.9511e-02,  5.4966e-02]]],


        [[[ 2.6361e-02,  1.4820e-02,  1.1221e-02],
          [-2.2216e-02,  6.0716e-03,  1.1491e-02],
          [ 6.6229e-02,  5.0786e-02, -1.3127e-01]],

         [[-1.2437e-01,  8.9203e-03, -2.0870e-02],
          [ 6.9930e-02, -4.5627e-02,  6.0913e-02],
          [ 3.9626e-02, -1.2575e-01, -3.9895e-02]],

         [[-2.1045e-02,  3.4730e-02, -4.3946e-02],
          [-1.4415e-02, -7.3589e-03,  6.0991e-02],
          [-7.5170e-02,  6.8246e-02,  1.6595e-02]],

         ...,

         [[-8.3950e-02,  7.3096e-02,  2.6700e-02],
          [ 3.4950e-02, -2.5281e-02,  9.6989e-03],
          [ 3.8587e-02,  1.9063e-02,  5.6970e-02]],

         [[-1.1086e-01, -6.5981e-03, -9.8382e-02],
          [-6.6876e-02,  1.2029e-02,  6.8918e-02],
          [ 5.9329e-02, -9.4530e-03,  1.2067e-01]],

         [[ 6.4338e-02,  4.6035e-02,  1.9471e-02],
          [-2.2818e-02, -4.0682e-02,  9.3452e-03],
          [ 3.5990e-02,  4.0320e-02, -1.5668e-02]]],


        [[[ 5.0653e-02, -1.7293e-02,  7.5492e-02],
          [ 3.3987e-02,  5.4732e-02,  1.9626e-02],
          [ 6.8980e-03, -1.2983e-01,  6.6859e-02]],

         [[-1.9330e-02, -1.1476e-01,  1.9018e-02],
          [ 7.7294e-02, -1.8577e-02,  1.1712e-01],
          [ 1.0854e-01, -5.6447e-02,  2.6159e-02]],

         [[-5.3326e-02,  8.2470e-02, -2.6208e-02],
          [-3.4308e-02, -5.0899e-02,  5.1769e-02],
          [ 5.8221e-03, -6.6960e-02,  5.3586e-03]],

         ...,

         [[ 5.3658e-02,  4.7122e-02,  6.6192e-02],
          [ 1.1469e-02, -3.4686e-02, -5.6355e-02],
          [ 5.2639e-02,  7.5013e-02,  3.7765e-02]],

         [[ 8.9156e-03, -2.8917e-03,  1.4866e-01],
          [ 9.1428e-02, -4.4690e-02,  1.3892e-02],
          [-3.0966e-02,  4.3305e-02, -2.5737e-02]],

         [[-7.0275e-02, -2.2719e-02,  8.4207e-02],
          [ 8.8890e-02, -9.0830e-02, -4.3642e-02],
          [ 8.8003e-02, -7.2895e-03, -9.6523e-02]]],


        ...,


        [[[ 9.7514e-02,  3.9107e-04,  9.3919e-02],
          [-1.6661e-02,  5.6887e-02,  3.7944e-02],
          [-4.0491e-02,  2.1328e-02, -5.9862e-02]],

         [[-9.1087e-03,  3.5122e-02,  1.5498e-02],
          [ 5.4084e-02,  4.5825e-02, -1.8589e-02],
          [-1.1539e-02, -6.3804e-04,  7.1497e-02]],

         [[-7.6523e-02, -1.2371e-01,  6.3526e-02],
          [-8.7775e-02, -8.5459e-03,  1.5301e-01],
          [ 1.9681e-02, -1.1426e-01,  2.8527e-02]],

         ...,

         [[-4.0329e-02, -1.6670e-02,  1.2453e-02],
          [ 1.0269e-01, -1.1086e-01,  4.7134e-03],
          [-7.6042e-03, -5.1646e-02, -9.4116e-02]],

         [[-3.8056e-02,  1.8025e-02, -5.5330e-04],
          [ 3.0625e-02,  1.0888e-01,  4.0062e-02],
          [ 3.7859e-02,  1.9716e-02,  1.8026e-02]],

         [[ 4.9081e-03,  1.2849e-02, -4.2365e-02],
          [ 3.0695e-02, -4.7037e-03, -1.4644e-02],
          [-1.1874e-02,  3.0340e-02,  3.7335e-02]]],


        [[[ 4.0030e-02,  5.7250e-02, -6.3335e-02],
          [ 1.0427e-01, -1.1399e-01,  7.3163e-02],
          [ 4.5664e-02,  9.5569e-03, -5.9601e-03]],

         [[ 6.5856e-02, -6.9739e-02,  5.8125e-03],
          [ 1.1253e-01, -9.3762e-02,  1.1931e-02],
          [-1.0910e-01, -1.6185e-01, -1.4355e-01]],

         [[-8.2926e-02, -6.4946e-02, -1.0111e-01],
          [-6.9206e-03, -1.2449e-02,  2.5623e-02],
          [-6.6974e-02, -8.0466e-02,  4.4162e-02]],

         ...,

         [[ 5.8433e-02, -1.4865e-01, -4.3298e-02],
          [-8.1173e-03, -1.0300e-02,  7.6036e-03],
          [-2.9043e-02,  7.4832e-02, -1.0884e-02]],

         [[ 1.1506e-02,  5.7091e-02, -1.1326e-02],
          [-3.5842e-02, -2.6481e-02, -1.1510e-01],
          [ 1.7336e-02, -7.2514e-04,  9.3964e-02]],

         [[ 4.2695e-02, -3.6918e-03, -6.4255e-02],
          [-1.0681e-01,  5.7769e-02, -1.6558e-02],
          [-6.6723e-02, -2.5282e-02, -4.6499e-02]]],


        [[[ 7.3903e-02, -4.6354e-02,  9.2317e-02],
          [ 3.0994e-02,  7.2357e-02, -7.8157e-02],
          [-2.4692e-02,  9.6317e-04, -3.2104e-02]],

         [[-1.7914e-01,  3.2456e-02, -2.8705e-02],
          [-1.1778e-02,  5.5854e-02, -4.0920e-02],
          [ 5.5528e-02, -4.9270e-02,  3.4558e-03]],

         [[-8.8287e-02,  3.4542e-03, -1.8513e-02],
          [ 8.0749e-02,  5.5486e-02,  8.4701e-02],
          [ 4.8368e-02,  1.7768e-03, -2.7851e-02]],

         ...,

         [[-3.2920e-02,  1.9066e-02,  9.2556e-02],
          [-4.2926e-02,  5.9574e-02, -2.2739e-02],
          [-4.9132e-02,  8.2455e-02, -5.3983e-02]],

         [[ 5.8275e-03, -3.9290e-02,  6.2486e-02],
          [ 4.5093e-02,  5.8784e-02,  2.6090e-02],
          [ 4.2514e-02, -2.8237e-02, -4.2789e-03]],

         [[ 9.9089e-04, -1.2675e-02,  2.6304e-02],
          [-7.7378e-02,  5.6661e-02,  1.7046e-02],
          [ 2.6755e-02,  1.0474e-02,  2.5729e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-3.2788e-02, -1.3087e-03, -9.8774e-03],
          [-6.1776e-03, -2.7095e-02,  1.2416e-02],
          [-3.6743e-02,  3.5456e-02,  4.4134e-03]],

         [[ 2.6278e-02,  1.4502e-02, -4.1828e-02],
          [ 4.4075e-02, -6.2887e-02, -1.7376e-03],
          [ 4.8990e-02, -6.7457e-03,  1.9512e-02]],

         [[-8.4254e-03, -5.0660e-02, -5.3979e-02],
          [-2.4885e-02, -3.6092e-02,  4.1980e-03],
          [ 6.4847e-03,  6.4224e-02, -6.7733e-02]],

         ...,

         [[ 8.5297e-02, -1.6266e-02, -1.2948e-02],
          [-2.6254e-02,  5.7106e-02, -9.7526e-02],
          [-3.7397e-02,  8.6863e-02, -3.5343e-02]],

         [[-3.9193e-02,  7.3455e-02, -8.6099e-03],
          [ 2.5630e-02,  2.9706e-02, -2.7786e-02],
          [-8.0872e-02,  3.0658e-02, -5.0866e-02]],

         [[ 3.4584e-02, -2.3110e-02, -6.1147e-03],
          [ 1.8214e-02,  3.4679e-02, -5.0253e-02],
          [-2.2704e-02, -3.7314e-02,  1.8589e-02]]],


        [[[ 4.3188e-02, -5.6803e-02, -2.7464e-02],
          [-6.9079e-02,  1.1322e-02,  4.8597e-02],
          [ 8.9822e-03,  6.5811e-02, -1.5658e-02]],

         [[ 4.6490e-02, -4.6558e-02,  2.0823e-02],
          [ 3.0062e-02,  3.8026e-03,  8.4124e-03],
          [-5.6969e-03, -4.0722e-02,  4.8785e-03]],

         [[-2.9057e-02, -1.4876e-02,  1.5100e-04],
          [-1.3359e-02, -3.6764e-02,  5.4898e-02],
          [-3.9240e-02,  4.8417e-02, -3.2889e-02]],

         ...,

         [[-1.2267e-01, -8.1661e-02,  2.5049e-02],
          [-2.2664e-02,  3.1591e-02, -6.1036e-02],
          [-4.7808e-02,  2.0025e-02, -3.1098e-02]],

         [[-1.3735e-03,  1.8625e-02, -1.4968e-02],
          [ 9.1293e-03, -8.1275e-04, -4.2936e-02],
          [-3.2892e-02, -1.0011e-02, -2.9665e-02]],

         [[ 1.7256e-02,  1.2340e-03,  4.5368e-02],
          [ 4.4678e-02,  1.7126e-02,  8.8060e-03],
          [ 9.4158e-02,  8.0239e-02, -2.9194e-02]]],


        [[[ 3.1558e-02,  1.0722e-01, -4.1247e-02],
          [-1.6459e-02,  6.0573e-02, -9.8303e-02],
          [ 6.8764e-02,  1.6031e-02, -5.4356e-02]],

         [[ 4.5941e-02, -6.5750e-02, -1.6493e-02],
          [-2.0160e-02,  5.0147e-02,  4.8528e-03],
          [ 8.1238e-03,  2.7072e-03,  3.2978e-02]],

         [[-1.1119e-01,  2.6544e-02, -1.0821e-01],
          [-2.4865e-02,  3.5807e-02,  3.1780e-02],
          [ 3.2432e-02,  7.9016e-03,  1.7492e-02]],

         ...,

         [[ 1.2234e-02,  3.8484e-02, -3.4766e-02],
          [ 5.8093e-03,  8.2854e-02,  7.3638e-02],
          [ 6.9939e-03,  4.3479e-02, -3.4564e-02]],

         [[-3.4838e-02, -4.4385e-02, -2.4138e-02],
          [ 1.1364e-03, -1.5970e-02, -2.6696e-03],
          [ 3.9272e-02,  4.1448e-02,  3.3506e-02]],

         [[ 1.1836e-02,  2.6961e-02,  3.4007e-02],
          [-1.1192e-01, -3.1681e-02,  1.8770e-02],
          [-9.2460e-03,  7.9043e-02, -5.7959e-02]]],


        ...,


        [[[-4.8079e-02, -2.7802e-02, -3.9230e-02],
          [-3.8194e-02,  3.1462e-03, -2.2287e-02],
          [-6.8062e-02,  4.9053e-02, -3.9421e-02]],

         [[-1.0457e-02,  1.7862e-02,  5.9194e-02],
          [ 2.0957e-02, -1.5821e-02,  9.4508e-03],
          [ 5.8278e-02, -5.4261e-03,  2.1301e-02]],

         [[ 5.7916e-02,  6.3299e-03,  3.5660e-02],
          [-2.7463e-02, -3.5020e-02, -4.8444e-02],
          [-3.5242e-02, -2.2644e-02, -5.9628e-02]],

         ...,

         [[-6.1802e-03, -6.0603e-02,  5.0056e-03],
          [ 2.2358e-02, -3.9937e-02,  5.1317e-02],
          [ 4.3411e-02,  5.4533e-02,  8.8965e-03]],

         [[-3.0861e-02,  2.6209e-02,  8.1049e-03],
          [-1.7053e-02, -3.9744e-02,  1.9172e-02],
          [ 4.4478e-02, -7.2826e-03,  1.7048e-02]],

         [[-1.0692e-01,  6.7519e-02, -2.2963e-02],
          [ 7.0742e-05,  7.6478e-02, -6.0085e-03],
          [ 2.5372e-02,  3.7605e-02,  1.6201e-02]]],


        [[[ 2.3622e-02, -6.8126e-03, -3.4151e-02],
          [-3.1119e-02,  5.4179e-02,  8.1267e-03],
          [-3.6481e-02,  1.1468e-02,  4.5942e-02]],

         [[-3.0572e-02, -1.0916e-02, -3.5064e-02],
          [-2.1341e-02, -1.0482e-01, -4.2382e-02],
          [-2.4025e-03,  2.5092e-02, -3.7578e-02]],

         [[-7.4352e-02, -4.5174e-02,  8.6102e-02],
          [ 4.9940e-02, -3.9182e-03,  7.8366e-02],
          [ 1.2679e-01, -2.2679e-02, -8.9870e-04]],

         ...,

         [[ 2.2679e-02,  4.4763e-02,  4.0270e-02],
          [-1.6602e-02, -5.1511e-02, -2.1423e-02],
          [-7.6905e-02,  3.7551e-03,  3.0060e-02]],

         [[-4.7094e-02, -1.6237e-02,  7.6721e-02],
          [ 6.5885e-03,  3.5287e-02, -2.8687e-02],
          [ 4.0620e-03,  4.6543e-02, -1.4856e-02]],

         [[-3.3727e-02,  1.3223e-02,  8.9897e-02],
          [ 8.4444e-03,  1.0560e-01,  5.7231e-02],
          [-1.2019e-02,  8.6653e-02, -5.7452e-02]]],


        [[[-9.7684e-03,  3.9477e-03, -7.2831e-04],
          [-2.2770e-02,  5.1185e-02,  4.0621e-02],
          [ 1.1831e-02,  8.8276e-02,  1.0556e-02]],

         [[-5.9587e-02, -2.3402e-02,  1.9477e-02],
          [-6.8319e-02, -1.2553e-02,  2.5180e-02],
          [-5.7978e-02, -8.1406e-03,  2.1474e-02]],

         [[ 6.5858e-02, -5.0586e-02,  3.4459e-02],
          [-3.3503e-02, -1.4717e-02, -3.1427e-02],
          [ 1.1534e-02,  5.4750e-02,  3.1693e-02]],

         ...,

         [[ 3.0338e-02, -3.2375e-02, -5.8738e-02],
          [-8.8678e-02,  4.4782e-02, -1.9537e-02],
          [-1.8199e-02,  1.8856e-02,  1.9444e-02]],

         [[ 1.7143e-02, -3.4033e-02, -1.2443e-02],
          [ 4.0458e-02, -1.8495e-02,  6.0710e-02],
          [-3.0985e-02,  1.9836e-02,  5.2128e-03]],

         [[-3.0967e-03, -1.8315e-02, -3.1487e-02],
          [ 3.7881e-02,  9.9776e-03, -4.4649e-02],
          [ 3.0056e-02,  8.8569e-03, -1.6384e-02]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[ 0.0017,  0.0090,  0.0078,  0.0072, -0.0138]],

         [[ 0.0395, -0.0037, -0.0089, -0.0389, -0.0011]],

         [[-0.0179,  0.0127, -0.0530,  0.0089,  0.0105]],

         ...,

         [[-0.0512, -0.0097, -0.0176,  0.0296, -0.0003]],

         [[ 0.0071,  0.0020,  0.0356,  0.0385, -0.0122]],

         [[-0.0159,  0.0181, -0.0042,  0.0331,  0.0053]]],


        [[[ 0.0209,  0.0134,  0.0005, -0.0124, -0.0140]],

         [[-0.0006,  0.0159, -0.0006, -0.0316,  0.0273]],

         [[ 0.0226, -0.0406,  0.0255, -0.0195, -0.0210]],

         ...,

         [[-0.0236, -0.0054, -0.0081,  0.0147, -0.0138]],

         [[ 0.0227,  0.0124,  0.0092,  0.0173,  0.0155]],

         [[-0.0243,  0.0238,  0.0479, -0.0497, -0.0248]]],


        [[[-0.0351, -0.0075,  0.0052, -0.0063, -0.0292]],

         [[ 0.0440, -0.0034, -0.0015,  0.0150, -0.0355]],

         [[-0.0099,  0.0126,  0.0035, -0.0329, -0.0010]],

         ...,

         [[-0.0194,  0.0014, -0.0597, -0.0013, -0.0033]],

         [[ 0.0082,  0.0199, -0.0018, -0.0095, -0.0030]],

         [[ 0.0282, -0.0088, -0.0083, -0.0394,  0.0024]]],


        ...,


        [[[ 0.0131, -0.0064,  0.0494,  0.0006, -0.0081]],

         [[-0.0409,  0.0213,  0.0298, -0.0087, -0.0136]],

         [[-0.0069,  0.0033,  0.0042, -0.0333, -0.0123]],

         ...,

         [[ 0.0366, -0.0113,  0.0218,  0.0011, -0.0025]],

         [[-0.0227, -0.0113, -0.0187, -0.0363, -0.0138]],

         [[-0.0393, -0.0125,  0.0063, -0.0041,  0.0146]]],


        [[[ 0.0245,  0.0019,  0.0077,  0.0028, -0.0125]],

         [[-0.0116,  0.0101,  0.0292, -0.0030, -0.0216]],

         [[-0.0202, -0.0038, -0.0100, -0.0128,  0.0006]],

         ...,

         [[ 0.0002, -0.0229, -0.0134, -0.0329,  0.0176]],

         [[-0.0130, -0.0104,  0.0142, -0.0247, -0.0052]],

         [[-0.0195, -0.0124,  0.0317,  0.0122, -0.0191]]],


        [[[-0.0464, -0.0347,  0.0209, -0.0147,  0.0199]],

         [[-0.0131, -0.0351,  0.0089, -0.0011, -0.0167]],

         [[-0.0228, -0.0470,  0.0034,  0.0085,  0.0418]],

         ...,

         [[ 0.0352, -0.0108, -0.0038,  0.0136, -0.0130]],

         [[ 0.0663, -0.0042, -0.0312,  0.0234,  0.0078]],

         [[-0.0387, -0.0230,  0.0137,  0.0500,  0.0467]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[-0.0274],
          [ 0.0098],
          [-0.0214],
          [ 0.0204],
          [-0.0024]],

         [[-0.0280],
          [ 0.0115],
          [-0.0014],
          [-0.0156],
          [ 0.0018]],

         [[-0.0034],
          [ 0.0007],
          [ 0.0070],
          [ 0.0008],
          [-0.0235]],

         ...,

         [[-0.0031],
          [ 0.0214],
          [ 0.0068],
          [ 0.0174],
          [ 0.0253]],

         [[-0.0249],
          [-0.0281],
          [ 0.0269],
          [-0.0081],
          [ 0.0246]],

         [[-0.0373],
          [-0.0060],
          [-0.0264],
          [ 0.0184],
          [-0.0396]]],


        [[[ 0.0068],
          [ 0.0105],
          [ 0.0126],
          [ 0.0261],
          [ 0.0446]],

         [[ 0.0348],
          [-0.0334],
          [-0.0340],
          [-0.0065],
          [ 0.0527]],

         [[-0.0124],
          [ 0.0068],
          [ 0.0082],
          [-0.0207],
          [-0.0332]],

         ...,

         [[ 0.0090],
          [-0.0546],
          [-0.0184],
          [-0.0164],
          [ 0.0284]],

         [[ 0.0048],
          [-0.0199],
          [ 0.0147],
          [ 0.0292],
          [-0.0222]],

         [[-0.0098],
          [-0.0139],
          [ 0.0512],
          [-0.0168],
          [ 0.0069]]],


        [[[ 0.0213],
          [-0.0180],
          [ 0.0033],
          [ 0.0250],
          [-0.0194]],

         [[-0.0106],
          [ 0.0480],
          [ 0.0057],
          [-0.0236],
          [ 0.0225]],

         [[ 0.0084],
          [-0.0123],
          [ 0.0164],
          [ 0.0140],
          [-0.0434]],

         ...,

         [[-0.0213],
          [ 0.0158],
          [ 0.0128],
          [-0.0074],
          [-0.0303]],

         [[ 0.0183],
          [-0.0134],
          [ 0.0055],
          [-0.0029],
          [ 0.0656]],

         [[ 0.0265],
          [-0.0032],
          [-0.0427],
          [-0.0012],
          [ 0.0058]]],


        ...,


        [[[ 0.0090],
          [-0.0430],
          [ 0.0290],
          [ 0.0154],
          [-0.0177]],

         [[-0.0013],
          [ 0.0066],
          [ 0.0197],
          [-0.0200],
          [-0.0111]],

         [[-0.0065],
          [ 0.0322],
          [ 0.0422],
          [-0.0395],
          [-0.0110]],

         ...,

         [[ 0.0327],
          [-0.0156],
          [ 0.0053],
          [-0.0003],
          [ 0.0249]],

         [[ 0.0446],
          [-0.0066],
          [-0.0138],
          [-0.0295],
          [-0.0453]],

         [[ 0.0095],
          [ 0.0202],
          [ 0.0044],
          [-0.0308],
          [-0.0014]]],


        [[[-0.0164],
          [-0.0152],
          [ 0.0225],
          [-0.0120],
          [ 0.0220]],

         [[ 0.0018],
          [-0.0080],
          [ 0.0177],
          [ 0.0106],
          [-0.0198]],

         [[-0.0036],
          [-0.0090],
          [-0.0290],
          [-0.0413],
          [-0.0301]],

         ...,

         [[-0.0318],
          [-0.0102],
          [-0.0229],
          [ 0.0052],
          [ 0.0270]],

         [[ 0.0323],
          [-0.0159],
          [ 0.0009],
          [-0.0129],
          [ 0.0014]],

         [[-0.0071],
          [-0.0334],
          [-0.0188],
          [-0.0064],
          [ 0.0379]]],


        [[[ 0.0140],
          [ 0.0134],
          [ 0.0056],
          [ 0.0369],
          [-0.0359]],

         [[ 0.0043],
          [ 0.0047],
          [-0.0093],
          [-0.0148],
          [-0.0026]],

         [[-0.0340],
          [-0.0084],
          [-0.0439],
          [-0.0353],
          [ 0.0158]],

         ...,

         [[-0.0049],
          [-0.0203],
          [ 0.0412],
          [-0.0019],
          [ 0.0181]],

         [[ 0.0205],
          [ 0.0476],
          [-0.0045],
          [-0.0146],
          [-0.0028]],

         [[-0.0721],
          [ 0.0264],
          [-0.0076],
          [-0.0343],
          [ 0.0092]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[ 0.0059,  0.0262,  0.0460, -0.0117,  0.0307]],

         [[ 0.0004,  0.0302,  0.0352,  0.0203, -0.0079]],

         [[ 0.0198, -0.0146, -0.0316,  0.0175, -0.0031]],

         ...,

         [[ 0.0385, -0.0004,  0.0092, -0.0164, -0.0294]],

         [[-0.0123,  0.0165, -0.0135,  0.0265, -0.0390]],

         [[-0.0301, -0.0205,  0.0174,  0.0002,  0.0239]]],


        [[[ 0.0049,  0.0138, -0.0319, -0.0213,  0.0080]],

         [[ 0.0558, -0.0268, -0.0044, -0.0224, -0.0039]],

         [[ 0.0109, -0.0080, -0.0216, -0.0075, -0.0184]],

         ...,

         [[ 0.0024,  0.0389,  0.0322, -0.0050,  0.0525]],

         [[-0.0353, -0.0142,  0.0285, -0.0020, -0.0050]],

         [[ 0.0125,  0.0045,  0.0152, -0.0282, -0.0110]]],


        [[[ 0.0223,  0.0174,  0.0169, -0.0355,  0.0284]],

         [[ 0.0133, -0.0180, -0.0117, -0.0511, -0.0029]],

         [[-0.0122, -0.0068,  0.0147, -0.0111, -0.0069]],

         ...,

         [[ 0.0015,  0.0492, -0.0198,  0.0351,  0.0072]],

         [[ 0.0294, -0.0102, -0.0139, -0.0548,  0.0145]],

         [[ 0.0132, -0.0038, -0.0170,  0.0171, -0.0074]]],


        ...,


        [[[ 0.0078, -0.0022, -0.0396,  0.0403, -0.0189]],

         [[ 0.0152, -0.0046, -0.0256, -0.0060, -0.0066]],

         [[ 0.0106,  0.0151,  0.0118,  0.0424,  0.0138]],

         ...,

         [[ 0.0065, -0.0090,  0.0056,  0.0205, -0.0140]],

         [[-0.0085,  0.0053,  0.0528, -0.0049, -0.0031]],

         [[ 0.0375,  0.0407, -0.0308, -0.0192, -0.0235]]],


        [[[-0.0101, -0.0176, -0.0049, -0.0053, -0.0206]],

         [[ 0.0111,  0.0002, -0.0416,  0.0084, -0.0347]],

         [[-0.0040, -0.0072, -0.0144, -0.0368, -0.0284]],

         ...,

         [[ 0.0596, -0.0148,  0.0318, -0.0021,  0.0010]],

         [[-0.0343,  0.0122,  0.0179,  0.0089, -0.0296]],

         [[-0.0314, -0.0107,  0.0033, -0.0138,  0.0270]]],


        [[[ 0.0164, -0.0095,  0.0279,  0.0164, -0.0119]],

         [[-0.0174, -0.0023,  0.0297, -0.0005,  0.0186]],

         [[-0.0358, -0.0051,  0.0084,  0.0082, -0.0212]],

         ...,

         [[-0.0276, -0.0341,  0.0089, -0.0253, -0.0447]],

         [[-0.0052,  0.0004,  0.0040,  0.0176, -0.0080]],

         [[ 0.0117,  0.0065,  0.0154, -0.0276, -0.0217]]]], device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[ 0.0423],
          [ 0.0257],
          [-0.0026],
          [ 0.0025],
          [ 0.0125]],

         [[-0.0280],
          [ 0.0111],
          [-0.0278],
          [-0.0031],
          [ 0.0407]],

         [[ 0.0120],
          [-0.0028],
          [ 0.0339],
          [-0.0488],
          [ 0.0133]],

         ...,

         [[-0.0115],
          [ 0.0192],
          [-0.0191],
          [ 0.0160],
          [ 0.0169]],

         [[ 0.0140],
          [-0.0025],
          [ 0.0233],
          [-0.0049],
          [-0.0032]],

         [[-0.0213],
          [-0.0035],
          [-0.0522],
          [ 0.0039],
          [ 0.0055]]],


        [[[ 0.0304],
          [ 0.0110],
          [ 0.0118],
          [ 0.0500],
          [-0.0122]],

         [[ 0.0120],
          [ 0.0014],
          [ 0.0094],
          [-0.0166],
          [-0.0058]],

         [[-0.0323],
          [ 0.0514],
          [-0.0350],
          [-0.0229],
          [-0.0120]],

         ...,

         [[-0.0006],
          [-0.0226],
          [ 0.0019],
          [ 0.0312],
          [-0.0054]],

         [[-0.0777],
          [ 0.0227],
          [ 0.0249],
          [ 0.0285],
          [-0.0215]],

         [[ 0.0301],
          [-0.0171],
          [-0.0206],
          [-0.0259],
          [ 0.0095]]],


        [[[-0.0129],
          [ 0.0118],
          [ 0.0047],
          [ 0.0003],
          [ 0.0342]],

         [[ 0.0195],
          [-0.0165],
          [-0.0255],
          [ 0.0010],
          [-0.0046]],

         [[-0.0066],
          [-0.0019],
          [ 0.0005],
          [-0.0080],
          [-0.0441]],

         ...,

         [[-0.0122],
          [ 0.0206],
          [ 0.0583],
          [-0.0162],
          [ 0.0346]],

         [[ 0.0071],
          [-0.0041],
          [-0.0129],
          [-0.0119],
          [-0.0225]],

         [[-0.0008],
          [ 0.0016],
          [-0.0011],
          [ 0.0113],
          [ 0.0060]]],


        ...,


        [[[ 0.0069],
          [-0.0114],
          [ 0.0352],
          [ 0.0463],
          [ 0.0425]],

         [[-0.0257],
          [ 0.0036],
          [-0.0011],
          [ 0.0021],
          [ 0.0037]],

         [[-0.0021],
          [ 0.0488],
          [ 0.0234],
          [-0.0156],
          [-0.0248]],

         ...,

         [[ 0.0045],
          [ 0.0039],
          [-0.0340],
          [-0.0305],
          [ 0.0183]],

         [[ 0.0224],
          [ 0.0432],
          [-0.0010],
          [ 0.0142],
          [-0.0117]],

         [[-0.0300],
          [ 0.0195],
          [ 0.0097],
          [ 0.0074],
          [ 0.0446]]],


        [[[-0.0227],
          [-0.0338],
          [-0.0660],
          [ 0.0395],
          [-0.0090]],

         [[ 0.0091],
          [ 0.0388],
          [ 0.0319],
          [-0.0034],
          [-0.0207]],

         [[-0.0325],
          [ 0.0003],
          [ 0.0079],
          [-0.0086],
          [-0.0051]],

         ...,

         [[-0.0110],
          [ 0.0069],
          [-0.0365],
          [-0.0189],
          [ 0.0166]],

         [[ 0.0204],
          [-0.0027],
          [-0.0139],
          [ 0.0076],
          [-0.0154]],

         [[ 0.0068],
          [ 0.0447],
          [ 0.0094],
          [-0.0044],
          [ 0.0104]]],


        [[[ 0.0027],
          [-0.0070],
          [ 0.0336],
          [-0.0102],
          [ 0.0157]],

         [[ 0.0063],
          [ 0.0242],
          [-0.0233],
          [-0.0072],
          [-0.0224]],

         [[-0.0094],
          [-0.0140],
          [-0.0029],
          [ 0.0051],
          [-0.0164]],

         ...,

         [[ 0.0027],
          [ 0.0188],
          [ 0.0238],
          [-0.0016],
          [-0.0407]],

         [[ 0.0215],
          [-0.0184],
          [-0.0164],
          [-0.0024],
          [-0.0296]],

         [[ 0.0009],
          [-0.0381],
          [ 0.0128],
          [ 0.0084],
          [ 0.0049]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[ 2.5744e-02,  4.2690e-03, -2.5964e-03, -4.4179e-03, -1.3958e-02]],

         [[-1.9390e-02,  1.3088e-02, -7.4438e-03, -1.2154e-02,  1.2364e-02]],

         [[ 9.6040e-03, -3.6252e-02, -1.6704e-02,  2.4796e-02,  1.8072e-03]],

         ...,

         [[-1.2244e-03,  1.1028e-02,  2.3240e-02,  1.7709e-02,  2.3879e-02]],

         [[ 1.1925e-02,  1.7091e-02,  2.7604e-02, -4.0203e-02, -1.9921e-02]],

         [[-2.8582e-02, -4.1408e-03,  7.3357e-03,  1.7281e-02,  2.9392e-02]]],


        [[[ 8.8892e-03, -5.0529e-02, -5.0855e-03,  1.5093e-02,  2.2603e-02]],

         [[ 2.0227e-02,  5.6623e-03,  5.8536e-03, -2.2809e-02, -1.4601e-02]],

         [[ 2.1207e-02,  1.0818e-02,  1.5209e-02, -5.8439e-02,  1.0663e-02]],

         ...,

         [[ 1.3162e-02, -6.4878e-03,  8.2160e-03,  1.7827e-02, -5.3193e-03]],

         [[ 9.6745e-04,  4.2713e-03,  8.9629e-03,  4.9660e-02, -1.1651e-02]],

         [[ 3.3636e-02, -1.6293e-03,  2.6510e-02,  2.0967e-02,  2.1414e-02]]],


        [[[ 1.0850e-02,  2.3897e-02, -2.9222e-02,  5.6181e-03,  6.0965e-03]],

         [[ 2.8782e-03, -4.6175e-03, -3.0697e-02, -1.4106e-02, -1.6500e-02]],

         [[-1.9158e-02, -3.6226e-02,  1.6272e-02, -3.7229e-02, -6.3497e-03]],

         ...,

         [[ 3.4740e-02,  2.6246e-02,  3.3660e-03, -1.7196e-02, -9.6734e-04]],

         [[ 7.1073e-04, -7.8484e-04,  2.3636e-02,  9.5222e-03,  3.3148e-02]],

         [[ 2.5572e-02,  6.5125e-04,  1.0022e-02, -2.1286e-02, -2.0863e-02]]],


        ...,


        [[[-4.0865e-02, -4.0068e-02,  1.7700e-02, -1.8449e-02, -1.5091e-02]],

         [[ 3.2954e-02,  2.3605e-02,  1.3821e-02, -4.0276e-02, -1.5660e-03]],

         [[ 1.7271e-02,  2.3094e-02,  3.2006e-02, -3.0268e-02, -9.0024e-04]],

         ...,

         [[-6.4457e-02,  4.1440e-03, -6.7846e-03,  2.2043e-04, -2.3814e-02]],

         [[-1.1807e-02,  2.1011e-02,  2.8193e-03, -4.0807e-03, -2.4171e-02]],

         [[-2.8041e-02, -4.4093e-02,  2.1409e-03,  1.8142e-03, -6.4187e-03]]],


        [[[ 1.7029e-02, -2.7196e-02, -3.6369e-03, -6.4025e-03,  7.7561e-03]],

         [[ 4.6082e-03,  1.8503e-02,  1.2372e-02,  2.0195e-02,  5.6969e-02]],

         [[-1.9419e-02,  2.2435e-02,  4.1980e-03, -3.4027e-02, -2.0779e-03]],

         ...,

         [[ 1.1980e-02, -3.1101e-02,  2.3359e-02, -1.5948e-02,  2.0974e-02]],

         [[ 3.6145e-02, -2.5661e-02, -2.6382e-02, -9.1060e-03, -1.2605e-02]],

         [[-1.0499e-02,  3.6709e-03, -2.4397e-02, -1.6738e-02, -3.2035e-02]]],


        [[[ 2.0751e-02,  2.7941e-03, -3.7865e-03,  6.1492e-03, -3.5210e-02]],

         [[ 1.5987e-02,  1.3392e-03,  1.9430e-02,  1.1883e-02,  1.8621e-03]],

         [[-2.3855e-02,  9.8991e-03, -4.4365e-03,  2.1316e-03, -2.2669e-04]],

         ...,

         [[-4.0208e-02,  3.8209e-02,  1.7485e-02, -7.1918e-03,  5.9950e-05]],

         [[-2.7378e-02,  4.7145e-03,  2.8431e-02, -1.3139e-03,  1.4235e-03]],

         [[ 1.4552e-02,  2.9252e-02, -2.9457e-02, -6.1659e-02,  2.0123e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-2.8290e-02],
          [-2.8666e-02],
          [-9.2808e-03],
          [ 1.9610e-02],
          [-5.8163e-03]],

         [[ 4.4675e-03],
          [-3.0475e-02],
          [ 1.1936e-03],
          [-6.9994e-05],
          [ 1.4516e-02]],

         [[-1.0058e-02],
          [-7.2960e-03],
          [ 8.1869e-03],
          [ 2.3927e-02],
          [-4.8101e-03]],

         ...,

         [[ 5.3839e-03],
          [ 5.5185e-03],
          [-5.5960e-04],
          [ 3.9111e-02],
          [-1.0001e-02]],

         [[-1.2714e-02],
          [-4.9610e-02],
          [-4.1691e-02],
          [-2.4558e-02],
          [-1.0690e-02]],

         [[-1.5482e-02],
          [-1.9530e-02],
          [-1.9931e-02],
          [ 1.7629e-02],
          [ 5.8075e-03]]],


        [[[ 4.8960e-03],
          [-1.1125e-02],
          [-2.1956e-02],
          [ 1.0167e-02],
          [-4.3223e-03]],

         [[-1.1989e-03],
          [ 2.3954e-03],
          [ 7.0377e-04],
          [-2.6154e-02],
          [ 2.7136e-03]],

         [[-9.1822e-03],
          [ 3.4116e-03],
          [ 2.3011e-02],
          [ 1.3349e-02],
          [ 1.1871e-03]],

         ...,

         [[ 3.8490e-02],
          [-2.0750e-02],
          [-3.1811e-02],
          [-1.1516e-02],
          [-6.3657e-03]],

         [[-2.1240e-04],
          [-2.0129e-02],
          [ 1.5576e-02],
          [-2.2394e-02],
          [-1.3269e-03]],

         [[ 4.8234e-02],
          [ 1.5786e-02],
          [-1.5199e-02],
          [ 1.1795e-02],
          [-9.7072e-03]]],


        [[[ 1.5207e-02],
          [-3.8878e-02],
          [-1.7182e-02],
          [-1.7457e-02],
          [ 2.8567e-03]],

         [[-1.0733e-02],
          [-1.4014e-02],
          [-1.3404e-02],
          [ 2.6434e-02],
          [ 1.0486e-02]],

         [[-4.1958e-02],
          [-2.6680e-02],
          [ 1.2674e-03],
          [ 2.9098e-03],
          [ 1.2866e-02]],

         ...,

         [[ 2.2042e-02],
          [ 1.2888e-03],
          [-2.9792e-03],
          [-1.3121e-02],
          [ 3.9020e-02]],

         [[ 1.2170e-02],
          [ 1.4236e-02],
          [-3.5331e-02],
          [ 1.6366e-02],
          [-1.4675e-02]],

         [[-4.3247e-02],
          [-2.7630e-02],
          [-2.4845e-02],
          [ 4.1904e-02],
          [-7.5341e-03]]],


        ...,


        [[[-3.2648e-02],
          [-2.3460e-02],
          [-2.2661e-03],
          [ 1.6903e-02],
          [ 3.8997e-02]],

         [[ 2.7403e-02],
          [ 3.7840e-02],
          [ 2.9533e-02],
          [-1.8935e-02],
          [ 1.8067e-02]],

         [[ 8.0356e-03],
          [-2.8496e-02],
          [ 4.2705e-03],
          [-1.8386e-02],
          [ 2.7120e-02]],

         ...,

         [[-2.3746e-03],
          [ 7.1389e-02],
          [ 2.2160e-02],
          [ 2.4602e-02],
          [ 2.3934e-02]],

         [[-8.2604e-03],
          [-1.4527e-02],
          [-3.7062e-03],
          [-7.5229e-03],
          [ 4.3869e-04]],

         [[-1.0029e-02],
          [-2.2603e-02],
          [-2.6227e-02],
          [ 2.2579e-02],
          [ 1.9326e-02]]],


        [[[-3.2347e-02],
          [ 1.6500e-02],
          [ 1.6256e-02],
          [ 3.4471e-02],
          [-3.0080e-02]],

         [[-2.3744e-02],
          [ 8.8733e-03],
          [-2.4075e-02],
          [-5.8474e-03],
          [-6.6012e-03]],

         [[ 6.1460e-03],
          [-3.2624e-02],
          [ 2.2697e-02],
          [ 1.5535e-02],
          [-3.6026e-02]],

         ...,

         [[ 9.0405e-04],
          [ 1.4799e-02],
          [-4.1204e-02],
          [ 3.2356e-02],
          [ 4.1918e-02]],

         [[-2.7711e-04],
          [ 2.3258e-02],
          [-1.9446e-02],
          [-7.2811e-03],
          [-2.8540e-02]],

         [[-2.3839e-02],
          [-6.5085e-03],
          [-3.0117e-04],
          [-4.1029e-02],
          [ 8.8549e-03]]],


        [[[ 1.1063e-02],
          [-3.2470e-02],
          [-7.5672e-04],
          [ 1.5016e-02],
          [-1.6644e-02]],

         [[-5.0188e-03],
          [ 8.2131e-03],
          [-3.8909e-02],
          [-3.4364e-02],
          [-2.8916e-03]],

         [[ 1.5137e-02],
          [ 2.9206e-02],
          [-5.0566e-02],
          [ 3.4388e-02],
          [ 1.7694e-02]],

         ...,

         [[-8.2101e-03],
          [-3.4532e-02],
          [-5.6430e-04],
          [-3.2110e-02],
          [-7.5783e-03]],

         [[ 2.1255e-02],
          [-8.2967e-03],
          [ 5.1690e-02],
          [-2.2450e-02],
          [ 1.2824e-02]],

         [[ 1.0239e-02],
          [-9.5657e-03],
          [ 1.8683e-02],
          [ 5.2140e-02],
          [-1.5636e-02]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 0.0200, -0.0355,  0.0002],
          [-0.0086, -0.0193, -0.0277],
          [-0.0157,  0.0242, -0.0057]],

         [[-0.0194, -0.0560, -0.0747],
          [ 0.0394,  0.0480, -0.0252],
          [-0.0172, -0.0095, -0.0182]],

         [[-0.0200,  0.0075,  0.0049],
          [-0.0427,  0.0161, -0.0267],
          [-0.0233,  0.0033, -0.0092]],

         ...,

         [[ 0.0046, -0.0148, -0.0251],
          [-0.0137, -0.0075, -0.0610],
          [ 0.0210,  0.0549, -0.0260]],

         [[ 0.0067,  0.0112, -0.0131],
          [-0.0155,  0.0464, -0.0177],
          [ 0.0296, -0.0286,  0.0207]],

         [[ 0.0161, -0.0350,  0.0044],
          [ 0.0172,  0.0433,  0.0058],
          [ 0.0291,  0.0317, -0.0321]]],


        [[[-0.0355,  0.0081, -0.0311],
          [-0.0677, -0.0078,  0.0186],
          [-0.0292,  0.0183, -0.0193]],

         [[-0.0211, -0.0153, -0.0165],
          [-0.0436, -0.0094,  0.0074],
          [-0.0273,  0.0057, -0.0169]],

         [[-0.0221, -0.0150,  0.0591],
          [-0.0065,  0.0007, -0.0138],
          [-0.0124,  0.0372, -0.0293]],

         ...,

         [[ 0.0258, -0.0414, -0.0190],
          [-0.0933, -0.0019, -0.0089],
          [ 0.0417, -0.0169,  0.0121]],

         [[ 0.0184,  0.0108, -0.0514],
          [-0.0068,  0.0096, -0.0566],
          [ 0.0667, -0.0168,  0.0040]],

         [[ 0.0261,  0.0019,  0.0189],
          [ 0.0321,  0.0545,  0.0277],
          [-0.0348,  0.0382,  0.0595]]],


        [[[-0.0229, -0.0370,  0.0309],
          [ 0.0463,  0.0319,  0.0238],
          [-0.0317,  0.0180, -0.0074]],

         [[-0.0098,  0.0326,  0.0231],
          [-0.0435, -0.0243, -0.0095],
          [-0.0421, -0.0330,  0.0488]],

         [[ 0.0096, -0.0504,  0.0369],
          [ 0.0106,  0.0319, -0.0491],
          [-0.0294,  0.0088,  0.0138]],

         ...,

         [[ 0.0270,  0.0296, -0.0641],
          [-0.0347, -0.0516,  0.0336],
          [ 0.0320, -0.0067,  0.0336]],

         [[-0.0101, -0.0159,  0.0338],
          [ 0.0649,  0.0298,  0.0032],
          [ 0.0551,  0.0098,  0.0125]],

         [[ 0.0465,  0.0220,  0.0281],
          [-0.0353, -0.0395, -0.0225],
          [-0.0411, -0.0048, -0.0017]]],


        ...,


        [[[-0.0472,  0.0397, -0.0196],
          [ 0.0324, -0.0199, -0.0207],
          [-0.0016,  0.0166, -0.0422]],

         [[ 0.0117,  0.0660,  0.0621],
          [ 0.0291, -0.0124, -0.0539],
          [ 0.0727, -0.0064, -0.0042]],

         [[-0.0036, -0.0028,  0.0058],
          [-0.0134, -0.0422, -0.0115],
          [-0.0342, -0.0706, -0.0098]],

         ...,

         [[-0.0071,  0.0135,  0.0151],
          [ 0.0567, -0.0592, -0.0093],
          [-0.0025,  0.0177, -0.0446]],

         [[-0.0314,  0.0123, -0.0522],
          [ 0.0219,  0.0040, -0.0488],
          [ 0.0088, -0.0114,  0.0257]],

         [[-0.0071, -0.0011, -0.0108],
          [-0.0427, -0.0245, -0.0491],
          [-0.0200,  0.0117, -0.0110]]],


        [[[-0.0146, -0.0104, -0.0198],
          [-0.0293,  0.0147,  0.0508],
          [ 0.0068, -0.0461, -0.0174]],

         [[ 0.0096, -0.0219,  0.0112],
          [-0.0502,  0.0201,  0.0255],
          [ 0.0116,  0.0215,  0.0187]],

         [[-0.0091,  0.0197,  0.0342],
          [ 0.0250,  0.0197,  0.0077],
          [ 0.0208,  0.0231, -0.0432]],

         ...,

         [[ 0.0040,  0.0172, -0.0452],
          [-0.0349, -0.0139,  0.0102],
          [-0.0145, -0.0199, -0.0547]],

         [[-0.0009,  0.0759, -0.0141],
          [-0.0170, -0.0112, -0.0281],
          [ 0.0358,  0.0150, -0.0125]],

         [[-0.0119,  0.0214,  0.0144],
          [ 0.0015, -0.0094,  0.0036],
          [-0.0480,  0.0257, -0.0225]]],


        [[[ 0.0038, -0.0304,  0.0543],
          [ 0.0083, -0.0102, -0.0199],
          [ 0.0309,  0.0060, -0.0111]],

         [[ 0.0043,  0.0207, -0.0198],
          [-0.0060, -0.0075,  0.0109],
          [ 0.0239,  0.0437, -0.0113]],

         [[ 0.0202,  0.0600,  0.0226],
          [-0.0570,  0.0187, -0.0176],
          [ 0.0094,  0.0203, -0.0157]],

         ...,

         [[-0.0132, -0.0128,  0.0006],
          [ 0.0299, -0.0121, -0.0224],
          [-0.0927,  0.0318,  0.0091]],

         [[ 0.0227,  0.0234,  0.0249],
          [-0.0590, -0.0027, -0.0258],
          [ 0.0468, -0.0129, -0.0125]],

         [[-0.0188, -0.0157,  0.0169],
          [-0.0389, -0.0067, -0.0088],
          [ 0.0168, -0.0284, -0.0490]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0107,  0.0148, -0.0096],
          [-0.0186,  0.0118,  0.0056],
          [-0.0207, -0.0199, -0.0202]],

         [[-0.0155,  0.0017,  0.0149],
          [-0.0200, -0.0121,  0.0124],
          [-0.0182, -0.0184,  0.0152]],

         [[-0.0074,  0.0036,  0.0095],
          [-0.0123,  0.0064, -0.0007],
          [-0.0159, -0.0026,  0.0143]],

         ...,

         [[ 0.0151, -0.0022, -0.0168],
          [ 0.0004,  0.0042,  0.0075],
          [ 0.0102,  0.0162, -0.0117]],

         [[ 0.0124,  0.0188, -0.0157],
          [ 0.0156,  0.0045, -0.0010],
          [-0.0072,  0.0123,  0.0047]],

         [[-0.0014,  0.0125, -0.0005],
          [-0.0086,  0.0010,  0.0095],
          [-0.0024,  0.0085,  0.0110]]],


        [[[-0.0026,  0.0043, -0.0177],
          [ 0.0114, -0.0140,  0.0026],
          [ 0.0193, -0.0146, -0.0192]],

         [[ 0.0088,  0.0012, -0.0108],
          [-0.0078,  0.0006,  0.0170],
          [-0.0076,  0.0030, -0.0152]],

         [[-0.0198, -0.0126, -0.0101],
          [ 0.0051,  0.0140,  0.0202],
          [ 0.0037, -0.0195, -0.0042]],

         ...,

         [[-0.0003,  0.0098, -0.0134],
          [ 0.0117,  0.0040, -0.0055],
          [ 0.0058, -0.0198, -0.0099]],

         [[-0.0085,  0.0006,  0.0016],
          [ 0.0049, -0.0014,  0.0174],
          [-0.0022,  0.0135,  0.0008]],

         [[-0.0160, -0.0166, -0.0189],
          [ 0.0015, -0.0071,  0.0019],
          [ 0.0019, -0.0068,  0.0029]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([ 0.0056, -0.0051], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 2.0202e-02,  3.6477e-02, -3.1189e-02],
          [ 4.7598e-02, -2.0047e-02,  2.2493e-02],
          [-1.5573e-03, -2.2820e-02, -4.5861e-02]],

         [[ 1.0176e-02, -5.0261e-03,  1.1567e-02],
          [-1.3289e-02, -1.0008e-02,  2.3012e-02],
          [ 2.2937e-02, -8.5956e-03, -5.3362e-03]],

         [[ 7.1591e-02,  2.1231e-03, -3.0675e-02],
          [ 3.9312e-03,  2.5601e-02, -9.9247e-06],
          [ 6.0971e-03, -8.6195e-03, -2.5579e-02]],

         ...,

         [[-2.8279e-02,  2.8706e-02, -1.2648e-02],
          [-2.9570e-02, -3.2775e-02, -4.5701e-02],
          [ 2.5315e-02, -1.4844e-02,  5.7460e-03]],

         [[ 1.7484e-02,  4.2522e-02,  2.6383e-02],
          [ 1.6304e-02,  2.8087e-02,  1.7997e-02],
          [ 2.8076e-02,  5.7360e-02,  2.7729e-03]],

         [[ 2.7899e-02,  4.3432e-03,  1.3155e-02],
          [-2.7679e-02, -1.3221e-02,  3.3967e-02],
          [-5.8309e-02,  1.1715e-02, -2.4859e-02]]],


        [[[-4.3617e-02,  3.4755e-02,  2.2204e-02],
          [-4.1770e-02, -3.4536e-02,  1.5024e-02],
          [ 1.0646e-02, -1.6369e-02,  3.8633e-02]],

         [[-1.5692e-02,  7.6426e-02, -2.6494e-02],
          [-1.5221e-03,  6.9548e-02,  2.7892e-02],
          [ 8.2605e-04,  5.9971e-03, -6.1552e-03]],

         [[-3.5803e-02, -1.4993e-02,  2.7524e-02],
          [ 2.8938e-02, -9.4257e-03, -6.0706e-03],
          [-2.0934e-04, -2.9637e-02, -3.3509e-02]],

         ...,

         [[ 1.8993e-02, -4.4249e-02,  1.3078e-02],
          [ 1.1977e-02, -2.3953e-02, -1.7354e-02],
          [ 2.0987e-02,  3.7862e-02, -5.3858e-02]],

         [[-5.6060e-02,  8.7286e-04, -3.0469e-02],
          [-2.1478e-03,  1.0828e-02,  5.8699e-02],
          [-1.9335e-02,  8.1491e-03,  1.8929e-02]],

         [[-6.9859e-02,  2.7108e-02, -1.6985e-02],
          [-1.7846e-02, -2.7702e-02, -4.1946e-02],
          [-2.7880e-02, -4.5141e-02,  1.7089e-02]]],


        [[[-1.0084e-02, -2.5726e-02, -4.0862e-02],
          [-3.0540e-02, -1.5744e-02, -6.4048e-02],
          [ 2.7410e-02, -4.0016e-02, -4.0357e-03]],

         [[ 6.0629e-02, -8.2818e-03,  2.2804e-02],
          [ 1.9111e-02,  2.9013e-02, -4.5498e-02],
          [-6.3353e-05,  1.8487e-02,  6.5038e-04]],

         [[ 4.0167e-02,  3.7863e-03, -1.1940e-02],
          [ 3.0010e-02, -1.3971e-02, -2.4855e-03],
          [ 4.7654e-02,  1.5806e-02, -3.0939e-02]],

         ...,

         [[-2.1969e-02,  1.4739e-02,  1.0331e-02],
          [-5.9315e-02, -5.7284e-03, -2.7775e-03],
          [ 1.3338e-02,  3.4276e-02,  1.0256e-02]],

         [[-4.2760e-02, -4.6608e-03, -5.3655e-03],
          [-4.3709e-04, -1.7109e-03, -2.6027e-02],
          [-3.1671e-04, -3.1382e-02,  3.4174e-02]],

         [[ 2.7391e-02,  2.8471e-02, -6.5266e-03],
          [-5.8576e-03,  3.3685e-02,  2.9867e-02],
          [-5.8401e-02, -4.3335e-02,  1.3658e-02]]],


        ...,


        [[[-2.5592e-02, -2.1392e-02,  5.4317e-02],
          [ 6.8854e-03,  1.3017e-02,  2.9690e-02],
          [ 7.3369e-03, -2.9392e-03, -4.0927e-02]],

         [[-4.6122e-04, -1.3147e-02, -5.9987e-03],
          [-3.7544e-02,  2.5964e-02,  4.2162e-03],
          [ 7.2289e-03, -1.1068e-02,  1.6597e-02]],

         [[ 5.9636e-03, -2.8272e-02, -3.9935e-02],
          [ 6.9275e-02,  3.5835e-02, -1.2264e-02],
          [-1.3841e-02,  6.4938e-02, -5.7049e-03]],

         ...,

         [[ 4.5670e-02, -1.9681e-02,  1.0829e-02],
          [ 1.6862e-02,  2.0063e-02, -7.2487e-02],
          [-2.0749e-02, -3.6009e-02, -9.3612e-03]],

         [[ 1.7670e-02, -1.9114e-02,  5.1389e-02],
          [ 1.8604e-02,  8.9426e-04, -3.1959e-03],
          [ 1.9103e-02,  2.7105e-02, -1.9923e-02]],

         [[-1.7368e-02,  4.9495e-02,  1.4121e-02],
          [ 4.9172e-03,  1.0673e-02,  1.9665e-02],
          [ 2.5612e-03, -7.7554e-03, -2.9637e-03]]],


        [[[ 8.5103e-03, -2.0414e-02,  1.1032e-02],
          [ 4.5961e-02, -4.0376e-02, -1.0215e-02],
          [-6.1069e-03, -6.6598e-03,  9.3837e-03]],

         [[ 1.0024e-02,  2.1887e-02,  3.4701e-02],
          [-4.7290e-02,  1.1663e-03,  1.7202e-03],
          [ 3.6298e-03, -1.2287e-02, -2.0347e-02]],

         [[ 1.8556e-03,  2.6903e-02, -2.4898e-02],
          [-2.1005e-02,  1.2273e-03,  2.3034e-02],
          [-2.8660e-02, -2.9526e-02, -5.6926e-02]],

         ...,

         [[-2.8830e-02, -7.3185e-02,  4.2107e-05],
          [ 3.2000e-02,  2.5090e-03,  2.2110e-02],
          [ 6.1256e-02, -6.0997e-03,  4.6312e-02]],

         [[-5.9976e-03, -3.2705e-02, -5.5529e-02],
          [ 1.2566e-03, -2.6969e-02, -4.2973e-02],
          [-1.1064e-02, -3.4409e-02,  1.0611e-02]],

         [[-2.3736e-02, -4.1966e-02,  3.8230e-02],
          [-2.1711e-02, -4.5534e-02,  4.3316e-02],
          [-3.5113e-02,  9.1871e-03,  2.0869e-02]]],


        [[[ 5.6327e-02, -2.5827e-02, -6.9522e-03],
          [-2.8590e-02,  3.0928e-02, -4.7366e-02],
          [-1.8422e-03,  3.6153e-02,  1.9847e-02]],

         [[-5.3584e-03,  1.2357e-02, -4.0681e-02],
          [ 2.5396e-02,  1.7130e-02, -7.8069e-02],
          [-1.0196e-02, -4.4809e-02, -2.5592e-02]],

         [[-6.5101e-02,  4.6952e-02,  3.8365e-02],
          [ 1.7393e-02, -8.0805e-02, -9.5352e-02],
          [-3.7273e-02, -4.0701e-03,  3.5916e-03]],

         ...,

         [[-9.0177e-03,  2.6168e-02, -1.5478e-02],
          [-2.0790e-02,  1.4331e-02, -2.5502e-02],
          [-7.9130e-03, -2.3509e-02,  5.3610e-02]],

         [[ 3.3202e-02, -1.1036e-02, -3.0801e-02],
          [-3.7604e-02,  5.2265e-02,  1.6463e-03],
          [-7.2532e-03,  1.8238e-02, -1.7370e-03]],

         [[ 1.3436e-02, -1.5478e-02, -1.3179e-02],
          [ 1.6397e-02,  1.1562e-02,  6.4352e-03],
          [-3.0599e-02,  4.5481e-03, -5.1553e-03]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[ 0.0586]],

         [[ 0.0578]],

         [[-0.0353]],

         ...,

         [[-0.0238]],

         [[-0.0179]],

         [[-0.0219]]],


        [[[-0.0457]],

         [[-0.0085]],

         [[ 0.0060]],

         ...,

         [[ 0.0493]],

         [[ 0.0496]],

         [[-0.0387]]],


        [[[ 0.0085]],

         [[ 0.0359]],

         [[ 0.0025]],

         ...,

         [[ 0.0329]],

         [[ 0.0003]],

         [[ 0.0303]]],


        ...,


        [[[-0.0181]],

         [[-0.0076]],

         [[-0.0204]],

         ...,

         [[-0.0074]],

         [[ 0.0581]],

         [[ 0.0287]]],


        [[[ 0.0063]],

         [[ 0.0011]],

         [[-0.0470]],

         ...,

         [[-0.0262]],

         [[-0.0521]],

         [[-0.0603]]],


        [[[-0.0554]],

         [[ 0.0276]],

         [[-0.0508]],

         ...,

         [[ 0.0278]],

         [[ 0.0050]],

         [[ 0.0285]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([-8.2528e-03, -3.3431e-02,  1.3087e-02,  3.8889e-02, -1.3771e-02,
        -6.0803e-02,  1.5495e-04,  2.3327e-02, -5.9922e-03,  4.5668e-03,
         2.6585e-02, -2.2579e-02, -5.8778e-02,  4.5287e-02, -9.2757e-03,
        -1.8926e-03,  2.9254e-02,  4.2697e-03,  6.1007e-02, -4.4057e-02,
        -5.7205e-03,  4.0800e-02, -6.9073e-03,  2.7424e-02,  5.7527e-02,
         1.0912e-02,  2.2039e-02, -5.7284e-02,  3.7948e-02, -3.5663e-03,
        -6.8007e-03, -4.7090e-02,  3.2267e-02,  2.8089e-02,  1.3501e-02,
         4.4440e-02, -2.4342e-02, -5.6034e-02,  1.1481e-02, -4.1803e-03,
        -9.8461e-03, -3.3036e-02, -9.1958e-03,  3.2206e-02, -2.5025e-02,
         4.8924e-02,  2.9604e-02, -5.7170e-02,  3.3129e-02, -3.9536e-02,
         3.6181e-02,  2.8344e-02, -1.1788e-02,  5.2812e-02, -2.1750e-02,
         1.4862e-02, -3.7760e-02, -5.7881e-02, -3.0972e-02,  3.0442e-02,
        -4.0418e-02, -2.9758e-02,  2.8268e-02,  9.2023e-03,  1.7033e-02,
        -6.1163e-02, -5.7567e-02,  3.5605e-03, -3.4237e-02, -6.8999e-03,
         1.6531e-02,  6.0114e-02, -7.8228e-03,  4.0875e-02, -4.8132e-02,
        -3.3949e-02, -2.7644e-02, -4.2929e-02, -5.6086e-03,  2.1029e-02,
         3.5019e-02, -2.3673e-02, -3.7078e-02, -5.1492e-02,  4.9554e-02,
         2.0171e-02, -5.3104e-02, -5.6220e-02, -9.2860e-03,  4.7535e-02,
        -1.7578e-02, -5.2038e-02, -1.6009e-02, -3.2727e-02,  4.2164e-02,
         3.8151e-02, -1.2121e-02,  2.2216e-02,  2.5436e-02,  9.1614e-03,
         5.0567e-02, -2.0092e-02, -5.5134e-03, -1.1276e-03, -9.6592e-03,
         2.4208e-02, -2.7309e-02,  1.3140e-02, -5.0645e-02,  5.1881e-03,
         3.9563e-05,  5.7139e-02,  4.1042e-02, -3.1961e-02,  3.4557e-02,
         4.6205e-02, -1.4456e-02,  4.7745e-02, -2.3732e-02, -7.8326e-03,
        -1.5353e-02, -1.3668e-02,  1.4393e-02,  4.8208e-02, -7.7505e-03,
        -1.2969e-02,  2.5914e-02,  1.6372e-02, -3.1850e-02,  6.0968e-02,
        -1.1492e-02,  1.1639e-02,  2.0129e-02,  3.4837e-02, -2.0728e-02,
         5.6399e-02,  5.7924e-02,  2.5327e-02,  2.8886e-02, -5.3360e-02,
        -5.1577e-02, -4.9281e-02, -5.8427e-02, -5.8688e-03,  2.7667e-03,
        -1.5393e-02, -2.4572e-03,  4.9518e-02, -7.2376e-03,  4.2242e-02,
         4.3635e-02, -5.9838e-03,  1.4045e-02,  1.6562e-02,  5.5511e-02,
         4.0836e-02, -2.2616e-02,  1.6070e-02,  2.9834e-02,  2.2149e-02,
        -2.2721e-02,  3.1387e-02, -2.1927e-03, -3.6632e-02,  1.5053e-02,
        -2.0629e-02,  5.6329e-02, -1.5284e-02,  5.5083e-02,  1.2199e-02,
        -2.2635e-02, -6.1759e-02,  2.0628e-02, -5.2291e-02,  1.4490e-02,
        -5.1820e-02,  4.5008e-02,  2.1004e-02, -2.3794e-03, -2.2145e-02,
         1.8014e-02, -1.0943e-03, -3.8813e-02, -2.9251e-02, -2.5410e-02,
         5.2550e-02, -6.8595e-03,  2.7187e-02, -5.6032e-02, -5.8413e-02,
        -5.2469e-02, -5.6886e-03, -4.6868e-02,  9.2917e-03, -1.3861e-02,
        -5.8131e-03,  2.5187e-02, -9.2666e-03, -4.5027e-02, -1.5771e-02,
        -2.4276e-02,  5.5641e-02, -9.0540e-03, -2.7962e-02, -5.7673e-02,
         5.4920e-02, -5.1034e-03, -2.7177e-02, -5.0521e-02,  4.9610e-02,
         3.6877e-02,  3.5982e-03,  3.7361e-02,  5.6324e-02,  2.9140e-02,
        -2.6140e-02, -9.5153e-03,  1.0037e-02, -5.6372e-02, -5.4192e-02,
        -1.7494e-02, -5.0719e-02,  4.8837e-02, -5.0993e-02, -1.1425e-02,
         2.4631e-02, -3.6249e-03,  3.9496e-02, -5.8275e-02, -6.1148e-02,
         5.4397e-02,  2.1877e-02, -3.4278e-02,  3.5982e-02, -4.8907e-02,
         1.3389e-02,  3.7402e-02, -4.1714e-02,  1.2649e-02, -3.2940e-02,
         4.3962e-02, -4.0330e-03,  1.4139e-02,  2.3910e-02, -5.3387e-02,
         1.5385e-02,  8.8622e-03,  6.1660e-02,  2.0300e-03, -4.1345e-02,
         2.5113e-02,  6.0455e-02, -1.8713e-02,  5.9398e-02,  1.8410e-05,
         5.4673e-02, -4.7430e-02,  5.1848e-02,  1.7090e-02, -4.5928e-02,
        -4.1287e-02, -3.4367e-02,  4.8234e-02,  5.4462e-02, -4.0629e-02,
         6.2411e-02,  2.4080e-02, -2.9682e-02,  4.5952e-02,  4.3179e-02,
        -4.1447e-02,  3.3930e-02,  3.2195e-02,  4.3030e-02, -4.1500e-02,
        -3.0060e-02, -4.5055e-02, -1.0230e-02, -1.7153e-02, -1.1461e-02,
        -1.4572e-02, -1.8286e-04, -5.6149e-03, -9.8885e-03,  1.4795e-03,
        -5.5112e-02,  2.7949e-02, -1.7364e-02,  3.3003e-02, -1.4176e-02,
        -2.2161e-02,  5.1347e-02,  4.9596e-02, -2.1235e-02, -1.6691e-02,
        -1.3129e-02,  3.5334e-02, -9.7276e-03, -4.7214e-02, -2.4088e-02,
         1.6706e-02,  4.4377e-02, -2.8364e-02, -5.3518e-02, -4.9937e-02,
         6.0172e-03,  4.4949e-02,  5.5346e-02, -2.6770e-02, -6.8464e-03,
        -4.0306e-02, -5.5517e-02,  4.0376e-02,  2.3557e-02,  3.0035e-02,
        -3.7557e-02,  1.8152e-02,  9.2504e-03, -5.9462e-02,  4.6335e-02,
         4.9503e-02,  5.6702e-02,  3.4127e-02,  2.0230e-02, -2.1610e-02,
        -1.3772e-02,  1.7871e-02,  3.7963e-02,  2.4207e-02,  1.3656e-02,
        -1.7484e-02, -4.2187e-02, -4.3579e-02, -3.8511e-02,  1.4996e-02,
        -2.8715e-02, -5.2884e-02,  2.1166e-02,  2.5109e-02, -3.1798e-02,
         1.9017e-02,  4.2278e-02, -9.1804e-03,  1.5338e-02,  4.9941e-02,
         4.8176e-02,  4.1651e-02,  5.1566e-02, -4.6319e-02, -4.8740e-02,
        -5.6692e-02, -1.4286e-02,  4.5140e-03, -4.0286e-02, -1.3930e-02,
         2.2604e-02,  5.1559e-02,  1.6569e-02,  5.8872e-02, -3.1433e-02,
        -2.9888e-02,  1.5795e-03, -5.3131e-03,  7.2830e-03,  6.1891e-02,
        -3.3207e-02,  7.1131e-03, -7.8646e-03,  1.5942e-02, -2.8450e-02,
        -3.0523e-02, -1.8885e-02,  3.5496e-02, -4.9594e-02, -2.0982e-02,
         5.1785e-02,  4.9257e-02, -1.9182e-02,  4.4284e-02,  1.8533e-02,
        -5.7287e-02,  1.7956e-02,  5.4850e-02, -3.7777e-02, -5.2188e-02,
         4.4858e-02, -3.8644e-02,  2.9997e-02,  2.0902e-02, -4.6346e-03,
         5.0060e-02,  4.3317e-02, -5.8700e-02,  1.9311e-02,  4.3670e-03,
        -2.5207e-02, -1.6540e-02, -4.6217e-02,  1.1236e-02, -5.1329e-02,
        -5.9097e-02, -4.9496e-02, -4.1747e-02, -2.9158e-02,  3.6488e-02,
         7.0967e-03, -2.3492e-02,  1.3805e-02,  5.9565e-02,  3.4350e-02,
        -1.5458e-02, -3.8991e-02, -1.1570e-02, -3.5232e-02, -4.5072e-02,
         4.1573e-02, -1.7494e-02,  1.5776e-02, -5.2581e-02, -4.8524e-02,
         2.9090e-02, -3.0695e-02,  9.1478e-03, -6.7569e-05,  1.1351e-02,
        -6.1394e-02, -3.7032e-02,  1.6777e-03, -5.4856e-02,  2.0459e-02,
         4.7558e-02, -4.4486e-02, -4.0881e-02, -4.3415e-02, -2.2347e-03,
        -1.5618e-02,  4.7460e-02,  3.1684e-02,  1.1053e-03, -6.0612e-02,
         3.5550e-02, -5.1956e-02, -2.3921e-02, -1.3918e-02, -5.5609e-02,
        -1.6904e-02, -5.4219e-02, -1.3803e-02, -1.5750e-02,  4.2302e-02,
        -4.1370e-02, -3.3186e-02, -3.4412e-03,  1.8145e-02, -5.5908e-02,
         4.4798e-02, -4.8923e-03, -4.9537e-02, -1.6542e-02, -5.9653e-02,
        -5.2783e-02,  1.5140e-02, -6.5096e-03, -2.3564e-02, -2.4818e-02,
         1.9936e-02, -5.0700e-02, -5.9522e-02, -4.2237e-02, -2.5344e-02,
         5.0634e-02,  5.0291e-05,  2.7094e-02, -4.3145e-02, -1.2088e-02,
         2.7578e-02,  2.4689e-02, -4.8211e-02,  5.3578e-02, -2.0374e-02,
         2.0561e-02,  5.6016e-02,  1.8188e-02, -5.9274e-02,  4.4693e-02,
        -4.4655e-02, -5.9348e-02, -1.7788e-02,  2.8224e-03,  2.0367e-02,
        -3.1434e-02, -2.3893e-02, -5.1663e-02, -1.3404e-02,  1.8835e-02,
         7.8294e-03,  5.1394e-05,  4.5199e-02, -4.5173e-02,  1.4247e-02,
         5.9956e-02,  3.7662e-02,  5.8643e-02,  3.9005e-02, -4.0722e-02,
         3.3694e-02, -8.1433e-03,  6.0425e-03,  2.8562e-02, -3.4696e-02,
         3.2857e-02, -2.3603e-02,  6.0172e-03, -4.4979e-03,  2.1815e-02,
         9.7928e-03,  5.6783e-02,  3.9809e-02, -4.9501e-02, -2.1077e-02,
        -4.4890e-02,  1.4214e-02, -5.5316e-02, -3.0326e-02,  2.7977e-02,
        -5.0712e-02, -6.4885e-03, -4.1643e-02, -2.7448e-04, -1.1309e-02,
        -5.1975e-02,  4.6146e-02,  2.4452e-02,  5.5155e-02,  1.2379e-02,
        -6.0123e-02,  3.7100e-02,  1.6205e-02,  1.8739e-02,  2.1402e-02,
         8.6319e-03,  1.7868e-02, -2.1991e-03,  5.5626e-02, -7.4199e-03,
         4.7189e-02, -2.4498e-02, -4.1115e-02,  4.6048e-02, -4.4976e-02,
        -1.1975e-02,  2.7768e-02,  3.5303e-02,  2.0739e-02,  4.9159e-02,
        -3.4808e-02,  4.2552e-02, -4.7764e-02,  4.3335e-02, -3.3652e-02,
         1.4656e-02, -5.0692e-02,  5.8005e-02, -4.3475e-02,  2.7329e-02,
         8.5130e-03,  7.2485e-03,  2.3890e-02,  2.8651e-02,  2.8672e-04,
        -4.5804e-02, -5.1744e-02, -5.4500e-02,  4.3537e-02,  6.0999e-02,
        -3.8830e-02], device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[ 0.0091, -0.0222, -0.0005,  ...,  0.0154,  0.0329, -0.0266],
          [ 0.0347, -0.0287,  0.0143,  ...,  0.0203, -0.0302,  0.0189],
          [ 0.0233,  0.0247, -0.0240,  ...,  0.0508, -0.0287,  0.0043],
          ...,
          [ 0.0056,  0.0104, -0.0078,  ...,  0.0323, -0.0127,  0.0011],
          [ 0.0035, -0.0029,  0.0173,  ...,  0.0071,  0.0228,  0.0052],
          [ 0.0009, -0.0336, -0.0377,  ...,  0.0116, -0.0316,  0.0309]],

         [[-0.0064,  0.0095,  0.0050,  ...,  0.0115, -0.0282, -0.0325],
          [ 0.0215,  0.0140,  0.0514,  ...,  0.0157,  0.0198,  0.0037],
          [ 0.0340, -0.0213, -0.0205,  ..., -0.0207,  0.0083, -0.0156],
          ...,
          [ 0.0199, -0.0154, -0.1048,  ..., -0.0195, -0.0228, -0.0537],
          [ 0.0219, -0.0249, -0.0022,  ...,  0.0304, -0.0055,  0.0124],
          [ 0.0341, -0.0172,  0.0231,  ...,  0.0362,  0.0026,  0.0483]],

         [[ 0.0571,  0.0150,  0.0172,  ..., -0.0192,  0.0240,  0.0069],
          [ 0.0171,  0.0072,  0.0049,  ..., -0.0035, -0.0065, -0.0275],
          [ 0.0060, -0.0419, -0.0442,  ..., -0.0098,  0.0175,  0.0442],
          ...,
          [ 0.0001,  0.0188,  0.0228,  ..., -0.0014,  0.0020,  0.0099],
          [ 0.0354, -0.0076, -0.0099,  ..., -0.0104,  0.0028,  0.0044],
          [ 0.0030, -0.0111,  0.0187,  ...,  0.0273, -0.0112,  0.0099]]],


        [[[ 0.0239,  0.0309, -0.0288,  ..., -0.0377, -0.0124,  0.0384],
          [ 0.0017, -0.0082, -0.0360,  ..., -0.0059, -0.0014, -0.0190],
          [ 0.0298,  0.0350,  0.0416,  ..., -0.0060, -0.0056,  0.0184],
          ...,
          [ 0.0101, -0.0198,  0.0203,  ..., -0.0169, -0.0186,  0.0361],
          [-0.0010,  0.0652, -0.0112,  ...,  0.0457,  0.0460, -0.0515],
          [-0.0094,  0.0156, -0.0213,  ..., -0.0163,  0.0038, -0.0057]],

         [[-0.0321, -0.0123,  0.0023,  ..., -0.0464,  0.0192,  0.0041],
          [ 0.0415,  0.0186,  0.0155,  ..., -0.0408, -0.0538,  0.0469],
          [-0.0558,  0.0121,  0.0276,  ...,  0.0187,  0.0164,  0.0278],
          ...,
          [ 0.0294, -0.0402,  0.0141,  ...,  0.0106,  0.0076, -0.0091],
          [ 0.0119, -0.0390,  0.0397,  ...,  0.0088,  0.0178, -0.0286],
          [ 0.0271,  0.0176,  0.0559,  ...,  0.0357, -0.0299,  0.0152]],

         [[-0.0064, -0.0220,  0.0016,  ..., -0.0170, -0.0087,  0.0105],
          [-0.0061, -0.0268, -0.0073,  ..., -0.0124,  0.0378,  0.0142],
          [ 0.0574, -0.0236,  0.0175,  ...,  0.0149, -0.0266,  0.0461],
          ...,
          [ 0.0050, -0.0246, -0.0044,  ..., -0.0259, -0.0093,  0.0423],
          [-0.0136,  0.0465, -0.0186,  ..., -0.0162,  0.0334, -0.0058],
          [-0.0055,  0.0315,  0.0547,  ...,  0.0360, -0.0343,  0.0045]]],


        [[[-0.0249, -0.0011, -0.0141,  ...,  0.0072, -0.0278,  0.0295],
          [-0.0329, -0.0007, -0.0422,  ...,  0.0290,  0.0223,  0.0188],
          [-0.0365, -0.0201,  0.0033,  ..., -0.0310, -0.0060, -0.0062],
          ...,
          [ 0.0073, -0.0477,  0.0418,  ...,  0.0240,  0.0177,  0.0122],
          [ 0.0373, -0.0368,  0.0096,  ...,  0.0311, -0.0143,  0.0112],
          [ 0.0253, -0.0133,  0.0246,  ...,  0.0233,  0.0185,  0.0146]],

         [[ 0.0203, -0.0404, -0.0313,  ...,  0.0190, -0.0139, -0.0318],
          [ 0.0238, -0.0039,  0.0212,  ...,  0.0272,  0.0008, -0.0363],
          [ 0.0069, -0.0180, -0.0075,  ...,  0.0042, -0.0080, -0.0188],
          ...,
          [ 0.0549,  0.0096, -0.0516,  ...,  0.0057,  0.0042, -0.0314],
          [ 0.0170, -0.0175, -0.0066,  ...,  0.0353, -0.0467, -0.0155],
          [ 0.0570,  0.0305,  0.0083,  ..., -0.0366, -0.0070, -0.0183]],

         [[ 0.0208, -0.0200,  0.0221,  ..., -0.0134, -0.0007,  0.0067],
          [ 0.0087, -0.0211,  0.0220,  ...,  0.0075,  0.0108, -0.0161],
          [ 0.0131,  0.0325, -0.0050,  ..., -0.0443,  0.0007, -0.0290],
          ...,
          [ 0.0325, -0.0133, -0.0148,  ...,  0.0267, -0.0157, -0.0239],
          [-0.0203, -0.0389,  0.0134,  ...,  0.0222,  0.0117, -0.0035],
          [-0.0072, -0.0093, -0.0078,  ...,  0.0656, -0.0164, -0.0184]]],


        ...,


        [[[-0.0143, -0.0059,  0.0190,  ..., -0.0195,  0.0299, -0.0011],
          [ 0.0170, -0.0016,  0.0175,  ...,  0.0220, -0.0070, -0.0268],
          [-0.0281,  0.0195,  0.0172,  ...,  0.0056, -0.0164,  0.0072],
          ...,
          [-0.0145,  0.0008, -0.0229,  ...,  0.0103, -0.0028,  0.0170],
          [-0.0017, -0.0029, -0.0443,  ..., -0.0018, -0.0469, -0.0455],
          [-0.0012, -0.0361, -0.0277,  ..., -0.0106,  0.0063, -0.0092]],

         [[ 0.0016, -0.0222, -0.0169,  ...,  0.0010, -0.0039,  0.0153],
          [ 0.0344, -0.0471, -0.0104,  ...,  0.0241,  0.0278,  0.0131],
          [ 0.0083,  0.0215,  0.0031,  ...,  0.0307, -0.0241,  0.0072],
          ...,
          [-0.0042,  0.0017, -0.0132,  ...,  0.0155, -0.0178,  0.0001],
          [-0.0028,  0.0453,  0.0013,  ...,  0.0257, -0.0279,  0.0065],
          [-0.0242, -0.0115,  0.0017,  ...,  0.0036,  0.0168, -0.0324]],

         [[-0.0311,  0.0025, -0.0311,  ..., -0.0081, -0.0182,  0.0203],
          [ 0.0286,  0.0315,  0.0091,  ..., -0.0004,  0.0144, -0.0097],
          [-0.0134, -0.0076, -0.0204,  ...,  0.0245,  0.0435,  0.0067],
          ...,
          [ 0.0379,  0.0033, -0.0215,  ...,  0.0431, -0.0221, -0.0295],
          [-0.0084, -0.0180, -0.0266,  ...,  0.0035,  0.0075, -0.0011],
          [ 0.0241, -0.0067,  0.0222,  ..., -0.0198,  0.0422, -0.0149]]],


        [[[ 0.0164, -0.0067, -0.0301,  ...,  0.0454, -0.0362, -0.0145],
          [ 0.0393,  0.0094, -0.0028,  ...,  0.0054,  0.0163,  0.0236],
          [ 0.0449, -0.0314, -0.0010,  ...,  0.0190, -0.0256,  0.0134],
          ...,
          [ 0.0006,  0.0020,  0.0119,  ..., -0.0162, -0.0319,  0.0318],
          [ 0.0338, -0.0277,  0.0389,  ...,  0.0432,  0.0186,  0.0229],
          [ 0.0284,  0.0083, -0.0220,  ...,  0.0376, -0.0063, -0.0076]],

         [[-0.0131, -0.0265,  0.0143,  ...,  0.0304, -0.0450,  0.0133],
          [-0.0106, -0.0199,  0.0418,  ..., -0.0057,  0.0079, -0.0627],
          [-0.0076,  0.0382, -0.0030,  ...,  0.0092, -0.0084, -0.0116],
          ...,
          [ 0.0099, -0.0185,  0.0077,  ..., -0.0015, -0.0020, -0.0151],
          [ 0.0099, -0.0071,  0.0023,  ..., -0.0175,  0.0545,  0.0112],
          [-0.0192, -0.0034,  0.0376,  ..., -0.0419, -0.0192, -0.0219]],

         [[ 0.0179,  0.0045,  0.0399,  ..., -0.0246,  0.0198,  0.0457],
          [-0.0084, -0.0414,  0.0168,  ...,  0.0110,  0.0464,  0.0101],
          [-0.0166, -0.0358, -0.0050,  ...,  0.0212, -0.0105, -0.0233],
          ...,
          [-0.0505, -0.0024,  0.0681,  ...,  0.0012,  0.0156,  0.0099],
          [-0.0526, -0.0842,  0.0060,  ...,  0.0156,  0.0195,  0.0039],
          [ 0.0034,  0.0191,  0.0708,  ...,  0.0371, -0.0017, -0.0474]]],


        [[[-0.0013, -0.0185,  0.0110,  ..., -0.0107, -0.0086,  0.0023],
          [-0.0150,  0.0342, -0.0135,  ..., -0.0050, -0.0343, -0.0194],
          [-0.0064,  0.0041,  0.0090,  ..., -0.0194,  0.0397, -0.0066],
          ...,
          [-0.0012,  0.0009,  0.0071,  ...,  0.0049, -0.0166, -0.0202],
          [-0.0125, -0.0354, -0.0015,  ..., -0.0532,  0.0050,  0.0238],
          [-0.0272,  0.0172, -0.0019,  ...,  0.0419, -0.0401, -0.0069]],

         [[-0.0152, -0.0060, -0.0049,  ..., -0.0185,  0.0062, -0.0384],
          [ 0.0113,  0.0225,  0.0215,  ...,  0.0008,  0.0055,  0.0046],
          [ 0.0008,  0.0076, -0.0019,  ..., -0.0392,  0.0373, -0.0260],
          ...,
          [ 0.0021,  0.0180,  0.0068,  ...,  0.0312, -0.0002, -0.0192],
          [ 0.0241, -0.0173, -0.0090,  ..., -0.0109, -0.0035, -0.0321],
          [ 0.0266, -0.0159,  0.0522,  ...,  0.0586,  0.0589, -0.0086]],

         [[-0.0168,  0.0033,  0.0104,  ..., -0.0172,  0.0049, -0.0136],
          [ 0.0113, -0.0010, -0.0445,  ..., -0.0287, -0.0285,  0.0291],
          [-0.0239,  0.0250,  0.0482,  ...,  0.0194,  0.0201, -0.0194],
          ...,
          [-0.0285,  0.0116, -0.0458,  ...,  0.0292, -0.0015, -0.0209],
          [ 0.0252, -0.0370, -0.0499,  ...,  0.0086, -0.0012,  0.0063],
          [ 0.0026,  0.0003, -0.0237,  ...,  0.0334, -0.0390,  0.0114]]]],
       device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-7.8160e-02, -1.7602e-03, -2.9822e-02],
          [-6.6585e-03, -2.0471e-02, -4.2669e-02],
          [ 2.7528e-04,  2.7496e-02,  5.4615e-02]],

         [[-2.4734e-02, -7.6935e-02,  7.8836e-02],
          [-5.2016e-03,  3.3362e-02,  3.6715e-03],
          [ 2.1190e-02, -3.5234e-02,  3.6536e-02]],

         [[-6.7382e-02,  1.8222e-02,  5.1659e-02],
          [-8.5796e-02, -1.0505e-02, -2.1351e-02],
          [-6.4822e-02,  1.8073e-03, -8.1940e-02]],

         ...,

         [[ 7.8104e-02, -7.6248e-02,  9.0468e-03],
          [-3.7567e-02,  7.6649e-02,  4.1835e-03],
          [-3.6258e-04,  7.2330e-02,  2.8547e-02]],

         [[ 7.0137e-02, -4.2480e-02,  1.1168e-01],
          [-5.4763e-02, -1.1444e-02,  8.5053e-03],
          [-1.4318e-01,  4.3513e-02,  2.8296e-02]],

         [[-8.1047e-02, -1.7362e-02,  6.1825e-02],
          [ 2.0143e-03, -3.6383e-02,  8.6662e-02],
          [ 7.8868e-02,  1.1071e-02,  3.5777e-02]]],


        [[[ 1.4010e-02, -4.9764e-02,  6.6391e-02],
          [-7.4180e-02, -6.8460e-03, -5.5223e-03],
          [ 4.1366e-02, -6.1923e-02,  1.1119e-01]],

         [[ 1.0074e-01,  6.2317e-02,  3.1824e-02],
          [-1.2512e-01, -2.0716e-02, -5.5770e-02],
          [ 2.1323e-02, -3.0028e-02,  5.3106e-02]],

         [[ 3.7472e-02, -9.7628e-02,  2.2655e-02],
          [-6.6495e-02,  2.8703e-02, -4.0946e-02],
          [ 4.9459e-02, -1.4511e-02, -5.2634e-02]],

         ...,

         [[-5.3246e-02,  3.2051e-02, -1.7226e-04],
          [-1.1424e-01,  3.3689e-02,  2.0716e-02],
          [ 3.8944e-02,  3.8356e-02,  1.6909e-02]],

         [[ 3.4594e-02,  1.2200e-02, -4.0455e-02],
          [-6.0790e-02, -6.7796e-02,  4.6727e-02],
          [ 5.2246e-02, -7.6914e-02,  8.2083e-02]],

         [[-6.2416e-02,  2.6399e-02, -5.9574e-02],
          [-7.4745e-02,  2.2837e-02, -1.1200e-02],
          [ 2.6955e-02, -9.7470e-02,  6.6992e-02]]],


        [[[ 4.2418e-02,  2.3651e-02, -1.7973e-01],
          [-3.8946e-02,  1.4487e-01,  9.1806e-02],
          [-1.2147e-01,  3.5222e-02,  7.0385e-02]],

         [[ 3.2830e-02,  9.0882e-02, -3.5279e-02],
          [ 1.0097e-01,  2.1867e-02,  1.3744e-01],
          [ 2.9411e-02, -4.9056e-02,  7.3754e-02]],

         [[-3.1456e-02, -7.0171e-03, -5.6923e-02],
          [ 2.0793e-02, -1.5323e-03,  6.8381e-03],
          [-6.8636e-03,  1.2162e-02, -1.6665e-02]],

         ...,

         [[ 3.8975e-02, -5.9112e-02, -9.5661e-02],
          [-1.0270e-01, -5.9349e-02, -4.6116e-03],
          [-7.7188e-02, -8.8404e-02, -1.7454e-03]],

         [[-4.1068e-02,  1.8699e-02, -1.2140e-02],
          [ 7.5844e-03, -6.8481e-02, -5.2513e-02],
          [ 2.0484e-02,  1.2291e-01,  1.2685e-03]],

         [[-1.0825e-02, -2.0351e-02,  1.0161e-01],
          [-6.6246e-02,  4.3338e-02, -5.2444e-02],
          [ 6.3875e-02, -1.4992e-03,  1.9779e-01]]],


        ...,


        [[[-3.6059e-02,  8.2283e-04, -5.6894e-02],
          [-2.6017e-02, -1.2958e-02, -5.4522e-03],
          [ 7.1826e-02,  1.0507e-01,  8.5468e-02]],

         [[-2.5832e-02, -3.0199e-02, -5.1079e-02],
          [-1.2059e-02,  3.9937e-02,  6.8531e-02],
          [ 4.6335e-02,  7.8643e-02,  4.7216e-02]],

         [[-8.0046e-02,  8.6924e-03,  7.7293e-02],
          [ 3.4591e-02,  1.8623e-02,  4.3446e-03],
          [-1.2033e-01, -3.2959e-02,  1.8009e-02]],

         ...,

         [[-8.0972e-02,  3.2421e-02, -3.7114e-02],
          [-1.2417e-01, -8.3243e-03,  4.1675e-02],
          [-2.0015e-02, -3.2749e-02, -5.8689e-03]],

         [[-2.6619e-02,  1.1871e-01, -2.9914e-02],
          [-3.6356e-02, -3.1646e-02,  1.9883e-02],
          [-1.1944e-02, -3.2877e-03,  5.1048e-02]],

         [[ 1.0905e-01, -6.6755e-02, -8.2139e-03],
          [ 9.1959e-02,  3.4764e-02,  9.8175e-04],
          [-4.6272e-02, -5.7690e-02,  4.5865e-02]]],


        [[[-9.3642e-03,  5.8865e-02, -2.9095e-02],
          [-2.4409e-02, -6.0389e-02, -3.5301e-03],
          [-3.6070e-02,  5.8323e-03,  3.9864e-02]],

         [[-3.8591e-02, -9.5480e-03, -3.8469e-02],
          [-4.4207e-02,  4.3176e-02, -6.4322e-02],
          [ 2.6677e-02, -1.2256e-02, -7.0933e-03]],

         [[ 9.3147e-02, -7.5435e-04,  4.8686e-02],
          [ 1.5417e-02, -3.3412e-02, -3.7132e-02],
          [ 5.3646e-02,  6.1510e-02, -8.3266e-02]],

         ...,

         [[ 4.7365e-02,  1.0352e-01,  1.4927e-02],
          [-5.5116e-02,  2.2701e-02, -3.6826e-02],
          [ 3.6773e-02, -2.6678e-02,  1.4813e-02]],

         [[-1.1942e-01, -3.0487e-02, -1.1677e-02],
          [-7.0959e-02, -3.7021e-02, -5.6575e-02],
          [ 7.6144e-02, -1.5481e-03,  5.4059e-02]],

         [[-2.4633e-02, -5.1312e-02,  1.6620e-03],
          [ 2.6443e-02, -6.6747e-02, -7.3164e-02],
          [-8.1705e-02,  6.8042e-02,  2.4589e-02]]],


        [[[-6.1947e-02,  6.6991e-02,  6.8914e-02],
          [-7.4676e-02, -6.6089e-02, -2.4534e-02],
          [-6.2655e-02, -3.1324e-02,  4.6567e-02]],

         [[ 4.4266e-02, -4.9233e-02, -2.3972e-02],
          [ 7.7054e-03,  8.0817e-02,  1.1045e-01],
          [ 9.1342e-02, -7.2249e-02,  4.5594e-02]],

         [[ 5.1800e-02, -9.1757e-02,  9.3026e-02],
          [ 2.1540e-02, -1.0575e-01, -4.0438e-02],
          [ 7.3769e-02,  4.7657e-02, -2.2271e-02]],

         ...,

         [[ 8.0179e-02,  4.3011e-02,  6.0330e-02],
          [-6.2389e-02,  8.5898e-02,  1.6221e-01],
          [-3.3850e-02,  1.5013e-02,  1.1333e-02]],

         [[-8.2138e-03,  1.2475e-01, -4.7091e-02],
          [-1.0798e-01, -3.9629e-02, -5.3155e-02],
          [ 4.7139e-03,  7.5857e-02,  1.4036e-02]],

         [[-5.0874e-03,  4.2038e-02, -9.6302e-02],
          [-7.1072e-02, -8.5952e-02,  3.1503e-03],
          [-4.5354e-02,  3.6805e-02,  2.6798e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-1.2239e-01, -5.3041e-02, -5.5544e-02],
          [ 2.0672e-02, -5.1095e-02, -5.4433e-03],
          [-2.3174e-02,  6.2173e-03,  6.1553e-03]],

         [[-4.9383e-03, -6.9108e-02, -6.2511e-02],
          [-2.7657e-02, -1.2636e-01,  2.1536e-02],
          [ 2.0636e-02,  1.0304e-02, -5.1434e-02]],

         [[ 3.5777e-02,  9.2512e-03,  3.1396e-03],
          [ 1.4977e-02,  1.4976e-02, -7.6278e-02],
          [ 2.7745e-02, -1.1082e-01, -8.8432e-02]],

         ...,

         [[ 8.0543e-03, -5.2486e-02, -4.8891e-02],
          [-1.6053e-02, -1.5607e-02,  5.7764e-02],
          [ 1.2146e-01,  8.7732e-03,  3.4364e-02]],

         [[ 3.4355e-02,  5.9469e-02,  1.5248e-02],
          [-3.3246e-02, -4.8241e-02,  3.8602e-03],
          [-8.4364e-02, -5.3589e-02,  6.0109e-02]],

         [[ 4.0670e-02,  4.1234e-02,  7.3504e-02],
          [ 2.6256e-03,  2.3340e-02,  4.4652e-02],
          [ 9.6904e-02,  8.2574e-02, -6.9673e-02]]],


        [[[-1.4356e-03,  8.0344e-02, -8.7586e-02],
          [ 2.8691e-02, -2.6695e-02, -1.5885e-02],
          [ 5.4480e-03, -3.2536e-02, -5.2855e-04]],

         [[ 5.1164e-02,  2.9356e-02,  3.0382e-02],
          [-3.9820e-02, -5.9756e-02,  3.5090e-02],
          [-6.7094e-04, -2.0889e-02, -3.3606e-02]],

         [[-9.1505e-02, -4.1831e-02,  4.6069e-02],
          [ 1.0213e-01, -9.7627e-03, -8.9417e-03],
          [ 1.4439e-02, -2.6064e-02, -1.9210e-02]],

         ...,

         [[ 3.5081e-02,  1.1696e-01, -1.4598e-03],
          [ 3.9377e-02, -5.2385e-02, -1.0990e-02],
          [ 2.5685e-02, -2.1716e-02, -4.1321e-02]],

         [[-1.1027e-02,  1.4072e-02,  4.8447e-02],
          [ 6.7328e-02, -3.7499e-02, -7.5184e-02],
          [ 3.0001e-02, -2.4534e-02, -6.6519e-02]],

         [[ 1.2306e-01,  3.0263e-02, -2.3298e-02],
          [-2.8064e-02, -1.0927e-01, -6.7043e-02],
          [ 5.6134e-02,  1.0644e-02,  1.0475e-01]]],


        [[[-3.9313e-03, -1.9381e-02, -8.8520e-02],
          [-8.9455e-02,  5.9240e-02,  3.2690e-02],
          [ 2.5702e-02,  5.3222e-02, -1.8060e-02]],

         [[-8.9932e-02, -5.8678e-03, -5.4216e-02],
          [ 8.8060e-02,  2.3728e-03, -2.5589e-02],
          [ 1.5662e-01, -7.7026e-02,  4.0351e-02]],

         [[-9.6561e-03,  5.4828e-02,  5.6905e-03],
          [-3.5386e-02, -6.7226e-02, -1.5089e-01],
          [-2.3765e-02, -6.6402e-02, -8.7427e-02]],

         ...,

         [[ 4.3036e-02, -1.5831e-02,  7.1604e-02],
          [ 6.9639e-02,  1.1198e-03,  3.5337e-02],
          [ 9.2248e-02,  5.0333e-03,  1.6702e-02]],

         [[ 3.4337e-02,  6.8226e-02,  2.6366e-03],
          [-5.2726e-02, -1.1341e-01, -3.7844e-02],
          [-3.0877e-02, -1.7674e-02, -2.1916e-02]],

         [[ 8.8816e-02,  5.0746e-02, -6.4202e-02],
          [-1.5154e-02, -5.7626e-02,  5.1549e-02],
          [-7.9753e-02,  1.2879e-02,  4.8604e-02]]],


        ...,


        [[[-3.0211e-03,  6.8188e-02, -6.6106e-02],
          [ 5.8759e-02,  1.1618e-01, -8.2435e-02],
          [-1.4813e-01, -3.3571e-05, -7.6824e-02]],

         [[-5.8506e-02, -2.2386e-02, -5.0258e-02],
          [ 5.9999e-02,  4.3473e-02, -6.1057e-02],
          [-9.2454e-03,  6.1574e-02,  4.0501e-02]],

         [[ 1.5792e-02, -2.4699e-02, -4.0113e-02],
          [ 3.4187e-03,  1.3425e-02, -7.7100e-02],
          [ 3.9477e-02, -1.9998e-02,  2.8542e-02]],

         ...,

         [[ 8.3138e-03,  5.3431e-03,  2.5123e-02],
          [-3.5466e-03,  6.0233e-03, -5.8159e-02],
          [-4.2165e-02, -5.0541e-02, -9.3322e-02]],

         [[ 1.0012e-01, -3.0274e-03,  2.5151e-02],
          [ 1.0948e-01,  8.5472e-02, -7.2945e-02],
          [ 1.1468e-02, -1.9180e-02,  8.4778e-04]],

         [[ 5.2355e-03, -5.1544e-02, -1.7807e-02],
          [-1.3661e-01, -1.3007e-03,  3.4411e-02],
          [ 9.1893e-02, -3.2964e-02, -1.0259e-01]]],


        [[[ 5.8133e-02,  2.4175e-02, -6.9619e-02],
          [-2.4169e-02,  2.5749e-02,  7.1681e-02],
          [-8.4167e-02, -5.6854e-02,  4.9522e-02]],

         [[ 5.2246e-02,  7.5240e-02,  3.6170e-02],
          [-5.5184e-03, -5.3487e-02,  2.8975e-02],
          [ 5.5662e-02,  1.5352e-03,  8.0447e-03]],

         [[-6.2146e-02,  3.3073e-02, -2.7398e-02],
          [-1.3041e-01, -4.6629e-02,  8.4012e-02],
          [-8.3784e-02,  4.5627e-02,  1.0807e-01]],

         ...,

         [[ 1.3264e-01,  6.3976e-03,  7.8440e-02],
          [-9.5075e-02,  1.7676e-02, -4.5799e-02],
          [-3.7982e-02,  7.7251e-02,  1.1292e-01]],

         [[-2.2643e-02,  6.2866e-02,  8.5812e-02],
          [ 9.4508e-02, -6.2090e-02,  5.8300e-02],
          [ 2.1971e-02, -1.8209e-02,  4.0673e-02]],

         [[-7.8953e-02,  4.9562e-02, -2.8869e-02],
          [ 1.0557e-01, -1.1553e-01, -1.1910e-02],
          [ 2.3080e-02, -9.1477e-02, -3.9839e-02]]],


        [[[ 2.0933e-02,  3.4258e-03, -7.7183e-02],
          [ 1.9729e-02, -5.8552e-02,  7.6513e-02],
          [-8.0967e-02, -6.3608e-02, -2.1229e-02]],

         [[ 2.2815e-02, -1.9931e-02,  9.6295e-02],
          [-7.3629e-02,  6.5103e-02, -3.4388e-02],
          [-1.1604e-01,  1.0882e-01, -2.5075e-02]],

         [[-2.7720e-02, -3.4939e-02,  7.7983e-02],
          [-1.3753e-01,  2.6691e-02, -3.0269e-02],
          [ 3.3634e-02,  5.6045e-02, -6.7443e-03]],

         ...,

         [[ 1.2733e-02,  1.8061e-02, -1.4734e-02],
          [ 4.0630e-02, -2.1050e-02,  3.3690e-02],
          [ 2.0022e-02, -1.5456e-01,  2.4131e-02]],

         [[ 3.2887e-02,  2.2254e-02,  1.7722e-02],
          [ 6.2941e-02,  5.2283e-02,  6.5953e-02],
          [ 7.3518e-02, -6.4950e-02, -9.2387e-02]],

         [[ 3.8540e-02,  2.7501e-02,  9.3333e-02],
          [ 5.3513e-02,  3.1709e-02, -9.5593e-02],
          [ 1.3241e-03,  2.7436e-02, -1.2936e-01]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-0.0372,  0.0264,  0.0362],
          [-0.0076, -0.0239,  0.0380],
          [-0.0594, -0.0749, -0.0982]],

         [[ 0.0005,  0.0154, -0.0776],
          [-0.1077,  0.0170,  0.1296],
          [-0.0074, -0.0152, -0.0360]],

         [[ 0.0651,  0.0350,  0.0250],
          [ 0.0178, -0.0158,  0.0271],
          [ 0.0425,  0.0105, -0.0464]],

         ...,

         [[ 0.0545, -0.0116, -0.0546],
          [ 0.0604, -0.0372, -0.0794],
          [-0.0287,  0.0370, -0.1223]],

         [[ 0.0071, -0.0792, -0.1065],
          [-0.0687,  0.0083,  0.0029],
          [-0.0384,  0.0798,  0.0674]],

         [[ 0.0521,  0.0310,  0.0485],
          [ 0.1178,  0.0321,  0.0030],
          [-0.0286, -0.0144,  0.0276]]],


        [[[-0.0110,  0.0791,  0.0294],
          [ 0.0125, -0.0056,  0.0468],
          [-0.0972,  0.0343,  0.0605]],

         [[ 0.0258,  0.0552, -0.0461],
          [-0.0476, -0.0270, -0.0337],
          [-0.1181,  0.0554,  0.0939]],

         [[ 0.0740,  0.0707,  0.0691],
          [-0.0289,  0.0040, -0.0178],
          [-0.0323, -0.0828,  0.0136]],

         ...,

         [[-0.0331, -0.0464,  0.0743],
          [ 0.0344, -0.0294,  0.0184],
          [-0.0511,  0.0293,  0.0351]],

         [[-0.0063,  0.0586, -0.0104],
          [ 0.1257, -0.0482,  0.0165],
          [ 0.0225,  0.0337,  0.0055]],

         [[ 0.0430, -0.0270,  0.0512],
          [ 0.0046,  0.0881, -0.0566],
          [-0.0575,  0.0037,  0.0797]]],


        [[[ 0.1463,  0.0313,  0.0503],
          [ 0.0029, -0.0980,  0.0999],
          [ 0.0303, -0.0085, -0.0505]],

         [[ 0.0767, -0.0352,  0.0658],
          [-0.0473,  0.0417, -0.0051],
          [-0.0305,  0.0978, -0.0406]],

         [[-0.0043, -0.0124, -0.0542],
          [-0.0457, -0.0190, -0.0436],
          [-0.0962, -0.0038, -0.1285]],

         ...,

         [[-0.0044,  0.0890,  0.0754],
          [ 0.0212, -0.0216, -0.0415],
          [-0.0699, -0.0180,  0.0554]],

         [[-0.0714,  0.0410, -0.0623],
          [ 0.0055,  0.0606, -0.0916],
          [ 0.0080, -0.0109,  0.0219]],

         [[ 0.0461, -0.0192, -0.0575],
          [-0.0320, -0.0313,  0.0303],
          [ 0.0168,  0.0184, -0.0360]]],


        ...,


        [[[ 0.0097,  0.0478, -0.0855],
          [-0.0786, -0.0210, -0.1059],
          [ 0.0161, -0.1140,  0.0673]],

         [[-0.0079, -0.0116, -0.0198],
          [-0.0641,  0.0412,  0.0302],
          [ 0.0692,  0.0076,  0.0835]],

         [[-0.0386, -0.1213,  0.0294],
          [-0.0342,  0.0546,  0.0525],
          [-0.0323,  0.0306,  0.0456]],

         ...,

         [[ 0.0039,  0.0482, -0.1114],
          [ 0.0642, -0.0041,  0.0441],
          [-0.0785, -0.0409, -0.0086]],

         [[-0.0304,  0.0478,  0.0359],
          [-0.0406, -0.0082, -0.0351],
          [ 0.0886,  0.1157,  0.0407]],

         [[ 0.0619, -0.0162, -0.0862],
          [-0.0723, -0.0469, -0.0439],
          [-0.0168, -0.0750,  0.0360]]],


        [[[ 0.0689, -0.0292, -0.0959],
          [ 0.0817,  0.0799, -0.0610],
          [-0.0381, -0.0500, -0.0229]],

         [[-0.0185,  0.0194, -0.0509],
          [-0.0647, -0.0217,  0.0534],
          [-0.0347, -0.1053, -0.0424]],

         [[-0.1060,  0.0494, -0.0383],
          [ 0.1055, -0.0101,  0.0147],
          [-0.0127, -0.0317,  0.0489]],

         ...,

         [[-0.0732,  0.0662,  0.1056],
          [ 0.0832, -0.0064, -0.0532],
          [ 0.0654,  0.0375, -0.0054]],

         [[ 0.0402, -0.0063,  0.1572],
          [ 0.0003, -0.0248,  0.0899],
          [-0.0131, -0.0095,  0.0750]],

         [[ 0.0301, -0.0163,  0.0120],
          [-0.0081, -0.1063,  0.0885],
          [ 0.0189,  0.1309, -0.0694]]],


        [[[-0.0372,  0.0344, -0.1140],
          [ 0.0866,  0.0193, -0.0542],
          [ 0.0765, -0.0350,  0.0424]],

         [[ 0.0419, -0.0126,  0.0710],
          [ 0.0559, -0.0240,  0.0193],
          [-0.0093,  0.0206,  0.0588]],

         [[ 0.0985, -0.0039,  0.0245],
          [-0.0521,  0.0778, -0.0483],
          [ 0.0817,  0.0249, -0.0972]],

         ...,

         [[-0.0123,  0.0957,  0.0849],
          [-0.0119,  0.0082, -0.0774],
          [ 0.0926, -0.0163,  0.0036]],

         [[-0.0616,  0.0344, -0.0025],
          [ 0.0376,  0.0804,  0.0366],
          [-0.0054, -0.0207,  0.0006]],

         [[-0.0097, -0.0482, -0.0156],
          [-0.0209, -0.0274, -0.0822],
          [-0.0315,  0.0528, -0.0108]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-0.0114, -0.0188, -0.0486],
          [ 0.0294,  0.0480, -0.0624],
          [ 0.0099, -0.0899,  0.1028]],

         [[ 0.1443,  0.0022,  0.0129],
          [ 0.0495, -0.1118, -0.0104],
          [ 0.1074, -0.0453, -0.0960]],

         [[-0.0128,  0.0224, -0.0515],
          [ 0.0957,  0.0545,  0.0083],
          [-0.0707, -0.0261,  0.0398]],

         ...,

         [[-0.0472, -0.0257,  0.0059],
          [ 0.0300,  0.0632,  0.0434],
          [ 0.0298, -0.0283, -0.0368]],

         [[-0.0270, -0.0131,  0.0390],
          [-0.0718,  0.1015,  0.0761],
          [-0.0450,  0.0746, -0.0707]],

         [[-0.0424, -0.0075,  0.0927],
          [ 0.0048,  0.0026,  0.0331],
          [-0.0481,  0.0243, -0.0381]]],


        [[[ 0.0455, -0.0216, -0.0376],
          [ 0.0011,  0.0457, -0.0885],
          [-0.0116,  0.0118,  0.0061]],

         [[-0.0132,  0.0513,  0.0363],
          [ 0.0193, -0.0081, -0.1107],
          [-0.0516, -0.0920, -0.0406]],

         [[-0.0143,  0.0234, -0.0113],
          [ 0.0083,  0.0580, -0.0694],
          [ 0.1092,  0.0241,  0.0030]],

         ...,

         [[-0.0578, -0.0221, -0.0694],
          [-0.0235,  0.0164, -0.0829],
          [-0.0017, -0.0100, -0.0190]],

         [[-0.0478, -0.0326,  0.0011],
          [ 0.0505,  0.0056,  0.0354],
          [ 0.0062,  0.0145,  0.0207]],

         [[ 0.0111,  0.1299, -0.0028],
          [-0.0092, -0.0177,  0.0072],
          [-0.0117,  0.0986,  0.0026]]],


        [[[-0.0596, -0.0815,  0.0685],
          [-0.0174,  0.0405, -0.0271],
          [ 0.0344, -0.0445, -0.0272]],

         [[-0.0318,  0.0435,  0.0036],
          [ 0.0571, -0.0420,  0.0443],
          [-0.1000, -0.0029,  0.0273]],

         [[ 0.0210,  0.0620,  0.0408],
          [ 0.0377,  0.0447, -0.0235],
          [-0.0970, -0.0762,  0.0108]],

         ...,

         [[ 0.0472, -0.0847,  0.0124],
          [ 0.0279, -0.0831,  0.0032],
          [ 0.0007, -0.0015, -0.0350]],

         [[-0.0230, -0.0167,  0.0471],
          [-0.0009,  0.0289,  0.0034],
          [-0.1705, -0.0854, -0.0691]],

         [[-0.0120,  0.0823,  0.0227],
          [ 0.0547, -0.0293,  0.0115],
          [-0.0528, -0.0231,  0.0322]]],


        ...,


        [[[-0.1431, -0.0366, -0.0291],
          [ 0.0231,  0.0033, -0.1236],
          [-0.0391,  0.0612,  0.0412]],

         [[-0.1232,  0.0020, -0.0050],
          [ 0.0781,  0.1392,  0.0308],
          [ 0.0107, -0.0556, -0.0037]],

         [[-0.0634,  0.0237,  0.0380],
          [-0.0105, -0.0406, -0.0217],
          [ 0.0086, -0.0709,  0.0009]],

         ...,

         [[ 0.0170, -0.0795,  0.1338],
          [ 0.0718, -0.0057,  0.0875],
          [-0.0300,  0.0011,  0.0636]],

         [[-0.0149, -0.0239,  0.0251],
          [ 0.0471, -0.0003, -0.0641],
          [-0.0014, -0.0286,  0.0423]],

         [[-0.0526, -0.0574, -0.0368],
          [-0.0633,  0.1130, -0.0754],
          [ 0.0306, -0.0007, -0.0194]]],


        [[[ 0.0072,  0.0527,  0.0268],
          [-0.0426, -0.0662,  0.0157],
          [ 0.0436, -0.0604, -0.0323]],

         [[ 0.0559,  0.0864, -0.0776],
          [-0.0510,  0.0414,  0.0566],
          [ 0.0910, -0.0416, -0.0084]],

         [[ 0.0842,  0.0418,  0.0330],
          [-0.0141, -0.0601,  0.0064],
          [-0.0756,  0.0302, -0.0195]],

         ...,

         [[-0.0154,  0.0351,  0.0756],
          [-0.0025,  0.0045,  0.0612],
          [ 0.0307,  0.0226,  0.0816]],

         [[ 0.0128, -0.0658, -0.0484],
          [ 0.0532,  0.0626,  0.1005],
          [ 0.0462, -0.0338, -0.0896]],

         [[ 0.0676, -0.0147, -0.0326],
          [ 0.0164,  0.0601, -0.0599],
          [ 0.0569, -0.0991,  0.0081]]],


        [[[-0.0423, -0.0070,  0.1259],
          [ 0.0011,  0.0425,  0.1034],
          [-0.1132, -0.0171,  0.0199]],

         [[-0.0855, -0.0111, -0.0413],
          [-0.0361,  0.0117,  0.0862],
          [ 0.1170,  0.0098,  0.0067]],

         [[ 0.0027, -0.0527, -0.0399],
          [-0.0749, -0.1325, -0.0788],
          [-0.0293,  0.0484, -0.1196]],

         ...,

         [[-0.0085,  0.0704, -0.0663],
          [ 0.0250, -0.0644, -0.1135],
          [-0.0786, -0.0490, -0.0824]],

         [[-0.0497,  0.0678, -0.0264],
          [ 0.0981,  0.0243, -0.1449],
          [ 0.0267, -0.0714,  0.0402]],

         [[ 0.0212,  0.0254, -0.0029],
          [-0.0482, -0.1177,  0.0429],
          [ 0.0605, -0.0198, -0.0202]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[ 0.0149]],

         [[-0.0587]],

         [[ 0.0294]],

         ...,

         [[ 0.0799]],

         [[ 0.1492]],

         [[ 0.0609]]],


        [[[-0.1209]],

         [[ 0.0026]],

         [[-0.0287]],

         ...,

         [[ 0.0122]],

         [[ 0.0669]],

         [[ 0.0121]]],


        [[[-0.0850]],

         [[-0.0768]],

         [[ 0.0636]],

         ...,

         [[-0.0344]],

         [[-0.1043]],

         [[ 0.1098]]],


        ...,


        [[[ 0.0118]],

         [[ 0.0842]],

         [[ 0.0657]],

         ...,

         [[ 0.0024]],

         [[ 0.0141]],

         [[ 0.1751]]],


        [[[-0.0643]],

         [[ 0.0750]],

         [[ 0.0274]],

         ...,

         [[ 0.0187]],

         [[-0.0024]],

         [[-0.0852]]],


        [[[-0.0167]],

         [[ 0.0058]],

         [[ 0.0800]],

         ...,

         [[ 0.0494]],

         [[ 0.0591]],

         [[-0.1635]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-4.4764e-02,  3.0625e-02,  7.1457e-03],
          [ 3.8831e-02, -7.2314e-02, -6.2284e-02],
          [ 8.9075e-02, -2.5244e-02, -3.7798e-03]],

         [[ 2.2903e-02,  2.3007e-03, -1.7886e-03],
          [-2.4025e-02, -9.0122e-02, -1.7858e-03],
          [ 3.2541e-02,  1.2468e-01,  3.0669e-02]],

         [[-1.8278e-02,  2.7116e-02, -4.0305e-02],
          [-7.3530e-02,  4.9730e-02,  1.6039e-02],
          [-1.6198e-02, -7.0567e-02,  2.7320e-02]],

         ...,

         [[-4.4616e-02, -5.8881e-02,  6.5527e-03],
          [-1.5110e-03, -8.8053e-02, -4.2327e-02],
          [ 5.2396e-02,  1.4727e-02, -5.0447e-03]],

         [[ 1.6479e-02, -4.1180e-02, -1.7875e-02],
          [-4.9333e-02, -1.0846e-01, -7.8000e-02],
          [ 2.8225e-02,  1.1129e-01,  1.4066e-02]],

         [[-2.7048e-03, -6.7764e-02,  4.9382e-02],
          [ 2.0602e-02,  1.7947e-02, -4.7296e-02],
          [ 3.0018e-02, -1.5016e-03, -1.2662e-01]]],


        [[[ 6.3843e-02, -2.9641e-02, -2.1742e-02],
          [ 1.2384e-02, -6.9935e-06, -9.3808e-03],
          [-5.2289e-02,  4.1614e-02,  1.3365e-01]],

         [[-2.8010e-02, -3.8682e-02,  3.4763e-02],
          [-8.7313e-02,  3.5844e-02, -1.7749e-02],
          [-5.9405e-02,  1.6088e-02, -2.8161e-02]],

         [[-1.7761e-02, -1.9867e-02, -8.7834e-02],
          [-1.0417e-01,  6.6721e-03, -1.4152e-02],
          [-6.5693e-02,  5.3158e-02,  8.9974e-02]],

         ...,

         [[ 4.7833e-02, -2.4286e-02, -1.9936e-02],
          [ 8.7949e-02, -8.1766e-02, -7.2865e-02],
          [-2.3016e-02,  4.0511e-02,  3.7914e-02]],

         [[-5.2281e-02,  8.1065e-02,  9.4071e-03],
          [ 1.4205e-02,  3.8983e-02, -1.3292e-02],
          [ 2.7787e-02, -2.0189e-02,  2.2216e-02]],

         [[-6.7450e-02, -7.0677e-02,  1.2696e-02],
          [-1.7207e-04,  2.5642e-02,  3.7820e-02],
          [-1.6719e-02,  1.5342e-02,  8.5791e-02]]],


        [[[-7.5996e-02, -4.9322e-02, -1.3826e-03],
          [-5.2261e-04, -3.0185e-02,  4.1933e-02],
          [-2.4187e-02, -2.7550e-02, -6.6496e-02]],

         [[ 1.1629e-02, -3.0218e-02, -1.0798e-03],
          [ 5.5863e-02, -5.6555e-02,  1.4520e-02],
          [ 2.5075e-02,  6.8965e-02,  3.8816e-03]],

         [[ 6.2547e-03, -4.5610e-02, -4.1583e-02],
          [-1.8143e-03,  4.4033e-02,  2.0668e-02],
          [ 7.8422e-04,  4.1658e-03, -6.2731e-02]],

         ...,

         [[-1.5019e-02,  1.4657e-02,  7.8210e-02],
          [-9.1844e-02,  2.1688e-02, -4.0809e-02],
          [ 7.2158e-02,  3.1858e-02,  6.1293e-02]],

         [[-1.4742e-02,  2.6204e-02, -3.1809e-02],
          [ 1.0015e-02, -1.8449e-02,  2.9345e-02],
          [ 2.0225e-02,  4.4871e-02, -5.6533e-03]],

         [[-8.2083e-03, -9.1066e-02, -3.0227e-02],
          [-3.3177e-02,  1.9819e-03, -4.3951e-02],
          [-6.8647e-02, -1.9804e-02, -4.4889e-02]]],


        ...,


        [[[-3.8720e-02, -1.7409e-02, -9.9554e-02],
          [-4.9878e-02, -2.7660e-03,  5.9565e-02],
          [-1.1208e-01,  1.3278e-02, -4.3813e-02]],

         [[-8.9501e-02,  3.3580e-02,  1.5332e-02],
          [-6.9275e-02,  2.1708e-02,  4.0988e-02],
          [-4.8258e-02, -4.9390e-02,  3.0548e-02]],

         [[-9.0496e-03,  9.6332e-04, -2.2801e-02],
          [ 3.8405e-02, -2.1344e-02,  6.9431e-02],
          [ 6.0781e-02, -5.3775e-02, -1.4779e-02]],

         ...,

         [[ 1.3667e-02,  8.2048e-02, -6.5501e-02],
          [ 8.4282e-02, -2.9332e-02, -7.5411e-02],
          [ 3.0481e-02,  5.6503e-02,  3.2028e-02]],

         [[-1.0898e-03,  1.7798e-02,  6.3633e-02],
          [-2.0367e-02,  2.2930e-02, -3.9894e-02],
          [ 5.7130e-02,  2.3620e-02, -1.0461e-01]],

         [[ 1.9514e-02,  5.6358e-02,  2.5971e-02],
          [-5.2057e-02, -3.2699e-02, -5.5209e-02],
          [-5.0024e-02,  3.9833e-02,  7.0138e-02]]],


        [[[-4.6362e-02,  3.3537e-02, -7.2349e-02],
          [-3.5035e-03, -3.2811e-02, -1.9906e-02],
          [-2.7233e-02, -2.0255e-02, -1.9332e-02]],

         [[ 4.2618e-02,  6.4027e-02,  1.6471e-02],
          [-2.4163e-02,  2.2050e-02, -9.3105e-02],
          [-1.9479e-02,  6.6944e-03,  4.1211e-02]],

         [[ 2.7850e-02,  3.3945e-03, -1.6006e-02],
          [ 1.3169e-02,  6.2856e-02,  6.1215e-03],
          [ 1.1343e-02, -3.4658e-02,  1.7598e-03]],

         ...,

         [[ 7.4469e-02,  1.4893e-02, -8.0803e-02],
          [-4.0532e-02, -3.6524e-02, -8.1970e-02],
          [-5.2624e-02, -1.3210e-01,  5.7454e-03]],

         [[ 2.9585e-02,  4.6260e-02,  1.1964e-04],
          [ 3.1382e-02, -1.4853e-02,  3.6221e-02],
          [-2.2697e-02, -2.7944e-03,  1.2002e-01]],

         [[-6.7459e-03, -2.9983e-02, -8.1903e-02],
          [ 1.5997e-02, -3.1095e-02,  2.7167e-02],
          [ 2.0997e-02,  5.4277e-02, -8.9591e-02]]],


        [[[-4.5671e-02, -5.8351e-02, -5.1575e-02],
          [ 1.0501e-02,  6.1307e-02,  1.1830e-01],
          [ 5.9444e-03,  7.1948e-03,  9.3502e-02]],

         [[ 1.2165e-01,  3.5639e-02, -1.5642e-02],
          [-1.3366e-01,  6.8046e-02,  2.0141e-03],
          [ 6.1126e-02,  4.6458e-03, -3.6489e-02]],

         [[ 4.9743e-02, -1.1017e-02,  4.0169e-02],
          [-5.5238e-02,  6.9478e-02, -3.5519e-02],
          [-4.9710e-02, -3.8282e-02, -1.3006e-02]],

         ...,

         [[-1.8452e-02,  4.2251e-02, -6.2942e-02],
          [ 6.2971e-02,  1.5116e-02, -4.2146e-03],
          [-2.6149e-02, -2.8920e-02,  2.2187e-02]],

         [[ 3.9046e-02,  2.8953e-02, -4.2850e-02],
          [ 5.0848e-02, -3.6442e-02,  1.0481e-01],
          [-8.3506e-03, -6.6351e-03, -8.0709e-02]],

         [[ 5.6044e-02, -1.5465e-02,  8.1847e-02],
          [ 4.1542e-02,  4.6733e-03, -2.3410e-02],
          [-2.0715e-02,  3.0350e-02,  1.1347e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 7.7562e-02,  3.7221e-02, -2.9995e-02],
          [-8.0332e-02,  8.5926e-03, -3.4927e-02],
          [-2.1827e-02,  6.7934e-02,  7.3713e-02]],

         [[-2.5133e-02, -2.3348e-02,  1.1684e-02],
          [-1.0060e-01, -5.4269e-02, -7.2902e-03],
          [-9.4481e-03,  7.8114e-02,  1.0696e-01]],

         [[-3.4417e-02,  4.4641e-02, -6.2991e-02],
          [-1.0968e-01,  1.4778e-02,  1.9130e-02],
          [-7.2088e-03, -3.3473e-02, -1.5180e-02]],

         ...,

         [[ 3.2649e-02, -2.0071e-02,  2.9655e-02],
          [ 1.7265e-02, -2.8701e-02,  1.7608e-02],
          [-2.4356e-02,  5.9042e-02,  1.5186e-03]],

         [[ 1.1789e-02, -8.4815e-02,  6.6129e-02],
          [-4.0911e-02,  1.3447e-02,  3.4635e-03],
          [ 1.5314e-02,  5.3533e-03,  3.2002e-02]],

         [[-3.9626e-02,  8.7377e-03, -1.7818e-03],
          [ 1.0199e-01, -7.9033e-02, -6.3272e-02],
          [-1.3623e-02, -6.7595e-02,  4.0213e-02]]],


        [[[-6.4701e-03, -4.0984e-02, -6.4835e-02],
          [-1.1596e-01,  7.7747e-02, -4.0686e-02],
          [ 2.7025e-02, -3.9744e-02,  7.6199e-02]],

         [[-1.0576e-02,  4.1556e-02, -6.3867e-02],
          [ 1.4153e-02, -7.3849e-02, -1.1080e-02],
          [-1.1294e-03,  6.8193e-02,  5.0043e-02]],

         [[-6.4254e-02, -1.1222e-01,  2.8412e-04],
          [ 4.4184e-02,  3.1838e-02,  1.6807e-02],
          [-8.5246e-02,  7.8054e-02,  7.9274e-02]],

         ...,

         [[-1.9351e-02,  1.0386e-02,  4.9303e-02],
          [ 2.0297e-02,  3.0377e-03,  1.7259e-03],
          [-1.3262e-02, -2.4338e-02,  2.8244e-02]],

         [[-1.8536e-02,  3.9931e-02, -4.8666e-02],
          [-2.2592e-02, -2.3041e-02, -9.1915e-02],
          [ 3.0516e-02, -1.3890e-02,  3.9116e-02]],

         [[ 2.0880e-02,  2.6211e-02, -5.3989e-02],
          [-2.2795e-02, -1.5851e-02,  8.2347e-04],
          [-5.4727e-02,  5.1053e-02, -7.9448e-02]]],


        [[[ 1.4307e-02,  3.1633e-02, -2.5495e-02],
          [-5.2326e-03, -2.9113e-02, -4.5040e-02],
          [ 9.2462e-03, -3.8313e-02, -6.8131e-02]],

         [[ 5.3149e-02, -4.6858e-02, -4.6645e-02],
          [ 6.2619e-02,  4.1798e-02, -2.9449e-02],
          [ 5.6235e-02, -4.2614e-02, -1.8055e-02]],

         [[ 3.3235e-02, -8.5840e-02, -5.8269e-02],
          [-4.5431e-02,  1.0243e-01,  3.5516e-02],
          [-4.4254e-02,  1.0753e-01, -2.7885e-02]],

         ...,

         [[ 1.1891e-02, -5.0373e-02, -5.6504e-03],
          [-2.9844e-02,  2.9676e-02, -5.0889e-03],
          [-3.2520e-02, -3.1593e-02, -8.4902e-02]],

         [[ 2.7571e-02, -1.3845e-02,  1.1910e-02],
          [ 3.6007e-02, -9.5305e-02, -1.5336e-02],
          [ 4.6665e-02, -5.5514e-03, -3.8919e-02]],

         [[-3.5643e-02,  9.8711e-02, -8.3189e-02],
          [-7.6214e-02, -2.5517e-02,  8.2707e-03],
          [-5.8097e-02,  1.8348e-02, -7.8899e-02]]],


        ...,


        [[[ 7.1737e-02,  9.0732e-02, -1.0832e-02],
          [-1.6439e-02,  1.3976e-02, -3.9111e-02],
          [-4.5574e-02,  2.5441e-02,  7.7051e-02]],

         [[ 1.4907e-03,  9.9971e-02,  6.2325e-02],
          [-1.0001e-01, -9.3880e-02, -1.5678e-03],
          [-1.8622e-02,  2.4878e-02,  3.4581e-02]],

         [[ 2.3061e-02, -7.4629e-02, -3.3433e-02],
          [-3.2364e-02,  2.6297e-02,  8.0698e-02],
          [-2.8371e-02,  4.0775e-02,  1.0562e-01]],

         ...,

         [[ 4.3037e-02,  3.9656e-03, -1.6854e-02],
          [-2.1800e-02, -3.5696e-02, -2.9288e-03],
          [-5.7822e-03, -6.8070e-02,  2.2028e-02]],

         [[ 9.4763e-03, -1.2340e-01, -1.1915e-01],
          [-7.4100e-02, -5.1190e-02,  8.7633e-02],
          [ 9.1861e-02,  4.6083e-02,  2.4078e-02]],

         [[-1.8615e-02, -2.0937e-02,  2.2470e-02],
          [ 4.6260e-02,  4.3404e-02,  3.9300e-02],
          [-5.2919e-03, -1.4590e-02, -5.4590e-02]]],


        [[[-2.4807e-02,  6.8184e-04, -7.3331e-02],
          [-6.8310e-02,  1.1147e-02,  2.5382e-02],
          [ 4.6828e-02, -2.1180e-02,  1.0243e-01]],

         [[-2.0354e-02,  5.0637e-02,  7.0653e-02],
          [-1.7789e-02,  3.5503e-02, -3.5150e-03],
          [-6.1029e-03,  2.1176e-02,  1.1539e-02]],

         [[ 7.1181e-02, -3.3012e-02,  7.3017e-02],
          [ 3.1136e-03, -7.7469e-02,  9.3350e-02],
          [ 1.4508e-02,  3.1510e-02,  2.7364e-02]],

         ...,

         [[ 3.2418e-02,  2.9843e-02, -1.5680e-02],
          [-1.0862e-02,  8.4674e-02, -3.8049e-02],
          [-2.1444e-02, -7.2650e-02, -9.7473e-03]],

         [[ 6.2600e-02, -2.0164e-02, -4.5934e-02],
          [ 3.0720e-03,  1.5670e-02, -1.5673e-02],
          [ 4.6821e-02, -1.9146e-02, -8.1787e-02]],

         [[ 5.1109e-02, -2.2733e-03,  1.6377e-02],
          [ 1.5678e-02,  3.4869e-03, -2.9922e-02],
          [ 1.3357e-01,  8.8849e-02,  1.1063e-05]]],


        [[[-4.7072e-02,  1.5993e-02,  3.7932e-03],
          [ 5.7994e-02, -5.2704e-03, -1.2514e-01],
          [-2.7017e-02,  8.3604e-02,  7.5176e-02]],

         [[ 1.2642e-01, -2.2198e-02,  9.3888e-02],
          [-7.2114e-02, -3.6647e-02,  6.8308e-02],
          [-2.4651e-02, -1.5126e-02,  1.3971e-02]],

         [[ 2.0526e-02,  1.2495e-02,  3.9070e-02],
          [-3.4417e-02,  5.4680e-02, -4.6305e-02],
          [ 6.4959e-02,  2.5885e-02,  1.8145e-03]],

         ...,

         [[ 1.0212e-02, -2.3814e-02, -6.9879e-02],
          [ 4.7434e-02, -2.9092e-02, -2.3922e-02],
          [ 3.1734e-02, -2.8083e-02,  6.2968e-02]],

         [[-1.4037e-02, -7.3711e-03,  2.2793e-02],
          [ 1.7670e-02, -6.7428e-02, -5.5084e-02],
          [ 5.3882e-02,  2.2242e-02, -1.8526e-02]],

         [[ 7.2477e-02, -1.8595e-03, -1.9817e-02],
          [-4.6090e-02, -1.7811e-02,  2.4414e-02],
          [ 1.1363e-02,  5.4765e-02, -3.6521e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.1819]],

         [[-0.1471]],

         [[ 0.1351]],

         ...,

         [[-0.0478]],

         [[ 0.1972]],

         [[ 0.0441]]],


        [[[-0.0566]],

         [[ 0.0774]],

         [[ 0.1761]],

         ...,

         [[-0.1664]],

         [[-0.0494]],

         [[ 0.1547]]],


        [[[-0.4002]],

         [[-0.0362]],

         [[ 0.0349]],

         ...,

         [[-0.1181]],

         [[-0.0117]],

         [[-0.0037]]],


        ...,


        [[[ 0.0400]],

         [[ 0.0249]],

         [[ 0.2871]],

         ...,

         [[ 0.0250]],

         [[ 0.1279]],

         [[ 0.0160]]],


        [[[-0.0174]],

         [[ 0.0505]],

         [[-0.2242]],

         ...,

         [[-0.0541]],

         [[ 0.2668]],

         [[ 0.0525]]],


        [[[ 0.0595]],

         [[-0.0510]],

         [[-0.2138]],

         ...,

         [[-0.0993]],

         [[ 0.2088]],

         [[ 0.1266]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0332,  0.0550, -0.0033],
          [ 0.0363, -0.0084, -0.0342],
          [ 0.0265,  0.0488,  0.0317]],

         [[-0.0009,  0.0266, -0.0348],
          [ 0.0255,  0.0209,  0.0322],
          [-0.0120, -0.0056,  0.0095]],

         [[-0.0074,  0.0696,  0.0453],
          [-0.0098, -0.0035, -0.0583],
          [ 0.0736, -0.0134, -0.0160]],

         ...,

         [[-0.0210, -0.0056, -0.0605],
          [ 0.0201, -0.0803,  0.0524],
          [-0.0656,  0.0046,  0.0084]],

         [[ 0.0150, -0.0307, -0.0098],
          [ 0.0595,  0.0736, -0.0324],
          [ 0.0561, -0.0269,  0.0025]],

         [[ 0.0871,  0.0069,  0.0304],
          [-0.0172,  0.0660, -0.0054],
          [-0.0564, -0.0404, -0.0102]]],


        [[[ 0.0230, -0.0755,  0.0447],
          [ 0.0485, -0.0724,  0.0842],
          [ 0.0526, -0.0648, -0.0245]],

         [[-0.0223, -0.0044, -0.0611],
          [-0.0144, -0.0008, -0.0915],
          [-0.0499,  0.0134,  0.0160]],

         [[ 0.0293, -0.0290, -0.0390],
          [ 0.0029,  0.1445, -0.0577],
          [ 0.0352,  0.0831,  0.0542]],

         ...,

         [[ 0.0199,  0.0179,  0.0962],
          [ 0.0071,  0.0554,  0.0302],
          [ 0.1126,  0.0185,  0.0058]],

         [[-0.0104,  0.0018,  0.0141],
          [ 0.0170, -0.0189,  0.0381],
          [ 0.0588, -0.0332,  0.0470]],

         [[ 0.0672,  0.0028,  0.0785],
          [ 0.0039, -0.0257, -0.0390],
          [ 0.0451,  0.0639, -0.0328]]],


        [[[-0.0555, -0.0685,  0.0440],
          [-0.0698,  0.0438, -0.0290],
          [ 0.0984,  0.0171,  0.0165]],

         [[-0.0237,  0.0741, -0.0038],
          [ 0.0781, -0.0171,  0.0070],
          [-0.0086, -0.0481, -0.0614]],

         [[-0.0388,  0.0553, -0.0347],
          [-0.0731, -0.0089,  0.0576],
          [-0.0146, -0.0165, -0.0452]],

         ...,

         [[ 0.0736, -0.0043,  0.0017],
          [ 0.0327,  0.0238, -0.0444],
          [ 0.0673, -0.0339, -0.0284]],

         [[-0.0829,  0.0094,  0.0187],
          [-0.0074,  0.0209, -0.0455],
          [ 0.0625, -0.0929, -0.0299]],

         [[ 0.0358, -0.0031, -0.0143],
          [ 0.0258, -0.0209, -0.0110],
          [-0.0410, -0.0580, -0.0077]]],


        ...,


        [[[ 0.0348, -0.0371, -0.0404],
          [-0.0266, -0.0193,  0.0109],
          [-0.0211, -0.0917,  0.0734]],

         [[ 0.0377, -0.0052, -0.0886],
          [ 0.0115,  0.0096, -0.1175],
          [-0.0909,  0.1039,  0.0662]],

         [[ 0.0737,  0.0126,  0.0029],
          [-0.0255, -0.0511, -0.1018],
          [ 0.0333,  0.0761,  0.0244]],

         ...,

         [[ 0.0235, -0.0178,  0.0197],
          [-0.0221,  0.0205, -0.0182],
          [ 0.0200,  0.0390,  0.0117]],

         [[-0.0098, -0.0042, -0.0428],
          [-0.0110,  0.1485,  0.0683],
          [-0.0501, -0.0816, -0.0970]],

         [[ 0.1117, -0.0478,  0.0338],
          [-0.0175,  0.0570, -0.0306],
          [ 0.0714, -0.0438,  0.0399]]],


        [[[ 0.0480,  0.0609, -0.0045],
          [ 0.0408,  0.0530,  0.0164],
          [-0.0166,  0.0389, -0.0616]],

         [[ 0.0042,  0.0861, -0.0175],
          [-0.0542, -0.0635, -0.0727],
          [-0.0652,  0.0901,  0.0330]],

         [[-0.0105, -0.0234,  0.0155],
          [ 0.0940, -0.0737,  0.0193],
          [-0.0303,  0.0004, -0.0394]],

         ...,

         [[ 0.0030, -0.0154, -0.0191],
          [-0.0200, -0.0663,  0.0298],
          [-0.0457,  0.0131, -0.1114]],

         [[-0.0149,  0.0526,  0.0467],
          [-0.0205, -0.0088, -0.0004],
          [-0.0597,  0.0314, -0.0570]],

         [[ 0.0010,  0.0160,  0.0111],
          [-0.0460, -0.0548,  0.0588],
          [ 0.0419,  0.0048, -0.0706]]],


        [[[-0.0119, -0.0785, -0.0215],
          [ 0.0115, -0.0114,  0.0448],
          [-0.0025, -0.0024,  0.0457]],

         [[-0.0041,  0.0271, -0.0003],
          [ 0.0473, -0.0746,  0.0634],
          [ 0.0109, -0.0268, -0.0450]],

         [[-0.0181,  0.0320,  0.0127],
          [ 0.0697, -0.0085, -0.0422],
          [-0.0269,  0.0189, -0.0247]],

         ...,

         [[-0.0080,  0.1005,  0.0749],
          [-0.0246,  0.0139,  0.0560],
          [ 0.0114,  0.0410, -0.0299]],

         [[-0.0020, -0.0339,  0.0042],
          [-0.0350, -0.0172,  0.0064],
          [ 0.0062,  0.0497,  0.0413]],

         [[-0.0177, -0.0308, -0.0213],
          [-0.0890, -0.0133,  0.0274],
          [-0.0484, -0.0685, -0.0197]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 1.6386e-02, -1.3430e-02,  3.9701e-02],
          [-2.3520e-02, -2.8806e-02,  2.1890e-02],
          [-4.8656e-02,  8.1441e-03,  4.9407e-02]],

         [[ 2.3580e-02,  3.0543e-02,  4.7041e-02],
          [-2.7720e-02,  3.0039e-02,  6.1848e-02],
          [-2.5997e-02,  3.1071e-02, -3.7165e-03]],

         [[-7.0319e-02,  5.6030e-02,  1.0583e-01],
          [ 3.0706e-02, -6.0932e-02, -5.7205e-02],
          [ 3.2365e-02,  2.5739e-02,  9.7850e-03]],

         ...,

         [[ 1.5998e-01, -4.6044e-02, -8.0230e-02],
          [-6.8331e-02,  1.0883e-01, -7.6551e-02],
          [ 7.2949e-03,  2.4100e-02, -4.1992e-02]],

         [[-1.0088e-02, -2.1783e-02, -2.1122e-02],
          [-7.9590e-02,  2.7023e-02,  1.7405e-02],
          [ 2.4238e-02, -2.9215e-02,  4.7178e-02]],

         [[ 3.1631e-02,  1.9741e-02, -9.8068e-02],
          [-3.5074e-02,  2.0116e-02,  1.1854e-01],
          [ 6.3797e-02,  1.8854e-03,  2.7733e-02]]],


        [[[-8.8694e-03, -2.6981e-02,  4.9174e-02],
          [-2.5785e-02,  2.4684e-03, -1.1835e-02],
          [-2.5720e-02, -3.1759e-02, -4.1262e-03]],

         [[-4.6980e-02,  2.2904e-02, -1.8368e-02],
          [ 5.4276e-02, -3.5586e-02, -3.8639e-03],
          [ 6.1949e-02, -2.2383e-03,  2.0835e-02]],

         [[ 4.8838e-02, -5.4804e-02,  4.0729e-02],
          [ 2.8848e-02,  6.4504e-02, -2.7203e-02],
          [-2.1250e-02,  7.6271e-02, -6.0710e-02]],

         ...,

         [[ 8.1176e-05,  3.7373e-02, -7.7055e-02],
          [-5.6312e-02, -4.0278e-02,  8.0146e-02],
          [-5.1746e-02, -1.7002e-04, -3.3737e-02]],

         [[-3.0268e-02, -2.6314e-02,  5.3471e-02],
          [ 2.2211e-02, -2.2876e-03, -9.4931e-03],
          [-3.5119e-02, -5.6828e-04, -4.5925e-02]],

         [[ 2.9473e-03,  1.9279e-02, -7.6138e-03],
          [-1.3638e-02,  1.0623e-01,  5.6140e-02],
          [ 2.2709e-02, -3.7050e-02,  1.1272e-02]]],


        [[[-1.7548e-03,  4.0904e-02, -7.4894e-02],
          [-4.3604e-02, -5.5301e-02, -9.3218e-02],
          [ 7.3871e-03, -2.9454e-02,  1.7592e-02]],

         [[ 9.0950e-02,  3.1159e-02, -2.0494e-02],
          [ 8.9216e-02,  1.4491e-03,  7.2329e-02],
          [-1.0045e-01,  3.8285e-02,  1.7890e-03]],

         [[ 7.0798e-03, -6.4542e-02, -4.2491e-02],
          [ 5.3228e-02,  8.5746e-02,  3.9138e-02],
          [ 4.4550e-02,  2.3857e-02,  2.1251e-02]],

         ...,

         [[ 4.7817e-02,  6.2220e-02,  4.7325e-02],
          [ 3.8943e-03, -6.8067e-03,  4.8488e-03],
          [ 2.9291e-03, -3.7775e-02, -2.3358e-02]],

         [[ 2.5221e-02, -5.0253e-03, -4.3725e-02],
          [ 4.4556e-02, -1.5913e-02,  1.9319e-02],
          [-2.1716e-02, -7.3674e-03, -4.0529e-03]],

         [[-1.4611e-04,  4.9050e-02, -2.1307e-02],
          [-5.6702e-02,  5.2256e-02, -3.5451e-02],
          [ 1.9619e-02, -5.3642e-02,  2.0895e-02]]],


        ...,


        [[[ 4.9772e-02, -8.7606e-02, -7.8940e-02],
          [-3.5774e-02, -7.2394e-04,  1.5317e-02],
          [ 2.0005e-02, -5.5243e-02, -1.8817e-02]],

         [[-3.0974e-02, -4.8216e-02, -2.4796e-02],
          [ 3.3214e-02, -1.3140e-02,  4.2915e-02],
          [-2.0236e-02,  3.6110e-03,  1.6304e-02]],

         [[-3.8264e-02, -3.0846e-03, -1.1089e-01],
          [ 6.2106e-02,  4.6513e-02,  1.3164e-02],
          [-3.4532e-02, -9.9520e-02,  5.5275e-02]],

         ...,

         [[-4.6886e-03,  4.1718e-02,  1.2405e-01],
          [ 6.7477e-02, -1.6643e-02, -3.6371e-02],
          [ 2.2486e-03, -1.6952e-02,  5.9265e-02]],

         [[-1.9160e-02, -2.2234e-02,  3.6120e-04],
          [ 2.9983e-04, -1.1060e-03,  6.6359e-03],
          [-1.4788e-02, -1.8584e-02,  2.2766e-02]],

         [[-6.4680e-02,  4.1907e-03, -2.2156e-03],
          [-7.6162e-03, -1.4012e-02,  4.7885e-02],
          [-3.5879e-02, -6.5200e-02,  3.1875e-04]]],


        [[[-2.8679e-03, -8.6441e-02, -6.2567e-02],
          [-1.5245e-02,  3.5523e-03,  5.6560e-02],
          [ 6.3078e-02,  6.7656e-02, -2.7250e-02]],

         [[ 8.5799e-03,  2.7166e-02, -5.4216e-02],
          [-7.7632e-02, -1.3456e-02, -5.0490e-02],
          [ 5.2909e-02, -2.3139e-02, -2.0385e-02]],

         [[-1.6143e-05, -2.1294e-02,  7.2780e-04],
          [-5.1727e-02, -6.1962e-02,  4.5668e-03],
          [-3.5037e-02,  6.1312e-03, -4.3628e-02]],

         ...,

         [[ 6.5967e-02, -2.9673e-02,  2.3079e-02],
          [ 2.3998e-02,  7.5754e-02,  1.4332e-01],
          [ 3.5095e-02, -9.5914e-03,  1.0140e-01]],

         [[-2.9183e-02,  1.6968e-02, -7.8137e-02],
          [-1.6281e-03, -4.2521e-02,  3.5910e-02],
          [-9.1879e-02,  4.7790e-02, -8.0444e-02]],

         [[-8.5359e-03, -5.7375e-03,  1.1073e-01],
          [-4.1557e-02, -2.6568e-02, -5.6882e-02],
          [-2.4383e-02,  9.1384e-02, -2.2908e-02]]],


        [[[ 7.0570e-02, -4.2889e-02,  2.1799e-02],
          [ 6.3535e-02, -3.9705e-02,  4.8159e-02],
          [ 1.5275e-02,  1.2384e-01, -1.0963e-02]],

         [[ 9.8756e-02,  1.4735e-02, -3.2728e-02],
          [-4.4329e-02,  4.1899e-02,  2.8700e-02],
          [-1.3893e-02,  2.0227e-02,  4.6935e-02]],

         [[ 2.9328e-02,  8.7964e-02,  1.7066e-02],
          [ 6.2612e-04, -8.3451e-03,  5.3981e-02],
          [ 3.8847e-02, -2.8876e-02, -6.9794e-02]],

         ...,

         [[-3.3371e-02, -1.0256e-01,  7.8180e-03],
          [ 2.7489e-02, -6.4293e-03, -7.4058e-02],
          [ 7.8376e-02, -6.2228e-02,  4.7525e-02]],

         [[-1.1732e-02,  9.6344e-03,  9.4551e-02],
          [ 2.9646e-02, -5.7448e-02,  5.3140e-02],
          [-6.8253e-02,  8.9338e-02,  4.8052e-02]],

         [[-8.0237e-03,  1.0531e-02, -3.7725e-02],
          [ 1.9277e-02, -2.6855e-02, -4.3406e-02],
          [ 7.2442e-03,  1.2469e-02,  1.2217e-02]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 2.0405e-02,  5.6262e-03, -2.2107e-02],
          [-1.6051e-02,  5.4751e-03,  8.5190e-05],
          [-1.5087e-02,  6.7459e-02, -5.1430e-02]],

         [[-3.3342e-03, -9.2297e-02, -4.1255e-02],
          [-1.3733e-04,  1.0825e-02, -3.6556e-02],
          [-2.8263e-02,  1.4546e-02, -5.3295e-03]],

         [[ 6.4338e-03,  4.7950e-02, -5.4573e-02],
          [ 3.8137e-02,  2.9123e-02,  1.8956e-02],
          [ 2.9144e-02,  3.5988e-02,  4.9176e-02]],

         ...,

         [[-5.6207e-02,  7.2751e-02,  2.3221e-03],
          [ 1.5631e-02, -1.9195e-02,  1.8403e-02],
          [ 3.0948e-02,  6.7565e-03, -4.0744e-02]],

         [[-1.3489e-03,  1.0890e-02, -2.1700e-02],
          [-7.4117e-02,  1.8770e-02, -1.6555e-02],
          [ 4.9514e-02, -1.6914e-02,  1.9375e-03]],

         [[-1.8465e-02,  3.2445e-03,  5.6910e-02],
          [-9.7853e-02,  3.2795e-02, -5.4450e-03],
          [ 4.5861e-02,  5.3702e-02, -1.3238e-02]]],


        [[[-2.1382e-02,  2.0101e-02, -4.3994e-02],
          [-3.5807e-02,  1.7723e-02,  5.8238e-02],
          [-2.5119e-03,  6.1331e-02,  5.4133e-02]],

         [[-9.2226e-03, -1.6647e-02,  1.0022e-02],
          [-2.2333e-02, -5.0026e-02, -7.9072e-03],
          [ 3.5774e-02,  6.9714e-03, -1.5507e-02]],

         [[ 5.0693e-02,  2.7018e-02, -1.3414e-02],
          [-3.2859e-02, -2.3885e-02, -9.1944e-03],
          [ 6.1268e-02, -7.4945e-03,  7.8615e-03]],

         ...,

         [[-3.0329e-02,  3.2694e-02,  4.3137e-02],
          [ 5.4000e-02,  6.0558e-02,  1.1929e-03],
          [ 3.5266e-02, -2.0380e-02,  7.2809e-02]],

         [[-5.0488e-02, -4.7889e-02, -4.2107e-02],
          [ 7.5149e-03,  4.9384e-02, -1.1988e-01],
          [-5.2637e-02, -7.8505e-03, -3.5314e-02]],

         [[ 2.7750e-02,  4.9998e-02, -5.2948e-03],
          [ 4.4751e-02,  9.4886e-02, -3.1221e-02],
          [ 4.1363e-02, -3.8575e-02, -3.5868e-02]]],


        [[[ 3.4356e-02,  5.8885e-02, -2.5746e-02],
          [ 6.0360e-02,  1.7162e-02,  1.5920e-02],
          [-7.6194e-02,  4.4289e-02,  4.5266e-02]],

         [[ 2.9142e-02, -1.2870e-02, -8.7629e-02],
          [ 1.3084e-02,  1.8145e-02, -4.9597e-02],
          [-3.3872e-02,  1.9154e-02,  1.0967e-02]],

         [[ 8.5384e-02, -1.9563e-02,  2.9021e-03],
          [ 4.2749e-03,  3.8231e-02, -1.1784e-02],
          [ 1.2249e-02,  7.0557e-02,  1.2603e-02]],

         ...,

         [[-5.8384e-02,  1.0214e-02,  1.1756e-02],
          [-5.2021e-02, -1.8157e-02,  3.5075e-02],
          [ 1.3092e-02, -3.7668e-02, -1.3588e-02]],

         [[-5.7736e-03, -7.8267e-02,  6.7051e-02],
          [-1.2639e-02, -3.2077e-02, -3.2687e-02],
          [ 2.3367e-02,  2.9627e-02, -7.4082e-02]],

         [[ 7.5228e-02,  4.6204e-03, -1.2340e-02],
          [ 2.4833e-02, -4.1847e-02,  1.1818e-02],
          [-5.8934e-02, -5.2910e-02, -9.7936e-03]]],


        ...,


        [[[ 2.1250e-02,  3.3588e-02, -4.3701e-02],
          [-6.4720e-02, -6.2372e-02,  5.4455e-02],
          [ 5.7715e-02, -1.7416e-02,  2.0934e-02]],

         [[-6.5715e-02, -1.5180e-02,  4.8037e-02],
          [ 1.5157e-02, -3.8363e-02,  2.0940e-02],
          [-1.7371e-02,  3.6762e-02,  3.3013e-02]],

         [[ 4.6410e-02, -8.8472e-03, -9.9272e-02],
          [ 2.6811e-02, -1.0519e-01,  9.7227e-02],
          [ 3.4171e-02,  1.8280e-02, -4.1905e-02]],

         ...,

         [[ 4.1586e-02, -1.0644e-02, -2.8851e-03],
          [ 4.9051e-02,  2.1232e-02,  1.5020e-02],
          [-1.5214e-02, -4.1074e-02, -3.5551e-02]],

         [[-2.1284e-02,  4.6742e-03, -4.1827e-02],
          [-9.8216e-02, -3.9032e-02,  1.0888e-02],
          [-2.6837e-02, -3.9572e-02, -1.0273e-02]],

         [[-5.7121e-02, -2.8009e-02,  9.5666e-03],
          [ 4.0351e-02, -6.7011e-02, -4.4554e-02],
          [-1.0181e-02, -8.5230e-03, -2.2997e-02]]],


        [[[ 6.3118e-02,  6.4382e-03, -1.2060e-02],
          [-4.0241e-02, -1.4627e-02,  1.8656e-02],
          [ 1.7524e-02,  7.1568e-02,  3.4604e-02]],

         [[ 7.3711e-02,  2.5955e-02, -1.7850e-02],
          [-4.4651e-02,  5.1866e-02, -4.9659e-02],
          [-2.6242e-02,  5.2370e-02, -3.4409e-03]],

         [[ 7.7754e-03, -3.3318e-03,  5.6566e-02],
          [ 1.1465e-02, -5.8474e-03, -2.4475e-02],
          [-3.9921e-02,  2.7073e-02,  1.4128e-02]],

         ...,

         [[-3.2251e-02, -4.5957e-02,  5.9255e-02],
          [ 3.1882e-02,  1.0544e-01, -2.6751e-02],
          [ 2.9463e-02,  5.2510e-02,  1.5968e-02]],

         [[ 4.7899e-02,  1.8275e-02,  1.0467e-02],
          [-5.0155e-02, -3.4853e-02, -2.1305e-03],
          [ 6.8244e-02,  2.9101e-02,  4.8626e-02]],

         [[-2.0640e-02, -4.1053e-02,  4.8483e-02],
          [-2.6920e-02, -1.1584e-02,  5.0555e-02],
          [-1.6461e-02, -4.8794e-03,  3.3877e-02]]],


        [[[-7.0818e-03,  1.7819e-02, -1.9212e-02],
          [-1.1239e-02, -5.9357e-02, -5.4836e-02],
          [ 1.5389e-02, -2.2990e-02, -4.9030e-02]],

         [[-2.6904e-03,  7.1635e-02,  1.5943e-02],
          [-8.5138e-03, -1.5719e-02,  3.1091e-02],
          [ 1.1437e-03,  5.1193e-03,  5.2816e-02]],

         [[-2.2765e-02, -1.7783e-02, -5.7720e-03],
          [-1.6746e-02,  2.5482e-02,  3.6094e-02],
          [ 3.1760e-02,  1.5428e-03,  1.6584e-02]],

         ...,

         [[-1.3261e-02,  2.2734e-02, -8.5626e-02],
          [ 2.0730e-02, -1.3416e-02, -8.0974e-02],
          [ 3.8144e-02,  1.1982e-02, -1.1113e-02]],

         [[-5.2480e-02,  7.1495e-02, -3.0741e-02],
          [ 4.1883e-02, -6.2928e-02, -2.6270e-02],
          [-3.7356e-02,  4.3126e-02, -4.0868e-02]],

         [[ 2.2005e-02, -1.0397e-02, -2.5170e-02],
          [ 3.8298e-02,  2.3117e-02, -5.0126e-02],
          [ 7.4901e-03, -1.0262e-02,  1.4230e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 5.9908e-02, -2.1506e-02,  1.5890e-02],
          [ 3.0717e-02,  2.0142e-02, -9.8864e-03],
          [-3.1906e-02,  2.7628e-02,  1.0105e-02]],

         [[ 6.4196e-02,  9.8790e-03,  4.1527e-02],
          [ 1.0545e-01, -3.1195e-02,  6.9940e-02],
          [ 1.4258e-02, -2.1800e-02,  2.2159e-02]],

         [[-3.7807e-02, -1.6214e-02,  1.1581e-02],
          [-7.1128e-02,  6.6353e-02,  4.9408e-02],
          [ 2.5427e-02, -8.6879e-03,  2.1608e-02]],

         ...,

         [[ 5.2790e-02,  3.2031e-02, -3.1738e-02],
          [-4.1406e-02, -5.4300e-03,  4.9829e-02],
          [ 4.3594e-02, -3.1675e-02, -2.4460e-02]],

         [[ 4.3177e-02,  1.7420e-02, -2.1167e-02],
          [ 2.0169e-02, -2.8777e-03,  3.5872e-02],
          [-7.0400e-03, -1.0027e-02,  2.6520e-02]],

         [[-3.6262e-02, -7.3569e-03, -4.7364e-03],
          [ 3.5770e-02, -6.2430e-03, -3.9172e-02],
          [-1.3531e-02, -1.8476e-02, -2.2455e-02]]],


        [[[ 1.9656e-02, -2.6382e-02,  8.6204e-02],
          [ 2.2986e-02,  9.4972e-03,  2.1005e-02],
          [-2.2966e-02, -4.4935e-02,  5.3979e-02]],

         [[-6.3879e-03, -2.9785e-02,  4.9062e-02],
          [ 2.7343e-02, -6.2203e-02, -7.0986e-02],
          [ 3.8347e-02,  4.0044e-02, -3.6342e-02]],

         [[ 3.6007e-02, -4.1045e-02, -7.8831e-03],
          [ 4.7112e-02, -5.0052e-02,  7.6678e-03],
          [-4.0182e-02,  2.9555e-03,  3.9310e-02]],

         ...,

         [[-3.7357e-02,  3.1734e-02, -3.0515e-02],
          [-6.8555e-02, -3.2216e-02, -5.1327e-02],
          [-6.7167e-02, -2.7938e-02,  8.7616e-03]],

         [[ 4.9533e-02, -2.3786e-03, -3.2605e-02],
          [-4.8184e-03, -9.4569e-05,  7.2461e-03],
          [-8.1588e-02,  3.3679e-02, -1.1698e-02]],

         [[-7.8989e-02, -5.5757e-02, -8.5093e-03],
          [-1.1377e-02,  7.3513e-02,  5.0712e-02],
          [-2.5506e-02, -6.0282e-02,  6.9878e-02]]],


        [[[-7.2617e-02, -2.0038e-02,  5.4955e-02],
          [-1.0307e-02, -9.8964e-03, -1.6306e-02],
          [-3.4018e-02, -2.0577e-03, -1.8627e-02]],

         [[-2.0481e-02, -7.8884e-02,  4.3190e-02],
          [ 6.4301e-02, -2.9354e-02,  4.4030e-02],
          [-3.2411e-03,  2.7335e-02,  3.6970e-02]],

         [[ 1.9524e-02,  9.6247e-03, -3.6321e-02],
          [ 2.0409e-02, -5.1949e-02, -3.3348e-02],
          [ 4.5139e-03,  9.0271e-03, -1.5214e-02]],

         ...,

         [[-5.8626e-02,  2.9595e-03,  1.5696e-02],
          [-3.0337e-02, -1.7236e-02, -8.9845e-02],
          [-2.0864e-02, -6.8129e-02, -2.9867e-02]],

         [[ 2.7428e-02,  3.4449e-02,  3.1050e-02],
          [-4.0885e-02,  3.9727e-02,  3.8362e-02],
          [-2.1896e-02, -2.2094e-03, -5.1066e-02]],

         [[ 1.6146e-02, -4.2342e-02, -7.2439e-03],
          [ 8.5691e-02,  5.0162e-02,  1.0409e-02],
          [-2.1048e-02, -1.1829e-02,  7.5403e-03]]],


        ...,


        [[[-2.5732e-02, -9.4883e-03, -4.1046e-02],
          [-3.2669e-02, -4.8590e-03,  2.9972e-02],
          [ 3.1295e-02,  2.6692e-02,  4.4775e-03]],

         [[-3.3706e-02, -2.6510e-02, -2.8758e-02],
          [-6.2675e-02,  5.7644e-02,  9.1403e-02],
          [-1.1430e-02,  3.6128e-03, -3.9716e-02]],

         [[-1.3012e-05, -1.4259e-02, -3.8234e-02],
          [ 2.2851e-02, -4.6494e-02, -2.1171e-02],
          [ 5.6943e-02,  5.8189e-02,  1.2940e-02]],

         ...,

         [[ 1.1129e-02,  3.8147e-02,  1.6738e-02],
          [ 4.2427e-02,  1.9818e-02, -7.8881e-02],
          [ 1.4927e-02,  3.9817e-02,  3.9194e-02]],

         [[ 1.9464e-02,  1.4691e-02,  5.0395e-03],
          [-6.9857e-02, -2.2001e-02, -3.2159e-02],
          [ 7.4803e-02,  1.3316e-02,  1.1130e-02]],

         [[ 9.0469e-03,  9.0552e-02,  2.0102e-02],
          [ 4.9047e-02,  5.3768e-03, -4.3206e-03],
          [-3.9331e-02,  1.1421e-02, -2.6620e-02]]],


        [[[-1.8055e-02, -1.7305e-02, -3.3426e-02],
          [ 6.0441e-04, -7.8970e-02,  4.2294e-02],
          [ 7.1082e-02, -5.8926e-02,  3.3660e-02]],

         [[ 2.8930e-02, -4.4537e-02, -3.6909e-02],
          [-2.9542e-02, -1.7191e-02, -1.4634e-02],
          [-4.2533e-02,  6.9288e-02,  5.1523e-02]],

         [[ 5.0294e-02, -3.1737e-02, -8.1329e-03],
          [-2.8813e-02, -2.9932e-02, -7.5027e-02],
          [-5.0353e-02, -2.5697e-02, -6.7786e-02]],

         ...,

         [[ 3.3193e-02, -6.1445e-02,  6.3345e-02],
          [ 4.4509e-02, -1.6011e-03, -3.8579e-02],
          [ 3.7302e-02, -1.7170e-02, -4.0954e-03]],

         [[ 4.0589e-02, -7.3917e-02,  7.1385e-02],
          [ 3.8287e-02, -4.8737e-02, -1.3972e-03],
          [-4.7440e-03,  5.7909e-02, -3.6479e-02]],

         [[-1.3309e-02,  1.1475e-03, -8.4021e-03],
          [ 5.8888e-02,  8.6804e-02, -3.5124e-02],
          [-2.6744e-02,  2.3386e-02, -4.5556e-02]]],


        [[[ 1.0252e-01, -5.0138e-02, -4.3599e-02],
          [ 4.3909e-02, -1.9471e-02, -1.7430e-02],
          [ 4.3187e-02, -5.9068e-02, -2.0064e-02]],

         [[-2.3437e-02,  2.7346e-02, -1.8781e-02],
          [ 3.1580e-03,  3.5742e-02,  3.2919e-02],
          [ 7.0250e-03,  8.2603e-03, -1.3293e-01]],

         [[ 4.3930e-03,  3.9496e-03, -4.4533e-02],
          [-3.9176e-02, -4.4845e-02, -2.7589e-02],
          [ 5.1574e-02, -1.2243e-02,  2.4671e-02]],

         ...,

         [[-8.5188e-03,  4.2969e-02, -2.0987e-02],
          [ 1.3105e-02, -1.7787e-02, -1.9280e-02],
          [-1.2537e-02, -6.9351e-02, -3.5857e-02]],

         [[ 5.8934e-02,  2.6070e-02,  2.8322e-02],
          [ 1.1536e-02,  3.3073e-02, -2.2428e-02],
          [-3.5144e-02,  2.8804e-02,  3.9423e-02]],

         [[-3.2463e-02, -4.4325e-02,  3.2672e-02],
          [-2.1483e-02, -7.7763e-03,  9.0835e-02],
          [ 3.6698e-02,  2.1281e-02, -1.8208e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1600]],

         [[ 0.0069]],

         [[-0.0487]],

         ...,

         [[-0.0480]],

         [[ 0.1251]],

         [[ 0.0677]]],


        [[[ 0.0587]],

         [[ 0.0781]],

         [[ 0.0101]],

         ...,

         [[ 0.0166]],

         [[ 0.0292]],

         [[ 0.1209]]],


        [[[-0.0244]],

         [[ 0.0021]],

         [[-0.1623]],

         ...,

         [[ 0.0071]],

         [[ 0.0319]],

         [[-0.1413]]],


        ...,


        [[[-0.0615]],

         [[-0.0235]],

         [[ 0.2482]],

         ...,

         [[-0.0203]],

         [[ 0.0819]],

         [[ 0.1602]]],


        [[[ 0.0426]],

         [[ 0.0053]],

         [[-0.0571]],

         ...,

         [[ 0.0727]],

         [[ 0.0836]],

         [[ 0.0836]]],


        [[[ 0.0265]],

         [[ 0.0243]],

         [[ 0.0794]],

         ...,

         [[-0.1248]],

         [[-0.0870]],

         [[ 0.0252]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-0.0365, -0.0125,  0.0573],
          [-0.0403, -0.0227, -0.0405],
          [ 0.0122, -0.0338, -0.0753]],

         [[ 0.0496,  0.0752, -0.0505],
          [-0.0176,  0.0566,  0.0255],
          [ 0.0341,  0.0454, -0.0142]],

         [[-0.0394,  0.0054, -0.0848],
          [-0.0517,  0.0280,  0.0127],
          [-0.0165, -0.0158,  0.0009]],

         ...,

         [[ 0.1044,  0.0219,  0.0251],
          [ 0.0385,  0.0018, -0.0015],
          [ 0.0473, -0.0183, -0.0351]],

         [[ 0.0283, -0.0277, -0.0718],
          [-0.0275,  0.0312, -0.0593],
          [ 0.0777, -0.0351, -0.0202]],

         [[-0.0110, -0.0433,  0.0486],
          [-0.0133,  0.0069, -0.0164],
          [ 0.0048,  0.0406, -0.0356]]],


        [[[-0.0416,  0.0506, -0.0354],
          [ 0.0193,  0.0247,  0.0293],
          [-0.0912, -0.0241,  0.0505]],

         [[-0.0455, -0.0479,  0.0809],
          [ 0.0362, -0.0069, -0.0346],
          [-0.0647,  0.0079,  0.0099]],

         [[ 0.0306,  0.0019,  0.0030],
          [ 0.0162, -0.0205,  0.0412],
          [-0.0567, -0.0716,  0.0336]],

         ...,

         [[ 0.0344,  0.0315,  0.0813],
          [ 0.0152,  0.0301, -0.0262],
          [ 0.0156, -0.0682,  0.0086]],

         [[ 0.0215,  0.0289, -0.1244],
          [ 0.0228, -0.0210, -0.0185],
          [ 0.0146,  0.0703, -0.0293]],

         [[-0.0537,  0.0475,  0.0010],
          [ 0.0088,  0.0345, -0.0296],
          [ 0.0214, -0.0361, -0.0049]]],


        [[[ 0.0166,  0.1374,  0.0039],
          [ 0.0170, -0.0399, -0.0355],
          [ 0.0215,  0.0208, -0.0169]],

         [[ 0.0040,  0.0319, -0.0011],
          [-0.0221,  0.0217, -0.0086],
          [ 0.0593, -0.0121, -0.0389]],

         [[-0.0769, -0.0729,  0.0287],
          [-0.0093,  0.0352,  0.0225],
          [ 0.0261, -0.0460,  0.0108]],

         ...,

         [[-0.0201,  0.0528, -0.0641],
          [ 0.0246,  0.0338,  0.0465],
          [ 0.0189, -0.0123, -0.0470]],

         [[ 0.0124,  0.0444,  0.0403],
          [-0.0376,  0.0141,  0.0440],
          [-0.0160,  0.1014,  0.0030]],

         [[-0.0194, -0.0474,  0.0635],
          [ 0.0163,  0.0013, -0.0181],
          [-0.0391,  0.0072, -0.0682]]],


        ...,


        [[[-0.0546, -0.0159, -0.0347],
          [-0.0130,  0.0037, -0.0173],
          [ 0.0153, -0.0236, -0.0114]],

         [[-0.0635,  0.0375, -0.0135],
          [-0.0174, -0.0581,  0.0270],
          [-0.0236, -0.0080, -0.0271]],

         [[-0.0128, -0.0232, -0.0006],
          [-0.0636, -0.0384,  0.0785],
          [ 0.0206, -0.0192, -0.0161]],

         ...,

         [[ 0.0276,  0.0589,  0.0394],
          [ 0.0600, -0.0248,  0.0048],
          [ 0.0932, -0.0602,  0.0203]],

         [[-0.0496, -0.0443,  0.0188],
          [ 0.0066, -0.0386,  0.0875],
          [ 0.0861, -0.0447, -0.0321]],

         [[ 0.0356, -0.0254, -0.0461],
          [-0.0431, -0.0719,  0.0229],
          [ 0.0534,  0.0738,  0.0214]]],


        [[[ 0.0485, -0.0255, -0.0244],
          [-0.0798, -0.0127,  0.0390],
          [-0.0487, -0.0047,  0.0067]],

         [[ 0.0234,  0.0077, -0.0244],
          [-0.0025, -0.0164, -0.0185],
          [-0.0099, -0.0891, -0.0091]],

         [[ 0.0172,  0.0102,  0.0476],
          [-0.0473,  0.0327, -0.0276],
          [-0.0259, -0.0004,  0.0766]],

         ...,

         [[ 0.0130, -0.0074,  0.0285],
          [-0.0598,  0.0477, -0.0422],
          [-0.0438, -0.1161,  0.0114]],

         [[-0.0361,  0.0380,  0.0009],
          [ 0.0096,  0.0644, -0.0172],
          [-0.0313,  0.0463, -0.0095]],

         [[-0.0123, -0.0286,  0.0075],
          [-0.0147,  0.0407,  0.0137],
          [ 0.0666,  0.0147, -0.0306]]],


        [[[-0.0211, -0.0239,  0.0215],
          [-0.0219,  0.0304,  0.0196],
          [-0.0259,  0.0292, -0.0682]],

         [[ 0.0100,  0.0216,  0.0542],
          [-0.0560, -0.0449, -0.0475],
          [ 0.0209,  0.0247, -0.0232]],

         [[ 0.0822, -0.0321,  0.0558],
          [-0.0315,  0.0142,  0.0258],
          [-0.0196, -0.0199, -0.0136]],

         ...,

         [[ 0.0286, -0.0672, -0.0284],
          [-0.0185, -0.0539, -0.0098],
          [-0.0174, -0.0770, -0.0989]],

         [[-0.0202, -0.0361,  0.0145],
          [-0.0275,  0.0406, -0.0652],
          [ 0.0369, -0.0186,  0.0387]],

         [[-0.0792,  0.0281, -0.0061],
          [ 0.0223, -0.0780,  0.0004],
          [-0.0066, -0.0111,  0.0560]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 7.9123e-02, -1.0839e-02, -5.9847e-02],
          [-3.8187e-02, -4.7606e-02,  1.1837e-02],
          [ 1.2993e-02,  3.8642e-02, -3.6607e-02]],

         [[ 4.9167e-02,  3.3929e-02,  7.8650e-03],
          [-1.3664e-02,  6.9628e-02, -2.3210e-02],
          [ 4.1763e-02,  6.2373e-03, -4.9830e-03]],

         [[ 1.7844e-02,  6.6199e-02, -7.3642e-02],
          [-2.0316e-02,  6.2762e-02,  4.9122e-02],
          [-5.9794e-02,  9.9768e-03, -3.1135e-02]],

         ...,

         [[ 3.2710e-02, -5.7951e-03,  1.9934e-02],
          [ 2.1326e-02,  4.1774e-03, -6.9788e-03],
          [ 5.9878e-02,  2.2553e-02,  6.3059e-03]],

         [[-3.5321e-02, -3.6220e-02, -1.5169e-02],
          [ 1.1578e-01,  2.1631e-02,  6.8993e-02],
          [ 7.1886e-02,  2.9714e-03,  9.0027e-03]],

         [[ 4.8702e-02, -1.1499e-02,  5.8213e-02],
          [-6.2754e-02, -9.2816e-02, -2.7362e-03],
          [-2.9709e-02,  4.7719e-02,  1.6616e-02]]],


        [[[ 5.1751e-02,  9.6526e-02, -2.6250e-02],
          [-5.1086e-02,  3.0381e-02,  2.9775e-02],
          [-8.4044e-03, -9.5032e-02,  3.1457e-02]],

         [[ 5.3353e-02, -1.8496e-02, -9.9753e-02],
          [ 3.5047e-02, -1.1028e-02,  1.6094e-02],
          [ 6.8559e-02, -2.3875e-02, -3.8932e-02]],

         [[-2.3692e-02, -6.3343e-03,  1.4548e-01],
          [-2.4868e-02, -7.5172e-02, -5.4750e-03],
          [-6.8742e-02,  5.0655e-02,  3.6617e-02]],

         ...,

         [[-2.2155e-02,  2.3232e-02, -8.4117e-02],
          [ 4.4707e-02, -2.5273e-02,  1.2137e-02],
          [-6.7076e-02, -4.7354e-02, -6.9386e-03]],

         [[ 3.6226e-02, -3.0916e-02,  8.6893e-03],
          [-1.6368e-02, -5.3074e-02, -3.7718e-02],
          [-7.0952e-02,  5.1633e-02, -2.3008e-02]],

         [[-3.2962e-02,  7.5806e-03,  1.8593e-02],
          [ 4.7094e-03, -1.7869e-02,  5.0215e-02],
          [-8.7380e-02, -1.8193e-02,  1.1155e-01]]],


        [[[ 5.4518e-02,  6.9626e-04, -5.6557e-02],
          [-7.8084e-02, -1.7153e-02,  7.4171e-02],
          [-1.4180e-02, -3.5464e-03, -3.4706e-03]],

         [[-1.6358e-02,  3.3043e-02, -3.2709e-02],
          [-3.2230e-02,  2.0873e-02,  5.6110e-03],
          [-8.4805e-03, -2.4048e-03, -1.1747e-02]],

         [[-2.1639e-02, -2.9782e-02,  7.8637e-03],
          [-2.7584e-03,  8.0257e-03, -7.4861e-03],
          [-1.6552e-02, -2.0230e-03,  6.5598e-02]],

         ...,

         [[ 1.4443e-02, -2.4920e-02, -1.3162e-02],
          [ 2.7382e-02, -1.8217e-02, -1.4994e-02],
          [-1.0355e-01, -6.6108e-02,  5.9343e-02]],

         [[-4.3345e-02, -3.2504e-02, -1.5925e-02],
          [ 4.5012e-02, -6.0575e-02, -4.0549e-02],
          [ 1.5485e-02,  6.7147e-02, -3.3687e-02]],

         [[-4.1939e-02,  7.3338e-02,  1.4544e-02],
          [-6.3492e-02,  1.8778e-02,  1.6758e-02],
          [-2.8659e-02, -2.7847e-03,  1.1961e-02]]],


        ...,


        [[[-1.7336e-02,  1.7191e-02,  2.6324e-03],
          [ 1.0575e-01,  2.1157e-03, -6.6062e-02],
          [-5.2836e-03,  3.0180e-02,  9.6585e-02]],

         [[-4.2331e-03,  3.1054e-02, -4.4828e-02],
          [ 1.1037e-02,  2.3202e-03,  7.6291e-02],
          [ 4.7443e-02, -5.8689e-02, -1.6710e-02]],

         [[ 7.9759e-03,  2.6719e-02,  4.7223e-02],
          [-5.1606e-02,  1.5291e-02,  2.3913e-02],
          [-9.7014e-03,  3.2502e-02,  1.8995e-03]],

         ...,

         [[-3.0316e-02, -4.4822e-02,  6.0392e-02],
          [ 6.0812e-02,  1.0790e-02, -2.1569e-02],
          [ 6.1601e-02, -5.7197e-02, -9.7874e-03]],

         [[-6.9307e-04, -6.3299e-03, -7.5620e-02],
          [ 1.5792e-02,  3.7161e-03, -9.4508e-03],
          [ 4.5906e-02, -6.6598e-02, -1.9642e-02]],

         [[-1.3940e-03,  2.3426e-02, -3.6398e-02],
          [ 8.9480e-04, -4.7150e-02,  1.2773e-02],
          [-4.0276e-02,  5.3925e-03,  1.5741e-02]]],


        [[[ 5.2840e-02, -7.8434e-03, -6.4695e-02],
          [ 1.6090e-02, -2.8458e-02,  7.4334e-03],
          [ 6.0501e-03, -1.1339e-02, -4.0919e-02]],

         [[ 5.1655e-02, -9.5934e-03,  1.2184e-05],
          [-1.6768e-02,  3.6349e-02, -7.4805e-03],
          [ 1.4526e-02, -5.4667e-03,  2.6424e-02]],

         [[-1.7214e-02, -2.5968e-02,  4.8081e-02],
          [-5.3115e-04, -5.1315e-02, -2.2822e-02],
          [ 4.2672e-03, -2.5688e-02,  4.6430e-02]],

         ...,

         [[-9.4876e-02, -2.5046e-02, -1.3189e-02],
          [ 4.8743e-02,  1.4143e-02, -1.7109e-02],
          [ 9.9549e-03, -3.0537e-02, -2.2056e-02]],

         [[ 3.7121e-02, -1.1111e-02, -6.7044e-02],
          [-6.1216e-02,  3.7389e-03, -2.5898e-02],
          [-1.8397e-02,  6.1172e-03,  3.1648e-03]],

         [[ 8.3872e-03,  7.4973e-03, -3.0200e-02],
          [ 1.2350e-02, -1.0241e-02,  4.3710e-02],
          [ 3.5135e-03,  7.0825e-03,  6.5620e-02]]],


        [[[-3.8570e-02,  1.7301e-03,  6.5460e-03],
          [ 4.4661e-03,  5.9829e-03,  1.4049e-02],
          [-7.5144e-03, -6.4326e-03, -4.8705e-02]],

         [[-5.1230e-02, -6.7387e-03,  6.7680e-02],
          [ 7.7358e-04,  2.6378e-02, -7.9821e-02],
          [ 3.4891e-02, -4.5875e-02,  1.9448e-02]],

         [[-8.7820e-03,  2.2372e-02, -5.4238e-02],
          [-2.1482e-03, -3.6305e-03, -8.6663e-02],
          [ 7.1541e-02,  1.7855e-02, -2.6619e-02]],

         ...,

         [[ 1.4504e-02,  8.2379e-03,  4.6559e-02],
          [ 1.3031e-02, -1.0554e-02,  9.1313e-02],
          [ 9.5513e-02, -8.7145e-02,  9.1924e-03]],

         [[ 2.7832e-03, -1.2459e-02, -8.6094e-02],
          [ 3.3211e-02, -4.7881e-02,  1.6620e-03],
          [ 1.1759e-02,  6.8933e-02, -1.6094e-02]],

         [[ 3.0662e-03, -6.3789e-02,  6.4693e-02],
          [-3.1025e-03,  4.1273e-02,  1.5989e-02],
          [ 3.8540e-02, -7.3270e-02, -2.5199e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 22:00:27,310 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 4:20:00, time: 0.156, data_time: 0.017, memory: 547, loss_flow: 112.1413, loss: 112.1413, grad_norm: 4.1967
2022-10-09 22:00:32,691 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 3:39:32, time: 0.108, data_time: 0.004, memory: 547, loss_flow: 88.1419, loss: 88.1419, grad_norm: 3.5768
2022-10-09 22:00:38,318 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 3:28:42, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 98.1359, loss: 98.1359, grad_norm: 4.1099
2022-10-09 22:00:43,894 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 3:22:49, time: 0.112, data_time: 0.012, memory: 547, loss_flow: 129.4067, loss: 129.4067, grad_norm: 4.9883
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 3.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 70, in __call__
    img2 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


