2022-10-09 16:21:01,404 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 16:21:01,406 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 16:21:01,467 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 16:21:01,468 - mmflow - INFO - Distributed training: False
2022-10-09 16:21:02,307 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=2,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09'
auto_resume = False
gpu_ids = [0]

2022-10-09 16:21:02,309 - mmflow - INFO - Set random seed to 1279113950, deterministic: False
2022-10-09 16:21:02,389 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:21:02,471 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:21:02,496 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 16:21:03,744 - mmflow - INFO - dataset size 1200
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:150: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 16:21:05,530 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 16:21:05,644 - mmflow - INFO - Start running, host: s.starace@gnode02, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09
2022-10-09 16:21:05,645 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 16:21:05,646 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 16:21:05,647 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-6.6324e-02, -1.8115e-04,  1.5256e-02,  ..., -2.4015e-03,
            2.4771e-02,  3.0390e-02],
          [ 3.2497e-02, -2.4843e-02,  4.6604e-02,  ...,  4.6098e-03,
           -7.7114e-03,  1.0847e-02],
          [-2.8588e-02,  6.9189e-03,  2.4444e-02,  ...,  1.9092e-02,
            5.1532e-02, -5.0687e-03],
          ...,
          [-3.6009e-02, -2.6027e-02,  6.3884e-04,  ..., -1.1332e-02,
           -3.3935e-02, -8.8352e-04],
          [-1.1513e-02, -1.7789e-02,  3.2412e-03,  ...,  7.5469e-03,
           -2.4485e-02, -4.4581e-02],
          [-2.0470e-02,  1.5184e-02,  2.2485e-02,  ...,  7.9408e-03,
           -3.4001e-04, -1.1596e-02]],

         [[-7.0131e-03, -6.7896e-03,  3.3384e-02,  ...,  1.6050e-04,
            2.9409e-02,  4.2951e-02],
          [-4.8060e-02, -1.4478e-02,  8.9469e-03,  ...,  1.9427e-03,
            2.2427e-03, -8.8611e-03],
          [ 1.4652e-02,  4.9983e-03,  3.1812e-02,  ...,  4.6241e-02,
           -8.5961e-03,  9.1673e-04],
          ...,
          [-2.1515e-02,  3.2598e-02, -6.8020e-03,  ...,  2.1288e-02,
            6.7465e-03,  5.1178e-02],
          [ 1.5831e-02,  5.4866e-03,  5.5332e-02,  ..., -2.4759e-02,
           -1.5620e-03, -3.3455e-02],
          [ 5.4294e-02,  1.4301e-02, -5.5364e-02,  ...,  2.4297e-02,
           -4.7914e-03,  9.2377e-02]],

         [[-6.0547e-03,  6.4823e-03,  7.1763e-02,  ..., -1.0733e-02,
            2.7120e-02,  3.4869e-02],
          [ 3.9728e-02,  8.5088e-03,  6.8597e-03,  ...,  3.0611e-02,
            4.5541e-02,  4.8165e-02],
          [-1.0508e-02, -3.1922e-02, -2.3270e-02,  ...,  8.1067e-04,
            4.1048e-02, -1.9898e-02],
          ...,
          [ 1.0707e-02,  6.7865e-03, -1.4458e-02,  ...,  3.1383e-03,
           -1.2056e-02,  3.5066e-03],
          [-4.1554e-02,  1.4131e-02,  3.4387e-03,  ..., -9.0420e-03,
           -2.5483e-02, -1.8771e-02],
          [ 3.2953e-03, -3.8007e-02, -1.5217e-02,  ...,  2.7340e-02,
            4.5619e-02, -6.3053e-02]]],


        [[[ 1.4936e-02, -3.5158e-04, -8.4749e-03,  ..., -3.1250e-02,
           -2.1628e-02,  2.0703e-02],
          [-3.4436e-02, -1.2689e-02,  2.8697e-02,  ...,  1.2097e-02,
           -1.7272e-02,  4.2197e-02],
          [-3.5747e-02,  4.2046e-03, -1.0329e-02,  ...,  4.4747e-02,
            1.8945e-02,  4.1370e-02],
          ...,
          [-1.3472e-02,  4.4710e-02, -2.5139e-02,  ...,  2.0816e-02,
           -7.2132e-03, -5.0135e-02],
          [-5.6702e-02, -3.2669e-02,  8.8002e-03,  ...,  6.8945e-03,
            1.4287e-03,  9.2829e-03],
          [ 3.1393e-02,  1.8278e-02,  5.7250e-03,  ...,  1.0218e-03,
            1.1475e-02,  1.2901e-02]],

         [[ 2.1941e-02, -1.2700e-04, -4.8823e-02,  ...,  2.1497e-02,
            7.5234e-03,  2.0280e-02],
          [ 1.8879e-02, -9.4177e-03, -4.7387e-03,  ...,  2.1853e-03,
           -6.2468e-02, -9.4688e-03],
          [-3.5188e-02, -5.1465e-02,  1.1160e-02,  ..., -7.3301e-03,
           -1.6622e-02, -2.1353e-02],
          ...,
          [-6.4668e-03,  3.0246e-02, -3.4443e-02,  ...,  7.3332e-02,
            2.2343e-02, -4.2837e-03],
          [ 3.6322e-02, -1.8309e-02, -5.2880e-03,  ...,  2.9017e-02,
            1.7802e-02,  4.4372e-02],
          [ 2.1880e-02, -3.5720e-02,  5.4259e-03,  ..., -1.2473e-02,
            1.9275e-02,  7.0081e-03]],

         [[ 3.5772e-03, -3.0731e-03,  3.1839e-02,  ..., -2.7893e-02,
           -3.5088e-02,  8.0918e-03],
          [ 2.2438e-02,  2.9435e-02,  6.0056e-03,  ...,  1.4457e-02,
           -6.6380e-03, -9.4123e-03],
          [-1.1076e-02,  4.5872e-03,  3.4388e-02,  ..., -2.9630e-03,
            1.6370e-02,  1.6630e-02],
          ...,
          [ 2.6079e-02, -6.6921e-03,  3.0579e-02,  ...,  1.3214e-02,
           -2.3719e-02,  1.5247e-02],
          [-1.9418e-02, -6.5542e-04,  8.7469e-03,  ..., -3.7291e-03,
            4.2568e-02, -5.8627e-02],
          [ 2.8573e-02, -4.1445e-02,  4.5615e-03,  ...,  1.2915e-02,
            8.4061e-03,  4.1040e-02]]],


        [[[ 1.8026e-02,  2.7100e-02,  2.1433e-02,  ...,  2.5656e-02,
           -3.8443e-03, -4.5244e-03],
          [ 1.6474e-02, -2.0276e-03, -4.8310e-02,  ..., -2.7871e-02,
            6.4101e-03,  3.9748e-02],
          [ 5.4363e-03,  4.7320e-02, -3.9197e-02,  ..., -9.6156e-03,
           -1.5745e-02,  4.1441e-03],
          ...,
          [-2.7893e-02, -4.4884e-02, -3.1995e-02,  ...,  1.2821e-02,
           -5.3187e-03,  7.5611e-03],
          [ 2.2205e-02,  2.7660e-02, -1.6928e-02,  ...,  1.9720e-03,
           -1.1063e-02,  2.2513e-02],
          [-1.1213e-02,  4.3916e-02,  4.0530e-02,  ..., -2.2896e-02,
            3.5522e-02, -1.4336e-04]],

         [[ 5.2401e-02,  1.0006e-02, -4.3757e-02,  ...,  3.8221e-02,
            4.8470e-03, -4.1243e-02],
          [-1.0751e-03,  9.2456e-03, -3.3568e-02,  ..., -1.8915e-02,
            2.2188e-02,  3.9880e-03],
          [ 2.8502e-02,  8.5587e-03,  4.9445e-02,  ...,  1.1831e-02,
           -4.0678e-02, -3.0162e-02],
          ...,
          [ 2.2856e-02, -2.3939e-02, -2.1169e-02,  ..., -4.9474e-03,
           -2.4974e-02, -7.0944e-03],
          [-1.3884e-02,  3.7366e-02,  7.3904e-04,  ...,  4.9205e-03,
            3.2758e-02,  3.5864e-02],
          [-8.9500e-03,  1.6230e-04, -8.2481e-04,  ...,  2.6475e-02,
           -1.8731e-02,  1.4243e-03]],

         [[-2.0703e-02, -1.7332e-02,  2.5961e-03,  ..., -2.1348e-02,
           -1.1606e-02, -6.0133e-02],
          [-1.4059e-02, -3.0680e-02,  2.2040e-02,  ..., -9.4931e-03,
            9.1579e-03, -2.1555e-02],
          [-2.0749e-02, -3.0849e-02, -2.0265e-02,  ..., -1.0235e-02,
           -1.0891e-02,  8.2561e-03],
          ...,
          [-2.1503e-02,  1.9441e-02, -1.4588e-02,  ..., -2.2748e-02,
            1.3660e-02,  3.2558e-02],
          [ 8.4448e-04,  1.4369e-02, -4.0850e-02,  ..., -4.8721e-02,
            1.1539e-02, -1.2295e-02],
          [ 1.2058e-02,  1.4808e-02,  3.5081e-03,  ..., -4.8323e-03,
            3.2158e-02,  5.0764e-03]]],


        ...,


        [[[ 4.3409e-03,  1.0741e-02,  7.5211e-03,  ...,  1.3953e-02,
           -4.1656e-04, -2.7187e-02],
          [ 5.5078e-02,  3.7056e-02, -1.1803e-02,  ..., -2.0654e-02,
            2.8752e-02, -7.6904e-03],
          [ 1.3556e-02,  1.0073e-03,  1.0034e-02,  ...,  1.0266e-02,
           -9.9132e-03,  3.5497e-02],
          ...,
          [ 3.8917e-02,  5.7461e-02,  6.1523e-04,  ..., -1.4796e-02,
            4.8156e-03,  1.6088e-02],
          [-1.5669e-02, -3.4149e-02,  1.5688e-02,  ..., -2.2054e-02,
           -3.8029e-02,  1.6127e-02],
          [ 3.1897e-02, -9.2042e-03,  1.7414e-03,  ...,  5.0345e-02,
           -9.1526e-04, -5.5545e-03]],

         [[ 3.3731e-03, -3.3687e-02,  2.0658e-02,  ..., -1.3052e-02,
            9.1045e-03, -2.1878e-03],
          [-1.1868e-02, -8.2397e-03,  9.1902e-03,  ...,  8.8914e-03,
           -5.8062e-02, -3.6381e-02],
          [-1.1930e-02, -1.2228e-02, -1.0698e-02,  ..., -9.6712e-03,
           -3.2287e-03, -1.4156e-02],
          ...,
          [ 1.0036e-02,  3.5278e-03,  3.2210e-02,  ..., -3.3110e-02,
            3.1614e-02, -2.0042e-02],
          [-8.8752e-03, -3.1702e-02,  4.3186e-02,  ..., -3.1656e-03,
            2.1083e-02,  9.5594e-03],
          [ 1.4289e-02, -3.0385e-02,  2.3984e-02,  ..., -1.2227e-02,
            3.8395e-03, -5.7309e-03]],

         [[ 1.8002e-02,  2.9629e-02,  4.3228e-02,  ...,  2.7200e-02,
            8.0109e-03,  9.2573e-03],
          [-4.4274e-03,  5.0757e-03,  1.9226e-02,  ..., -2.6202e-02,
           -3.0891e-02,  2.4194e-02],
          [ 2.3910e-02, -2.1455e-02, -6.2013e-03,  ..., -1.6353e-02,
            2.0189e-02, -5.5185e-02],
          ...,
          [-1.0842e-03,  2.0170e-02,  1.2846e-02,  ...,  4.2569e-02,
            4.5986e-03, -4.2669e-02],
          [ 5.0088e-03, -2.8539e-02, -2.4537e-02,  ..., -1.4301e-02,
            7.1149e-03,  1.4331e-02],
          [ 1.3579e-02, -1.4492e-02, -3.2677e-02,  ...,  1.4555e-02,
           -4.5722e-03,  1.2812e-02]]],


        [[[-2.3600e-02, -3.8208e-02,  2.9088e-02,  ...,  2.6083e-04,
           -2.9380e-02,  3.0608e-02],
          [ 1.2976e-02,  4.4033e-02,  4.5405e-02,  ...,  2.0325e-02,
            2.5121e-03,  3.2059e-02],
          [-1.8016e-02,  6.7783e-03,  3.0135e-02,  ..., -2.4131e-02,
            5.5194e-02, -4.0257e-02],
          ...,
          [ 1.6298e-02, -4.9529e-03, -9.0833e-03,  ...,  9.8467e-03,
            3.0553e-02,  4.5783e-02],
          [-1.1045e-02,  1.3604e-04,  3.9908e-02,  ..., -3.3897e-02,
            2.3148e-02, -3.2989e-02],
          [-3.3894e-03,  2.8376e-02, -2.4160e-02,  ...,  2.2557e-02,
           -2.5449e-02,  1.0463e-03]],

         [[ 2.5233e-03, -1.3364e-02,  5.2291e-02,  ...,  7.4156e-03,
            2.4045e-04,  3.4751e-02],
          [-1.5570e-02, -2.5164e-02, -1.6520e-02,  ...,  7.0166e-02,
            2.4871e-02,  4.8489e-02],
          [ 7.0702e-03, -1.2827e-02, -3.6752e-02,  ..., -1.8933e-02,
            1.5040e-02, -6.1776e-03],
          ...,
          [-3.9299e-03, -1.4894e-02,  1.4663e-03,  ...,  2.0623e-03,
           -7.7431e-03, -1.5827e-02],
          [ 1.7459e-02, -2.1086e-02,  1.9432e-02,  ...,  2.0931e-02,
            1.6655e-03,  3.1175e-02],
          [ 3.0590e-02, -6.7484e-02,  2.3107e-02,  ...,  9.1558e-03,
            3.7381e-02,  1.6641e-02]],

         [[ 9.8227e-03, -2.6437e-02, -2.2592e-02,  ..., -2.7976e-03,
           -1.2197e-02, -1.7183e-02],
          [ 2.7704e-02,  3.9833e-02,  3.4225e-02,  ...,  4.7624e-02,
            3.7457e-02, -1.2641e-02],
          [-3.6340e-03,  2.5190e-02, -7.1976e-03,  ..., -1.3425e-02,
           -3.0215e-02, -1.2550e-02],
          ...,
          [ 2.2111e-02,  3.6026e-02, -3.6421e-02,  ...,  2.3454e-02,
            3.7685e-02, -2.3199e-02],
          [-5.1326e-03, -4.4158e-02,  6.7337e-03,  ...,  5.0091e-02,
           -9.4367e-03,  1.9285e-02],
          [ 9.8336e-03, -7.2441e-03,  1.1485e-02,  ..., -8.2986e-04,
           -4.2650e-02, -9.9570e-03]]],


        [[[-1.6098e-02,  7.6317e-03,  1.2630e-03,  ..., -1.1030e-02,
           -3.6225e-02, -4.7523e-02],
          [-5.9312e-03, -5.4774e-03,  5.5389e-03,  ..., -8.4516e-03,
            1.5141e-02, -1.6570e-02],
          [-5.1287e-02, -1.0071e-02,  1.1286e-02,  ...,  1.5712e-02,
           -4.4567e-02,  3.2443e-03],
          ...,
          [-1.0335e-02,  1.4876e-02, -3.4188e-02,  ...,  3.8854e-02,
            1.1713e-02,  5.6606e-03],
          [-3.2904e-02,  1.6221e-02,  7.6535e-03,  ..., -5.0136e-03,
           -1.2884e-02, -3.8429e-02],
          [ 1.8435e-02,  1.3266e-03, -8.1366e-03,  ...,  3.0980e-02,
           -1.7500e-02, -2.1557e-03]],

         [[ 1.4436e-02, -2.6693e-02,  5.2758e-02,  ..., -3.4056e-03,
           -2.6199e-02,  2.7924e-02],
          [ 1.1845e-02,  2.7813e-02,  7.0018e-03,  ...,  2.7069e-02,
           -2.2809e-02,  2.2876e-02],
          [-6.3273e-04,  3.0605e-02, -2.6977e-02,  ..., -1.7676e-02,
            1.6488e-02, -1.5340e-02],
          ...,
          [ 5.7843e-03,  2.5213e-02,  2.2390e-04,  ..., -2.9438e-02,
           -7.0850e-03,  1.1709e-02],
          [-1.1828e-02,  2.6806e-02, -9.7029e-03,  ..., -1.9359e-02,
            6.3775e-03, -6.8024e-04],
          [ 3.0499e-02, -3.4311e-02,  4.9384e-03,  ...,  1.5648e-02,
           -2.3679e-03,  4.9276e-03]],

         [[ 1.7003e-02,  1.2152e-02, -1.4568e-02,  ..., -3.5576e-02,
           -4.2635e-02,  1.2310e-02],
          [ 3.0154e-02, -7.0690e-04, -2.4830e-02,  ...,  1.8235e-02,
            1.5033e-02,  6.0839e-02],
          [ 1.4781e-02, -1.4213e-02,  3.0887e-02,  ...,  1.7862e-02,
           -1.7786e-02,  1.7906e-02],
          ...,
          [ 8.6090e-03, -2.1812e-03, -4.4189e-05,  ..., -1.4019e-02,
           -6.5483e-03, -2.5529e-03],
          [-2.9310e-02,  5.0075e-02,  3.1256e-02,  ..., -3.2030e-02,
           -2.7067e-03, -1.1416e-02],
          [-8.4482e-03, -2.4699e-02, -1.6048e-02,  ...,  2.8146e-03,
            2.7088e-02,  4.2701e-02]]]], device='cuda:0', requires_grad=True)
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0636, -0.0436,  0.0075],
          [-0.0379,  0.0410, -0.0274],
          [-0.0762,  0.0011,  0.0756]],

         [[ 0.0413,  0.0059, -0.0273],
          [-0.0484,  0.0216, -0.0383],
          [-0.1376, -0.0058, -0.0911]],

         [[ 0.0165,  0.0309, -0.0439],
          [ 0.0447, -0.0585, -0.0748],
          [-0.1561,  0.0930, -0.2008]],

         ...,

         [[-0.0598,  0.0161, -0.0144],
          [ 0.0012, -0.0098, -0.0605],
          [-0.0077,  0.0362,  0.0293]],

         [[ 0.0457,  0.0907,  0.0322],
          [-0.0233, -0.0025,  0.0389],
          [-0.0029, -0.0004,  0.0280]],

         [[-0.0028, -0.0637,  0.0527],
          [ 0.0807, -0.0609,  0.0768],
          [ 0.1127,  0.0649,  0.0175]]],


        [[[ 0.0623, -0.0117, -0.1121],
          [ 0.0569,  0.0387,  0.0206],
          [ 0.0596, -0.1513,  0.0796]],

         [[ 0.0057, -0.0627, -0.0871],
          [ 0.0238,  0.0089,  0.0600],
          [-0.0732,  0.0833,  0.0098]],

         [[ 0.0421,  0.0542,  0.1224],
          [ 0.0290, -0.1032,  0.0327],
          [ 0.0552, -0.0040, -0.0190]],

         ...,

         [[-0.0356, -0.0738,  0.0318],
          [-0.0377, -0.0336, -0.0317],
          [-0.0357,  0.0277, -0.0696]],

         [[-0.0104, -0.0111, -0.1195],
          [-0.0287, -0.0761, -0.0147],
          [-0.0633, -0.0588,  0.0774]],

         [[ 0.0351, -0.0122,  0.0099],
          [ 0.0262,  0.0361,  0.0394],
          [-0.0507, -0.0760, -0.1471]]],


        [[[ 0.0220,  0.1065,  0.0051],
          [ 0.0095,  0.0297, -0.0275],
          [-0.0875, -0.0234,  0.0781]],

         [[ 0.0192, -0.0246, -0.0195],
          [-0.0284, -0.0579,  0.0014],
          [-0.0345, -0.0635, -0.0024]],

         [[-0.0698, -0.0640, -0.0433],
          [-0.0709,  0.0456,  0.0477],
          [-0.0281, -0.0090, -0.0372]],

         ...,

         [[-0.0017, -0.0888, -0.0938],
          [ 0.0972, -0.0513,  0.1128],
          [-0.0872,  0.0171,  0.0064]],

         [[-0.0937,  0.0012,  0.0230],
          [ 0.0539, -0.0153,  0.0624],
          [-0.0491, -0.0085,  0.0944]],

         [[ 0.0898, -0.1466,  0.0526],
          [-0.0383,  0.0505, -0.0388],
          [-0.0830,  0.0186,  0.0459]]],


        ...,


        [[[ 0.0128,  0.0200, -0.0568],
          [ 0.0338, -0.0477,  0.0068],
          [-0.1054,  0.0141, -0.1001]],

         [[-0.0763,  0.0196,  0.0574],
          [-0.0061,  0.0371,  0.0083],
          [-0.1159, -0.0048, -0.0134]],

         [[ 0.1170,  0.0078,  0.0671],
          [ 0.0294, -0.0429,  0.0138],
          [-0.1035, -0.0963, -0.0538]],

         ...,

         [[ 0.0374, -0.0055, -0.0304],
          [ 0.0454, -0.0641,  0.0447],
          [ 0.0121,  0.0956,  0.0436]],

         [[-0.0733,  0.0455, -0.0808],
          [ 0.0102,  0.0203, -0.0095],
          [ 0.0151,  0.0615, -0.0764]],

         [[ 0.0903, -0.0207, -0.0373],
          [ 0.0807, -0.0126,  0.0340],
          [ 0.0017, -0.0459,  0.1040]]],


        [[[ 0.0369, -0.0877, -0.0362],
          [ 0.0201, -0.0396, -0.0289],
          [-0.0805,  0.1009, -0.0703]],

         [[ 0.0014, -0.0495,  0.0288],
          [ 0.0628,  0.0247,  0.0158],
          [-0.0307,  0.0508,  0.0783]],

         [[-0.0670,  0.0532, -0.0969],
          [-0.0183,  0.0988, -0.0468],
          [ 0.0255, -0.0187, -0.0765]],

         ...,

         [[-0.0287, -0.1482,  0.0033],
          [ 0.0406, -0.0488,  0.0071],
          [ 0.0530,  0.0173,  0.1387]],

         [[ 0.0891,  0.0713,  0.0735],
          [ 0.0054, -0.0450,  0.0194],
          [-0.0827, -0.1298,  0.0445]],

         [[-0.0555, -0.0848,  0.0515],
          [-0.0724,  0.0769, -0.0905],
          [-0.0655, -0.1006, -0.0410]]],


        [[[ 0.0754,  0.0984, -0.0011],
          [ 0.0777,  0.0151,  0.1498],
          [ 0.0054, -0.0262,  0.0506]],

         [[ 0.0272,  0.0142,  0.1062],
          [ 0.0686, -0.0008,  0.0784],
          [ 0.0611,  0.0038,  0.0205]],

         [[ 0.1040,  0.0180, -0.0345],
          [ 0.0522, -0.0141, -0.0196],
          [ 0.0598,  0.0521, -0.0523]],

         ...,

         [[ 0.0366,  0.0141,  0.0162],
          [-0.0124,  0.0164, -0.0392],
          [-0.0010,  0.1355,  0.0291]],

         [[-0.0526, -0.0626, -0.0331],
          [ 0.0478, -0.0275, -0.0210],
          [ 0.0561,  0.0895,  0.0624]],

         [[ 0.0610, -0.0240,  0.0115],
          [-0.0867,  0.0410, -0.0054],
          [ 0.1213, -0.0138,  0.0800]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 0.1087,  0.0778,  0.0341],
          [ 0.0156, -0.0516, -0.0256],
          [ 0.0474, -0.0484,  0.0102]],

         [[ 0.0670,  0.0970, -0.0651],
          [-0.0276, -0.0171, -0.0284],
          [-0.0214,  0.1061, -0.0544]],

         [[ 0.0298, -0.0428, -0.0651],
          [-0.0548, -0.0322, -0.0163],
          [-0.0063, -0.0401, -0.1020]],

         ...,

         [[ 0.0029,  0.0139,  0.0607],
          [ 0.1192,  0.0004, -0.0890],
          [-0.0087, -0.0152,  0.0005]],

         [[-0.0695, -0.0003, -0.0612],
          [-0.1856,  0.0692, -0.0194],
          [ 0.0183,  0.0226, -0.0122]],

         [[ 0.0361, -0.0611, -0.0626],
          [ 0.0579,  0.0071, -0.1458],
          [-0.0124,  0.0674,  0.0466]]],


        [[[ 0.1005, -0.0622, -0.0456],
          [ 0.0179,  0.0663, -0.1095],
          [-0.0357, -0.0018, -0.1177]],

         [[ 0.0997,  0.0284, -0.0437],
          [-0.0031, -0.0208, -0.0065],
          [-0.0259,  0.0587, -0.0740]],

         [[-0.0814,  0.0520,  0.0095],
          [-0.0254, -0.0004,  0.0132],
          [ 0.0550,  0.0363, -0.0453]],

         ...,

         [[ 0.0416, -0.0042,  0.0204],
          [-0.0882, -0.0529, -0.0178],
          [-0.1043,  0.1284,  0.0657]],

         [[ 0.0012,  0.0587, -0.1167],
          [-0.0050, -0.0729, -0.0017],
          [-0.0418,  0.0259,  0.0375]],

         [[ 0.0410,  0.0481,  0.0395],
          [-0.0655, -0.0294,  0.0186],
          [ 0.0359,  0.0030, -0.0064]]],


        [[[-0.1130, -0.0932,  0.0346],
          [ 0.0089, -0.1042,  0.0237],
          [ 0.1618,  0.0241,  0.0565]],

         [[ 0.0085, -0.0477, -0.0122],
          [ 0.0214, -0.0154,  0.1112],
          [-0.0900, -0.0127,  0.0156]],

         [[-0.0124,  0.0362, -0.0440],
          [ 0.0166,  0.0046,  0.0011],
          [-0.0242, -0.0295,  0.0017]],

         ...,

         [[-0.0151, -0.0124,  0.0431],
          [ 0.0110, -0.0087, -0.0863],
          [-0.0295,  0.1297, -0.0676]],

         [[-0.1170,  0.0356, -0.0620],
          [-0.0050, -0.0218, -0.1418],
          [ 0.0508, -0.0320,  0.0088]],

         [[ 0.0277, -0.0149,  0.0508],
          [ 0.0291,  0.0109,  0.0158],
          [-0.0050,  0.0213,  0.0669]]],


        ...,


        [[[-0.0408, -0.0665,  0.0261],
          [ 0.0065,  0.0295,  0.0429],
          [-0.1025, -0.0074,  0.0423]],

         [[-0.0248,  0.0588,  0.0223],
          [-0.0502, -0.0188,  0.0325],
          [-0.0238,  0.0190, -0.0242]],

         [[ 0.0192, -0.0183, -0.0563],
          [-0.0568,  0.0670, -0.0036],
          [-0.0724, -0.0786,  0.1351]],

         ...,

         [[ 0.0857, -0.0817, -0.0541],
          [ 0.0473,  0.0337,  0.0534],
          [ 0.1013,  0.0287, -0.0499]],

         [[ 0.0955,  0.0305,  0.0241],
          [ 0.0008, -0.0235, -0.0176],
          [ 0.0353, -0.0905, -0.0391]],

         [[-0.0585, -0.0040,  0.0308],
          [-0.0537,  0.0306, -0.0100],
          [ 0.0149,  0.1121, -0.0646]]],


        [[[-0.0891,  0.0613, -0.0950],
          [ 0.0477, -0.0055, -0.0524],
          [-0.0227, -0.0804, -0.0076]],

         [[ 0.0246, -0.0030,  0.0415],
          [ 0.0335,  0.0290,  0.0273],
          [-0.0315, -0.0388,  0.0198]],

         [[-0.0654, -0.0485,  0.0755],
          [ 0.0391,  0.1177, -0.0282],
          [-0.0635,  0.0446,  0.0284]],

         ...,

         [[-0.0123,  0.0598,  0.0726],
          [-0.0217,  0.0337,  0.0268],
          [-0.0751,  0.0785,  0.0454]],

         [[-0.0168, -0.0379,  0.0006],
          [ 0.0626,  0.1066,  0.0770],
          [-0.0119,  0.0403, -0.0022]],

         [[-0.0172,  0.1022, -0.0769],
          [ 0.0360, -0.0069, -0.0187],
          [ 0.0580,  0.0365,  0.0624]]],


        [[[-0.0449,  0.0333,  0.0147],
          [ 0.0480,  0.0248,  0.0866],
          [ 0.1113, -0.0782, -0.0659]],

         [[ 0.0045, -0.0461, -0.0112],
          [-0.0726, -0.0117, -0.0376],
          [-0.0570,  0.0224, -0.0355]],

         [[ 0.0265,  0.0224, -0.0617],
          [-0.0070,  0.0522, -0.0211],
          [-0.0704,  0.0390,  0.0013]],

         ...,

         [[ 0.0635,  0.0179,  0.0751],
          [ 0.0070,  0.0693,  0.0552],
          [ 0.0378, -0.0917, -0.0291]],

         [[ 0.0025, -0.0337,  0.0762],
          [-0.0698,  0.0076,  0.0064],
          [ 0.0465, -0.0805,  0.0484]],

         [[ 0.0072,  0.0539, -0.0761],
          [ 0.0635, -0.0700,  0.0114],
          [-0.0039, -0.0211,  0.0416]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-2.9915e-02,  2.9292e-02,  7.2228e-03],
          [-2.8868e-02,  5.0747e-02, -4.8650e-03],
          [-1.8951e-02, -1.4569e-02,  4.1571e-02]],

         [[ 5.5141e-02, -8.8159e-02, -7.0198e-03],
          [ 9.8607e-03,  4.4777e-03, -1.1105e-02],
          [ 2.3844e-02, -1.9215e-02, -3.2120e-02]],

         [[-9.3751e-02, -6.1826e-02,  5.0668e-02],
          [ 6.2704e-02, -8.1585e-02,  1.0806e-01],
          [ 4.6310e-02,  4.7460e-02,  1.0496e-02]],

         ...,

         [[ 2.8991e-02,  3.0593e-03, -5.1496e-02],
          [-4.5683e-02, -1.1631e-01, -8.4122e-02],
          [ 3.2213e-02, -4.3609e-02, -1.7760e-02]],

         [[ 1.1640e-02, -1.0395e-01,  1.1962e-02],
          [ 4.4252e-02,  9.8337e-02, -1.0370e-01],
          [ 3.5669e-02, -4.3456e-02,  2.9145e-02]],

         [[ 6.1167e-02,  5.9253e-02, -6.8129e-02],
          [ 1.1110e-01, -8.5415e-02, -2.4868e-02],
          [-1.2790e-02,  8.9365e-02, -1.6166e-01]]],


        [[[ 2.2720e-02,  1.5851e-02,  6.9956e-02],
          [ 5.5878e-02,  6.7879e-02, -1.4466e-03],
          [ 6.4700e-04,  1.3173e-01, -6.7993e-02]],

         [[ 5.1686e-03, -2.7809e-02,  1.1716e-01],
          [ 1.1292e-01, -2.9564e-02,  6.8371e-02],
          [-2.3688e-02, -3.9448e-02,  5.5813e-02]],

         [[ 1.5434e-02,  7.7806e-03,  1.3364e-01],
          [-6.0025e-02, -1.1122e-02,  3.5766e-02],
          [ 1.6044e-01,  7.1684e-02, -6.5140e-02]],

         ...,

         [[-1.5561e-02, -2.0066e-03,  7.8710e-02],
          [-9.6361e-02, -1.9251e-02,  6.5637e-02],
          [ 7.1955e-03, -2.7653e-02,  2.8835e-03]],

         [[-5.2524e-03,  6.3056e-02, -1.2602e-02],
          [-1.6332e-02,  1.5544e-01, -2.2253e-02],
          [ 2.5415e-02, -1.3112e-01,  1.3813e-02]],

         [[ 2.0722e-02,  3.4319e-02,  5.8647e-03],
          [-7.9925e-02, -3.4543e-02,  7.5266e-03],
          [-3.6431e-02, -1.0216e-01,  1.6198e-01]]],


        [[[-5.4407e-03,  2.9907e-02, -5.8693e-02],
          [ 1.5130e-01,  7.9638e-02,  1.4214e-02],
          [ 3.1706e-02,  3.3252e-02, -3.7681e-02]],

         [[-1.9691e-02, -3.8543e-02, -6.3343e-02],
          [ 2.1881e-02,  3.7605e-02, -2.7350e-03],
          [-9.6759e-02, -5.7775e-02, -1.9270e-02]],

         [[-9.1295e-03,  7.3694e-02, -1.3697e-01],
          [-4.6257e-03, -6.7487e-02, -4.7389e-02],
          [ 6.0265e-02, -6.4979e-02, -3.9607e-02]],

         ...,

         [[-4.6041e-02, -4.5452e-02, -1.4911e-02],
          [ 8.7321e-03, -4.1943e-02, -1.3474e-02],
          [ 4.1987e-02, -6.1443e-03, -1.1702e-01]],

         [[-2.5823e-02,  3.4521e-02, -1.9211e-02],
          [ 2.6525e-03, -3.6700e-05, -5.2427e-03],
          [-9.9476e-02, -1.1235e-01,  1.3202e-02]],

         [[ 6.2926e-02, -4.6230e-02, -1.1468e-01],
          [ 2.3572e-02,  5.8378e-03,  5.2796e-02],
          [-4.1870e-02, -9.9823e-02,  5.9327e-02]]],


        ...,


        [[[-4.6706e-02,  2.1083e-02, -1.7982e-02],
          [-9.7794e-02,  6.0307e-02, -7.1075e-02],
          [-2.8846e-02,  2.3288e-02,  8.7042e-02]],

         [[ 5.4406e-02, -6.4425e-02,  2.7504e-02],
          [ 5.1205e-02, -2.2486e-04, -6.1452e-02],
          [-2.8614e-02,  3.3339e-02, -3.8029e-02]],

         [[ 1.7973e-02, -7.8745e-02, -4.6531e-02],
          [-8.8866e-02,  9.3820e-03,  1.5830e-02],
          [ 4.2895e-04, -2.6445e-02, -1.0420e-02]],

         ...,

         [[ 1.1051e-02, -2.9362e-02, -2.9693e-02],
          [ 5.4062e-02,  6.5414e-02,  4.0540e-02],
          [ 1.0056e-01, -6.0218e-02,  3.8249e-02]],

         [[-7.9574e-02,  3.6810e-02,  1.3095e-01],
          [-5.7448e-02,  9.3100e-03,  3.4893e-02],
          [ 8.5162e-02, -5.1276e-02, -9.3086e-02]],

         [[ 6.2325e-03,  2.9157e-02, -3.3235e-03],
          [ 5.4304e-02, -7.6536e-02, -2.5136e-02],
          [-7.0212e-02, -6.6061e-02, -2.1195e-02]]],


        [[[-5.7806e-02, -2.8585e-03, -2.5714e-02],
          [-1.0934e-01, -4.0330e-02, -2.7214e-02],
          [ 9.5716e-02,  1.6451e-02, -7.1735e-02]],

         [[ 1.0444e-03,  9.0708e-02,  5.6422e-02],
          [ 3.1554e-02,  3.6540e-02,  6.5329e-03],
          [-2.4900e-02,  3.9618e-02, -1.5558e-02]],

         [[ 1.7235e-02,  4.1483e-02,  2.5205e-02],
          [ 8.3453e-02, -2.7956e-02,  1.5263e-01],
          [-8.1790e-02,  2.0199e-02, -2.2881e-02]],

         ...,

         [[-1.8500e-01, -2.3999e-02,  1.1058e-01],
          [-2.9058e-02,  7.6892e-02, -5.2940e-02],
          [ 2.0583e-02, -3.2279e-02, -4.6009e-02]],

         [[ 2.2660e-02,  1.3807e-02,  7.8924e-02],
          [-4.2372e-02,  1.9865e-02, -2.4528e-02],
          [ 4.1380e-02, -6.6700e-02, -2.4613e-02]],

         [[-1.1011e-02,  1.1158e-02,  1.6937e-02],
          [ 8.6971e-03,  1.6371e-01,  3.0447e-02],
          [-4.1374e-02, -6.6701e-02, -5.7018e-02]]],


        [[[-1.2146e-01, -3.2388e-03, -9.5990e-02],
          [ 3.3421e-02,  3.9771e-02,  7.4114e-04],
          [ 5.2566e-02,  9.0348e-02,  8.3891e-03]],

         [[ 2.4472e-02, -8.4427e-02, -2.7882e-02],
          [ 2.3664e-02,  3.7849e-02,  4.1680e-02],
          [ 7.1232e-02,  2.0953e-02, -7.9960e-02]],

         [[ 4.7691e-02,  7.3982e-03,  6.0359e-02],
          [-4.7695e-03,  1.3368e-01,  5.5338e-02],
          [-8.2104e-03, -3.7255e-02,  2.9926e-03]],

         ...,

         [[-2.7741e-02,  8.4701e-02,  8.9033e-02],
          [ 5.7562e-02, -4.1449e-02,  9.4115e-02],
          [ 9.1964e-02, -1.2317e-02,  5.8781e-02]],

         [[-2.5072e-02,  2.9545e-02, -1.5073e-01],
          [-1.2475e-02,  4.3822e-02, -2.5566e-03],
          [ 2.4213e-02, -9.2511e-02,  9.1250e-04]],

         [[ 6.2247e-02, -1.0195e-02,  3.5773e-02],
          [ 6.3843e-02, -1.9350e-02, -1.3735e-01],
          [ 2.5042e-02,  7.2829e-02, -2.4054e-02]]]], device='cuda:0',
       requires_grad=True)
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 0.0388, -0.0234, -0.0097],
          [-0.0720,  0.0336,  0.1033],
          [ 0.0434, -0.0470, -0.0297]],

         [[-0.0655, -0.0416, -0.0007],
          [-0.0322, -0.0727,  0.0281],
          [ 0.0237,  0.0564,  0.0350]],

         [[-0.0528,  0.1209, -0.0110],
          [-0.1464,  0.0793, -0.0801],
          [ 0.0665, -0.0594,  0.0344]],

         ...,

         [[-0.0305,  0.0201,  0.0175],
          [-0.0587, -0.0181,  0.0465],
          [ 0.0152,  0.0511, -0.0104]],

         [[-0.0435,  0.0230,  0.0324],
          [-0.0042,  0.0724,  0.0797],
          [-0.1070,  0.0457,  0.0035]],

         [[-0.0038,  0.0742,  0.0003],
          [ 0.0307,  0.0097, -0.0364],
          [ 0.0944, -0.0579, -0.0760]]],


        [[[-0.0523,  0.0178, -0.0103],
          [-0.1005,  0.1205, -0.0129],
          [-0.0383,  0.1308, -0.0170]],

         [[-0.0124, -0.0024, -0.1326],
          [-0.0480,  0.0145, -0.0217],
          [ 0.0097, -0.0198, -0.0264]],

         [[-0.0253, -0.0308,  0.0087],
          [ 0.0217,  0.0106, -0.0042],
          [ 0.1352,  0.0428,  0.0431]],

         ...,

         [[ 0.0347, -0.0226, -0.0378],
          [-0.0607, -0.0886, -0.0733],
          [-0.0391, -0.0648,  0.0191]],

         [[-0.0775, -0.0469,  0.0519],
          [ 0.1320, -0.0381,  0.0376],
          [ 0.0215,  0.0629,  0.0261]],

         [[ 0.0143,  0.0602,  0.0384],
          [ 0.0138, -0.0206,  0.0520],
          [-0.0683,  0.0072, -0.1158]]],


        [[[-0.0970,  0.0748,  0.0060],
          [ 0.0136, -0.0462, -0.0172],
          [-0.0393,  0.0084, -0.1126]],

         [[ 0.0406, -0.0174,  0.0322],
          [ 0.1215, -0.1339, -0.0749],
          [ 0.1199,  0.0254, -0.0476]],

         [[-0.1223, -0.0183, -0.0956],
          [-0.1557, -0.0834, -0.0149],
          [ 0.0578, -0.0303, -0.0569]],

         ...,

         [[ 0.0475, -0.0292, -0.1198],
          [-0.0195,  0.0638,  0.0140],
          [ 0.0410, -0.0179,  0.0048]],

         [[-0.0448, -0.0353, -0.0736],
          [-0.0205, -0.0371, -0.1096],
          [-0.0470,  0.0280,  0.0357]],

         [[ 0.0393, -0.0725, -0.0058],
          [-0.0704, -0.0311,  0.0064],
          [-0.0803, -0.0517, -0.0261]]],


        ...,


        [[[-0.0510,  0.1155,  0.0004],
          [ 0.0024,  0.0238,  0.0228],
          [-0.0256,  0.0765,  0.0380]],

         [[ 0.0848,  0.0138, -0.0910],
          [ 0.1325, -0.0455,  0.0043],
          [-0.0552,  0.0391,  0.0579]],

         [[ 0.1030, -0.0299,  0.1001],
          [ 0.0463, -0.0086,  0.0264],
          [ 0.0197,  0.0803, -0.0021]],

         ...,

         [[ 0.0259,  0.0191,  0.0483],
          [ 0.0185,  0.0090, -0.0935],
          [ 0.0923, -0.1187,  0.0784]],

         [[ 0.0201,  0.0431, -0.0167],
          [-0.0809, -0.0168,  0.0137],
          [ 0.0209, -0.0057, -0.0352]],

         [[ 0.0490,  0.0282,  0.1101],
          [ 0.0463,  0.0362, -0.0401],
          [ 0.0359,  0.0029,  0.1028]]],


        [[[-0.0976, -0.0031, -0.0089],
          [ 0.0626,  0.0783,  0.0479],
          [-0.0160,  0.0761, -0.0306]],

         [[ 0.0740, -0.0884,  0.0143],
          [ 0.0929, -0.1095,  0.0520],
          [ 0.0364,  0.1054, -0.0725]],

         [[-0.1045, -0.0224,  0.0127],
          [-0.0346,  0.0687, -0.0263],
          [-0.0098,  0.1328,  0.0819]],

         ...,

         [[ 0.0275, -0.0958,  0.0131],
          [-0.0034, -0.0404, -0.0695],
          [ 0.0708,  0.0015,  0.0489]],

         [[ 0.0929,  0.0038,  0.0025],
          [-0.0599, -0.0330,  0.0209],
          [ 0.0678,  0.0923, -0.1374]],

         [[ 0.0667, -0.0472, -0.0303],
          [-0.0141,  0.0392, -0.0239],
          [ 0.0006,  0.0206,  0.0636]]],


        [[[-0.0127, -0.0159,  0.0416],
          [-0.1777,  0.0698, -0.0394],
          [-0.0503,  0.0166, -0.0277]],

         [[-0.0344, -0.0803,  0.0181],
          [ 0.0253,  0.0343, -0.0615],
          [-0.0766,  0.0011, -0.0164]],

         [[-0.0065, -0.0955,  0.0378],
          [ 0.2109, -0.0006,  0.0072],
          [-0.0116,  0.1672, -0.0540]],

         ...,

         [[-0.0900, -0.1165, -0.0410],
          [-0.0543, -0.0085, -0.0461],
          [ 0.0398,  0.0475, -0.0048]],

         [[-0.0760, -0.0290,  0.1022],
          [ 0.0075, -0.0354,  0.0074],
          [-0.0466, -0.1329, -0.0017]],

         [[-0.0469,  0.0586,  0.0184],
          [-0.0217,  0.0037, -0.0004],
          [ 0.0673, -0.0332,  0.0915]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.conv2.weight Parameter containing:
tensor([[[[ 0.0580]],

         [[ 0.0133]],

         [[-0.0281]],

         ...,

         [[-0.1207]],

         [[-0.0362]],

         [[-0.0636]]],


        [[[-0.0284]],

         [[-0.0104]],

         [[-0.0380]],

         ...,

         [[-0.0530]],

         [[-0.2874]],

         [[-0.0706]]],


        [[[ 0.0524]],

         [[-0.1488]],

         [[ 0.0666]],

         ...,

         [[-0.0772]],

         [[ 0.0521]],

         [[ 0.0677]]],


        ...,


        [[[-0.0974]],

         [[ 0.0533]],

         [[ 0.0405]],

         ...,

         [[-0.0287]],

         [[ 0.1299]],

         [[ 0.0200]]],


        [[[-0.1518]],

         [[-0.0362]],

         [[-0.0041]],

         ...,

         [[-0.0296]],

         [[ 0.0126]],

         [[ 0.0649]]],


        [[[ 0.0044]],

         [[ 0.0523]],

         [[ 0.0829]],

         ...,

         [[ 0.0725]],

         [[-0.1123]],

         [[ 0.0034]]]], device='cuda:0', requires_grad=True)
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 0.0257, -0.0840,  0.0254],
          [ 0.0285,  0.0139, -0.0754],
          [-0.0937, -0.0681, -0.0699]],

         [[-0.0860, -0.1108, -0.0338],
          [-0.0236,  0.1202, -0.0192],
          [-0.0416, -0.0800,  0.0278]],

         [[-0.0257,  0.0351, -0.0570],
          [-0.0868, -0.0537,  0.0585],
          [ 0.0712, -0.0855, -0.0167]],

         ...,

         [[ 0.0122,  0.0584,  0.0755],
          [ 0.0858,  0.0396,  0.0677],
          [ 0.0375, -0.0373,  0.0141]],

         [[-0.0691,  0.0275,  0.0798],
          [-0.0258,  0.0131, -0.0180],
          [ 0.0788,  0.0035,  0.0200]],

         [[ 0.0774, -0.0554,  0.0740],
          [-0.0148, -0.0305, -0.0353],
          [-0.0551, -0.1026,  0.0164]]],


        [[[ 0.0771,  0.0190,  0.0156],
          [-0.0216,  0.0645, -0.0006],
          [ 0.0144, -0.0026,  0.0022]],

         [[ 0.0299, -0.0124,  0.0021],
          [ 0.0329, -0.0396,  0.0217],
          [-0.0815, -0.0052, -0.0285]],

         [[-0.0055,  0.0227, -0.0035],
          [-0.0206, -0.0031, -0.0390],
          [ 0.0418,  0.0271, -0.1046]],

         ...,

         [[ 0.0498, -0.0495, -0.0867],
          [-0.0534, -0.0325,  0.0134],
          [-0.0418,  0.0520, -0.0049]],

         [[-0.0044,  0.0624,  0.0055],
          [ 0.0395, -0.0166,  0.0934],
          [-0.0127, -0.0076, -0.0351]],

         [[ 0.0057, -0.0405, -0.0631],
          [-0.0041,  0.0103,  0.0075],
          [-0.0158,  0.0214,  0.0460]]],


        [[[-0.0666,  0.0854, -0.0607],
          [ 0.0033,  0.0499, -0.0338],
          [ 0.0444, -0.0489, -0.0771]],

         [[ 0.0235,  0.0004, -0.0185],
          [ 0.0969,  0.0111, -0.0931],
          [-0.0309, -0.0483, -0.0548]],

         [[-0.0566,  0.0282,  0.0151],
          [ 0.0153, -0.0204,  0.0231],
          [-0.0533, -0.0481, -0.0306]],

         ...,

         [[-0.0617,  0.0179,  0.0046],
          [-0.0050, -0.0334, -0.0074],
          [-0.0054,  0.0258, -0.0056]],

         [[-0.0026, -0.0587,  0.0356],
          [-0.0464,  0.0961,  0.0440],
          [ 0.0187, -0.1251,  0.0590]],

         [[ 0.0156, -0.0657, -0.0282],
          [ 0.0213, -0.0299, -0.0743],
          [ 0.0422, -0.0083, -0.0094]]],


        ...,


        [[[ 0.0958,  0.0197,  0.0102],
          [-0.0089,  0.0037, -0.0558],
          [-0.0702,  0.0627, -0.0191]],

         [[-0.0402, -0.0082,  0.0767],
          [-0.0130, -0.0492,  0.0249],
          [ 0.0201,  0.0699,  0.0041]],

         [[ 0.0421, -0.0258, -0.0472],
          [ 0.0766, -0.0457, -0.0484],
          [ 0.0074, -0.0629,  0.0717]],

         ...,

         [[-0.0232, -0.0249, -0.0256],
          [ 0.0387, -0.0407,  0.0007],
          [-0.0267,  0.0624, -0.0322]],

         [[ 0.0038, -0.0232, -0.0275],
          [-0.0904,  0.0825,  0.0003],
          [-0.0254, -0.0317,  0.0025]],

         [[ 0.0466,  0.0096, -0.0324],
          [ 0.0273,  0.0125,  0.0407],
          [ 0.0483,  0.0353, -0.0116]]],


        [[[ 0.0121, -0.0403, -0.0457],
          [ 0.0453,  0.0251, -0.0237],
          [ 0.0340, -0.0264, -0.0075]],

         [[ 0.0694,  0.0580, -0.0295],
          [-0.0163,  0.0130, -0.0289],
          [-0.0675, -0.0819,  0.0425]],

         [[ 0.0133, -0.1037,  0.0165],
          [-0.0335, -0.0357, -0.0178],
          [-0.0798, -0.1442, -0.0249]],

         ...,

         [[-0.0617, -0.0648, -0.0316],
          [-0.1020, -0.0203,  0.0264],
          [ 0.0265, -0.0694, -0.0076]],

         [[-0.0250,  0.0006,  0.0070],
          [-0.0454,  0.0551,  0.0361],
          [-0.0071,  0.0450,  0.0124]],

         [[-0.0600,  0.1021,  0.0676],
          [ 0.0571,  0.0558, -0.0767],
          [-0.0252, -0.1057,  0.0987]]],


        [[[-0.0143,  0.0002,  0.0387],
          [ 0.0410,  0.0123, -0.0353],
          [ 0.0900, -0.0363,  0.0057]],

         [[-0.0362,  0.0314, -0.0060],
          [-0.0531,  0.0185, -0.0472],
          [ 0.0568,  0.0579, -0.0042]],

         [[ 0.0222,  0.0717,  0.0104],
          [ 0.0037,  0.0417, -0.0089],
          [ 0.0856, -0.0045,  0.0086]],

         ...,

         [[-0.0303, -0.0251, -0.0002],
          [-0.0884,  0.0084, -0.0138],
          [-0.0464,  0.0338, -0.0065]],

         [[-0.0097,  0.0237, -0.0024],
          [-0.0885,  0.0348,  0.0116],
          [-0.0540, -0.0552, -0.0280]],

         [[ 0.0288, -0.0252, -0.0219],
          [ 0.0398, -0.0150,  0.0323],
          [-0.0937,  0.0505, -0.0278]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 0.0168, -0.0010, -0.0167],
          [-0.0268,  0.0051, -0.0568],
          [ 0.0185, -0.0526, -0.0041]],

         [[-0.0873, -0.0443,  0.0156],
          [ 0.0055, -0.0337,  0.0473],
          [ 0.0136,  0.0112, -0.0982]],

         [[ 0.0118, -0.0067, -0.0174],
          [-0.0543, -0.0866,  0.0613],
          [ 0.0063,  0.0574,  0.0186]],

         ...,

         [[-0.0274, -0.0021,  0.0901],
          [ 0.0083, -0.1112, -0.0435],
          [ 0.0131, -0.0101,  0.0407]],

         [[-0.0229,  0.0344,  0.0286],
          [ 0.0257,  0.0303, -0.0577],
          [ 0.0766, -0.0884, -0.0530]],

         [[-0.0349,  0.0119,  0.0075],
          [-0.0022,  0.0191,  0.0504],
          [-0.0281, -0.0442,  0.0567]]],


        [[[-0.0679,  0.0373, -0.0255],
          [-0.0073, -0.0193,  0.0877],
          [ 0.0219,  0.0373,  0.0040]],

         [[ 0.0442, -0.0204,  0.0357],
          [ 0.0587,  0.0491,  0.0583],
          [-0.0110, -0.0386,  0.0182]],

         [[-0.0259,  0.0058, -0.0478],
          [ 0.0395, -0.0334, -0.0717],
          [ 0.0428, -0.0305,  0.0192]],

         ...,

         [[ 0.0407,  0.0120,  0.0458],
          [-0.0093,  0.0048,  0.0110],
          [-0.0107, -0.0632,  0.0062]],

         [[-0.0151,  0.0384, -0.0819],
          [-0.0171, -0.0050, -0.0162],
          [ 0.1324,  0.1125,  0.0069]],

         [[-0.0847,  0.0345, -0.0058],
          [-0.0060,  0.0677, -0.0366],
          [-0.0042, -0.0036, -0.0161]]],


        [[[ 0.0631,  0.1157,  0.0246],
          [ 0.0187, -0.0318,  0.0527],
          [-0.0727,  0.0075, -0.0733]],

         [[ 0.0038,  0.0150,  0.0162],
          [ 0.0572,  0.0475, -0.0210],
          [ 0.0515,  0.0408, -0.0407]],

         [[-0.0459, -0.0120, -0.0265],
          [ 0.0282, -0.0734,  0.0865],
          [ 0.0612,  0.0891,  0.0520]],

         ...,

         [[ 0.0251,  0.0256, -0.0195],
          [-0.0030, -0.0223,  0.0668],
          [-0.0380, -0.0692,  0.0705]],

         [[-0.0167, -0.0769,  0.0444],
          [-0.0462,  0.0558, -0.0569],
          [-0.0945, -0.0173, -0.0311]],

         [[-0.0669, -0.0133,  0.0716],
          [-0.0693, -0.0252, -0.0325],
          [-0.0500, -0.0055,  0.0198]]],


        ...,


        [[[ 0.0848, -0.0648,  0.0814],
          [-0.0369,  0.0109,  0.0080],
          [ 0.0565,  0.0338,  0.0574]],

         [[ 0.0595, -0.0172, -0.0930],
          [-0.0315,  0.0957, -0.0011],
          [ 0.0992, -0.0016,  0.0342]],

         [[ 0.0863, -0.0871, -0.0009],
          [ 0.0052, -0.0219,  0.0719],
          [ 0.0376, -0.0457, -0.0364]],

         ...,

         [[ 0.0606,  0.0200, -0.0468],
          [-0.0365, -0.0234,  0.0148],
          [-0.0469, -0.0245, -0.0381]],

         [[ 0.0071, -0.0485, -0.0278],
          [ 0.0010,  0.0253, -0.0517],
          [ 0.0077,  0.0159,  0.0566]],

         [[ 0.0052, -0.0198,  0.0189],
          [ 0.0308, -0.0444, -0.0490],
          [ 0.0046,  0.0245,  0.0251]]],


        [[[-0.0342,  0.0834, -0.0402],
          [ 0.0173,  0.0185, -0.0106],
          [-0.0074, -0.0099, -0.0106]],

         [[ 0.0925,  0.0111, -0.0150],
          [-0.0620,  0.0583, -0.0093],
          [ 0.0363,  0.0832, -0.0055]],

         [[-0.0369, -0.0449,  0.0727],
          [ 0.0065,  0.0149,  0.0214],
          [ 0.0458, -0.0016, -0.0099]],

         ...,

         [[-0.0445, -0.0409, -0.0795],
          [-0.0039, -0.0072, -0.0490],
          [ 0.0090,  0.0194,  0.0140]],

         [[-0.0093,  0.0088, -0.0321],
          [ 0.0970,  0.0257, -0.0428],
          [ 0.0330,  0.0551, -0.0688]],

         [[-0.0310, -0.0571, -0.0404],
          [-0.0453,  0.0476, -0.0280],
          [ 0.0284, -0.0337, -0.0545]]],


        [[[ 0.0381, -0.0116, -0.0139],
          [-0.0272, -0.0144, -0.0244],
          [-0.0250, -0.0082,  0.0327]],

         [[ 0.0139, -0.0437, -0.0450],
          [-0.1070, -0.0287, -0.0620],
          [ 0.0797,  0.0027, -0.0606]],

         [[-0.0125,  0.0661,  0.0233],
          [ 0.0486,  0.0188, -0.0831],
          [-0.0176, -0.0269, -0.0117]],

         ...,

         [[-0.0078, -0.0393,  0.0485],
          [ 0.0129,  0.0655, -0.0150],
          [ 0.0579,  0.0701,  0.0054]],

         [[-0.0008, -0.0371, -0.0164],
          [ 0.0204, -0.0293,  0.0359],
          [ 0.0325,  0.0422,  0.0682]],

         [[-0.0012,  0.0079,  0.1028],
          [ 0.0180, -0.0264, -0.0531],
          [ 0.0531, -0.0219, -0.0263]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.1006]],

         [[ 0.0848]],

         [[-0.0416]],

         ...,

         [[ 0.2076]],

         [[-0.1182]],

         [[-0.0124]]],


        [[[-0.0777]],

         [[ 0.1230]],

         [[ 0.1621]],

         ...,

         [[ 0.0148]],

         [[ 0.0550]],

         [[-0.1280]]],


        [[[-0.0117]],

         [[-0.1113]],

         [[-0.1243]],

         ...,

         [[-0.1496]],

         [[ 0.1378]],

         [[-0.1294]]],


        ...,


        [[[ 0.0989]],

         [[ 0.0478]],

         [[ 0.0018]],

         ...,

         [[-0.0014]],

         [[ 0.0887]],

         [[-0.2455]]],


        [[[ 0.1661]],

         [[-0.0256]],

         [[-0.2930]],

         ...,

         [[ 0.1105]],

         [[ 0.1184]],

         [[ 0.0372]]],


        [[[-0.0917]],

         [[-0.1758]],

         [[-0.1472]],

         ...,

         [[ 0.1210]],

         [[-0.0078]],

         [[ 0.2958]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0609,  0.0149,  0.0392],
          [-0.0303,  0.0140,  0.0213],
          [ 0.0709,  0.0190, -0.0394]],

         [[ 0.1063,  0.0055,  0.0445],
          [ 0.0472, -0.0886, -0.0053],
          [ 0.0159, -0.0398,  0.0844]],

         [[-0.1069, -0.0410,  0.0575],
          [ 0.0051, -0.0382, -0.0598],
          [ 0.0230, -0.0258, -0.0366]],

         ...,

         [[-0.1124,  0.0037, -0.0051],
          [-0.0122, -0.0234,  0.0156],
          [ 0.0107,  0.0190,  0.0377]],

         [[ 0.0642, -0.0603,  0.0783],
          [ 0.0062,  0.1158,  0.0083],
          [ 0.0279, -0.0577, -0.0195]],

         [[ 0.0315,  0.1165,  0.0164],
          [-0.0141,  0.0446, -0.0003],
          [ 0.0392,  0.0199,  0.0442]]],


        [[[-0.0045,  0.0113, -0.0140],
          [-0.0154,  0.1030, -0.0114],
          [-0.0364, -0.0231,  0.0474]],

         [[ 0.0441,  0.0181, -0.0526],
          [-0.0751,  0.0508,  0.0131],
          [ 0.0065,  0.0374, -0.0459]],

         [[-0.0165,  0.0102, -0.0288],
          [ 0.1038,  0.0123,  0.0478],
          [ 0.0005,  0.0285,  0.0168]],

         ...,

         [[-0.0212,  0.0031,  0.0624],
          [ 0.0202,  0.0382, -0.0283],
          [ 0.0058, -0.0713, -0.0382]],

         [[ 0.0070, -0.0193,  0.0441],
          [ 0.0646,  0.0085,  0.0487],
          [-0.0396, -0.0163, -0.0167]],

         [[ 0.0060,  0.0176, -0.0593],
          [ 0.0039, -0.1032, -0.0125],
          [-0.0099, -0.0119, -0.0645]]],


        [[[ 0.1103,  0.0026, -0.0371],
          [-0.0596, -0.0272, -0.0142],
          [-0.0786,  0.0379,  0.0461]],

         [[ 0.1111,  0.0238,  0.0063],
          [ 0.0587,  0.0091, -0.0437],
          [ 0.0750, -0.0302, -0.0179]],

         [[ 0.0269, -0.0202,  0.0268],
          [-0.0156,  0.0183,  0.0407],
          [-0.0077, -0.0288,  0.0153]],

         ...,

         [[ 0.0145,  0.0435, -0.0390],
          [-0.0949, -0.0395, -0.0602],
          [ 0.0036,  0.0024,  0.0007]],

         [[ 0.0030,  0.0303, -0.0231],
          [-0.0382,  0.0140,  0.0815],
          [ 0.0084, -0.0478, -0.0197]],

         [[ 0.0327, -0.0098, -0.0649],
          [-0.0240,  0.0629, -0.0953],
          [-0.0342,  0.0396, -0.0098]]],


        ...,


        [[[ 0.0593, -0.0607,  0.0071],
          [ 0.0262, -0.0081,  0.0388],
          [-0.0124,  0.0612,  0.0068]],

         [[-0.0102, -0.0430,  0.0600],
          [ 0.0100, -0.0573, -0.0280],
          [-0.0219, -0.1302, -0.0409]],

         [[ 0.0350, -0.0271,  0.0769],
          [ 0.0564, -0.0564,  0.0790],
          [ 0.0445,  0.1005,  0.0109]],

         ...,

         [[-0.1036,  0.0550, -0.0555],
          [-0.0314, -0.0158, -0.0989],
          [ 0.0213, -0.0685,  0.0163]],

         [[ 0.0079,  0.0479,  0.0419],
          [-0.0794,  0.0920,  0.0219],
          [-0.0424,  0.0176,  0.0781]],

         [[-0.0175,  0.0189,  0.0102],
          [-0.0026,  0.0501,  0.0158],
          [-0.0880,  0.0196, -0.0109]]],


        [[[ 0.0548,  0.0032,  0.0285],
          [ 0.0589, -0.0459,  0.0404],
          [-0.0641,  0.0082, -0.0501]],

         [[ 0.0003,  0.0344, -0.0025],
          [ 0.0384,  0.0533,  0.0215],
          [-0.0235, -0.0480,  0.0149]],

         [[-0.0069, -0.0765, -0.0298],
          [-0.0043,  0.0250,  0.0724],
          [-0.0474, -0.0075,  0.0266]],

         ...,

         [[-0.1347, -0.0416, -0.0049],
          [ 0.0171, -0.0180, -0.0751],
          [ 0.0286, -0.0123, -0.0130]],

         [[-0.0558, -0.0166,  0.0108],
          [ 0.0031, -0.0230, -0.0138],
          [ 0.0182,  0.0586,  0.0024]],

         [[-0.0136, -0.0439,  0.0597],
          [ 0.0647,  0.0487,  0.0282],
          [-0.0270,  0.0119, -0.0201]]],


        [[[-0.0051, -0.0360, -0.0394],
          [-0.0367,  0.0390, -0.0829],
          [ 0.0448, -0.0102,  0.0249]],

         [[-0.0101,  0.0725,  0.0280],
          [-0.0287,  0.0727, -0.0557],
          [-0.1098, -0.0209,  0.0443]],

         [[ 0.0673, -0.0147, -0.0609],
          [-0.0420,  0.0151,  0.0559],
          [ 0.0557,  0.0028, -0.1006]],

         ...,

         [[-0.0312, -0.0348, -0.0022],
          [-0.0630, -0.1805, -0.0731],
          [-0.0907, -0.0457,  0.0193]],

         [[-0.0010, -0.0728,  0.0481],
          [-0.0043,  0.0211,  0.0320],
          [-0.0674, -0.0407,  0.0095]],

         [[-0.0125,  0.0386, -0.0452],
          [-0.0107,  0.0167,  0.0105],
          [-0.0271, -0.0695, -0.0136]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 7.4117e-02,  1.8522e-02,  1.6685e-02],
          [ 1.3760e-02,  1.7033e-02,  3.2520e-02],
          [-3.6114e-02,  7.1598e-02, -7.7251e-03]],

         [[-3.7532e-02,  2.5460e-03, -5.0906e-02],
          [-5.5078e-03,  5.2495e-03,  2.8466e-02],
          [-5.7970e-02,  8.4420e-04, -3.6472e-02]],

         [[ 2.0858e-02,  2.6495e-02,  1.2157e-02],
          [ 5.4386e-03,  1.2718e-01, -8.5526e-02],
          [ 2.6956e-02, -5.2437e-02, -2.3966e-03]],

         ...,

         [[-3.3927e-02,  6.5881e-02, -2.3036e-03],
          [ 1.3176e-02, -2.2628e-02, -1.3264e-02],
          [ 2.7789e-02, -1.3493e-02,  1.0044e-02]],

         [[ 4.8123e-02,  7.8801e-02,  9.0673e-03],
          [ 1.7203e-02,  7.2531e-02, -1.2791e-01],
          [ 6.8679e-02, -2.8217e-02,  1.1870e-02]],

         [[ 9.7803e-03, -4.3526e-02, -7.0465e-02],
          [ 4.7037e-02, -8.0638e-02, -1.2341e-02],
          [-6.4528e-02,  4.4391e-02, -6.8697e-02]]],


        [[[-9.0617e-02, -1.5452e-02, -5.3071e-02],
          [ 2.8090e-02, -1.7958e-02,  3.5089e-02],
          [-4.2801e-02, -4.9606e-02, -1.7018e-02]],

         [[ 9.7124e-04,  6.6824e-03, -8.3412e-03],
          [-1.6846e-02,  1.7258e-02, -2.7215e-02],
          [ 6.2895e-02, -1.1900e-01, -4.4454e-02]],

         [[ 3.2020e-03,  4.2599e-02,  5.1444e-02],
          [-4.0130e-02,  5.1085e-02,  1.6769e-02],
          [ 5.4265e-02,  6.8032e-02,  5.9255e-02]],

         ...,

         [[-4.8125e-02,  1.6569e-02,  6.3291e-02],
          [-4.8518e-02, -1.1177e-01,  4.2191e-03],
          [-7.1957e-02,  9.8361e-02, -8.1740e-02]],

         [[ 3.2527e-03,  5.5892e-02,  3.6435e-02],
          [ 7.0021e-02,  1.7695e-02, -4.3420e-03],
          [ 4.1666e-03,  4.8781e-02, -6.2607e-02]],

         [[-7.7078e-02, -2.4569e-02, -6.9411e-02],
          [-2.4848e-02, -5.4079e-02,  3.0758e-02],
          [-3.0052e-02,  4.0923e-02,  3.6981e-03]]],


        [[[ 5.6568e-03,  2.4330e-02, -1.0502e-02],
          [ 6.6774e-02, -5.9278e-02, -5.8983e-02],
          [ 3.6250e-02, -3.6193e-02,  6.5048e-02]],

         [[ 5.2383e-02, -2.5150e-02, -8.6478e-02],
          [-5.5414e-02,  3.8016e-02,  2.9667e-02],
          [ 8.8878e-03,  2.8868e-02, -2.6339e-02]],

         [[ 4.1286e-02, -9.6397e-02, -1.0238e-02],
          [-2.1833e-02, -3.1144e-02, -5.2104e-02],
          [ 5.6881e-02, -3.5463e-02,  5.9450e-02]],

         ...,

         [[ 2.6171e-02,  1.9481e-02, -1.0630e-02],
          [-6.0061e-02,  7.3747e-02, -5.7414e-03],
          [-6.0310e-02,  7.7147e-02, -2.4679e-02]],

         [[-6.9097e-02, -3.8408e-02, -4.2000e-02],
          [-6.5007e-02, -2.7665e-03,  5.6478e-02],
          [ 1.4283e-02, -5.2653e-02, -4.3955e-02]],

         [[ 2.7334e-02,  5.3048e-02, -9.2415e-02],
          [ 2.5925e-02, -5.2443e-02,  8.5204e-03],
          [-2.4331e-02, -1.9000e-03, -6.4866e-02]]],


        ...,


        [[[-4.3773e-02,  1.4099e-03,  7.9541e-02],
          [ 5.8501e-03,  3.5055e-02,  5.0150e-02],
          [ 1.2611e-01, -3.0225e-03, -4.2427e-03]],

         [[ 3.7257e-02, -1.0798e-02, -1.9632e-02],
          [ 9.9545e-02, -1.9093e-02,  7.8145e-04],
          [-2.1405e-02,  7.5533e-02, -7.1903e-05]],

         [[-2.8490e-02,  9.0497e-03, -4.2030e-03],
          [-5.9334e-02, -4.8866e-03, -4.4948e-02],
          [-1.1960e-02, -1.2996e-02,  1.1121e-01]],

         ...,

         [[-5.1628e-02, -6.0187e-02,  1.5274e-02],
          [-3.3555e-02, -5.2197e-02,  1.5792e-02],
          [-2.9108e-03, -1.0494e-01, -5.2418e-02]],

         [[-1.7592e-02, -2.5019e-02, -8.6410e-03],
          [ 1.9079e-02, -6.7172e-04, -7.4963e-02],
          [ 3.5473e-02,  6.9315e-03,  4.0550e-02]],

         [[-4.2901e-02, -1.0339e-02, -3.3925e-02],
          [ 6.1331e-02,  1.5328e-02, -3.7636e-02],
          [-5.6514e-02, -3.6743e-02, -1.6371e-02]]],


        [[[ 3.3765e-02,  3.7560e-02,  4.8186e-03],
          [-5.1771e-02,  7.7103e-02,  3.6518e-02],
          [ 4.2624e-02, -2.6033e-02,  1.2804e-02]],

         [[ 6.3026e-02,  1.0424e-01, -1.1680e-02],
          [-2.3136e-02,  2.5117e-03, -9.9531e-03],
          [-3.1621e-02,  3.2207e-03,  7.2905e-02]],

         [[ 5.5362e-02, -1.0897e-02,  3.7311e-03],
          [ 4.0323e-02,  9.4940e-03, -4.7464e-03],
          [-7.3495e-02,  1.2758e-02, -4.6180e-02]],

         ...,

         [[-8.8345e-02,  9.8209e-03,  9.5830e-03],
          [-6.1556e-02,  1.5797e-02,  2.2647e-02],
          [ 1.0302e-04, -8.7422e-02, -4.5132e-02]],

         [[ 5.4653e-02,  3.5366e-02,  4.5208e-02],
          [ 1.1117e-02, -2.7753e-02, -2.4455e-02],
          [-7.7042e-02,  1.1263e-02, -1.7549e-02]],

         [[ 2.5181e-02,  4.3624e-02, -2.5798e-03],
          [ 3.4870e-02,  4.7456e-02, -1.0767e-01],
          [-1.1478e-01,  6.7057e-02,  5.8381e-02]]],


        [[[-1.6498e-02,  3.7773e-02, -6.5681e-02],
          [-2.6478e-02, -7.7016e-02,  9.6673e-03],
          [-1.5401e-02,  2.1227e-02,  3.6800e-02]],

         [[-3.3807e-02, -6.0363e-03, -2.9521e-02],
          [-5.6345e-02,  6.9641e-03, -6.2859e-04],
          [-4.0686e-02,  6.1402e-02,  5.0166e-02]],

         [[ 8.2662e-03, -3.3173e-02,  1.3575e-01],
          [-1.2332e-01,  5.2279e-02, -3.0930e-02],
          [-5.2168e-02, -5.7500e-02, -6.8514e-02]],

         ...,

         [[-3.2834e-02, -3.2655e-02, -5.3429e-03],
          [ 5.3823e-02,  1.1995e-02,  5.9062e-02],
          [ 1.7370e-02, -1.2569e-02,  2.5301e-02]],

         [[ 1.5011e-02,  1.9940e-02, -2.3277e-02],
          [-2.2144e-02, -6.2507e-02, -3.0245e-02],
          [ 2.8461e-02, -2.2160e-02,  3.0389e-02]],

         [[-3.5711e-02,  1.7606e-02,  3.6194e-02],
          [ 2.7345e-02, -2.0103e-02, -9.2404e-04],
          [-5.6778e-03,  4.8906e-02, -7.5449e-02]]]], device='cuda:0',
       requires_grad=True)
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-0.0761,  0.0638,  0.0365],
          [ 0.0419, -0.0167,  0.0278],
          [ 0.0239, -0.0270, -0.0074]],

         [[ 0.0439, -0.0279,  0.0036],
          [-0.0303, -0.0465, -0.0355],
          [-0.0042, -0.0105, -0.0147]],

         [[ 0.0250,  0.0105, -0.0846],
          [ 0.0725, -0.0051,  0.0032],
          [-0.0040,  0.0753,  0.0326]],

         ...,

         [[ 0.0328,  0.0766, -0.0462],
          [ 0.0623, -0.0651, -0.0073],
          [ 0.0122,  0.0373,  0.0227]],

         [[ 0.0102, -0.0094, -0.0226],
          [ 0.0251,  0.0366, -0.0374],
          [-0.0452,  0.0023, -0.0457]],

         [[ 0.0047, -0.0651, -0.0027],
          [-0.0684, -0.0429,  0.0122],
          [-0.0625,  0.0054,  0.0161]]],


        [[[ 0.0024,  0.0061,  0.0001],
          [-0.0324, -0.0060, -0.0127],
          [ 0.0257,  0.0193,  0.0100]],

         [[-0.0528,  0.0011,  0.0176],
          [-0.0571,  0.0835, -0.0660],
          [ 0.0009, -0.0245,  0.0504]],

         [[-0.0327,  0.0352, -0.0761],
          [-0.0362,  0.0020, -0.0725],
          [ 0.0346,  0.0659, -0.0520]],

         ...,

         [[ 0.0199, -0.0364, -0.0221],
          [-0.0313,  0.0461, -0.0323],
          [-0.0002, -0.0242,  0.0427]],

         [[ 0.0016,  0.0116,  0.0424],
          [-0.0167,  0.0222, -0.0017],
          [ 0.0051,  0.0592, -0.0303]],

         [[-0.0219,  0.0175,  0.0043],
          [-0.0517,  0.0390,  0.0531],
          [ 0.0147, -0.0283, -0.0020]]],


        [[[-0.0247, -0.0367, -0.1058],
          [ 0.0433,  0.0582,  0.0524],
          [-0.0333, -0.0076,  0.0370]],

         [[ 0.0222, -0.0182, -0.0305],
          [-0.0278,  0.0393,  0.0702],
          [-0.0555, -0.0006,  0.0194]],

         [[ 0.0393, -0.0411,  0.0270],
          [-0.0494, -0.0162, -0.0377],
          [-0.0232, -0.0483,  0.0029]],

         ...,

         [[ 0.0217, -0.0426, -0.0203],
          [ 0.0045,  0.0028,  0.0474],
          [-0.0609, -0.0158,  0.0718]],

         [[ 0.0007, -0.0527, -0.0361],
          [-0.0014,  0.0237,  0.0137],
          [ 0.0279, -0.0156, -0.0002]],

         [[-0.0373,  0.0442, -0.0258],
          [ 0.0051, -0.0243,  0.0170],
          [-0.0479, -0.0002, -0.0567]]],


        ...,


        [[[-0.0008,  0.0338,  0.0213],
          [-0.0357, -0.1217,  0.0963],
          [ 0.0407, -0.0155,  0.0071]],

         [[-0.0035,  0.0632,  0.0225],
          [-0.0505, -0.0232, -0.0254],
          [-0.0280, -0.0230, -0.0035]],

         [[ 0.0279,  0.0169, -0.0313],
          [ 0.0184, -0.0238, -0.0609],
          [-0.0011,  0.0389,  0.0384]],

         ...,

         [[-0.0997,  0.0458, -0.0073],
          [-0.0371, -0.0210, -0.0341],
          [ 0.0044, -0.0328,  0.0274]],

         [[ 0.0082, -0.0058,  0.0182],
          [-0.0546, -0.0313,  0.0274],
          [-0.0556, -0.0444,  0.0508]],

         [[-0.0071,  0.0401, -0.0512],
          [-0.0021, -0.0600, -0.0549],
          [-0.0990, -0.0633,  0.0289]]],


        [[[ 0.0139, -0.0339, -0.0401],
          [-0.0287, -0.0612, -0.0374],
          [ 0.0065, -0.0365, -0.0180]],

         [[ 0.0204, -0.0451,  0.0273],
          [-0.0197,  0.0697, -0.0139],
          [ 0.0557,  0.0182,  0.0326]],

         [[-0.0496, -0.0207,  0.0056],
          [-0.0353, -0.0346, -0.0137],
          [-0.0417, -0.0392, -0.0247]],

         ...,

         [[ 0.0686, -0.0212, -0.0324],
          [ 0.0316,  0.0752,  0.0893],
          [-0.0468, -0.0403, -0.0158]],

         [[ 0.0350, -0.0863,  0.0226],
          [-0.0305,  0.0339, -0.0324],
          [-0.0147, -0.0197,  0.0082]],

         [[ 0.0141, -0.0597,  0.0353],
          [ 0.0135, -0.0187,  0.0367],
          [ 0.0240, -0.0504,  0.0274]]],


        [[[ 0.0294,  0.0448, -0.0099],
          [ 0.0042, -0.0494,  0.0071],
          [-0.0288, -0.0316,  0.0747]],

         [[-0.0193, -0.0002, -0.0530],
          [-0.0213,  0.0129, -0.0028],
          [-0.0787, -0.0044, -0.0954]],

         [[ 0.0310,  0.0097,  0.0116],
          [-0.0408,  0.0514, -0.0613],
          [ 0.0217,  0.0166, -0.0634]],

         ...,

         [[ 0.0654,  0.0271,  0.0270],
          [ 0.0281, -0.0598, -0.0405],
          [ 0.0211, -0.0646,  0.0154]],

         [[ 0.0071,  0.0304,  0.0351],
          [ 0.0214, -0.0414,  0.1022],
          [-0.0360,  0.0475,  0.0664]],

         [[ 0.0070,  0.0095,  0.0467],
          [ 0.0182, -0.1023,  0.0071],
          [ 0.0135, -0.0191, -0.0316]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-1.2082e-02, -4.9794e-02, -1.1832e-02],
          [-3.6649e-02, -6.7262e-03,  1.0411e-02],
          [-5.4918e-02,  2.5957e-02, -1.3213e-02]],

         [[ 7.0716e-02,  4.3732e-02,  8.2271e-02],
          [ 4.4295e-02,  8.3167e-02,  2.0834e-02],
          [ 2.2515e-02,  3.6107e-03,  4.4467e-02]],

         [[ 1.5295e-02,  2.1458e-02,  6.6738e-03],
          [ 9.3519e-03, -1.5550e-02, -2.4263e-02],
          [ 2.8545e-02,  5.0770e-02, -7.3923e-02]],

         ...,

         [[ 1.8380e-02,  3.2840e-02,  3.8715e-02],
          [-8.2515e-02,  5.4801e-02, -4.8803e-02],
          [ 8.0884e-02,  2.9661e-02,  6.9287e-02]],

         [[-2.5075e-02, -4.9991e-02,  7.0650e-02],
          [ 6.6613e-02,  3.6140e-02, -2.4177e-02],
          [-1.0321e-02, -4.9275e-02, -1.0770e-01]],

         [[ 1.7565e-02, -1.7826e-02, -1.4875e-02],
          [-4.8628e-02,  3.1298e-02,  9.5367e-02],
          [-8.4980e-03,  7.3861e-02, -2.7751e-02]]],


        [[[-2.5253e-02, -7.2031e-03, -6.7814e-02],
          [ 2.9779e-02,  1.2778e-02,  1.0413e-02],
          [ 5.3153e-03,  1.7697e-02, -6.6761e-05]],

         [[-2.1340e-02, -4.8329e-02, -2.0208e-02],
          [ 3.6699e-02,  4.2517e-03,  3.8273e-02],
          [-5.8066e-02, -5.6678e-02, -9.3771e-03]],

         [[-1.2369e-02,  9.2555e-02, -2.5872e-02],
          [-5.3718e-03,  1.9287e-02, -2.1676e-02],
          [-8.3698e-02, -5.8504e-02, -1.7742e-03]],

         ...,

         [[-2.6648e-02, -3.4614e-02,  7.8860e-02],
          [ 1.9832e-02, -3.8389e-02, -6.5690e-02],
          [-4.0265e-02,  6.7549e-02, -5.3979e-02]],

         [[-5.0916e-02, -3.1280e-03, -1.2362e-01],
          [ 5.7864e-03, -5.9501e-02,  3.3771e-02],
          [ 4.5573e-02,  4.3738e-02,  5.0866e-02]],

         [[ 7.1258e-03,  1.3326e-02, -1.1480e-02],
          [ 5.3194e-02, -4.1834e-02, -4.0875e-02],
          [ 2.2904e-02, -1.9579e-02, -2.1619e-02]]],


        [[[ 7.4425e-02, -7.0388e-02,  1.2675e-02],
          [ 1.1765e-02, -1.8044e-02, -4.7285e-03],
          [ 4.3981e-02,  5.5360e-02,  2.1155e-02]],

         [[-2.6438e-02,  1.8643e-02, -2.7327e-02],
          [-6.3107e-02, -6.8859e-02,  1.4352e-02],
          [ 1.0660e-03, -1.9047e-02, -7.2312e-03]],

         [[-7.6381e-02,  5.1874e-02,  6.1472e-02],
          [-4.2780e-02, -5.2519e-02,  5.5368e-04],
          [ 3.7225e-02, -1.9229e-02,  4.3606e-02]],

         ...,

         [[ 3.2020e-02,  7.6382e-02, -3.7057e-02],
          [-1.9580e-04, -6.9113e-02,  1.9962e-02],
          [ 3.5816e-02, -5.0237e-02,  2.1544e-02]],

         [[ 1.7731e-02, -1.2371e-02,  5.8554e-02],
          [ 4.3041e-02,  1.6105e-02,  1.5962e-02],
          [ 6.8930e-02, -4.3303e-02,  5.6410e-02]],

         [[ 3.6325e-05, -6.6222e-03, -3.2379e-02],
          [-4.0028e-02, -5.4292e-02,  4.3468e-02],
          [ 2.9008e-02,  5.7471e-02,  6.6470e-03]]],


        ...,


        [[[ 3.6900e-02,  4.1233e-02,  7.2177e-02],
          [ 7.3194e-03,  4.1096e-02, -4.1151e-03],
          [-3.2049e-02,  6.0062e-04,  4.0779e-02]],

         [[-3.4543e-03, -3.7129e-02,  2.8572e-03],
          [-2.2482e-02,  1.9871e-02,  1.3494e-02],
          [-7.4773e-02,  2.6704e-03,  1.3154e-02]],

         [[ 9.9878e-03, -1.8452e-02,  9.8776e-03],
          [ 3.6511e-02, -4.5865e-02,  3.5974e-02],
          [ 6.0805e-02, -4.9888e-02,  1.3190e-02]],

         ...,

         [[ 2.4151e-02,  8.7227e-03,  1.5752e-03],
          [ 2.5144e-02, -5.4954e-02,  1.0224e-02],
          [-5.6269e-02,  2.7812e-03, -7.2653e-03]],

         [[ 5.5632e-02, -3.4502e-02,  6.5987e-03],
          [ 7.5250e-02, -1.1526e-02,  9.3127e-03],
          [-1.1281e-02, -3.9597e-02, -3.7556e-02]],

         [[-6.7021e-02, -5.3070e-02, -3.4252e-02],
          [-1.5168e-02, -2.8788e-02,  8.6574e-02],
          [ 6.7638e-02,  2.6907e-02,  1.4379e-02]]],


        [[[-4.9466e-02, -6.1808e-02,  2.8997e-02],
          [-1.6186e-02, -5.3853e-02,  3.2458e-02],
          [-2.1179e-02, -5.2801e-02,  8.1346e-02]],

         [[-1.1744e-02,  5.6194e-02, -1.0124e-02],
          [ 3.4754e-02,  7.0710e-02,  7.7811e-02],
          [-1.9637e-02, -1.0183e-01, -1.8519e-02]],

         [[-5.9415e-02,  7.0788e-02, -6.4051e-02],
          [-3.4594e-02,  5.1403e-02,  2.4152e-02],
          [-2.5319e-03, -2.3083e-02, -4.8521e-02]],

         ...,

         [[-5.1236e-03,  3.7486e-02, -2.2922e-02],
          [-4.3072e-03,  2.1853e-02, -1.7401e-03],
          [-2.0140e-02,  9.1923e-03, -2.6760e-02]],

         [[-8.1815e-03, -5.5216e-02, -6.1103e-02],
          [-2.2109e-02, -3.0485e-02, -3.7808e-03],
          [-3.1327e-02,  8.8621e-03, -9.5488e-02]],

         [[ 2.0528e-02, -2.6566e-02,  6.5136e-03],
          [-1.1946e-01, -3.4074e-02, -5.3080e-02],
          [ 7.1143e-03,  2.3220e-03, -9.8700e-03]]],


        [[[-6.8846e-02,  5.8939e-02,  1.8525e-02],
          [-2.0851e-03,  2.4773e-02, -1.9222e-02],
          [-2.3477e-02, -2.1592e-02,  2.9778e-02]],

         [[-4.5262e-02,  3.9538e-02,  5.4749e-02],
          [ 1.8609e-02, -1.2447e-02,  4.0516e-03],
          [ 9.5506e-03, -2.5027e-03,  4.0001e-04]],

         [[-3.4326e-02, -3.3920e-02,  4.2496e-03],
          [ 3.1184e-02,  4.7752e-02, -3.4716e-02],
          [-4.0585e-02, -3.9807e-02,  1.6605e-02]],

         ...,

         [[ 1.8354e-02, -2.5482e-02,  4.5185e-02],
          [ 3.5597e-02, -4.3026e-03, -1.0862e-02],
          [ 2.3103e-02,  8.6146e-02, -1.7422e-02]],

         [[ 1.3152e-02, -1.0778e-02, -5.6369e-02],
          [ 5.4917e-02,  1.1846e-04,  1.3551e-02],
          [ 5.4721e-02, -1.1267e-02, -2.2154e-02]],

         [[ 5.6957e-02, -2.3662e-02, -1.8066e-02],
          [ 4.6182e-02, -5.3739e-03, -9.3695e-03],
          [ 2.7662e-04, -8.0699e-02,  3.6245e-02]]]], device='cuda:0',
       requires_grad=True)
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0936]],

         [[ 0.0962]],

         [[ 0.0369]],

         ...,

         [[-0.1464]],

         [[-0.0157]],

         [[-0.1216]]],


        [[[-0.3584]],

         [[-0.0510]],

         [[-0.2088]],

         ...,

         [[-0.1565]],

         [[-0.1003]],

         [[ 0.0048]]],


        [[[-0.1511]],

         [[ 0.0600]],

         [[ 0.0374]],

         ...,

         [[-0.0055]],

         [[-0.0454]],

         [[ 0.0786]]],


        ...,


        [[[ 0.0432]],

         [[ 0.0661]],

         [[ 0.1538]],

         ...,

         [[-0.0792]],

         [[ 0.0461]],

         [[ 0.0398]]],


        [[[ 0.0281]],

         [[-0.2299]],

         [[ 0.0082]],

         ...,

         [[ 0.0335]],

         [[ 0.0445]],

         [[ 0.0771]]],


        [[[ 0.0492]],

         [[-0.0208]],

         [[ 0.2335]],

         ...,

         [[ 0.0783]],

         [[ 0.2516]],

         [[ 0.1055]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0193, -0.0117, -0.0197],
          [-0.0055,  0.0865, -0.0046],
          [ 0.0427, -0.0723,  0.0534]],

         [[-0.0143,  0.0178,  0.0254],
          [ 0.0271, -0.0210, -0.0143],
          [-0.0646,  0.0330, -0.0538]],

         [[-0.0067, -0.0303, -0.0328],
          [-0.0094, -0.0189,  0.0169],
          [ 0.0472,  0.0059,  0.0008]],

         ...,

         [[ 0.0361, -0.0751, -0.0032],
          [-0.0726,  0.0286, -0.0230],
          [ 0.0786, -0.0047, -0.0140]],

         [[ 0.0493, -0.0293, -0.0792],
          [ 0.0586,  0.0916,  0.0856],
          [ 0.1138, -0.0347, -0.0222]],

         [[-0.0384, -0.0211, -0.0236],
          [-0.0178,  0.0456,  0.0027],
          [-0.0214, -0.0449, -0.0694]]],


        [[[ 0.0174,  0.0054, -0.0179],
          [-0.0029,  0.0583,  0.0136],
          [-0.0642,  0.0123,  0.0245]],

         [[-0.0386,  0.0107, -0.0045],
          [ 0.0274, -0.0287,  0.0552],
          [ 0.0087,  0.0349, -0.0161]],

         [[-0.0838,  0.0250, -0.0569],
          [-0.0106, -0.0442,  0.0255],
          [-0.0177, -0.0635,  0.0508]],

         ...,

         [[ 0.0120, -0.0421,  0.0050],
          [ 0.0014, -0.0234, -0.0691],
          [ 0.0376,  0.0268,  0.0307]],

         [[ 0.0175,  0.0328, -0.1048],
          [-0.0178, -0.0078, -0.0142],
          [ 0.0024,  0.0044,  0.0330]],

         [[-0.0715, -0.0390,  0.0266],
          [ 0.0905, -0.0033,  0.0462],
          [ 0.0640, -0.0112, -0.0814]]],


        [[[-0.0345,  0.0502, -0.0093],
          [ 0.0325,  0.0072, -0.0293],
          [-0.0108,  0.0486, -0.0693]],

         [[-0.0281, -0.0849, -0.0439],
          [ 0.0019, -0.0018,  0.0076],
          [-0.0039, -0.0224, -0.0349]],

         [[ 0.0570,  0.0631, -0.0591],
          [ 0.0198, -0.0246, -0.0545],
          [ 0.0550, -0.0134,  0.0569]],

         ...,

         [[ 0.0168, -0.0038,  0.0317],
          [-0.0195, -0.0201, -0.0794],
          [-0.0464,  0.0554, -0.0175]],

         [[-0.0699,  0.0440,  0.0138],
          [ 0.0180, -0.0441,  0.0607],
          [ 0.0540, -0.0340,  0.0391]],

         [[-0.0396,  0.0422, -0.0430],
          [ 0.0860,  0.0457, -0.0325],
          [ 0.0232, -0.0130, -0.0296]]],


        ...,


        [[[ 0.0219, -0.0028, -0.0222],
          [-0.0131, -0.0062, -0.0078],
          [ 0.0091,  0.1236, -0.0155]],

         [[ 0.0963, -0.0285, -0.0031],
          [-0.0583, -0.0331,  0.0121],
          [-0.0138, -0.0041, -0.0366]],

         [[ 0.0326,  0.0110,  0.0572],
          [ 0.0414, -0.0034, -0.0433],
          [-0.0274, -0.0439, -0.0332]],

         ...,

         [[ 0.0293, -0.0481,  0.0018],
          [-0.0431, -0.0668,  0.0144],
          [ 0.0485, -0.0247,  0.0524]],

         [[ 0.0079, -0.0310, -0.0020],
          [-0.0005,  0.0463,  0.0515],
          [-0.0395,  0.0666, -0.0450]],

         [[ 0.0072, -0.0734, -0.0311],
          [ 0.0602,  0.0054,  0.0176],
          [ 0.0203,  0.0602,  0.0081]]],


        [[[-0.0081, -0.0723,  0.0802],
          [-0.0037, -0.0361, -0.0103],
          [-0.0049,  0.0064,  0.0149]],

         [[ 0.0086,  0.0331, -0.0009],
          [ 0.0089,  0.0114, -0.0154],
          [-0.0261, -0.0096, -0.0148]],

         [[-0.0029, -0.0452, -0.0227],
          [ 0.0022,  0.0341, -0.0218],
          [ 0.0082,  0.0113, -0.0386]],

         ...,

         [[ 0.0036, -0.0855,  0.0305],
          [-0.0031, -0.0747, -0.0064],
          [ 0.0007,  0.0283, -0.0005]],

         [[-0.0345,  0.0432,  0.0027],
          [ 0.0514, -0.0017, -0.0318],
          [-0.0093,  0.0053,  0.0453]],

         [[-0.0827, -0.0639, -0.1050],
          [ 0.0105,  0.0071,  0.0478],
          [-0.0044,  0.0118, -0.0022]]],


        [[[ 0.0143, -0.0248,  0.0454],
          [-0.0160,  0.0106,  0.0448],
          [ 0.0349,  0.1332, -0.0252]],

         [[ 0.0809,  0.0309, -0.0215],
          [ 0.0034, -0.0215,  0.0206],
          [-0.0323, -0.0278, -0.0152]],

         [[ 0.0370, -0.0052, -0.0592],
          [ 0.0235,  0.0323, -0.0109],
          [ 0.0170,  0.0276, -0.0297]],

         ...,

         [[ 0.0115,  0.0050, -0.0112],
          [-0.0314,  0.0281,  0.0105],
          [ 0.0093,  0.0363, -0.0648]],

         [[-0.0294,  0.0142,  0.0087],
          [-0.0101,  0.0314,  0.0042],
          [ 0.0132, -0.0222, -0.0028]],

         [[ 0.0733,  0.0589,  0.0244],
          [ 0.0155, -0.0102, -0.0412],
          [-0.0874, -0.0368, -0.0164]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-0.0940,  0.0705,  0.0705],
          [ 0.0393,  0.0243,  0.0118],
          [ 0.0234,  0.0188, -0.0309]],

         [[-0.0422, -0.0459,  0.0104],
          [-0.0692, -0.1563, -0.0054],
          [-0.0200,  0.0623, -0.0485]],

         [[ 0.0590,  0.0016, -0.0221],
          [ 0.0178, -0.0012, -0.0131],
          [ 0.0584,  0.0376, -0.0170]],

         ...,

         [[ 0.0427,  0.0166,  0.0005],
          [ 0.0124, -0.0299,  0.0104],
          [-0.0201, -0.0395, -0.0250]],

         [[ 0.0178, -0.0525, -0.0591],
          [-0.1127, -0.0184,  0.0650],
          [-0.0285, -0.0204, -0.0293]],

         [[ 0.0383, -0.0367,  0.0242],
          [ 0.0019,  0.0200,  0.0074],
          [ 0.0360, -0.0242, -0.0094]]],


        [[[ 0.0174,  0.0631,  0.0492],
          [ 0.0690, -0.0871, -0.0252],
          [ 0.0250, -0.0366,  0.0213]],

         [[ 0.0303, -0.0068, -0.0585],
          [-0.0055,  0.0434,  0.0558],
          [ 0.0076,  0.0183,  0.0310]],

         [[-0.0301, -0.0448, -0.0153],
          [ 0.0208,  0.0567,  0.0465],
          [ 0.0496, -0.0105, -0.0383]],

         ...,

         [[ 0.0167,  0.0022,  0.0447],
          [ 0.0144,  0.0207,  0.0218],
          [-0.0121,  0.0021,  0.0441]],

         [[-0.0034, -0.0792,  0.0126],
          [-0.0285,  0.0058,  0.0297],
          [-0.0364, -0.0410,  0.0067]],

         [[ 0.0107,  0.0458,  0.0752],
          [-0.0211, -0.0276, -0.0595],
          [ 0.0628,  0.0028, -0.0414]]],


        [[[-0.0934,  0.0246,  0.0173],
          [ 0.0652,  0.0669,  0.0226],
          [ 0.0021,  0.0194,  0.0591]],

         [[-0.0148, -0.0215, -0.0531],
          [ 0.0428,  0.0364, -0.0763],
          [-0.0387,  0.0364,  0.0363]],

         [[-0.0312, -0.0033,  0.1014],
          [-0.0113, -0.0278,  0.0018],
          [-0.0079,  0.0055, -0.0427]],

         ...,

         [[-0.0216, -0.0151,  0.0210],
          [-0.0416,  0.0193, -0.0568],
          [ 0.0388,  0.0430,  0.0288]],

         [[-0.0319,  0.0205, -0.0476],
          [-0.0465,  0.0226,  0.0172],
          [-0.0446,  0.0058, -0.0432]],

         [[-0.0111,  0.0145,  0.0076],
          [ 0.0269, -0.0363,  0.0128],
          [-0.0318,  0.0550,  0.0072]]],


        ...,


        [[[ 0.0010, -0.0107,  0.0507],
          [ 0.0126, -0.0203, -0.0361],
          [ 0.0337,  0.0386, -0.0325]],

         [[-0.0370,  0.0386, -0.0088],
          [ 0.0053, -0.0241,  0.0034],
          [-0.0269,  0.0297, -0.0568]],

         [[ 0.0310, -0.0284, -0.0639],
          [ 0.0620,  0.0913, -0.0068],
          [-0.0216,  0.0245, -0.0902]],

         ...,

         [[ 0.0439,  0.0423, -0.0756],
          [-0.0184,  0.0147,  0.0278],
          [-0.0559,  0.0011,  0.0308]],

         [[ 0.0298, -0.0296,  0.0316],
          [-0.0454,  0.0056,  0.0227],
          [ 0.0290, -0.0310, -0.0130]],

         [[-0.0612,  0.0082, -0.0079],
          [ 0.0868,  0.0092, -0.0238],
          [ 0.0263, -0.0426,  0.0079]]],


        [[[-0.0199, -0.0004, -0.0077],
          [-0.0154,  0.0137, -0.0315],
          [ 0.0668,  0.0167, -0.0312]],

         [[ 0.0159,  0.0056,  0.0309],
          [-0.0521,  0.0272,  0.0447],
          [-0.0524, -0.0221, -0.0273]],

         [[-0.0474,  0.0114,  0.0470],
          [ 0.0297,  0.0303, -0.0022],
          [-0.0520,  0.0232,  0.0010]],

         ...,

         [[ 0.0095, -0.0144, -0.0116],
          [ 0.0675,  0.0327, -0.0514],
          [-0.0850, -0.0449, -0.0167]],

         [[ 0.0408, -0.0008, -0.0205],
          [ 0.0118, -0.0260,  0.0414],
          [-0.0235,  0.0216, -0.0279]],

         [[-0.0364,  0.0040,  0.0631],
          [-0.0335, -0.0542, -0.0760],
          [-0.0134,  0.0184,  0.1082]]],


        [[[ 0.0227,  0.0078,  0.0239],
          [ 0.0875,  0.0956, -0.0229],
          [-0.0426,  0.0116,  0.0377]],

         [[ 0.0889, -0.0321,  0.0289],
          [-0.0175,  0.0443, -0.0396],
          [-0.0781,  0.0365,  0.0564]],

         [[-0.0332,  0.0762,  0.0047],
          [ 0.0298, -0.1005,  0.0619],
          [ 0.0047, -0.0355,  0.0598]],

         ...,

         [[-0.0212, -0.0361, -0.0938],
          [ 0.0299,  0.0058, -0.0345],
          [ 0.0445, -0.0707,  0.0171]],

         [[ 0.0299, -0.1059,  0.0350],
          [ 0.0083, -0.0114, -0.0839],
          [ 0.0057,  0.0419, -0.0371]],

         [[-0.0414,  0.0315, -0.0039],
          [ 0.0099, -0.0532,  0.0123],
          [-0.0279,  0.0180, -0.0482]]]], device='cuda:0', requires_grad=True)
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 0.0230]],

         [[ 0.0593]],

         [[-0.1691]],

         ...,

         [[-0.1746]],

         [[-0.0202]],

         [[-0.0126]]],


        [[[-0.0810]],

         [[-0.1029]],

         [[ 0.0597]],

         ...,

         [[-0.0578]],

         [[-0.0304]],

         [[-0.0468]]],


        [[[-0.0637]],

         [[ 0.0009]],

         [[ 0.0303]],

         ...,

         [[-0.1240]],

         [[-0.2303]],

         [[ 0.0797]]],


        ...,


        [[[-0.0720]],

         [[ 0.0170]],

         [[-0.0045]],

         ...,

         [[-0.0834]],

         [[ 0.1102]],

         [[ 0.1522]]],


        [[[ 0.0604]],

         [[-0.0454]],

         [[-0.1176]],

         ...,

         [[-0.0143]],

         [[ 0.1639]],

         [[ 0.1414]]],


        [[[ 0.0305]],

         [[-0.0263]],

         [[-0.0984]],

         ...,

         [[ 0.0042]],

         [[ 0.1350]],

         [[ 0.0400]]]], device='cuda:0', requires_grad=True)
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[ 3.7646e-02,  2.3346e-02, -2.2179e-02],
          [-7.9239e-03,  1.3927e-02, -4.3175e-02],
          [ 1.7751e-02, -5.9582e-02, -1.9923e-04]],

         [[ 2.9172e-02,  1.4963e-02,  1.4235e-02],
          [ 1.0015e-02,  2.0492e-02,  2.1544e-02],
          [ 6.3539e-04, -2.5906e-02, -2.4219e-02]],

         [[ 1.8794e-02,  1.2292e-02,  6.1982e-03],
          [ 3.9917e-03, -1.8983e-02, -5.0297e-03],
          [-3.1776e-02,  3.8218e-02,  1.6733e-02]],

         ...,

         [[-2.0753e-02,  2.0395e-02, -3.6671e-02],
          [ 5.9070e-02, -1.0377e-02, -2.2471e-02],
          [ 4.0688e-03,  2.5426e-02, -1.4039e-02]],

         [[ 7.4301e-02,  1.1584e-02,  3.7833e-02],
          [-6.1711e-03,  6.5490e-03,  9.7045e-03],
          [ 5.3631e-03, -7.7187e-02, -3.0120e-02]],

         [[ 2.3087e-02, -4.1878e-02, -7.1068e-04],
          [-5.5803e-02, -5.9614e-02, -4.6502e-03],
          [-1.2183e-02, -1.0690e-02,  9.3231e-03]]],


        [[[ 8.3891e-03, -2.3937e-02,  4.5092e-02],
          [-3.3203e-02,  2.7560e-02,  1.6554e-02],
          [-1.0452e-02,  4.6700e-04, -8.6639e-02]],

         [[ 1.4676e-02,  6.0610e-02,  2.6774e-02],
          [ 2.2255e-02, -3.7992e-02, -3.5948e-02],
          [-4.1418e-02,  3.2895e-03, -2.7003e-04]],

         [[-2.7720e-02,  4.9919e-02, -3.1373e-02],
          [ 3.1689e-03,  1.2286e-02, -3.5195e-02],
          [ 1.6696e-02, -1.7004e-02,  5.0131e-02]],

         ...,

         [[-2.1297e-02,  5.2387e-02, -4.8657e-02],
          [ 1.2845e-02,  1.8857e-02, -3.9596e-02],
          [ 1.6825e-02,  8.0678e-03, -4.8252e-02]],

         [[-1.0082e-02, -4.0686e-02,  2.5004e-02],
          [-5.9226e-03, -2.7860e-02, -2.0123e-03],
          [ 6.3266e-02,  2.1840e-02, -4.0876e-02]],

         [[-3.9072e-02,  3.3221e-02,  8.9779e-03],
          [ 4.4222e-03,  3.0749e-02, -5.7298e-02],
          [-1.2986e-02, -3.4587e-02,  1.2065e-02]]],


        [[[ 6.2929e-03,  4.6853e-03, -5.2478e-02],
          [ 1.6381e-02, -1.2244e-02,  2.3834e-02],
          [ 2.6736e-04, -3.2727e-02, -1.6813e-02]],

         [[-1.4452e-02, -3.5829e-06, -3.6361e-02],
          [-4.8044e-04, -1.5666e-02,  4.6890e-02],
          [ 2.4812e-02, -4.6857e-02,  2.9334e-03]],

         [[-2.2906e-02,  2.2177e-04, -3.5520e-02],
          [-1.4903e-02, -2.3627e-02,  3.4143e-03],
          [-3.8685e-02,  2.2513e-02, -9.7795e-03]],

         ...,

         [[ 4.8788e-02,  8.5776e-03, -2.0601e-02],
          [ 1.6795e-02, -1.9619e-02,  2.5476e-03],
          [ 6.2623e-03,  1.3164e-02,  5.3566e-02]],

         [[ 7.4624e-02,  1.5426e-02,  3.6943e-02],
          [ 2.0838e-02,  4.3129e-02, -3.0001e-02],
          [ 4.3158e-04,  1.6613e-02, -6.8104e-02]],

         [[ 5.4551e-03,  3.4120e-02, -2.4249e-02],
          [ 1.1279e-03, -8.2648e-02,  3.0534e-02],
          [-3.6282e-02,  9.5931e-03,  2.6852e-02]]],


        ...,


        [[[-3.3494e-02, -7.5841e-03, -5.0969e-02],
          [ 4.8037e-03,  1.8899e-02, -1.0063e-02],
          [ 4.2805e-02,  7.6324e-02,  4.7636e-03]],

         [[-6.9076e-02, -4.7011e-02, -4.2749e-02],
          [ 5.1024e-02, -5.7141e-02,  1.0445e-02],
          [ 1.0447e-02, -1.6018e-02,  3.3879e-02]],

         [[-4.7993e-02,  2.1353e-02, -5.6354e-02],
          [-2.0619e-04,  2.6773e-02,  1.0707e-01],
          [ 1.0353e-03,  4.5585e-02, -2.8026e-02]],

         ...,

         [[-1.4764e-02,  1.5517e-02, -1.3044e-02],
          [-4.2878e-02,  2.7016e-03,  2.9726e-02],
          [ 2.1131e-02,  5.2241e-02,  3.1777e-03]],

         [[ 5.1220e-03,  8.5513e-03,  8.1221e-03],
          [-4.7838e-03,  4.0123e-02,  5.4653e-03],
          [-6.3953e-02, -5.6619e-02,  7.1502e-02]],

         [[-1.5701e-02, -4.6562e-02, -2.3752e-02],
          [ 9.6542e-03,  6.5737e-02,  2.7925e-03],
          [-1.7620e-02,  9.4253e-04,  2.2255e-02]]],


        [[[ 2.3691e-02,  4.6308e-03, -1.9708e-02],
          [-1.6526e-02,  3.8198e-03, -6.5692e-03],
          [-1.1070e-02,  6.5377e-02,  4.8623e-02]],

         [[-4.1490e-02, -2.4014e-02, -4.7885e-04],
          [ 9.4231e-03,  5.4974e-02,  4.3851e-02],
          [-3.3193e-02, -6.9808e-03,  5.1424e-02]],

         [[ 1.0892e-03, -7.0023e-03, -5.2393e-02],
          [ 5.9308e-03, -5.2269e-04, -2.6752e-02],
          [-2.6081e-02, -7.8417e-02,  1.3887e-03]],

         ...,

         [[ 8.0955e-02,  3.9913e-02,  3.9817e-03],
          [ 1.6811e-02,  3.6708e-02, -1.5828e-02],
          [-2.7918e-02, -3.5076e-02,  3.6365e-02]],

         [[-5.2402e-02,  1.0127e-02, -9.5517e-03],
          [-1.3589e-02, -7.9755e-03, -2.3538e-02],
          [ 3.3740e-02,  3.3862e-02,  2.4691e-02]],

         [[ 6.6286e-02,  4.0761e-03, -2.4233e-02],
          [ 4.5811e-02,  1.7843e-02, -9.6605e-03],
          [-4.0664e-02,  6.1442e-02,  1.1593e-02]]],


        [[[ 3.7520e-02,  1.5236e-03, -1.5254e-02],
          [ 6.5312e-04,  2.6479e-02,  1.0901e-02],
          [-1.1463e-02,  6.5365e-02,  2.7138e-02]],

         [[ 2.2650e-02,  5.8621e-02,  1.4982e-02],
          [ 4.1166e-02, -1.8213e-03,  9.2262e-03],
          [-7.9133e-04, -4.1904e-02, -3.4244e-02]],

         [[ 2.7663e-02, -2.9364e-02,  3.7856e-02],
          [-3.5725e-02, -4.4568e-02, -8.6899e-02],
          [-1.1697e-02,  7.1506e-02, -2.0762e-02]],

         ...,

         [[ 2.2725e-02, -1.7042e-02,  2.2221e-03],
          [ 7.9994e-03, -3.1225e-03, -4.6766e-02],
          [-1.3164e-02, -1.3289e-02, -3.7962e-02]],

         [[-1.3200e-02,  2.1413e-02, -4.5900e-02],
          [ 1.7989e-02, -6.4042e-02,  9.5767e-03],
          [ 1.5856e-02, -3.5827e-02,  4.8800e-02]],

         [[ 9.2404e-03, -3.1169e-02, -1.9190e-02],
          [-2.4894e-03, -2.2646e-02,  3.9215e-03],
          [ 2.0092e-02, -4.6370e-03, -4.2515e-02]]]], device='cuda:0',
       requires_grad=True)
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 7.1338e-03,  2.1158e-02,  1.0067e-02,  ..., -1.2266e-02,
            8.0446e-03, -1.9771e-02],
          [-1.6562e-02,  2.6979e-02,  2.3814e-02,  ...,  6.9457e-03,
           -1.8464e-02,  5.2275e-03],
          [ 5.1946e-03, -1.8327e-02,  7.3491e-04,  ...,  3.1303e-02,
           -2.3500e-02, -1.3803e-02],
          ...,
          [-2.8803e-02, -1.6113e-02,  5.6010e-03,  ...,  6.2551e-03,
           -2.9142e-02, -8.1867e-03],
          [-2.0807e-02, -1.0303e-02, -3.1530e-02,  ...,  1.0942e-02,
           -2.7959e-02, -4.7681e-03],
          [ 1.3554e-02,  1.9945e-02, -2.0764e-02,  ...,  2.3399e-02,
           -2.9700e-02, -1.6403e-03]],

         [[-1.1063e-02, -1.2762e-02, -1.6544e-02,  ..., -3.7599e-02,
            1.2223e-02, -5.3495e-03],
          [-4.1096e-03,  1.0328e-02, -2.6606e-02,  ...,  5.9433e-03,
           -1.1249e-02, -1.0216e-03],
          [ 1.4104e-02, -7.2734e-03,  2.6706e-02,  ...,  4.5499e-03,
           -3.2280e-03,  4.0108e-02],
          ...,
          [ 4.0728e-02, -1.2912e-02,  1.3628e-02,  ...,  3.4094e-02,
           -2.4040e-02, -6.8754e-03],
          [ 1.3297e-02, -1.2009e-02, -2.1039e-02,  ...,  2.0290e-02,
           -6.0387e-03, -2.7713e-02],
          [ 5.2537e-03,  8.4620e-03, -4.0501e-03,  ...,  1.2193e-02,
            1.7691e-02,  1.2250e-02]]],


        [[[ 5.6685e-03,  1.2820e-02, -4.8209e-03,  ..., -2.0880e-02,
            1.3000e-02, -1.9818e-02],
          [ 1.7991e-03,  2.5992e-03, -1.7421e-02,  ..., -1.2159e-02,
           -3.5528e-02,  3.5557e-02],
          [ 1.2605e-02,  5.4976e-04, -2.4042e-02,  ...,  2.3071e-02,
            3.4140e-02, -2.8413e-03],
          ...,
          [-1.3487e-02,  5.1981e-03, -1.7829e-02,  ...,  1.9128e-02,
            1.2441e-03, -2.5811e-02],
          [ 1.0045e-02, -8.7448e-03, -2.5798e-03,  ..., -6.5592e-03,
            2.5682e-03, -3.0821e-02],
          [ 2.8132e-02, -4.6803e-03,  6.0970e-03,  ..., -8.6438e-03,
           -5.4994e-03, -2.8835e-03]],

         [[-4.8874e-03, -3.4449e-02, -7.8485e-03,  ..., -1.5424e-02,
            1.6621e-04,  6.3810e-03],
          [ 2.8574e-03, -2.7174e-02, -2.5156e-02,  ..., -2.6502e-03,
           -2.9329e-02,  4.7233e-03],
          [ 1.5849e-02, -4.0438e-02,  3.1245e-02,  ...,  9.7677e-03,
            3.4175e-02, -2.3540e-02],
          ...,
          [-2.8807e-03, -1.5633e-02, -1.3730e-02,  ..., -2.5927e-02,
           -2.9989e-02, -1.0823e-02],
          [ 2.1462e-02, -2.6837e-02, -1.7601e-02,  ..., -8.5225e-03,
            8.2626e-03,  1.5331e-02],
          [ 1.6697e-02, -1.7032e-03,  9.9830e-03,  ...,  8.9258e-03,
            3.8180e-03,  1.8957e-02]]],


        [[[-2.4051e-02, -2.7921e-02, -1.6487e-02,  ..., -7.1269e-03,
           -1.6155e-02, -9.2655e-04],
          [-1.9672e-02,  1.2734e-02, -4.3147e-02,  ...,  2.1545e-02,
            2.0189e-02,  2.9338e-02],
          [-7.1966e-04, -9.7177e-03,  1.1156e-02,  ..., -2.4388e-02,
            9.2474e-03,  3.0043e-02],
          ...,
          [ 6.9016e-03, -9.8762e-03, -4.8376e-03,  ...,  1.4242e-02,
           -7.7001e-03, -8.2714e-03],
          [ 1.6413e-02, -1.5383e-02,  1.7353e-02,  ...,  1.4694e-02,
            5.9923e-03, -7.0111e-03],
          [-8.8064e-03,  6.7623e-03,  1.8667e-02,  ...,  2.9174e-02,
           -7.2017e-03,  8.6900e-03]],

         [[ 1.1374e-03, -1.3752e-02, -1.8068e-02,  ..., -6.4822e-03,
           -2.2237e-03, -2.3462e-02],
          [-1.7341e-03, -1.1344e-02,  1.1050e-02,  ..., -1.9474e-02,
           -1.8386e-03, -9.6253e-03],
          [ 1.9363e-02,  1.8762e-02,  2.0991e-02,  ..., -3.9946e-03,
           -3.8033e-02, -1.3450e-02],
          ...,
          [ 2.7829e-02,  9.9635e-03, -8.2463e-03,  ..., -1.5208e-02,
           -8.5825e-04,  5.5655e-03],
          [ 4.1085e-03, -3.3896e-02,  2.2654e-02,  ...,  2.3913e-02,
           -1.1072e-02, -8.8464e-04],
          [-3.0346e-03,  4.3136e-03, -7.9472e-03,  ..., -1.3907e-02,
           -6.8184e-03, -1.2570e-02]]],


        ...,


        [[[-1.5472e-02, -2.3588e-03, -1.8750e-02,  ..., -1.6553e-02,
           -1.2616e-02, -1.9741e-02],
          [-3.5542e-02,  2.1448e-02,  1.1041e-02,  ..., -8.8984e-03,
           -2.2700e-02, -6.9034e-03],
          [ 3.5189e-03, -7.9603e-03, -2.1822e-02,  ...,  2.4312e-02,
            1.9989e-02, -3.7164e-02],
          ...,
          [-1.1485e-02,  7.9133e-03, -4.9942e-03,  ..., -4.4108e-02,
           -2.6651e-03, -1.8600e-02],
          [-2.2537e-03,  1.3065e-03,  1.3213e-02,  ..., -1.5422e-02,
            7.9873e-03, -1.0002e-02],
          [-1.7178e-03,  6.4962e-03, -7.4968e-03,  ..., -5.8658e-04,
            4.5222e-03, -1.1931e-02]],

         [[ 9.1225e-03, -1.2662e-02, -5.9006e-03,  ...,  1.6653e-02,
           -2.8135e-03,  4.0389e-02],
          [-1.7813e-02,  1.1344e-02, -1.7758e-02,  ...,  4.8787e-03,
            1.0555e-02,  1.9838e-02],
          [-6.6219e-03,  3.0249e-02, -6.1661e-03,  ...,  1.1972e-02,
           -3.2375e-02, -5.7159e-03],
          ...,
          [ 1.5442e-02,  6.2645e-03, -4.2517e-04,  ...,  4.0517e-02,
           -1.2200e-02, -6.9642e-03],
          [ 1.1163e-02, -1.1234e-05,  5.5131e-03,  ..., -1.2117e-02,
            9.6532e-03,  8.2768e-04],
          [ 1.2264e-02, -1.2469e-02,  4.6992e-03,  ...,  4.0113e-02,
           -2.2942e-02,  7.7911e-03]]],


        [[[-2.2658e-02, -2.3254e-03,  1.7234e-02,  ...,  1.9400e-02,
            3.4332e-04,  2.9644e-02],
          [ 1.2208e-02, -1.1844e-02,  1.0574e-02,  ...,  2.5246e-02,
           -2.0528e-02, -2.2359e-02],
          [-1.0039e-02, -7.2656e-03,  7.8088e-03,  ...,  7.9424e-04,
            1.0663e-02, -1.6579e-02],
          ...,
          [-2.7722e-04,  3.7179e-03, -2.4253e-02,  ...,  1.1014e-02,
            2.1539e-02, -3.7785e-03],
          [-6.3905e-03,  6.0754e-03, -3.7745e-03,  ..., -1.1942e-03,
           -2.0774e-02, -3.2849e-03],
          [-2.5995e-02, -3.9116e-02, -8.3308e-03,  ..., -1.2132e-02,
           -4.4436e-02, -1.4856e-02]],

         [[ 7.8277e-03,  7.2153e-03,  2.4100e-02,  ..., -9.7345e-03,
            2.4806e-02, -5.4977e-03],
          [ 2.4401e-02,  1.1914e-02, -2.0215e-02,  ...,  4.0129e-04,
           -7.2714e-03,  1.2824e-02],
          [-4.9864e-03, -2.3733e-02,  1.7015e-03,  ...,  1.4311e-02,
            3.6647e-02, -3.7247e-02],
          ...,
          [ 2.0289e-02, -2.0326e-02,  3.3575e-03,  ...,  1.3937e-02,
           -3.1083e-02, -6.1188e-03],
          [ 8.9248e-03,  3.9469e-03,  2.5672e-02,  ..., -2.4431e-02,
            2.7490e-02,  2.0423e-02],
          [ 1.1074e-02, -2.9726e-02,  3.5652e-03,  ..., -1.0914e-02,
            6.6051e-03,  3.9019e-02]]],


        [[[-1.9635e-02,  1.8984e-02, -4.3580e-03,  ...,  7.5161e-03,
           -1.0431e-02,  3.0411e-02],
          [-2.6565e-02, -1.1767e-02,  2.2458e-02,  ...,  3.1030e-02,
            8.0481e-03, -2.6663e-03],
          [-2.9990e-02, -2.8756e-02,  3.7766e-02,  ...,  1.0959e-02,
           -5.1525e-03,  9.0665e-03],
          ...,
          [ 3.2219e-03, -3.0879e-02, -1.3047e-03,  ...,  7.0684e-04,
            2.6069e-02,  1.0794e-02],
          [ 8.2324e-03,  5.1568e-03,  5.3892e-03,  ...,  7.8180e-03,
           -2.8460e-02, -1.7075e-02],
          [-1.9546e-02,  2.0988e-02, -2.0592e-02,  ..., -2.3151e-02,
           -1.2431e-03, -7.2072e-03]],

         [[ 1.7058e-02,  3.3683e-02,  6.3458e-03,  ...,  1.6264e-02,
            2.3649e-02, -2.4326e-02],
          [-1.9467e-02, -3.2324e-03,  7.4790e-03,  ..., -3.9761e-03,
           -5.2304e-03,  9.0020e-03],
          [-1.8518e-02, -3.4943e-03, -1.7111e-02,  ..., -9.9270e-03,
            2.5255e-02,  2.5369e-03],
          ...,
          [-3.7428e-03, -2.2294e-02,  6.3648e-03,  ...,  1.6389e-02,
            1.0173e-02,  1.8272e-02],
          [-6.8796e-03,  2.5627e-02, -1.4846e-02,  ..., -2.1868e-03,
            2.1322e-03,  1.3400e-02],
          [-1.3812e-02, -2.2689e-02,  1.3917e-02,  ..., -4.0536e-02,
            3.2447e-02,  9.9723e-03]]]], device='cuda:0', requires_grad=True)
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[ 9.6516e-02,  2.0977e-02,  1.9747e-02],
          [-5.5062e-02,  3.3885e-02, -6.5491e-03],
          [ 4.5542e-02, -3.6418e-02, -1.0475e-01]],

         [[ 5.6737e-02, -8.2106e-02, -5.5301e-02],
          [ 9.1601e-02, -1.7391e-02, -5.3903e-02],
          [ 1.3581e-02, -1.3199e-02,  1.3818e-02]],

         [[ 3.1097e-02, -3.2987e-02,  1.8926e-03],
          [-9.6261e-03,  7.0295e-03, -1.2500e-02],
          [-3.4676e-02, -4.8497e-03,  5.8609e-02]],

         ...,

         [[-1.4597e-01, -1.1911e-01,  1.1566e-02],
          [ 6.3785e-02, -3.7382e-02,  3.2372e-02],
          [ 1.2892e-01,  4.4187e-02,  1.5010e-01]],

         [[ 4.3127e-02, -5.1967e-02, -1.4890e-03],
          [-4.7829e-02,  6.1903e-04,  5.1752e-02],
          [-1.0840e-01,  9.5707e-02, -9.9768e-03]],

         [[ 1.4033e-02, -9.8997e-03,  2.4682e-02],
          [-1.5390e-02, -4.9824e-02,  4.2405e-02],
          [-5.3772e-02, -2.0214e-03, -3.7538e-02]]],


        [[[-1.1313e-01,  1.1263e-02,  5.6461e-02],
          [-4.2881e-02, -5.3049e-02,  3.9971e-02],
          [-3.2491e-02,  3.7773e-02,  4.2677e-03]],

         [[-7.2950e-02, -1.1488e-02, -1.0766e-01],
          [-2.6786e-02,  4.9114e-02,  2.2308e-02],
          [-2.2134e-02,  9.6319e-02,  2.7413e-02]],

         [[ 6.2785e-02,  1.4454e-02,  1.2528e-02],
          [ 1.8899e-02,  9.6423e-03, -2.8454e-02],
          [ 2.6769e-02,  2.1806e-02, -6.2181e-02]],

         ...,

         [[ 1.1314e-02, -4.1937e-02, -2.4771e-02],
          [ 3.0358e-02, -1.6999e-02,  3.8867e-02],
          [-1.6118e-02, -1.0062e-01, -8.5325e-02]],

         [[ 1.1327e-02,  1.9653e-02,  1.2171e-01],
          [ 4.9202e-02,  1.8555e-02,  2.3029e-02],
          [-8.7192e-03, -6.9424e-03, -1.6283e-02]],

         [[ 4.2796e-02, -4.4763e-02, -1.1704e-01],
          [ 2.5898e-02,  2.8037e-03, -3.8646e-02],
          [ 5.9083e-02, -5.3871e-02, -6.1948e-05]]],


        [[[ 1.8699e-02,  8.3844e-02,  6.3592e-02],
          [ 1.9325e-02,  5.5334e-02,  4.1366e-02],
          [ 6.6362e-02,  1.1623e-01,  9.3453e-02]],

         [[ 5.7166e-02, -8.7624e-02,  1.4720e-02],
          [ 1.3032e-02, -2.3701e-02, -5.6380e-02],
          [-1.1632e-02, -2.4106e-02, -2.5838e-02]],

         [[-2.7814e-03,  5.2667e-02, -2.9784e-02],
          [ 3.7433e-02, -1.4158e-02,  7.3185e-03],
          [ 3.7926e-03,  3.2866e-02,  3.0781e-02]],

         ...,

         [[-3.6251e-02,  7.9805e-02, -3.0736e-02],
          [ 3.1224e-02, -4.2495e-02,  5.5882e-03],
          [ 7.2060e-03, -5.3917e-02, -1.6063e-02]],

         [[-3.6975e-02, -3.0261e-03, -5.3839e-02],
          [ 1.6794e-02,  8.0709e-02,  7.6740e-02],
          [ 5.0804e-02, -7.8101e-03,  4.7857e-02]],

         [[ 8.3342e-02, -1.1374e-01,  8.2977e-03],
          [-6.6784e-02, -9.1765e-02,  1.4008e-01],
          [-7.5170e-02, -6.5057e-02, -2.2555e-02]]],


        ...,


        [[[ 9.2406e-02,  6.0202e-02, -1.8450e-02],
          [ 1.3520e-02, -9.0370e-02, -6.2175e-03],
          [-8.8711e-02,  3.7843e-02, -3.0131e-02]],

         [[ 6.6368e-02,  1.0540e-01, -6.0310e-02],
          [ 9.1360e-02, -1.2187e-01, -6.7824e-03],
          [ 9.5315e-02, -4.8447e-02, -4.8664e-02]],

         [[ 1.0105e-01, -3.5670e-02, -5.3365e-02],
          [-4.8602e-03, -1.9935e-02, -4.6085e-03],
          [-1.2755e-02,  1.6939e-01,  1.7355e-02]],

         ...,

         [[-3.8753e-02, -4.1115e-03, -7.4760e-02],
          [ 1.9129e-02, -1.2439e-01, -2.3429e-02],
          [-5.6287e-02, -7.6916e-03, -4.8579e-02]],

         [[-4.3734e-02,  9.6808e-02,  1.4183e-01],
          [ 3.5234e-03, -1.6862e-02, -9.1340e-02],
          [-4.4439e-03, -5.3608e-02, -5.2870e-02]],

         [[ 8.6778e-02,  4.3340e-02,  1.1429e-03],
          [ 4.9627e-02, -5.0619e-02,  6.0182e-02],
          [ 1.0415e-01,  1.8962e-03, -1.9555e-02]]],


        [[[ 8.6430e-02, -4.2419e-03, -7.3668e-03],
          [-4.7833e-02,  6.3658e-02,  4.9776e-03],
          [-6.1613e-02,  4.9835e-02,  2.6038e-02]],

         [[ 8.3945e-02, -3.2477e-02, -1.9406e-02],
          [ 3.1524e-02, -9.9606e-02, -4.4003e-03],
          [ 2.8697e-02, -8.6059e-02,  4.4797e-02]],

         [[-5.9312e-03,  3.1869e-02, -1.5407e-02],
          [-2.5483e-03, -1.6370e-01,  8.6298e-03],
          [-9.9975e-03,  2.8232e-02, -1.2606e-02]],

         ...,

         [[ 1.3827e-03, -7.9209e-02,  7.9803e-03],
          [ 1.3306e-01,  2.5259e-02,  4.3635e-02],
          [-1.1217e-01, -4.4658e-02, -2.3880e-02]],

         [[ 3.7763e-02,  1.0936e-02, -2.9990e-02],
          [ 8.3696e-02,  1.1206e-02, -5.1372e-02],
          [ 1.8315e-02,  3.3570e-03, -2.5472e-02]],

         [[ 4.0243e-02,  3.6795e-02, -4.1417e-02],
          [ 6.1925e-03, -5.1613e-02, -5.3591e-03],
          [ 3.1464e-02, -3.4122e-02,  1.1424e-01]]],


        [[[ 9.7590e-02, -4.7230e-02,  1.0658e-01],
          [-1.5229e-01, -1.4942e-01,  9.3308e-02],
          [-7.3710e-02,  1.0639e-02, -3.6589e-02]],

         [[ 2.9056e-02,  6.0038e-02, -6.5867e-03],
          [-9.0333e-02,  9.5182e-03,  4.6550e-02],
          [ 1.0608e-01,  5.4549e-02,  6.5890e-02]],

         [[-1.6593e-02, -1.5173e-02, -3.5543e-02],
          [-2.4103e-03,  8.1614e-03,  2.8078e-02],
          [-6.0492e-03,  4.7512e-02, -4.5816e-02]],

         ...,

         [[ 1.1391e-01,  8.4776e-02, -3.9950e-02],
          [ 7.8120e-02, -2.3600e-02, -1.4975e-03],
          [-8.2843e-02,  3.9434e-02, -3.6724e-02]],

         [[-5.4055e-02,  7.9920e-03,  9.6673e-02],
          [-7.7640e-02,  5.6077e-02, -1.2381e-01],
          [-8.5425e-02, -1.1636e-01,  1.0109e-01]],

         [[-7.8577e-02,  8.9240e-03, -7.9965e-02],
          [ 7.4512e-02, -5.2812e-03, -1.9782e-02],
          [ 2.7542e-02,  1.1470e-01, -3.3970e-02]]]], device='cuda:0',
       requires_grad=True)
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[ 2.2957e-02, -1.6990e-02, -2.9737e-02],
          [-3.5198e-02, -5.6917e-02,  6.5280e-03],
          [ 1.5437e-02,  4.1070e-02,  4.8928e-03]],

         [[ 5.8812e-02,  2.5659e-03, -4.6889e-02],
          [-7.0502e-03, -5.9399e-03, -1.0508e-04],
          [ 4.9722e-02,  1.0591e-01, -3.8008e-03]],

         [[-1.0768e-02,  3.5812e-02,  4.6460e-02],
          [-7.0544e-02, -8.7245e-02,  2.9355e-02],
          [ 3.3857e-02, -3.0927e-02, -1.0997e-01]],

         ...,

         [[-5.8258e-02, -1.4682e-02,  6.0268e-03],
          [-4.1756e-02,  6.3183e-02, -1.2605e-02],
          [-3.0279e-02,  5.3670e-02,  2.7440e-03]],

         [[-7.2322e-03, -6.6824e-02, -2.8333e-02],
          [ 5.6687e-02,  1.1922e-02,  3.8637e-02],
          [-9.2506e-03, -3.6774e-02,  5.6387e-03]],

         [[ 6.0642e-02,  2.5372e-02, -6.6945e-03],
          [ 1.0088e-01,  1.0743e-02,  3.2104e-02],
          [ 3.9546e-03,  4.9686e-02,  9.3733e-03]]],


        [[[ 6.0367e-02, -2.1150e-03, -1.6505e-02],
          [ 6.4977e-02, -2.4839e-02,  2.0394e-02],
          [ 1.5598e-02, -4.4951e-02,  2.3863e-02]],

         [[-4.4240e-02, -2.4693e-02,  1.0334e-02],
          [ 1.5590e-02, -6.0314e-02,  3.5945e-02],
          [-2.9020e-02,  3.4471e-02, -1.0133e-01]],

         [[ 8.6651e-02, -5.4284e-02,  1.0556e-03],
          [-3.7827e-02,  2.2833e-02, -8.0366e-02],
          [-4.5465e-03, -1.8631e-02,  2.9018e-02]],

         ...,

         [[ 1.6188e-02, -3.7340e-02,  6.8580e-02],
          [-2.1346e-02,  6.7503e-03, -3.3524e-02],
          [-6.5070e-03, -5.2587e-02,  1.5438e-02]],

         [[ 7.0940e-02, -3.2288e-03,  1.3336e-02],
          [ 2.2613e-02, -3.9817e-02, -4.5243e-02],
          [ 6.0350e-04,  1.8779e-02,  2.6732e-02]],

         [[ 6.5726e-03,  1.3040e-02, -7.6073e-02],
          [ 4.2325e-02,  3.6981e-03, -5.4399e-02],
          [ 3.1590e-02, -1.2053e-02,  5.4149e-02]]],


        [[[-1.7511e-02,  2.6163e-02, -2.7445e-02],
          [ 2.1376e-02, -4.8948e-02, -6.2024e-02],
          [-1.2131e-02, -1.0666e-02, -4.0346e-02]],

         [[-8.2639e-03,  7.6163e-02, -2.1849e-02],
          [-6.7410e-02,  4.2600e-02,  2.2399e-03],
          [ 1.3034e-02,  2.2223e-03, -1.9782e-02]],

         [[ 7.4851e-02,  2.6193e-02, -1.4374e-02],
          [ 1.9974e-02,  3.5499e-02, -6.6548e-02],
          [ 2.4862e-02,  5.8181e-02,  3.9047e-02]],

         ...,

         [[-3.4540e-02, -1.5086e-02, -7.4712e-03],
          [-2.6057e-02, -6.7226e-02, -7.1016e-03],
          [ 7.4915e-02,  3.2839e-02,  1.4290e-02]],

         [[ 4.7702e-02,  6.1317e-02, -7.0295e-02],
          [ 1.0764e-02, -1.2699e-02,  1.9886e-02],
          [-4.6162e-02, -9.7116e-03, -1.0045e-02]],

         [[ 3.2369e-02,  5.2045e-02, -5.2426e-02],
          [ 2.3106e-02,  3.8230e-02,  4.9194e-02],
          [-1.2683e-02,  5.3256e-02, -5.3084e-03]]],


        ...,


        [[[-3.4273e-03,  2.2530e-02, -9.3625e-03],
          [ 4.1860e-02, -4.8062e-02, -3.6713e-02],
          [-5.8300e-02, -3.6366e-02,  4.6627e-02]],

         [[-1.4356e-02,  4.4435e-02,  7.3983e-03],
          [-2.4309e-02, -1.4308e-02,  1.6303e-02],
          [ 2.2569e-02, -9.0446e-02,  1.4831e-03]],

         [[ 6.3630e-02,  7.4761e-02, -9.9134e-02],
          [ 3.9130e-02, -2.8057e-02,  4.7040e-02],
          [ 7.6894e-03, -9.8487e-03, -2.1882e-02]],

         ...,

         [[-2.2056e-02, -3.2666e-03,  3.4252e-02],
          [-1.3051e-02, -2.7346e-02, -2.5784e-02],
          [-2.3985e-02,  6.6971e-03, -7.3794e-02]],

         [[-1.6020e-02,  3.4455e-02, -1.7456e-02],
          [ 3.1508e-03,  3.8208e-02, -7.9474e-02],
          [ 8.8041e-03,  8.7133e-02, -6.5881e-03]],

         [[-3.5062e-02,  2.2020e-02, -6.0624e-03],
          [ 3.1716e-04, -5.9439e-02, -3.0087e-02],
          [-1.1409e-02,  1.0337e-02,  2.6854e-03]]],


        [[[-2.4825e-02, -2.5032e-02, -1.1301e-02],
          [-2.4184e-02,  1.9783e-02,  8.1515e-03],
          [-9.7739e-03, -6.7594e-02, -4.7334e-02]],

         [[-1.3169e-02,  6.9251e-03, -4.3236e-03],
          [ 9.2847e-02, -6.8997e-02, -3.3095e-02],
          [ 3.2341e-02, -8.2319e-04,  4.5940e-02]],

         [[-9.0913e-03,  5.1023e-02, -8.0290e-02],
          [-1.7741e-02, -1.7222e-02, -5.7403e-04],
          [ 2.7707e-02, -4.4545e-03, -9.1825e-03]],

         ...,

         [[-1.2060e-02,  1.8610e-02, -7.1969e-02],
          [ 3.0893e-02, -3.2244e-02, -1.6005e-01],
          [-7.2772e-02, -1.0229e-02, -3.1301e-02]],

         [[ 8.7394e-02,  5.7613e-02,  3.8391e-02],
          [ 5.5867e-02, -1.2352e-02,  7.7773e-02],
          [-1.4989e-02, -1.7315e-02,  3.8668e-02]],

         [[ 7.2473e-02,  6.1944e-02,  8.0543e-02],
          [-2.6716e-02,  2.5846e-02,  7.2453e-02],
          [ 3.2248e-02, -2.8720e-05, -1.9946e-03]]],


        [[[-8.5480e-02, -2.3935e-03, -2.6101e-02],
          [-1.9800e-02, -1.1591e-03, -7.2626e-02],
          [ 2.8516e-02,  7.0908e-02, -1.4673e-02]],

         [[ 5.2157e-02, -3.7090e-02,  4.3538e-02],
          [ 5.2347e-02,  3.0359e-02, -5.3324e-02],
          [ 2.3261e-02,  4.7381e-03, -3.4869e-03]],

         [[ 1.1342e-02, -2.5359e-02,  1.1408e-03],
          [ 3.3368e-02,  5.9480e-02,  6.1126e-02],
          [-2.3529e-02,  1.8645e-02, -6.0062e-02]],

         ...,

         [[-3.3629e-02,  4.4909e-02, -4.2928e-03],
          [ 3.8085e-02,  2.7820e-02,  1.5867e-02],
          [ 2.4512e-02, -4.1480e-02,  3.0143e-02]],

         [[ 8.2173e-02, -6.1742e-02, -5.9431e-02],
          [ 6.3430e-03,  2.4265e-02, -3.7398e-03],
          [-6.2613e-02,  1.0783e-02, -2.8929e-02]],

         [[-9.2172e-03,  2.9572e-02, -3.3252e-02],
          [-1.8583e-02, -9.6964e-02,  2.0351e-02],
          [ 6.3662e-02, -1.7235e-02, -2.4487e-02]]]], device='cuda:0',
       requires_grad=True)
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[-1.3242e-02, -4.9286e-03, -7.1350e-03, -1.7602e-02,  8.6662e-03]],

         [[ 3.5183e-02, -1.3453e-02, -4.2395e-03,  2.2865e-02, -7.0902e-03]],

         [[-3.4561e-03,  4.1173e-02,  2.2766e-02,  2.5208e-02,  1.6251e-02]],

         ...,

         [[ 3.4712e-02, -1.5663e-02, -1.4545e-03,  3.6943e-03,  4.6526e-04]],

         [[-4.7746e-04,  1.2947e-02, -1.9699e-02, -2.1998e-02, -8.5486e-03]],

         [[ 1.4690e-03, -3.5432e-02, -3.3511e-03, -3.2152e-03,  3.4503e-05]]],


        [[[-1.0944e-02, -2.7763e-02,  6.5339e-03,  1.1063e-02, -1.3551e-02]],

         [[ 1.7885e-03, -2.8919e-02, -4.8657e-02,  1.3557e-02, -1.9624e-02]],

         [[ 1.4316e-02, -1.5760e-02, -4.2051e-03,  2.0971e-03,  1.6693e-02]],

         ...,

         [[ 1.9108e-02,  3.3382e-02,  2.8024e-02, -6.8161e-03, -4.0567e-02]],

         [[ 1.7305e-04, -1.8981e-03,  3.8755e-02, -2.3644e-03, -2.5511e-02]],

         [[-3.1613e-03,  2.3566e-02, -1.1503e-02, -5.6853e-03, -2.7697e-02]]],


        [[[-2.0964e-03,  3.9897e-02,  2.2506e-02,  2.8908e-03,  4.1080e-02]],

         [[-6.1909e-03, -6.5059e-03, -1.0254e-02,  3.2149e-03, -5.1680e-03]],

         [[-3.3903e-02,  2.6068e-02,  3.2336e-02,  1.0110e-03,  1.5706e-02]],

         ...,

         [[-1.5050e-02, -2.9704e-03,  7.3106e-05, -4.9130e-03,  3.4628e-02]],

         [[ 5.2356e-03,  4.5444e-03,  4.9635e-02,  8.7988e-03,  1.2083e-02]],

         [[ 2.2597e-02,  4.5710e-03, -3.1861e-02,  2.2912e-02, -1.4718e-02]]],


        ...,


        [[[-4.7452e-02, -3.0528e-03, -7.0224e-03, -1.9377e-02,  1.0722e-02]],

         [[-2.1466e-02,  2.8880e-02, -3.7405e-03, -6.6332e-03, -2.1538e-02]],

         [[ 1.0143e-03, -4.8968e-02, -1.4222e-02, -2.3730e-02, -1.9415e-02]],

         ...,

         [[ 9.2405e-03, -3.8515e-03, -2.8510e-02, -1.1616e-02,  2.3627e-02]],

         [[-4.1814e-02,  1.8273e-02, -1.3595e-02, -1.5991e-04,  2.2760e-02]],

         [[ 2.0640e-02, -4.8397e-03,  2.0070e-02,  2.0988e-02, -2.7821e-03]]],


        [[[ 3.4783e-02, -2.1414e-02, -1.1238e-03, -1.7304e-02,  2.0026e-03]],

         [[ 1.1590e-02,  1.1994e-02,  7.5817e-03,  3.2974e-02,  1.1995e-02]],

         [[ 2.2622e-03, -1.9711e-02,  3.4080e-02, -3.7289e-02, -2.7399e-02]],

         ...,

         [[-2.5306e-02,  3.0969e-03, -1.5727e-02, -5.9595e-02, -2.2959e-02]],

         [[-4.3340e-03,  2.9864e-02, -1.9641e-02, -2.0255e-02,  8.1327e-03]],

         [[-9.7567e-03, -9.6759e-03,  2.8960e-02,  4.0202e-02,  1.4298e-02]]],


        [[[-4.0244e-03,  2.0204e-02,  1.0756e-02,  8.0138e-03, -4.6351e-02]],

         [[ 1.8003e-02,  1.0572e-02, -2.5378e-02,  1.2783e-02, -4.3860e-02]],

         [[ 2.3753e-02,  3.4301e-02, -9.5798e-03, -4.3027e-03, -2.8789e-02]],

         ...,

         [[-1.0153e-02,  1.1990e-02,  4.3370e-02,  3.6338e-02,  1.6637e-02]],

         [[-9.3224e-04, -7.4192e-03, -1.0688e-02,  7.6933e-03, -8.2825e-03]],

         [[-2.2543e-02,  4.5720e-03, -8.6681e-03, -2.8954e-03,  2.7083e-03]]]],
       device='cuda:0', requires_grad=True)
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 0.0030],
          [-0.0217],
          [ 0.0282],
          [-0.0230],
          [ 0.0019]],

         [[-0.0386],
          [ 0.0313],
          [-0.0182],
          [ 0.0012],
          [ 0.0103]],

         [[ 0.0485],
          [-0.0394],
          [-0.0279],
          [ 0.0131],
          [ 0.0019]],

         ...,

         [[-0.0053],
          [ 0.0074],
          [ 0.0220],
          [ 0.0313],
          [ 0.0023]],

         [[-0.0142],
          [ 0.0065],
          [-0.0392],
          [-0.0288],
          [ 0.0354]],

         [[-0.0030],
          [ 0.0258],
          [ 0.0053],
          [ 0.0328],
          [ 0.0067]]],


        [[[ 0.0394],
          [ 0.0034],
          [ 0.0570],
          [-0.0138],
          [-0.0189]],

         [[-0.0090],
          [-0.0310],
          [-0.0170],
          [-0.0157],
          [-0.0017]],

         [[-0.0367],
          [ 0.0408],
          [-0.0144],
          [ 0.0174],
          [ 0.0187]],

         ...,

         [[ 0.0318],
          [-0.0030],
          [ 0.0110],
          [-0.0143],
          [-0.0174]],

         [[ 0.0018],
          [-0.0488],
          [ 0.0277],
          [-0.0135],
          [ 0.0391]],

         [[ 0.0330],
          [ 0.0388],
          [ 0.0281],
          [ 0.0016],
          [-0.0126]]],


        [[[ 0.0393],
          [ 0.0005],
          [-0.0285],
          [ 0.0271],
          [-0.0167]],

         [[ 0.0016],
          [ 0.0162],
          [-0.0037],
          [ 0.0255],
          [-0.0354]],

         [[-0.0120],
          [-0.0393],
          [-0.0015],
          [-0.0142],
          [-0.0072]],

         ...,

         [[ 0.0086],
          [ 0.0333],
          [-0.0015],
          [-0.0039],
          [-0.0397]],

         [[ 0.0136],
          [-0.0183],
          [ 0.0084],
          [-0.0276],
          [-0.0084]],

         [[ 0.0028],
          [-0.0048],
          [-0.0224],
          [-0.0163],
          [ 0.0409]]],


        ...,


        [[[-0.0197],
          [-0.0168],
          [-0.0081],
          [ 0.0260],
          [-0.0435]],

         [[ 0.0295],
          [ 0.0326],
          [ 0.0271],
          [ 0.0188],
          [ 0.0276]],

         [[ 0.0175],
          [ 0.0299],
          [ 0.0067],
          [-0.0120],
          [-0.0228]],

         ...,

         [[ 0.0101],
          [-0.0101],
          [-0.0229],
          [-0.0202],
          [-0.0015]],

         [[ 0.0128],
          [-0.0099],
          [ 0.0391],
          [ 0.0131],
          [ 0.0393]],

         [[ 0.0093],
          [ 0.0160],
          [-0.0049],
          [-0.0019],
          [ 0.0127]]],


        [[[ 0.0296],
          [-0.0371],
          [ 0.0086],
          [-0.0528],
          [ 0.0078]],

         [[ 0.0020],
          [-0.0097],
          [ 0.0470],
          [ 0.0223],
          [ 0.0246]],

         [[ 0.0225],
          [ 0.0444],
          [ 0.0259],
          [-0.0150],
          [ 0.0044]],

         ...,

         [[-0.0168],
          [ 0.0164],
          [ 0.0373],
          [-0.0229],
          [ 0.0069]],

         [[-0.0280],
          [-0.0098],
          [-0.0253],
          [ 0.0245],
          [-0.0438]],

         [[-0.0537],
          [-0.0158],
          [ 0.0210],
          [-0.0148],
          [ 0.0263]]],


        [[[ 0.0198],
          [ 0.0180],
          [ 0.0110],
          [ 0.0470],
          [-0.0460]],

         [[-0.0346],
          [-0.0257],
          [-0.0447],
          [-0.0162],
          [ 0.0282]],

         [[-0.0186],
          [-0.0181],
          [ 0.0027],
          [ 0.0045],
          [-0.0434]],

         ...,

         [[-0.0057],
          [-0.0125],
          [ 0.0411],
          [ 0.0102],
          [-0.0385]],

         [[-0.0486],
          [-0.0367],
          [-0.0408],
          [ 0.0033],
          [-0.0105]],

         [[-0.0120],
          [-0.0247],
          [ 0.0016],
          [ 0.0372],
          [-0.0062]]]], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-0.0198, -0.0332,  0.0185,  0.0061,  0.0090]],

         [[-0.0189, -0.0052, -0.0029, -0.0029,  0.0152]],

         [[-0.0213, -0.0290,  0.0002,  0.0067,  0.0204]],

         ...,

         [[-0.0262, -0.0354,  0.0128,  0.0138, -0.0291]],

         [[ 0.0161,  0.0113,  0.0119, -0.0210, -0.0005]],

         [[-0.0129, -0.0249, -0.0174, -0.0196,  0.0328]]],


        [[[-0.0386,  0.0095, -0.0468,  0.0322, -0.0062]],

         [[ 0.0242, -0.0073,  0.0039, -0.0130, -0.0203]],

         [[ 0.0226, -0.0312, -0.0195,  0.0119,  0.0049]],

         ...,

         [[ 0.0131,  0.0128, -0.0077,  0.0187,  0.0248]],

         [[ 0.0020,  0.0073,  0.0456, -0.0044, -0.0160]],

         [[ 0.0001,  0.0246, -0.0068,  0.0023,  0.0044]]],


        [[[-0.0193, -0.0230, -0.0067, -0.0137,  0.0122]],

         [[-0.0023, -0.0013,  0.0467, -0.0040, -0.0048]],

         [[ 0.0170, -0.0084,  0.0017,  0.0105, -0.0192]],

         ...,

         [[ 0.0148, -0.0290,  0.0302, -0.0221, -0.0044]],

         [[ 0.0153, -0.0103, -0.0109, -0.0182, -0.0369]],

         [[ 0.0406,  0.0008, -0.0075,  0.0115,  0.0032]]],


        ...,


        [[[ 0.0087,  0.0315, -0.0323,  0.0027,  0.0018]],

         [[-0.0253, -0.0126, -0.0206, -0.0345,  0.0178]],

         [[ 0.0280, -0.0056,  0.0027,  0.0019,  0.0041]],

         ...,

         [[ 0.0008,  0.0168, -0.0007,  0.0052,  0.0113]],

         [[ 0.0020,  0.0222,  0.0292, -0.0276, -0.0142]],

         [[ 0.0009, -0.0089,  0.0285, -0.0021, -0.0344]]],


        [[[-0.0400, -0.0127, -0.0418,  0.0024, -0.0016]],

         [[-0.0214,  0.0113,  0.0173, -0.0113, -0.0050]],

         [[-0.0183, -0.0223,  0.0398, -0.0004, -0.0046]],

         ...,

         [[-0.0006,  0.0272,  0.0086, -0.0087,  0.0181]],

         [[-0.0131,  0.0219, -0.0006,  0.0479, -0.0088]],

         [[ 0.0025,  0.0117,  0.0221,  0.0167,  0.0126]]],


        [[[-0.0007,  0.0263, -0.0094, -0.0098, -0.0226]],

         [[-0.0293, -0.0119, -0.0003, -0.0209,  0.0093]],

         [[ 0.0010, -0.0133, -0.0173, -0.0097, -0.0035]],

         ...,

         [[-0.0059,  0.0504, -0.0251, -0.0189, -0.0002]],

         [[-0.0351,  0.0110,  0.0365,  0.0190,  0.0138]],

         [[ 0.0023,  0.0374, -0.0286, -0.0149, -0.0218]]]], device='cuda:0',
       requires_grad=True)
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[ 9.7454e-03],
          [-1.0278e-02],
          [ 4.2852e-03],
          [-6.9255e-03],
          [-7.7103e-03]],

         [[-9.7174e-03],
          [-1.8600e-02],
          [-3.4935e-02],
          [-1.9238e-03],
          [-2.1228e-02]],

         [[ 3.4722e-02],
          [ 3.5832e-03],
          [-2.0445e-02],
          [ 7.2484e-03],
          [-4.4651e-02]],

         ...,

         [[-8.0765e-03],
          [ 1.2357e-02],
          [ 4.5172e-02],
          [-2.4477e-02],
          [ 1.0646e-02]],

         [[ 3.2581e-02],
          [-1.0865e-02],
          [-1.8816e-02],
          [-2.1787e-02],
          [ 2.3040e-02]],

         [[ 1.1595e-02],
          [-1.8334e-02],
          [-6.2043e-03],
          [ 2.0561e-02],
          [ 5.6409e-02]]],


        [[[-3.7861e-03],
          [-1.6167e-02],
          [ 7.1511e-03],
          [-2.7438e-02],
          [-7.0250e-04]],

         [[-1.9233e-02],
          [-2.9009e-02],
          [ 2.6454e-03],
          [-9.2433e-03],
          [ 4.1744e-02]],

         [[ 3.0812e-02],
          [-3.9692e-02],
          [ 6.3715e-03],
          [ 1.7144e-02],
          [ 4.1255e-02]],

         ...,

         [[ 7.3729e-03],
          [-1.9298e-02],
          [-4.0686e-02],
          [-2.0868e-02],
          [-7.6698e-03]],

         [[-2.7569e-02],
          [-4.7987e-03],
          [ 7.4469e-03],
          [-2.4525e-02],
          [ 1.3927e-02]],

         [[ 2.7629e-03],
          [-2.6192e-02],
          [-2.8983e-02],
          [ 2.0578e-02],
          [ 3.4448e-02]]],


        [[[-2.0664e-02],
          [-3.3531e-03],
          [-1.0341e-02],
          [ 1.0022e-02],
          [ 1.3127e-02]],

         [[ 3.3374e-02],
          [-4.4577e-02],
          [-7.9561e-03],
          [-9.0132e-04],
          [ 1.2833e-02]],

         [[-1.5640e-02],
          [ 3.0873e-02],
          [-1.2821e-02],
          [-4.8625e-02],
          [ 1.1571e-03]],

         ...,

         [[-4.4960e-02],
          [-1.8495e-02],
          [-5.9948e-03],
          [-2.3321e-03],
          [ 2.8554e-02]],

         [[ 3.0086e-02],
          [-3.0591e-03],
          [ 2.1478e-02],
          [ 1.0573e-02],
          [-2.2859e-02]],

         [[-3.4070e-02],
          [-2.6016e-03],
          [-7.1896e-03],
          [ 2.8504e-02],
          [ 3.4219e-03]]],


        ...,


        [[[-3.6016e-03],
          [-3.5917e-02],
          [ 6.0564e-03],
          [ 1.3287e-02],
          [ 5.5178e-02]],

         [[ 1.1579e-02],
          [ 1.7905e-02],
          [ 4.6586e-02],
          [ 8.7672e-03],
          [ 1.1474e-02]],

         [[-2.8671e-02],
          [-2.3184e-03],
          [-1.2366e-02],
          [ 3.1487e-02],
          [-1.0235e-02]],

         ...,

         [[ 1.3748e-02],
          [ 2.2819e-03],
          [-4.5286e-03],
          [-3.1122e-02],
          [-1.6433e-02]],

         [[ 3.3033e-02],
          [-4.8029e-05],
          [ 2.2131e-02],
          [-9.7975e-03],
          [ 9.0078e-03]],

         [[-3.6309e-02],
          [-3.4107e-02],
          [ 1.0112e-02],
          [ 1.3630e-02],
          [ 3.0809e-02]]],


        [[[-6.5868e-03],
          [ 2.9503e-02],
          [ 2.4550e-02],
          [-1.5217e-02],
          [ 2.7552e-02]],

         [[ 7.1862e-04],
          [ 2.5973e-02],
          [-2.0782e-02],
          [-8.9744e-03],
          [ 3.4785e-03]],

         [[-8.4609e-03],
          [ 8.0493e-03],
          [ 1.0008e-02],
          [-3.1825e-02],
          [-7.3399e-03]],

         ...,

         [[ 4.5064e-02],
          [ 4.2550e-02],
          [-9.0473e-03],
          [-1.5392e-02],
          [-3.0869e-02]],

         [[-6.2971e-03],
          [-6.8495e-03],
          [-6.1197e-02],
          [-5.3920e-03],
          [-3.2064e-02]],

         [[ 2.7366e-02],
          [ 1.5078e-02],
          [-6.2584e-03],
          [ 2.7947e-02],
          [-1.3753e-02]]],


        [[[ 7.8946e-03],
          [-1.9181e-02],
          [ 2.3525e-02],
          [-4.7728e-02],
          [ 8.7557e-03]],

         [[ 1.6807e-02],
          [-9.3191e-03],
          [-1.0797e-02],
          [-1.2341e-02],
          [ 6.3981e-02]],

         [[-5.7923e-03],
          [ 1.7181e-02],
          [ 3.9402e-02],
          [ 1.7895e-02],
          [ 3.4460e-02]],

         ...,

         [[ 2.2526e-03],
          [ 1.3067e-02],
          [ 1.9211e-03],
          [-2.4572e-04],
          [-1.3057e-02]],

         [[-1.2798e-02],
          [ 7.4426e-03],
          [-6.6816e-04],
          [-1.6631e-02],
          [-6.5034e-03]],

         [[-2.0056e-02],
          [-8.2818e-03],
          [ 4.1357e-03],
          [ 3.5386e-02],
          [-1.7411e-02]]]], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[ 6.2169e-03, -3.7767e-02,  3.0876e-03, -4.0906e-02, -7.9021e-03]],

         [[ 4.1754e-02, -1.7952e-02, -1.4622e-02, -1.4070e-02,  2.0689e-02]],

         [[ 1.5650e-03, -7.8558e-04,  1.8650e-02, -1.4305e-02, -3.6333e-02]],

         ...,

         [[-4.2342e-03,  3.0690e-02, -1.1962e-02, -1.0892e-02,  8.4769e-03]],

         [[-1.0379e-02,  4.0594e-02, -3.2240e-02,  1.6114e-02,  1.4538e-03]],

         [[ 7.5141e-03,  8.3076e-03, -5.8720e-02,  2.6728e-03,  1.2034e-02]]],


        [[[-1.5314e-02,  3.9817e-02,  1.5064e-02,  2.9719e-03, -9.8635e-03]],

         [[ 7.5093e-03,  6.8663e-03, -1.0607e-02, -5.1410e-02,  1.0592e-02]],

         [[-2.5184e-02, -2.2520e-02, -1.4758e-03,  1.0253e-02, -3.1513e-02]],

         ...,

         [[ 3.7610e-04, -2.9932e-02, -3.6299e-02,  1.4601e-02, -3.6407e-02]],

         [[ 6.6486e-03,  2.7067e-02,  8.5135e-03, -1.4164e-02,  1.2252e-03]],

         [[-2.4243e-02,  1.4436e-02,  6.5922e-03, -5.3364e-03, -1.4728e-02]]],


        [[[-1.1456e-02, -1.8187e-02, -1.9696e-02, -1.9933e-02, -3.9105e-03]],

         [[ 1.7442e-02,  2.2209e-03,  5.1886e-02, -6.7721e-03, -1.2640e-02]],

         [[-7.6720e-03,  1.7042e-02, -6.8006e-04,  1.2037e-03, -2.2016e-02]],

         ...,

         [[-2.8880e-02, -1.3845e-03,  8.8781e-03, -1.1245e-02,  5.5630e-03]],

         [[ 1.6730e-02, -2.5401e-03, -1.8351e-02, -7.9873e-03, -1.0341e-02]],

         [[ 1.8057e-02,  3.9124e-03, -5.8340e-02, -2.5654e-02,  1.0303e-02]]],


        ...,


        [[[-8.5959e-03,  9.2492e-03, -3.2086e-02, -5.3257e-03, -6.0998e-03]],

         [[-1.4265e-02,  8.6944e-03, -8.0287e-03, -5.6077e-03,  1.0412e-02]],

         [[ 1.4455e-02,  3.2213e-03,  3.9571e-02,  1.8951e-02,  4.6610e-05]],

         ...,

         [[-5.9454e-02, -2.1847e-02,  8.5476e-04, -1.4874e-02, -5.8312e-02]],

         [[-4.4819e-02, -2.7973e-03,  3.5715e-03,  1.2131e-02,  2.0057e-02]],

         [[-5.0497e-03, -2.9488e-02, -1.6930e-02,  1.2097e-02, -3.0387e-02]]],


        [[[-2.4787e-03, -5.9539e-03, -5.9729e-03,  2.4194e-02, -4.2293e-02]],

         [[ 2.3737e-03, -2.1164e-02, -1.2255e-02,  3.0621e-02, -2.0519e-02]],

         [[ 4.5818e-03,  4.1238e-04,  2.6627e-02, -1.0267e-02, -2.2276e-03]],

         ...,

         [[ 1.2817e-02, -3.2742e-02,  8.2386e-03,  5.5407e-04,  2.5517e-02]],

         [[-1.4427e-02, -1.1876e-02, -2.7896e-02,  3.4473e-02, -3.1298e-02]],

         [[ 1.0322e-02, -2.2854e-02, -3.1212e-02,  2.4089e-02,  1.8594e-02]]],


        [[[ 2.2342e-02, -3.7507e-02, -4.1891e-02, -3.4251e-02, -2.0944e-02]],

         [[ 4.7206e-02, -3.3222e-02, -1.1723e-02,  4.2403e-02, -1.4452e-02]],

         [[-8.7412e-03, -2.0251e-02,  1.3733e-02, -2.2449e-02,  1.1949e-02]],

         ...,

         [[-5.7362e-03, -8.5311e-03,  1.2424e-02,  1.5814e-02, -1.2336e-02]],

         [[ 8.9900e-03,  1.7018e-03,  7.4212e-03,  1.1351e-02,  1.0754e-02]],

         [[-1.7142e-02,  1.9115e-02,  2.3550e-02, -1.1062e-02, -1.0209e-02]]]],
       device='cuda:0', requires_grad=True)
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[ 0.0171],
          [-0.0031],
          [ 0.0262],
          [-0.0424],
          [-0.0307]],

         [[-0.0178],
          [-0.0199],
          [-0.0075],
          [-0.0157],
          [-0.0117]],

         [[ 0.0260],
          [-0.0292],
          [-0.0378],
          [-0.0249],
          [-0.0342]],

         ...,

         [[ 0.0136],
          [-0.0242],
          [-0.0153],
          [ 0.0373],
          [-0.0164]],

         [[ 0.0031],
          [-0.0232],
          [ 0.0148],
          [-0.0384],
          [-0.0112]],

         [[ 0.0423],
          [-0.0243],
          [-0.0438],
          [ 0.0156],
          [ 0.0054]]],


        [[[-0.0072],
          [ 0.0177],
          [-0.0182],
          [ 0.0122],
          [ 0.0126]],

         [[ 0.0578],
          [ 0.0093],
          [-0.0113],
          [ 0.0297],
          [-0.0087]],

         [[-0.0133],
          [-0.0148],
          [ 0.0647],
          [-0.0011],
          [-0.0314]],

         ...,

         [[-0.0162],
          [ 0.0238],
          [-0.0009],
          [ 0.0495],
          [-0.0130]],

         [[-0.0100],
          [ 0.0286],
          [ 0.0252],
          [ 0.0325],
          [-0.0197]],

         [[ 0.0017],
          [-0.0191],
          [ 0.0206],
          [ 0.0127],
          [-0.0167]]],


        [[[ 0.0173],
          [-0.0177],
          [ 0.0199],
          [ 0.0003],
          [ 0.0345]],

         [[-0.0299],
          [ 0.0094],
          [ 0.0015],
          [ 0.0277],
          [-0.0283]],

         [[ 0.0098],
          [-0.0034],
          [-0.0054],
          [ 0.0058],
          [-0.0161]],

         ...,

         [[-0.0175],
          [ 0.0097],
          [-0.0275],
          [ 0.0245],
          [-0.0235]],

         [[ 0.0225],
          [-0.0278],
          [-0.0024],
          [-0.0080],
          [-0.0038]],

         [[-0.0236],
          [ 0.0250],
          [ 0.0266],
          [-0.0166],
          [-0.0029]]],


        ...,


        [[[ 0.0125],
          [ 0.0085],
          [-0.0080],
          [-0.0365],
          [-0.0146]],

         [[-0.0391],
          [ 0.0127],
          [ 0.0004],
          [ 0.0102],
          [ 0.0290]],

         [[ 0.0075],
          [ 0.0182],
          [ 0.0005],
          [-0.0243],
          [-0.0112]],

         ...,

         [[ 0.0013],
          [-0.0161],
          [-0.0148],
          [ 0.0092],
          [ 0.0023]],

         [[ 0.0376],
          [-0.0433],
          [-0.0294],
          [-0.0069],
          [-0.0250]],

         [[ 0.0389],
          [ 0.0113],
          [-0.0023],
          [-0.0264],
          [ 0.0164]]],


        [[[ 0.0142],
          [-0.0185],
          [ 0.0011],
          [ 0.0270],
          [ 0.0259]],

         [[-0.0434],
          [ 0.0062],
          [ 0.0418],
          [ 0.0632],
          [-0.0232]],

         [[ 0.0210],
          [-0.0160],
          [ 0.0003],
          [ 0.0146],
          [ 0.0111]],

         ...,

         [[-0.0186],
          [ 0.0121],
          [ 0.0147],
          [ 0.0401],
          [ 0.0018]],

         [[ 0.0058],
          [-0.0006],
          [-0.0227],
          [-0.0120],
          [ 0.0081]],

         [[ 0.0160],
          [-0.0134],
          [-0.0039],
          [ 0.0046],
          [-0.0271]]],


        [[[-0.0311],
          [-0.0400],
          [ 0.0049],
          [ 0.0009],
          [-0.0337]],

         [[-0.0056],
          [ 0.0384],
          [-0.0462],
          [ 0.0145],
          [-0.0321]],

         [[-0.0183],
          [ 0.0056],
          [ 0.0003],
          [ 0.0447],
          [ 0.0411]],

         ...,

         [[ 0.0296],
          [-0.0037],
          [ 0.0145],
          [ 0.0098],
          [ 0.0276]],

         [[-0.0559],
          [-0.0119],
          [-0.0112],
          [ 0.0311],
          [-0.0226]],

         [[-0.0093],
          [-0.0027],
          [ 0.0006],
          [-0.0049],
          [ 0.0185]]]], device='cuda:0', requires_grad=True)
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-3.0852e-02, -1.0969e-02, -1.3173e-02],
          [-1.7103e-02,  1.4663e-02,  1.5810e-02],
          [ 3.2830e-02,  3.2413e-03, -1.3266e-02]],

         [[-4.9227e-02,  2.1403e-02,  1.9163e-02],
          [-1.8556e-02, -7.1798e-03, -3.4063e-02],
          [ 1.9133e-02,  5.2647e-02,  3.5612e-03]],

         [[ 1.5541e-02, -6.4324e-04, -1.7865e-02],
          [-2.0899e-02,  9.6101e-03,  2.3765e-02],
          [ 1.6645e-02, -2.2914e-02,  2.0527e-02]],

         ...,

         [[ 5.9905e-02, -2.1567e-02, -1.8921e-02],
          [ 2.8686e-02,  4.0061e-02, -2.7390e-02],
          [-2.6469e-03,  1.4628e-03,  4.1533e-02]],

         [[-3.9586e-02, -1.0588e-02,  1.2167e-02],
          [ 2.4126e-02, -2.4348e-02,  1.9964e-02],
          [-4.7797e-02, -1.6513e-02, -5.7254e-03]],

         [[ 1.1467e-02,  1.6324e-02,  1.1795e-02],
          [-8.1811e-03, -7.1223e-05,  1.3781e-03],
          [ 2.2223e-02,  3.3633e-02,  2.0772e-02]]],


        [[[-3.8552e-02,  7.5281e-03, -3.6983e-02],
          [-3.9409e-03, -2.1342e-02,  1.3067e-02],
          [ 1.5905e-02, -5.0209e-03, -6.3746e-02]],

         [[-2.0012e-02,  3.0542e-02, -1.6719e-02],
          [-2.2938e-02, -3.4609e-02,  1.9272e-02],
          [ 7.2011e-03,  2.9079e-02,  2.5712e-02]],

         [[ 2.5410e-02,  2.1896e-02,  4.6131e-02],
          [-2.2234e-04,  4.4567e-02, -2.2332e-02],
          [ 6.1562e-03,  2.7331e-02,  4.4172e-03]],

         ...,

         [[ 9.7949e-02, -5.8418e-02, -3.7626e-02],
          [ 6.7708e-03,  1.2481e-02, -1.8839e-02],
          [ 5.9432e-02,  2.1064e-02,  1.1422e-02]],

         [[-5.1428e-02, -6.7805e-03, -2.8041e-04],
          [-1.4449e-02, -1.3605e-02, -4.3073e-02],
          [ 2.6700e-02, -1.7749e-02,  2.0228e-03]],

         [[-2.0097e-02,  4.4546e-02, -9.1376e-03],
          [-4.4998e-02, -2.2239e-02, -2.8480e-02],
          [-3.9844e-02,  3.7052e-02,  5.2450e-02]]],


        [[[ 3.3990e-02, -1.1817e-02, -6.5047e-03],
          [-2.5548e-02, -6.7242e-02,  1.4487e-03],
          [-1.4184e-03,  1.3684e-02,  4.8197e-02]],

         [[-6.3986e-03,  4.2768e-02, -4.2660e-02],
          [-3.0485e-02,  6.9235e-02, -2.8153e-02],
          [-3.9119e-02, -9.2919e-03,  1.3841e-02]],

         [[ 4.6128e-02,  2.9812e-02, -1.3068e-02],
          [ 3.0282e-02, -2.6160e-02,  1.9592e-02],
          [-2.1071e-02, -3.0878e-02, -1.2650e-02]],

         ...,

         [[ 6.1201e-03, -2.5087e-02, -6.5866e-02],
          [-1.3795e-02,  3.1173e-02,  1.0362e-02],
          [ 2.3718e-02,  1.2933e-02, -3.9380e-02]],

         [[-2.0864e-02,  3.4999e-02, -2.5079e-02],
          [-1.5667e-02, -3.2212e-02, -4.9098e-02],
          [-2.0662e-02, -6.4997e-03, -3.9581e-02]],

         [[-1.5032e-02, -1.3711e-02,  5.3080e-02],
          [ 1.5429e-03,  1.8094e-02,  2.7810e-02],
          [-4.0631e-02, -1.5786e-02, -3.1443e-02]]],


        ...,


        [[[-2.6146e-02,  3.5465e-02, -6.5594e-02],
          [ 9.0517e-03,  9.2589e-03, -1.8457e-02],
          [-1.4768e-02, -2.0920e-02,  5.9199e-02]],

         [[-1.6134e-02, -2.6547e-02,  4.6192e-02],
          [ 4.6479e-02, -3.2209e-02, -8.3131e-02],
          [-3.7295e-02, -3.6482e-02, -1.3028e-02]],

         [[ 1.5714e-02,  3.4584e-02, -3.7243e-03],
          [ 4.9880e-02,  1.5183e-03, -4.9420e-02],
          [-6.2980e-02, -2.8783e-02,  3.0270e-02]],

         ...,

         [[-3.3020e-02, -2.5257e-02,  1.0127e-03],
          [-4.5045e-02,  1.3135e-02, -4.7693e-02],
          [ 9.0047e-02,  5.9079e-02, -5.5119e-02]],

         [[-3.8758e-02, -4.5357e-02,  9.4378e-03],
          [-1.3008e-02,  1.8442e-02,  1.3349e-02],
          [-2.0285e-03, -4.4247e-02, -1.3621e-02]],

         [[-8.4452e-03, -5.8612e-04, -7.3167e-03],
          [-5.9171e-02,  2.5284e-02, -5.0756e-02],
          [ 6.2935e-03, -5.0955e-03,  4.2161e-02]]],


        [[[ 2.2547e-02, -5.9747e-02, -8.3806e-03],
          [-3.1023e-02,  2.3552e-03, -4.7876e-02],
          [ 9.2439e-03,  2.1797e-02,  1.3824e-02]],

         [[ 6.6928e-03, -2.8431e-02, -3.3975e-03],
          [-6.1444e-03,  1.8440e-02, -1.1082e-02],
          [ 1.7072e-02, -4.5389e-04,  4.1290e-02]],

         [[-5.3212e-02, -1.7442e-02,  1.3320e-02],
          [-3.4061e-02, -3.1094e-02,  3.1166e-02],
          [-1.1167e-03,  5.1608e-04,  1.6340e-02]],

         ...,

         [[-4.3993e-02, -3.5927e-02,  1.1612e-02],
          [ 1.7480e-02,  4.8293e-02,  6.7158e-03],
          [-1.8614e-03, -4.4111e-03, -3.7904e-02]],

         [[-3.3206e-02,  2.1112e-02, -2.1300e-02],
          [ 5.2195e-02, -3.8867e-02,  3.6582e-02],
          [ 2.7577e-02, -1.0976e-02, -1.9331e-02]],

         [[-4.3733e-02,  2.4386e-03,  4.4496e-02],
          [ 4.4562e-02,  6.6754e-03, -8.8885e-03],
          [ 3.1464e-02,  4.5470e-02,  7.0268e-02]]],


        [[[ 2.6380e-02, -2.5440e-02, -1.7219e-02],
          [ 2.1763e-02,  2.2311e-02, -6.2732e-03],
          [-2.5955e-02, -1.3296e-02,  5.9254e-03]],

         [[ 2.2918e-02,  4.0453e-02,  1.1202e-03],
          [-3.0973e-02,  1.2495e-02,  9.1068e-04],
          [ 5.4396e-02, -8.4744e-03,  2.5168e-02]],

         [[-4.7950e-02,  6.4463e-03, -2.0240e-02],
          [ 2.8230e-02, -1.0542e-02,  4.4859e-03],
          [ 2.2950e-02, -2.5913e-02,  1.4533e-02]],

         ...,

         [[ 3.6406e-02,  1.1267e-02, -1.2446e-02],
          [-2.5321e-02, -1.1434e-03,  1.8962e-02],
          [ 1.4419e-03, -2.4340e-02, -1.2773e-02]],

         [[ 1.5014e-02,  1.7748e-02,  1.3199e-02],
          [ 1.5320e-02,  4.5913e-02,  1.6391e-02],
          [ 1.3506e-04, -6.9967e-02, -4.1363e-02]],

         [[ 2.1020e-02, -5.1441e-03, -2.4495e-02],
          [ 4.5036e-02, -2.5590e-03, -1.1273e-02],
          [ 1.8985e-02, -5.5674e-02,  2.7210e-02]]]], device='cuda:0',
       requires_grad=True)
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[-4.9656e-03,  1.6373e-02,  1.3225e-02],
          [ 1.7343e-02,  4.7712e-03, -1.8890e-02],
          [ 1.0073e-02,  3.1272e-03,  1.9593e-02]],

         [[ 1.6239e-02, -1.8833e-02,  9.0872e-03],
          [-9.8146e-03, -1.3040e-02, -1.2445e-02],
          [ 1.2497e-03,  2.0156e-02,  7.8697e-03]],

         [[-1.4032e-02, -8.2049e-03,  1.4804e-02],
          [-6.2623e-04, -1.9646e-02, -5.8386e-04],
          [-1.6878e-02,  1.2930e-02,  8.3283e-03]],

         ...,

         [[-3.4361e-03,  2.3689e-03, -2.6682e-03],
          [ 1.7066e-02, -1.2303e-03,  3.6408e-04],
          [-1.1354e-02, -1.3992e-03,  4.8719e-03]],

         [[-2.0805e-02,  7.3095e-03, -1.3350e-02],
          [ 5.2571e-03,  1.5147e-02, -9.4015e-04],
          [ 1.1419e-02,  8.5283e-03, -1.5292e-02]],

         [[-1.2628e-02, -1.7689e-03, -1.7404e-02],
          [-1.5185e-02,  3.4313e-03, -1.2896e-02],
          [-1.2264e-03, -6.4164e-03, -7.5976e-03]]],


        [[[ 1.5413e-02, -3.2932e-03, -1.8430e-02],
          [-5.5803e-03, -1.8637e-02,  1.0114e-02],
          [ 1.3280e-02, -4.6497e-03,  1.4763e-02]],

         [[-3.6547e-03, -1.7351e-02,  5.1294e-03],
          [ 3.4121e-03,  1.8949e-03, -1.7697e-02],
          [ 5.6197e-03,  1.4239e-02,  1.2800e-02]],

         [[-1.7692e-02, -6.0434e-04,  5.9110e-03],
          [ 7.6095e-05,  4.8931e-03, -5.7665e-03],
          [-1.8485e-02,  1.3751e-02,  1.9825e-02]],

         ...,

         [[ 1.8772e-02,  1.4949e-02,  1.5699e-03],
          [ 8.9402e-03, -2.2671e-03, -2.0303e-02],
          [ 3.4080e-03, -1.5544e-02,  1.7425e-02]],

         [[-1.9818e-02,  9.4328e-03, -1.0663e-02],
          [ 1.6054e-02, -6.5202e-03,  2.0447e-02],
          [ 8.4291e-03, -1.4747e-02, -6.6808e-04]],

         [[ 1.3593e-02,  4.2072e-03, -1.0281e-02],
          [ 8.0578e-03,  1.5544e-02,  4.8982e-03],
          [-2.0712e-02, -1.1258e-02, -9.6502e-03]]]], device='cuda:0',
       requires_grad=True)
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([ 0.0031, -0.0201], device='cuda:0', requires_grad=True)
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 6.9967e-03,  3.9001e-02,  1.9373e-03],
          [ 2.8359e-02,  1.2091e-02, -2.5338e-02],
          [ 3.0773e-02, -7.5212e-03,  5.4788e-03]],

         [[ 1.9877e-02,  2.0850e-02,  1.1613e-03],
          [ 2.4312e-02, -1.6693e-04,  1.9222e-02],
          [ 5.7243e-02,  6.5954e-02,  9.4386e-03]],

         [[-1.1472e-02, -1.0629e-02, -1.2371e-02],
          [ 1.1693e-02,  5.5385e-02,  1.1549e-02],
          [ 9.7846e-03,  1.7396e-02, -2.9483e-02]],

         ...,

         [[ 6.2499e-03, -7.7556e-03, -3.2956e-02],
          [-1.0904e-02,  7.5859e-02, -4.6974e-02],
          [ 2.0746e-03,  3.6315e-02, -1.7887e-02]],

         [[-4.5137e-02, -8.5730e-03,  3.0861e-02],
          [ 1.5880e-02,  1.6376e-02,  2.1243e-02],
          [-2.0687e-02, -3.8591e-02,  2.6235e-02]],

         [[-2.5379e-04,  6.0670e-04, -1.2014e-02],
          [-2.3243e-02,  3.3521e-02,  6.6436e-03],
          [-6.4914e-02, -4.0598e-02, -6.2507e-03]]],


        [[[-1.7481e-02,  3.2652e-03,  4.7718e-02],
          [-4.0417e-02,  5.6682e-02,  4.0379e-02],
          [-1.0032e-02,  1.2838e-02, -2.8562e-02]],

         [[ 4.4346e-02,  5.9295e-03, -1.4609e-02],
          [ 3.5320e-02, -1.0055e-02, -2.9797e-02],
          [ 8.9961e-03, -3.8554e-02, -3.2897e-02]],

         [[ 2.3140e-02,  2.7351e-02, -2.8865e-02],
          [ 6.9968e-03,  4.4878e-02, -5.6716e-02],
          [-4.2877e-04,  6.0656e-03,  3.1542e-03]],

         ...,

         [[ 2.5072e-02,  2.6079e-02, -3.0643e-02],
          [-8.7743e-03,  2.1979e-02,  6.9377e-02],
          [ 2.8213e-02, -3.1630e-02,  3.2090e-02]],

         [[ 2.7795e-02, -2.8937e-02,  2.0798e-02],
          [-4.1172e-02,  3.7125e-02, -6.9592e-02],
          [-4.0012e-02, -4.0814e-02,  2.4138e-02]],

         [[-2.2358e-02, -4.5229e-02, -1.7282e-02],
          [-1.1981e-02, -2.4088e-03,  1.9809e-02],
          [ 4.9597e-02, -3.0241e-02, -3.2804e-02]]],


        [[[-2.1915e-02, -1.3979e-02, -3.6638e-02],
          [ 5.3073e-03, -6.7866e-04,  1.0664e-02],
          [-1.1453e-02, -1.4878e-02, -1.9943e-02]],

         [[-1.7681e-02, -3.5236e-02, -7.0952e-05],
          [ 1.1123e-03,  7.0625e-02,  3.1613e-02],
          [-2.5190e-02,  9.9632e-03, -1.4527e-02]],

         [[ 6.7594e-03,  1.8317e-02, -1.7131e-02],
          [-1.5241e-02,  2.3754e-02,  1.6295e-02],
          [-1.1656e-02, -1.7087e-02, -4.7481e-02]],

         ...,

         [[ 2.4582e-03,  1.2163e-02,  2.6137e-02],
          [-2.6261e-02,  2.9959e-02, -1.6388e-02],
          [-3.7278e-02, -3.3928e-02, -1.3685e-02]],

         [[ 2.1399e-02, -2.5337e-02,  3.8492e-02],
          [-2.1034e-02,  4.9602e-03,  1.8257e-02],
          [ 7.2218e-03,  5.4854e-02,  3.4158e-02]],

         [[-1.5156e-02, -4.4104e-02, -2.0890e-02],
          [ 1.8557e-03, -2.8137e-02,  1.1649e-02],
          [ 5.2829e-03, -3.5041e-04,  3.6547e-02]]],


        ...,


        [[[ 5.3070e-02, -3.4338e-02, -8.8952e-02],
          [ 1.3309e-02, -1.5052e-02, -2.0222e-02],
          [-6.0843e-02,  3.1505e-02, -2.3744e-02]],

         [[-2.0693e-02, -5.5087e-02, -4.1315e-02],
          [ 1.7916e-02,  6.2402e-02, -3.4328e-02],
          [-1.2511e-02,  4.2521e-02, -2.3585e-02]],

         [[-4.7821e-03, -1.7514e-02, -3.0057e-02],
          [-5.1594e-02, -4.1912e-02, -3.8634e-02],
          [ 3.1452e-02, -2.6373e-02,  8.8056e-03]],

         ...,

         [[-1.1932e-02, -1.5096e-02, -9.4793e-03],
          [-1.5062e-02, -2.2831e-02,  1.9572e-03],
          [ 9.0190e-03, -3.1508e-03,  2.5394e-02]],

         [[-3.1376e-02,  3.1608e-02, -5.1051e-03],
          [-1.0557e-03,  8.3637e-03, -1.1660e-02],
          [ 3.9301e-02, -3.9202e-02,  4.9393e-02]],

         [[-4.5429e-02, -1.0394e-02,  4.9534e-02],
          [-5.1799e-02, -1.1853e-02, -2.3499e-02],
          [ 1.9419e-02,  9.7299e-04, -3.9824e-02]]],


        [[[ 1.3785e-02,  5.6948e-02,  5.3341e-02],
          [ 2.2662e-02,  6.2966e-03, -6.5450e-02],
          [-6.2536e-03,  2.4521e-02,  8.1082e-03]],

         [[ 1.3579e-02, -4.7820e-03,  4.0188e-02],
          [ 1.2734e-02,  1.2218e-02,  1.2728e-02],
          [-6.1188e-03,  1.5299e-02, -3.0258e-02]],

         [[ 7.1290e-03,  1.6663e-02,  1.8813e-02],
          [ 2.9006e-02,  3.7813e-02,  4.3648e-02],
          [-6.7738e-03, -1.3818e-02, -4.5153e-03]],

         ...,

         [[ 3.1960e-02, -5.5229e-02,  2.7052e-02],
          [ 5.3404e-03,  1.5375e-02,  6.0527e-02],
          [-4.4853e-02,  1.6968e-02,  1.8649e-02]],

         [[-5.0785e-02, -2.7925e-02, -3.6870e-02],
          [ 5.6604e-03,  2.2077e-02,  1.2156e-02],
          [-2.4669e-02,  3.2725e-02,  4.0150e-02]],

         [[ 3.7434e-02,  2.3499e-02, -4.7826e-02],
          [-1.1345e-03,  1.9021e-02,  6.6298e-03],
          [-9.2079e-03,  1.4600e-02,  1.3621e-02]]],


        [[[ 3.6675e-02,  5.8812e-02, -8.0199e-03],
          [ 9.7470e-03, -5.6581e-02,  3.6852e-02],
          [ 4.7697e-02,  1.9151e-02,  4.3831e-03]],

         [[-1.5995e-02,  1.8231e-02,  1.4428e-02],
          [-6.4223e-03, -2.8673e-03,  3.6850e-02],
          [-7.1998e-02, -2.4293e-03, -1.7907e-02]],

         [[-6.8462e-02, -3.4628e-02,  1.2307e-03],
          [ 1.9119e-02,  2.1054e-02,  1.4844e-02],
          [ 4.6275e-02,  2.6636e-02,  3.5238e-02]],

         ...,

         [[-5.9069e-02,  2.5502e-02, -5.0442e-03],
          [-3.5989e-02, -1.6407e-02,  8.0961e-03],
          [ 3.4021e-02, -7.8375e-03, -2.5048e-03]],

         [[ 7.2974e-03, -1.9962e-02,  7.0145e-02],
          [-8.4040e-03,  1.7447e-02,  2.9193e-02],
          [ 8.5029e-02, -3.2526e-02,  1.1867e-02]],

         [[-1.2059e-02, -3.5528e-02,  4.4103e-02],
          [-3.0582e-02,  2.3542e-02, -7.5627e-03],
          [ 4.8805e-02, -5.3858e-02, -2.3669e-02]]]], device='cuda:0',
       requires_grad=True)
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0509]],

         [[-0.0250]],

         [[-0.0572]],

         ...,

         [[-0.0471]],

         [[ 0.0023]],

         [[-0.0484]]],


        [[[-0.0318]],

         [[ 0.0195]],

         [[ 0.0182]],

         ...,

         [[ 0.0575]],

         [[ 0.0571]],

         [[-0.0313]]],


        [[[-0.0122]],

         [[-0.0229]],

         [[ 0.0078]],

         ...,

         [[-0.0306]],

         [[ 0.0052]],

         [[-0.0206]]],


        ...,


        [[[-0.0382]],

         [[ 0.0458]],

         [[-0.0519]],

         ...,

         [[-0.0051]],

         [[ 0.0165]],

         [[ 0.0081]]],


        [[[ 0.0555]],

         [[ 0.0260]],

         [[-0.0160]],

         ...,

         [[-0.0461]],

         [[ 0.0239]],

         [[ 0.0365]]],


        [[[ 0.0362]],

         [[ 0.0108]],

         [[-0.0559]],

         ...,

         [[ 0.0170]],

         [[ 0.0124]],

         [[-0.0126]]]], device='cuda:0', requires_grad=True)
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([ 0.0348,  0.0223,  0.0223, -0.0250,  0.0305,  0.0265, -0.0156, -0.0206,
        -0.0547, -0.0524, -0.0407,  0.0093, -0.0566,  0.0423, -0.0452,  0.0501,
         0.0346, -0.0583,  0.0406,  0.0093,  0.0360, -0.0325,  0.0501, -0.0367,
         0.0201,  0.0323, -0.0255,  0.0278,  0.0363,  0.0398,  0.0222, -0.0121,
        -0.0232,  0.0385, -0.0095, -0.0206,  0.0521, -0.0449, -0.0459, -0.0018,
        -0.0437,  0.0599, -0.0334, -0.0463, -0.0169,  0.0253, -0.0624,  0.0507,
        -0.0376, -0.0455, -0.0571, -0.0095,  0.0088, -0.0189, -0.0013,  0.0185,
         0.0109, -0.0117,  0.0394, -0.0422, -0.0608,  0.0525, -0.0222, -0.0204,
        -0.0216, -0.0239,  0.0019, -0.0148,  0.0323,  0.0101,  0.0407, -0.0157,
        -0.0469, -0.0460, -0.0578, -0.0116, -0.0337, -0.0526, -0.0024, -0.0585,
         0.0578, -0.0225, -0.0060, -0.0408, -0.0118,  0.0335, -0.0543,  0.0191,
         0.0010,  0.0362,  0.0167,  0.0482,  0.0479,  0.0185,  0.0030,  0.0500,
        -0.0236,  0.0553, -0.0109,  0.0459,  0.0278,  0.0135, -0.0509, -0.0341,
         0.0385,  0.0171, -0.0013,  0.0383,  0.0346,  0.0418,  0.0495, -0.0082,
         0.0489,  0.0623, -0.0120, -0.0333,  0.0226, -0.0346, -0.0241, -0.0511,
         0.0250,  0.0435, -0.0472, -0.0431,  0.0234, -0.0242,  0.0592,  0.0222,
        -0.0249, -0.0581,  0.0317, -0.0267,  0.0623, -0.0229,  0.0148,  0.0291,
        -0.0198, -0.0465,  0.0510,  0.0445,  0.0427,  0.0421,  0.0249, -0.0088,
        -0.0350,  0.0541,  0.0282, -0.0095, -0.0018, -0.0261,  0.0153,  0.0519,
         0.0105, -0.0013, -0.0428,  0.0238,  0.0501, -0.0403,  0.0235,  0.0303,
         0.0382, -0.0170,  0.0450,  0.0060,  0.0087,  0.0318, -0.0017,  0.0445,
        -0.0180, -0.0033,  0.0083, -0.0463,  0.0174, -0.0191,  0.0564, -0.0398,
         0.0275, -0.0593,  0.0281, -0.0421, -0.0381,  0.0218, -0.0139,  0.0338,
        -0.0445, -0.0465, -0.0297, -0.0368, -0.0589,  0.0519,  0.0037,  0.0571,
         0.0242,  0.0056,  0.0491,  0.0487, -0.0562, -0.0531,  0.0349,  0.0277,
        -0.0248,  0.0023, -0.0580,  0.0438, -0.0063,  0.0573, -0.0516,  0.0447,
        -0.0563, -0.0337,  0.0388, -0.0317,  0.0358,  0.0142, -0.0375,  0.0385,
        -0.0364, -0.0467,  0.0298,  0.0421,  0.0522,  0.0622,  0.0408,  0.0496,
        -0.0003,  0.0210,  0.0037,  0.0601, -0.0341,  0.0062,  0.0092,  0.0192,
         0.0450, -0.0205, -0.0101, -0.0311, -0.0221, -0.0314, -0.0278, -0.0058,
         0.0545, -0.0250,  0.0611,  0.0576, -0.0209,  0.0286, -0.0152, -0.0188,
         0.0402,  0.0039,  0.0088,  0.0438,  0.0038,  0.0298, -0.0130, -0.0316,
         0.0365, -0.0202,  0.0591, -0.0570, -0.0363, -0.0436, -0.0138,  0.0577,
        -0.0077, -0.0129,  0.0311, -0.0483, -0.0240, -0.0264,  0.0515,  0.0092,
        -0.0423, -0.0400, -0.0130,  0.0151, -0.0052, -0.0224, -0.0354, -0.0017,
        -0.0552, -0.0189, -0.0401,  0.0072,  0.0233,  0.0223,  0.0527,  0.0109,
        -0.0322, -0.0501, -0.0420,  0.0048, -0.0209, -0.0470, -0.0400, -0.0214,
        -0.0372, -0.0195, -0.0524, -0.0483,  0.0054,  0.0209,  0.0310, -0.0066,
        -0.0002,  0.0584, -0.0007,  0.0517, -0.0254, -0.0249, -0.0555, -0.0234,
         0.0263, -0.0364, -0.0167, -0.0261, -0.0139,  0.0292, -0.0561,  0.0501,
         0.0464, -0.0113,  0.0356,  0.0285,  0.0228, -0.0563, -0.0108, -0.0047,
        -0.0301,  0.0513,  0.0230,  0.0350,  0.0136,  0.0566, -0.0608, -0.0200,
        -0.0074,  0.0406, -0.0311,  0.0378, -0.0415,  0.0026,  0.0238, -0.0381,
         0.0546, -0.0497,  0.0514,  0.0320,  0.0082, -0.0274, -0.0223,  0.0445,
        -0.0486,  0.0200,  0.0050, -0.0026, -0.0420,  0.0123,  0.0555, -0.0226,
         0.0263, -0.0065,  0.0094,  0.0095,  0.0280, -0.0294, -0.0056, -0.0455,
        -0.0006,  0.0211, -0.0111, -0.0047,  0.0246,  0.0403,  0.0599, -0.0013,
        -0.0236, -0.0307,  0.0339,  0.0119,  0.0557, -0.0043,  0.0617,  0.0616,
         0.0434, -0.0327,  0.0495,  0.0137, -0.0226, -0.0586,  0.0417,  0.0027,
        -0.0500,  0.0229,  0.0322,  0.0183,  0.0113, -0.0341, -0.0363, -0.0580,
        -0.0106,  0.0591,  0.0447, -0.0067, -0.0261,  0.0082,  0.0269, -0.0490,
        -0.0173, -0.0373,  0.0393, -0.0405, -0.0045, -0.0096,  0.0173,  0.0128,
         0.0564, -0.0491,  0.0390,  0.0569,  0.0293, -0.0530, -0.0386, -0.0374,
         0.0348,  0.0390, -0.0188,  0.0533,  0.0225,  0.0300, -0.0396, -0.0028,
         0.0518,  0.0377, -0.0317, -0.0599, -0.0395,  0.0412, -0.0474,  0.0137,
        -0.0147, -0.0247, -0.0238, -0.0456,  0.0563, -0.0474,  0.0258, -0.0154,
         0.0381,  0.0066, -0.0203, -0.0131,  0.0257, -0.0114, -0.0271,  0.0539,
        -0.0324,  0.0565,  0.0419,  0.0173, -0.0060,  0.0169,  0.0559,  0.0601,
         0.0026,  0.0105,  0.0483, -0.0578, -0.0294,  0.0379,  0.0625, -0.0326,
         0.0253,  0.0021, -0.0168, -0.0106, -0.0359,  0.0215,  0.0304,  0.0002,
        -0.0314,  0.0392,  0.0511, -0.0562,  0.0034,  0.0412,  0.0498, -0.0457,
         0.0027, -0.0625, -0.0619, -0.0605,  0.0618, -0.0344, -0.0068, -0.0580,
        -0.0610,  0.0003, -0.0381, -0.0574, -0.0361, -0.0405,  0.0133,  0.0368,
        -0.0264,  0.0076, -0.0201, -0.0582, -0.0474, -0.0080,  0.0037, -0.0178,
        -0.0020,  0.0312, -0.0279, -0.0159,  0.0556,  0.0144,  0.0370, -0.0377,
        -0.0556, -0.0368,  0.0092,  0.0582, -0.0080, -0.0121,  0.0110,  0.0442,
        -0.0505, -0.0086, -0.0043,  0.0360,  0.0335, -0.0512, -0.0186, -0.0022,
        -0.0463,  0.0502,  0.0394,  0.0009, -0.0240, -0.0108,  0.0422,  0.0377,
        -0.0254, -0.0358,  0.0429,  0.0257,  0.0346, -0.0170,  0.0197,  0.0368,
         0.0354, -0.0268,  0.0539,  0.0141,  0.0510, -0.0119,  0.0513, -0.0065,
        -0.0492,  0.0578,  0.0475, -0.0509,  0.0359, -0.0139, -0.0555,  0.0580,
         0.0154, -0.0279,  0.0057, -0.0310,  0.0189, -0.0549, -0.0253, -0.0141],
       device='cuda:0', requires_grad=True)
module.context.conv1.weight Parameter containing:
tensor([[[[ 2.6487e-02, -3.8953e-02, -3.6146e-02,  ...,  1.0250e-02,
            2.0264e-02, -1.7884e-03],
          [ 3.0542e-02, -2.3683e-02,  2.7667e-02,  ...,  4.7666e-02,
           -3.8278e-02,  8.1855e-03],
          [-1.7910e-02,  2.5168e-02, -1.0141e-02,  ..., -3.0701e-02,
           -9.6455e-03,  5.1141e-02],
          ...,
          [-3.4712e-03,  4.4130e-03, -8.0837e-03,  ..., -1.4786e-02,
           -2.2515e-02, -2.2537e-02],
          [ 2.0023e-02,  4.2685e-03, -3.3029e-02,  ..., -3.8622e-03,
            1.9085e-02,  5.0353e-03],
          [ 1.4620e-02, -2.3577e-03, -2.2810e-02,  ...,  1.1361e-03,
            1.7213e-02,  1.4050e-02]],

         [[ 6.9206e-03, -2.1334e-02, -1.7802e-03,  ...,  1.7387e-02,
           -1.5052e-02, -2.0189e-02],
          [-2.9409e-03, -3.3949e-02, -3.1050e-02,  ..., -9.4143e-03,
            1.6397e-02, -1.6339e-03],
          [ 3.9579e-03,  2.1179e-02, -5.7172e-04,  ..., -5.7376e-03,
            5.3397e-02, -2.1853e-02],
          ...,
          [ 3.0877e-02, -3.1429e-02,  6.5506e-03,  ..., -3.1339e-02,
           -3.6299e-02,  1.8443e-02],
          [ 8.6028e-03,  2.3078e-02, -1.2929e-02,  ..., -3.9122e-03,
            1.3270e-02, -5.2797e-02],
          [-3.0746e-02, -4.0730e-03, -1.5511e-03,  ..., -2.5888e-02,
            3.7379e-02, -4.5022e-02]],

         [[-1.5323e-02,  1.0959e-02, -5.8341e-02,  ..., -2.5253e-02,
            1.0867e-02, -8.9383e-03],
          [-5.3915e-02,  3.1316e-02,  4.6888e-02,  ...,  1.9082e-02,
            8.0909e-03, -1.7871e-02],
          [ 2.5474e-02,  5.0086e-03,  2.8690e-02,  ..., -2.8669e-02,
           -7.7079e-03,  5.6926e-05],
          ...,
          [ 3.8406e-02,  3.4958e-02, -3.6649e-02,  ..., -7.2954e-03,
            1.1284e-03, -3.9968e-02],
          [-1.1308e-02, -3.8272e-02, -1.1927e-02,  ..., -2.6045e-02,
            3.8043e-02,  2.5783e-02],
          [ 5.0576e-02, -9.3765e-03, -2.0584e-02,  ...,  3.4865e-02,
            2.5407e-02, -2.6754e-02]]],


        [[[ 3.6435e-02, -6.9621e-03,  2.9964e-05,  ..., -3.2357e-02,
           -2.7334e-02, -5.2406e-03],
          [-3.6116e-02, -2.4989e-03,  6.7896e-03,  ...,  3.6908e-02,
            1.3194e-02, -3.0467e-02],
          [ 4.4621e-02, -1.7797e-02, -4.5214e-02,  ...,  3.8951e-02,
           -6.4078e-02,  1.4585e-02],
          ...,
          [-9.6329e-03,  1.6544e-02,  2.3122e-02,  ...,  5.9029e-03,
            2.4549e-02, -1.8301e-02],
          [ 3.5397e-02,  6.6676e-02,  1.6020e-02,  ..., -4.5363e-03,
           -1.6486e-02,  3.7741e-02],
          [ 3.2927e-02,  4.5009e-02, -4.9651e-02,  ..., -1.7765e-02,
            8.6947e-03, -3.4057e-02]],

         [[-1.4477e-02, -1.4588e-02, -6.2256e-02,  ...,  1.8727e-02,
            5.7711e-02, -7.6107e-03],
          [ 3.3536e-02, -1.5985e-02, -2.6420e-02,  ..., -5.4435e-02,
            1.7574e-03,  8.2957e-03],
          [ 2.6466e-02, -6.0194e-03, -1.0930e-02,  ..., -7.0789e-03,
           -3.3601e-02, -2.1611e-02],
          ...,
          [ 2.0870e-02, -2.1301e-02,  8.6780e-03,  ..., -1.0805e-02,
            1.8755e-02, -3.6556e-03],
          [-3.2661e-02, -5.0148e-02,  3.5415e-02,  ...,  1.7244e-02,
           -1.0183e-02, -1.5053e-02],
          [-6.6280e-02, -3.3272e-02,  1.7329e-02,  ...,  1.6862e-02,
           -1.8169e-02, -1.1550e-02]],

         [[ 1.5566e-02, -1.1935e-02, -3.0461e-02,  ..., -2.0309e-02,
           -1.0093e-02,  2.3224e-02],
          [-1.4133e-02, -1.8687e-03, -1.0007e-02,  ...,  2.7136e-02,
           -2.8418e-02, -2.6359e-02],
          [ 2.6963e-02,  3.6711e-02, -1.9982e-02,  ...,  2.1115e-02,
            5.6087e-02, -1.1653e-02],
          ...,
          [ 1.7172e-02, -3.3357e-02, -7.1943e-03,  ...,  1.6118e-02,
            3.2824e-02,  3.3896e-02],
          [ 2.7379e-02,  1.9662e-02,  1.4311e-02,  ..., -1.4092e-02,
            4.8513e-02, -5.8035e-04],
          [-3.0094e-03, -1.8490e-02,  3.9806e-02,  ...,  5.7253e-03,
           -8.8131e-03, -6.7147e-03]]],


        [[[ 4.9652e-03, -2.5958e-02, -4.8257e-02,  ...,  2.5329e-02,
           -3.2950e-02,  4.3597e-03],
          [-2.5530e-02,  5.6011e-03,  1.7324e-02,  ..., -4.0720e-02,
           -5.5962e-03, -8.0388e-03],
          [ 2.1142e-03, -1.9155e-02, -1.6336e-03,  ...,  7.2123e-02,
            4.5393e-02, -2.2211e-02],
          ...,
          [-1.2136e-02, -2.0651e-02, -2.0912e-02,  ..., -4.0880e-02,
           -2.2815e-03,  3.0213e-02],
          [-2.0729e-02, -2.7682e-02, -1.2000e-02,  ..., -1.9455e-02,
           -1.7161e-02, -2.5411e-02],
          [-3.0294e-02,  1.8294e-02, -3.0008e-03,  ..., -2.8824e-02,
            1.5506e-02,  1.6965e-02]],

         [[ 4.5101e-02,  4.8513e-03, -1.7486e-03,  ...,  1.9121e-02,
           -1.2708e-02,  2.2504e-02],
          [ 1.1390e-02, -1.6491e-02, -1.3216e-02,  ...,  1.4237e-03,
           -3.2812e-03,  1.3539e-02],
          [ 2.9516e-02,  2.0915e-02,  8.3773e-03,  ..., -3.0411e-02,
            7.2694e-03,  1.2628e-02],
          ...,
          [ 1.9170e-02, -1.8400e-02, -1.3352e-02,  ...,  2.1814e-02,
            1.1996e-02,  6.6191e-04],
          [-1.7074e-02,  9.8230e-03,  1.0454e-02,  ..., -1.9941e-02,
           -1.9464e-02, -2.2364e-02],
          [-2.9816e-02, -3.8256e-02, -3.6336e-02,  ..., -2.4791e-02,
            6.5374e-03,  2.6003e-02]],

         [[ 1.4787e-02, -1.9499e-02,  3.8566e-02,  ..., -9.6585e-03,
            8.7367e-03,  5.6654e-03],
          [-5.1557e-02, -1.0112e-02,  4.9868e-04,  ...,  1.7697e-02,
            1.9790e-02,  2.1512e-02],
          [-1.5159e-02, -2.8108e-02, -6.0767e-02,  ..., -1.3598e-02,
           -1.7159e-02, -3.0229e-02],
          ...,
          [-2.0559e-02, -2.5404e-02,  3.9897e-02,  ..., -1.2870e-02,
            2.6190e-02,  1.0875e-02],
          [ 6.5626e-03, -4.5395e-02,  2.9535e-03,  ...,  2.5974e-02,
            1.7284e-02,  1.5472e-02],
          [-2.7676e-02,  3.2500e-02,  1.6172e-02,  ...,  3.6122e-02,
           -6.6639e-02, -1.0568e-02]]],


        ...,


        [[[ 1.5088e-02, -5.2198e-02, -2.4593e-02,  ..., -3.3200e-02,
            2.2256e-02, -2.8142e-02],
          [ 9.1026e-04,  1.7117e-03,  2.7656e-02,  ...,  2.1148e-02,
           -1.2627e-02, -1.3503e-03],
          [ 1.4042e-02,  3.3012e-03,  8.0239e-03,  ..., -5.1553e-03,
           -2.7868e-02,  4.3895e-02],
          ...,
          [ 3.0362e-03, -6.8536e-04, -2.3497e-02,  ..., -2.6080e-02,
           -1.3137e-04,  1.2159e-02],
          [-7.9854e-03,  9.1050e-03, -2.3746e-02,  ..., -3.7842e-03,
           -4.0706e-03,  3.6655e-02],
          [-7.4424e-03, -6.7889e-03,  1.5866e-02,  ..., -2.5122e-02,
            2.6919e-02, -1.1841e-02]],

         [[ 5.0637e-02, -6.2597e-03, -1.9357e-02,  ..., -4.3521e-02,
            4.1032e-02, -1.0231e-03],
          [ 2.2458e-02,  4.9227e-03,  1.6849e-02,  ...,  4.8065e-02,
            3.7149e-03, -4.1542e-03],
          [-1.0155e-02, -6.0377e-03, -2.9942e-02,  ...,  1.1578e-02,
           -3.2303e-02, -2.7245e-03],
          ...,
          [-4.0327e-02,  3.8271e-02,  2.1191e-02,  ..., -7.6306e-04,
           -1.4225e-02,  2.6290e-02],
          [ 9.5287e-04,  6.3983e-04,  1.0022e-02,  ..., -6.1385e-03,
           -8.1053e-04,  3.0803e-02],
          [ 1.2994e-02,  1.4014e-03, -5.7007e-02,  ..., -3.0783e-02,
           -2.4201e-02, -1.8581e-03]],

         [[ 4.7453e-02,  6.8870e-04,  5.6425e-02,  ...,  1.7700e-02,
            1.3831e-02,  4.6649e-02],
          [-9.1290e-03, -2.1919e-03, -9.2868e-03,  ...,  2.0822e-02,
            4.8059e-02,  3.1208e-03],
          [-2.6463e-02,  2.6310e-02, -4.0163e-02,  ..., -1.8571e-02,
            1.2988e-02, -2.2330e-02],
          ...,
          [-9.1172e-03,  1.6038e-02,  2.4298e-02,  ..., -1.5747e-03,
           -3.0377e-02,  5.4759e-04],
          [-4.1443e-03, -3.2120e-02,  2.4621e-02,  ...,  3.4710e-02,
            1.5920e-02, -2.4914e-02],
          [ 8.0233e-03, -6.5127e-03,  2.5342e-02,  ...,  3.1150e-02,
           -4.2236e-03,  4.4107e-02]]],


        [[[-7.5882e-03,  1.7737e-02, -3.9379e-02,  ...,  3.2519e-02,
            3.8832e-02, -2.4545e-02],
          [ 1.9621e-02, -3.7495e-03,  1.4597e-03,  ..., -3.0810e-02,
           -1.5605e-02,  3.8152e-02],
          [ 4.9414e-02, -3.8315e-02, -1.2111e-02,  ...,  3.1352e-02,
            2.4516e-02,  1.0278e-05],
          ...,
          [ 1.1503e-02, -2.2710e-02,  7.1577e-03,  ...,  2.6114e-02,
           -3.9805e-02, -2.9653e-02],
          [ 3.1106e-02,  3.9243e-02, -1.1186e-02,  ..., -2.5995e-02,
           -1.7521e-02, -8.3089e-03],
          [-8.0974e-03, -7.1407e-03,  2.1853e-02,  ...,  2.8816e-02,
           -2.0157e-02,  2.3896e-02]],

         [[-1.8130e-02, -6.2401e-03,  3.7401e-02,  ..., -7.6753e-03,
            1.2532e-03, -2.2120e-02],
          [ 3.4190e-02, -5.0965e-03, -8.0981e-03,  ...,  3.7008e-03,
           -1.8705e-03,  2.8549e-02],
          [ 8.5463e-03,  4.0782e-02,  3.9090e-02,  ..., -1.3256e-04,
            1.7670e-02, -2.4655e-02],
          ...,
          [-9.7031e-03, -1.6601e-02, -2.1663e-02,  ...,  3.0804e-03,
            2.0194e-02,  1.1340e-02],
          [-1.9073e-02,  2.3122e-02, -8.2860e-03,  ..., -1.0225e-02,
            8.4838e-03,  5.9371e-04],
          [ 2.9948e-03,  1.2726e-02, -1.6665e-02,  ..., -7.5792e-03,
           -1.8609e-02,  3.2228e-02]],

         [[ 3.2689e-02, -1.2442e-02, -1.4858e-02,  ..., -9.5884e-03,
           -3.8172e-02,  1.0340e-02],
          [-1.4603e-03, -3.3078e-02, -3.6174e-02,  ...,  6.8994e-03,
            1.5330e-02, -5.6736e-02],
          [ 1.4090e-03,  2.5076e-02,  2.7932e-02,  ...,  1.3412e-02,
            3.7034e-02, -2.8838e-02],
          ...,
          [ 1.7412e-02, -1.4463e-02,  2.7404e-02,  ...,  4.4727e-03,
           -1.8146e-02, -1.6075e-02],
          [ 5.2687e-02,  1.6278e-02,  2.5199e-02,  ..., -2.9138e-02,
            1.2851e-02,  3.2558e-02],
          [ 3.4721e-02, -3.8207e-02,  3.5749e-02,  ...,  2.2240e-02,
           -2.0590e-02,  3.2321e-02]]],


        [[[ 2.0641e-02,  2.5056e-02, -1.2370e-02,  ..., -4.8688e-02,
            1.2877e-02, -2.6335e-02],
          [-1.4730e-02, -4.8213e-03, -2.7977e-03,  ...,  1.3914e-03,
           -1.5349e-02, -7.6594e-03],
          [ 2.0021e-02, -1.6332e-02,  4.8517e-02,  ..., -9.5114e-03,
            1.0509e-02, -2.6069e-02],
          ...,
          [-1.4020e-02,  2.1498e-02,  5.9225e-02,  ...,  2.1817e-02,
           -7.7233e-04, -3.5643e-02],
          [ 1.1790e-02, -2.2734e-02,  1.3420e-02,  ..., -6.2446e-02,
            4.1354e-02, -5.2594e-03],
          [-7.0516e-05,  2.4119e-02,  7.0406e-03,  ...,  4.2519e-02,
            2.7307e-02,  1.9424e-02]],

         [[ 1.2266e-03, -2.1589e-02,  4.3969e-02,  ..., -3.3798e-03,
            5.6077e-02, -1.6722e-04],
          [-2.2147e-02,  2.0007e-03,  1.7628e-02,  ...,  1.0434e-02,
            8.7322e-03,  9.2387e-03],
          [-2.7399e-02,  4.3479e-02, -6.2520e-03,  ..., -1.2415e-02,
            2.9192e-02, -9.6415e-03],
          ...,
          [ 3.4232e-02, -7.1789e-03,  4.8151e-03,  ...,  2.7434e-02,
            1.5722e-02, -2.1288e-02],
          [-2.5272e-02,  8.0567e-04, -3.1582e-02,  ..., -9.3881e-03,
           -2.4311e-02, -1.2380e-02],
          [ 4.4154e-02,  4.9530e-02, -1.4688e-02,  ..., -4.2658e-02,
           -1.2501e-02, -1.1716e-02]],

         [[-3.1944e-02, -2.2417e-02, -4.7023e-02,  ..., -5.2912e-02,
            8.8402e-03,  2.7826e-03],
          [ 3.5524e-02,  3.4916e-02, -7.8588e-03,  ..., -1.5254e-03,
           -1.6217e-02,  1.9518e-02],
          [-6.0776e-03, -2.7369e-02, -1.2752e-02,  ..., -8.2336e-03,
           -3.1694e-02,  3.1280e-02],
          ...,
          [ 1.7553e-02,  8.3001e-03,  1.4802e-02,  ..., -9.9848e-03,
           -3.6051e-02,  4.9157e-02],
          [-2.6380e-02, -3.8140e-03,  2.6072e-02,  ..., -2.0252e-02,
            8.3715e-03,  1.2513e-02],
          [-1.3793e-03,  5.0813e-02, -1.8458e-02,  ...,  5.7848e-03,
            2.5432e-02, -2.2644e-02]]]], device='cuda:0', requires_grad=True)
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-4.7558e-02,  3.9912e-03, -2.0247e-02],
          [-1.0651e-01, -2.5521e-02, -7.5618e-02],
          [ 2.2850e-02,  8.8102e-02, -5.9753e-02]],

         [[-4.2355e-02, -2.1454e-05, -6.2291e-02],
          [ 3.7199e-02, -2.2792e-02,  1.7245e-02],
          [-7.9840e-02,  3.5611e-02, -8.6816e-02]],

         [[-5.1390e-02,  1.0011e-02,  6.2162e-02],
          [-6.1278e-02,  6.8108e-02,  1.9284e-02],
          [-6.4147e-04, -8.7593e-02,  1.4624e-02]],

         ...,

         [[ 1.4041e-01, -6.7236e-02,  3.3364e-02],
          [ 9.3592e-02, -1.6228e-02,  2.2162e-02],
          [ 7.7117e-02, -9.6800e-02, -6.5124e-02]],

         [[ 7.2942e-03,  8.6034e-02,  1.0151e-02],
          [ 6.2583e-02,  3.7341e-02, -2.8300e-02],
          [ 1.9579e-02, -2.9884e-02, -3.3693e-02]],

         [[-1.7082e-02,  1.3769e-01, -4.3953e-03],
          [ 5.7819e-02, -5.8656e-02, -8.2527e-03],
          [-1.4607e-02,  6.2406e-02, -2.1937e-02]]],


        [[[ 4.7152e-02,  9.0244e-02,  5.3764e-02],
          [-1.1999e-01, -3.2496e-02, -2.1418e-02],
          [ 3.1895e-03,  3.7218e-02,  8.0980e-02]],

         [[-1.3916e-02,  1.0571e-01, -2.9337e-02],
          [-4.8008e-02,  4.9756e-02,  3.0212e-02],
          [-5.6582e-02,  1.6164e-02,  6.6855e-03]],

         [[ 1.3307e-02, -1.6708e-02,  5.3767e-03],
          [ 4.4668e-02, -4.9323e-02,  3.5581e-02],
          [ 1.1177e-01, -8.3705e-02,  1.2244e-01]],

         ...,

         [[-2.9302e-02,  5.6755e-02, -1.3192e-02],
          [-3.1210e-02, -3.0495e-02, -9.3806e-02],
          [-9.2005e-03,  3.6986e-02, -9.1041e-02]],

         [[-2.9813e-03, -7.4198e-02, -4.8013e-02],
          [-8.9583e-03,  1.4688e-01, -5.4976e-02],
          [ 1.7762e-02,  7.2031e-02, -1.2002e-01]],

         [[-3.2402e-03, -9.4048e-02,  3.9982e-02],
          [-2.4844e-02,  1.0861e-01, -1.0995e-01],
          [-5.2440e-02, -2.8015e-02,  9.8663e-03]]],


        [[[ 1.5197e-01,  1.1934e-03, -2.3374e-02],
          [-2.0022e-02,  1.0323e-02, -1.1454e-01],
          [-2.7390e-02, -5.9633e-04, -7.4750e-02]],

         [[-3.4501e-02,  1.8538e-02,  5.4544e-02],
          [ 1.3045e-02,  9.1966e-02,  8.2773e-02],
          [ 2.1439e-02, -1.2831e-02, -3.1586e-02]],

         [[-6.7275e-02, -4.8816e-02, -1.2695e-02],
          [ 6.0285e-02,  2.8852e-03,  5.0265e-02],
          [ 1.7727e-02,  2.5464e-02,  4.1814e-02]],

         ...,

         [[-6.6330e-02,  8.2478e-02, -5.9671e-02],
          [-2.2337e-02, -9.7845e-02, -6.4996e-02],
          [ 4.3999e-02,  3.2187e-02,  6.0691e-02]],

         [[ 5.0411e-02,  4.1297e-02, -2.2284e-02],
          [ 4.8908e-03, -4.7998e-02, -4.7599e-03],
          [-2.9531e-02,  1.0413e-02, -8.7248e-02]],

         [[-2.0697e-02,  7.4647e-02,  9.7620e-02],
          [ 3.8562e-02,  3.8837e-02,  7.7960e-02],
          [-6.2050e-02, -1.7162e-02, -7.1465e-02]]],


        ...,


        [[[-1.8895e-02,  6.8845e-02, -2.2151e-02],
          [-2.0867e-02,  7.2617e-03,  7.2159e-02],
          [-1.7528e-02,  1.9755e-02,  1.0057e-01]],

         [[ 9.4072e-02, -9.0734e-02, -1.5999e-03],
          [ 1.1971e-01,  3.6565e-02, -5.9492e-02],
          [-1.0935e-02,  1.0329e-02, -7.2350e-02]],

         [[ 2.5152e-02,  3.3438e-03, -1.3523e-02],
          [-2.2208e-02,  3.2999e-02, -3.5926e-03],
          [-2.1155e-01, -3.3578e-02,  9.5022e-03]],

         ...,

         [[ 1.6759e-02, -3.8338e-02, -1.4491e-02],
          [-7.2393e-03,  7.6665e-02,  2.4174e-02],
          [-1.0889e-01,  5.3710e-02, -2.5549e-02]],

         [[-6.9088e-02,  7.8553e-02, -1.1076e-01],
          [-2.5685e-02,  5.4733e-02,  1.1298e-02],
          [-2.8970e-02, -5.0937e-02, -1.2789e-01]],

         [[-1.1722e-01, -5.5340e-02,  8.7567e-02],
          [ 3.7741e-02, -2.3515e-02,  5.4234e-03],
          [-1.3441e-02, -1.2158e-03, -5.2872e-02]]],


        [[[ 1.2200e-01, -5.8703e-02, -6.4720e-02],
          [ 8.4057e-02,  3.7283e-02, -1.0574e-02],
          [ 1.2184e-02, -2.7329e-02,  5.0533e-02]],

         [[-6.3388e-02,  1.8198e-02,  6.9094e-02],
          [ 1.9494e-02, -4.0495e-02, -2.5740e-02],
          [ 5.8640e-04, -5.0215e-02,  6.9932e-02]],

         [[-8.2495e-03, -9.8193e-02,  3.8125e-02],
          [ 3.8287e-02,  3.3413e-02, -4.9359e-03],
          [-9.4819e-02,  1.8516e-02, -1.5883e-02]],

         ...,

         [[ 2.6314e-02, -4.1138e-02,  6.3085e-02],
          [-6.0478e-02, -1.0308e-01, -1.4164e-01],
          [-8.8154e-02, -8.4893e-02,  7.9423e-03]],

         [[ 5.3839e-02, -4.4179e-02,  1.3924e-02],
          [-1.9057e-02, -3.5291e-02,  3.4804e-02],
          [-6.6405e-02, -2.0827e-02,  7.8663e-03]],

         [[-6.0244e-03,  5.8642e-02,  4.7346e-02],
          [-3.9605e-03, -8.8849e-02, -9.0528e-02],
          [ 5.8770e-02, -6.6152e-02,  5.5500e-03]]],


        [[[ 7.3118e-02,  9.6761e-02, -3.4300e-02],
          [ 3.6894e-03,  4.7363e-03, -5.6632e-02],
          [ 1.0353e-01, -5.9841e-02, -2.3828e-02]],

         [[-4.4161e-02, -6.5349e-02, -5.5872e-02],
          [ 2.8498e-02, -3.0496e-02,  4.1908e-02],
          [-1.1461e-01, -2.3606e-02, -4.5691e-02]],

         [[ 6.8352e-02,  1.5041e-01, -8.1274e-02],
          [ 4.3717e-02,  5.8619e-02,  3.5338e-02],
          [-8.8486e-02, -1.6829e-01,  3.0807e-02]],

         ...,

         [[ 2.3395e-04,  3.5264e-02,  1.4337e-02],
          [-4.2595e-02, -3.7083e-02,  8.6365e-03],
          [ 4.7074e-02, -4.7615e-02, -5.5082e-02]],

         [[-8.3174e-02,  8.4724e-02, -5.9244e-02],
          [ 3.9466e-02, -3.0105e-02, -6.3450e-02],
          [-7.3011e-02,  4.2782e-02, -9.4303e-03]],

         [[-6.3393e-03, -1.0033e-01,  1.6486e-02],
          [-3.4404e-02, -8.3810e-02,  9.7701e-03],
          [-7.4574e-02, -5.4646e-03, -1.1765e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 8.6839e-04, -3.6678e-02, -3.2908e-02],
          [ 2.2687e-02, -7.8408e-02,  1.4742e-02],
          [ 3.6029e-02,  4.2191e-02,  1.0659e-01]],

         [[ 1.1273e-02,  2.2952e-02,  5.4323e-02],
          [ 1.3868e-04, -2.3134e-02, -4.4061e-02],
          [ 5.5535e-03, -1.9687e-02,  4.7301e-02]],

         [[-9.0359e-02, -7.3369e-02,  2.1068e-02],
          [-1.0716e-01,  2.5859e-02, -3.3822e-02],
          [ 2.1877e-02, -1.0649e-01, -6.6517e-02]],

         ...,

         [[-2.0028e-02, -1.9252e-02, -6.9726e-04],
          [-2.2000e-03,  4.7059e-02,  7.7287e-02],
          [-4.8135e-02, -1.5310e-02,  4.2628e-02]],

         [[ 5.6204e-03, -1.0444e-02, -4.8070e-02],
          [-1.8136e-02, -9.6479e-03, -7.8459e-02],
          [-6.1152e-02, -8.7415e-02, -1.3140e-02]],

         [[-1.0078e-01,  5.6387e-03, -7.1350e-02],
          [-6.2827e-02,  2.5549e-02, -1.1352e-01],
          [-1.0046e-02, -1.3003e-03,  3.5058e-02]]],


        [[[ 2.1560e-02, -5.2752e-03, -2.5935e-02],
          [ 4.2928e-02, -6.5616e-04, -5.1932e-03],
          [-1.0113e-01,  5.6613e-02, -1.5907e-02]],

         [[-7.4276e-02, -1.3299e-02,  1.2309e-01],
          [-8.2257e-03,  1.5221e-02,  5.2844e-02],
          [ 6.8488e-02,  1.0999e-01,  2.3000e-02]],

         [[ 3.1873e-02, -3.1639e-02,  1.0657e-02],
          [ 1.0242e-02, -1.3068e-01, -6.6346e-02],
          [-1.2838e-02, -5.0601e-02, -1.4004e-01]],

         ...,

         [[-9.4356e-02,  6.3242e-02,  8.6743e-02],
          [-1.0582e-01, -6.8021e-02, -1.8669e-02],
          [ 4.4448e-03, -1.8178e-02, -6.1213e-02]],

         [[ 6.4133e-02,  2.7711e-03,  9.3550e-02],
          [ 1.4471e-02, -3.2881e-02,  6.5907e-02],
          [ 9.3433e-03, -4.6789e-02, -4.1556e-02]],

         [[ 2.5746e-02, -4.7424e-02,  9.2889e-03],
          [ 7.5303e-02,  1.4809e-02,  1.5508e-02],
          [-5.0488e-02, -2.6189e-02,  2.6001e-02]]],


        [[[ 2.8118e-02, -8.0842e-02, -1.8495e-02],
          [-4.6243e-02, -1.9928e-02,  8.0987e-02],
          [-1.1717e-02, -7.6478e-02,  3.8437e-02]],

         [[ 2.7757e-02,  7.8394e-02,  1.8154e-02],
          [ 3.2068e-02,  2.3505e-02, -5.0732e-02],
          [ 1.5841e-01,  4.2867e-02, -2.5032e-02]],

         [[-4.8150e-02, -5.2532e-02,  2.2051e-02],
          [ 9.3156e-02,  2.5941e-02,  2.4271e-02],
          [-5.7415e-03, -1.4177e-02, -3.9129e-02]],

         ...,

         [[ 3.6967e-02,  9.1359e-02,  4.7415e-02],
          [ 1.2057e-01,  1.8206e-02,  5.7245e-02],
          [-7.2260e-02,  2.6513e-02,  2.4063e-02]],

         [[ 4.7260e-02,  1.2667e-02, -1.1733e-01],
          [ 2.8373e-03, -4.5045e-02, -1.7401e-02],
          [ 1.2679e-02,  4.1211e-02, -2.9442e-03]],

         [[-1.7767e-02, -2.8777e-02,  2.3737e-02],
          [-9.2773e-02, -1.0175e-01, -5.0758e-02],
          [ 2.8023e-02,  8.2420e-02,  1.6684e-02]]],


        ...,


        [[[ 3.4070e-02, -2.0118e-03, -4.5958e-02],
          [-1.0054e-01,  1.0253e-01,  7.3974e-05],
          [-4.8214e-02, -3.7195e-03,  1.0670e-02]],

         [[ 8.8229e-02,  7.1071e-03, -2.0065e-03],
          [-2.2418e-02, -7.3488e-02, -6.0440e-02],
          [ 1.7887e-02, -1.0862e-01,  5.1169e-02]],

         [[ 9.9014e-03, -6.0468e-03, -2.5031e-02],
          [-9.2918e-02, -4.9057e-02,  4.5715e-02],
          [ 6.0535e-02,  3.3456e-02,  2.5190e-03]],

         ...,

         [[ 6.6662e-02,  3.0230e-02,  7.5148e-02],
          [-4.8892e-03,  3.6047e-02, -3.6949e-02],
          [-6.2022e-02, -3.9133e-02,  4.1334e-02]],

         [[ 7.2943e-02, -3.6233e-02, -1.0023e-02],
          [ 5.0551e-02, -6.2982e-02, -4.5120e-02],
          [-5.8074e-02,  2.4039e-02, -2.3628e-02]],

         [[-1.6912e-02, -4.1573e-03,  2.7414e-02],
          [ 1.4157e-02, -1.9880e-02,  2.3995e-02],
          [ 1.3247e-02,  5.4458e-02, -2.8999e-02]]],


        [[[-1.1321e-01, -9.1960e-02,  1.1951e-02],
          [-3.9672e-02, -1.1257e-01,  3.4747e-02],
          [-9.3502e-02, -6.4994e-02,  6.4116e-04]],

         [[-2.2483e-02, -4.6608e-02, -1.0337e-01],
          [-2.3595e-02, -3.8380e-02,  4.5734e-02],
          [-6.6755e-03,  6.5260e-02,  5.4352e-02]],

         [[ 6.4726e-03,  8.4095e-02, -5.4960e-02],
          [-1.7415e-02,  9.1110e-03, -2.2719e-02],
          [ 5.3151e-02, -7.1646e-02, -5.5190e-02]],

         ...,

         [[-1.9240e-02, -2.3699e-02, -1.1563e-02],
          [ 4.5312e-02, -1.3604e-01,  3.7181e-02],
          [-4.8784e-02, -4.3141e-02, -1.5485e-02]],

         [[ 2.0819e-02, -5.0854e-02,  2.6658e-04],
          [ 5.4096e-02, -1.1049e-01, -1.1390e-01],
          [-5.7740e-03, -9.1009e-02,  7.4576e-02]],

         [[-2.8058e-02,  1.0118e-01,  1.7767e-02],
          [-2.9074e-03, -3.8784e-02, -3.5435e-02],
          [-4.3949e-03, -6.5717e-02,  3.2064e-03]]],


        [[[-5.0275e-02, -2.5441e-02, -7.3567e-02],
          [ 7.9354e-02, -6.6538e-02,  5.6371e-03],
          [ 6.0815e-02, -6.0127e-02,  2.5813e-02]],

         [[ 7.4951e-02, -1.1351e-01,  3.7552e-02],
          [ 8.2782e-02,  1.1576e-02,  4.3842e-02],
          [-1.4133e-02, -6.3671e-02,  2.1250e-02]],

         [[-2.6778e-02,  9.6040e-02,  6.7868e-03],
          [-6.7963e-02,  2.2406e-02, -6.7163e-02],
          [-5.2540e-02,  3.0808e-02, -1.4446e-01]],

         ...,

         [[-5.2428e-02, -5.4768e-02,  3.2789e-02],
          [ 2.1114e-02, -5.0439e-02, -6.8736e-03],
          [ 3.6039e-02,  2.8312e-02,  2.9095e-02]],

         [[ 4.0263e-02,  1.4531e-01,  1.1893e-01],
          [-9.7893e-02, -2.1515e-02, -1.4805e-02],
          [-3.7419e-02,  3.2058e-02,  5.4205e-02]],

         [[-5.5395e-02,  1.9969e-02, -8.1715e-02],
          [-1.2933e-01, -1.1187e-01, -2.6070e-02],
          [-1.1818e-01, -7.3104e-02, -8.3996e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 6.0746e-02, -8.1718e-03,  3.2575e-02],
          [-3.9889e-02, -1.4772e-02,  6.6854e-03],
          [ 1.0271e-02,  9.4119e-02, -1.1401e-01]],

         [[ 6.0265e-03, -3.1560e-04, -3.0701e-02],
          [ 8.8163e-02, -7.8409e-02, -3.5130e-03],
          [-4.8224e-02, -2.4749e-02,  6.5912e-02]],

         [[ 4.6960e-02, -3.7210e-02, -1.1323e-01],
          [-5.1331e-02, -2.0449e-02, -7.7338e-02],
          [ 2.1578e-02,  5.7621e-02,  2.1649e-02]],

         ...,

         [[-1.1506e-01, -2.2235e-03,  1.1761e-01],
          [ 1.3261e-01,  9.3876e-02, -2.8984e-02],
          [-8.9901e-02,  9.6666e-03, -4.3504e-02]],

         [[-4.3718e-03, -2.2276e-02, -1.3090e-01],
          [ 3.1913e-03,  6.8782e-02,  8.1217e-02],
          [-4.9351e-02,  6.8510e-02,  2.7402e-02]],

         [[-1.3370e-01,  1.1549e-01,  4.7353e-03],
          [-8.3944e-03, -6.1940e-03,  9.7696e-02],
          [-3.3556e-02, -1.7715e-02,  8.3332e-03]]],


        [[[-8.9648e-02, -2.4919e-02, -4.4880e-02],
          [-9.3366e-02, -5.7458e-02, -4.2196e-02],
          [ 5.8277e-05, -9.8806e-02,  2.5963e-02]],

         [[-5.1288e-02, -1.0136e-01, -1.6387e-03],
          [ 3.5486e-02,  1.2939e-02, -4.7114e-02],
          [-3.0919e-02, -8.5623e-02, -6.0660e-02]],

         [[ 9.7377e-02,  3.7832e-02,  6.4429e-02],
          [-1.5398e-01, -8.1549e-02, -5.7653e-02],
          [-3.7881e-02, -1.4520e-02,  9.6713e-02]],

         ...,

         [[ 1.8991e-02,  3.0002e-02, -4.5945e-02],
          [ 1.4005e-01, -1.0900e-01,  3.0366e-02],
          [ 5.2365e-02,  7.9907e-02, -4.5813e-02]],

         [[ 1.1769e-01,  6.0055e-02,  5.9532e-02],
          [ 4.1265e-02, -7.3366e-02,  2.0137e-02],
          [-4.4729e-02, -1.1592e-01,  4.2489e-02]],

         [[ 4.9767e-03, -2.6521e-02, -2.2478e-02],
          [-5.0203e-03,  6.4929e-03, -8.7498e-03],
          [ 2.0468e-02, -6.7802e-02,  5.5805e-02]]],


        [[[-2.1251e-02, -6.7406e-02, -6.8625e-02],
          [ 4.8661e-02, -2.1283e-02, -4.7857e-02],
          [ 4.6879e-03,  3.3710e-02, -2.9874e-02]],

         [[-9.1855e-02, -1.0890e-01, -1.0864e-01],
          [ 2.7830e-02,  4.7783e-02, -1.0799e-01],
          [ 2.7147e-02, -6.9193e-02, -8.5080e-02]],

         [[ 7.7629e-03, -7.8494e-03,  3.8876e-02],
          [-2.5566e-02,  9.5705e-02, -3.0441e-02],
          [ 1.7753e-01,  9.7482e-02, -2.3727e-02]],

         ...,

         [[-1.2767e-01,  3.5012e-02,  3.5993e-02],
          [-1.2586e-01,  7.0062e-02, -1.1931e-01],
          [-6.8224e-02, -5.3658e-02, -8.8495e-02]],

         [[ 1.7724e-02,  3.3343e-03,  2.5818e-02],
          [-1.2909e-03, -7.9393e-02, -1.6313e-02],
          [-6.7345e-02, -7.9303e-02, -3.5129e-02]],

         [[ 2.0297e-02,  6.5425e-02,  2.5007e-02],
          [ 3.2467e-03,  2.1214e-02,  7.0520e-03],
          [ 7.2343e-02,  1.0304e-01, -5.5290e-02]]],


        ...,


        [[[ 3.0420e-02,  4.9502e-03,  2.1235e-02],
          [-1.2225e-01,  6.7346e-02, -5.4491e-02],
          [ 8.3751e-02, -3.9123e-02,  1.2468e-02]],

         [[-7.6974e-03, -9.8038e-02, -9.5067e-02],
          [ 8.8805e-02,  5.8973e-02, -2.8719e-02],
          [-1.0797e-02, -1.8338e-02,  7.6570e-02]],

         [[-1.2104e-01,  1.1663e-01,  7.9124e-02],
          [-7.2987e-02,  3.7780e-02,  1.1287e-01],
          [-6.6315e-02, -2.3551e-02,  9.9090e-02]],

         ...,

         [[-4.2233e-02, -5.1878e-02, -1.9300e-02],
          [ 2.0062e-02, -6.3569e-02,  3.8467e-02],
          [ 2.6097e-02, -7.9876e-02, -4.7421e-02]],

         [[ 6.5724e-02, -6.5682e-02, -1.3982e-01],
          [-8.9886e-02, -1.5736e-02, -3.0674e-02],
          [ 5.5820e-02,  2.6633e-02, -1.9587e-02]],

         [[-1.5231e-02, -5.7310e-02,  9.2097e-02],
          [-1.4041e-01, -1.1783e-01, -2.7817e-02],
          [ 1.0641e-01,  1.0392e-01,  1.0849e-01]]],


        [[[ 2.9229e-02,  3.6585e-02, -5.1664e-02],
          [-2.3950e-02,  1.2523e-03, -4.3783e-02],
          [-4.0214e-02, -2.1128e-02, -6.5493e-02]],

         [[-4.4926e-02,  3.4644e-02, -2.0386e-02],
          [-7.3216e-03, -5.8899e-03, -8.3474e-02],
          [-2.0520e-02,  2.2516e-01,  2.8813e-03]],

         [[ 2.8305e-02, -1.2186e-01,  2.0474e-05],
          [ 5.7557e-02, -1.8670e-03, -2.3702e-01],
          [-3.2419e-02,  2.4331e-02, -6.8255e-02]],

         ...,

         [[ 1.9167e-03, -1.0909e-01,  2.0797e-02],
          [-7.5096e-02,  6.2337e-02, -6.7380e-02],
          [ 3.4423e-02,  4.5917e-02,  5.9080e-02]],

         [[-4.5551e-02, -2.0366e-02,  6.4396e-02],
          [ 2.1586e-02, -1.1137e-01, -3.6334e-02],
          [ 1.0905e-01, -1.1424e-01,  5.5775e-02]],

         [[-1.2344e-01, -1.0906e-02, -2.9974e-02],
          [-4.8779e-02,  1.8763e-02,  1.1230e-02],
          [-5.8373e-02, -1.7079e-02,  4.5288e-02]]],


        [[[ 1.7200e-02, -2.5677e-02, -2.4026e-02],
          [-5.8088e-03,  3.1182e-02,  4.1961e-02],
          [-3.0518e-02, -1.3035e-01, -3.4615e-02]],

         [[-6.1740e-02, -1.0221e-01,  6.9191e-03],
          [-1.1794e-01,  8.8826e-02,  6.4947e-02],
          [-6.3412e-02, -7.6217e-02,  6.3660e-02]],

         [[ 2.9831e-02,  1.0001e-01, -1.5519e-02],
          [ 3.7200e-02,  5.4274e-02,  1.1809e-02],
          [-2.8489e-02, -2.2747e-02,  4.5357e-02]],

         ...,

         [[-4.5818e-02,  9.6583e-02,  1.3437e-02],
          [ 7.5268e-03, -9.7715e-03,  5.6612e-02],
          [-2.9503e-02, -9.1872e-02, -7.6601e-02]],

         [[ 1.3198e-01, -2.2685e-02, -2.0360e-02],
          [-2.8610e-02, -2.9095e-02, -4.6751e-02],
          [ 6.0377e-02,  5.5023e-02,  2.6935e-02]],

         [[-5.7148e-02,  9.9429e-02,  2.8569e-02],
          [ 8.2380e-02, -1.2819e-02,  7.1385e-02],
          [ 3.4258e-02, -1.9865e-02, -1.8042e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-7.5930e-02,  9.8506e-02,  9.1396e-03],
          [-4.3322e-02,  7.3241e-02, -1.6176e-02],
          [-6.5810e-02, -7.3757e-02,  5.1649e-02]],

         [[-5.8925e-02,  1.0458e-01, -6.5681e-02],
          [ 5.5137e-02, -3.7241e-02, -2.4855e-02],
          [ 1.1900e-02, -2.6385e-02,  1.4496e-02]],

         [[-3.1587e-02,  2.8361e-02, -3.4808e-02],
          [ 1.0883e-01,  8.0478e-02, -9.2633e-02],
          [ 1.0239e-01, -4.9334e-02,  3.2913e-02]],

         ...,

         [[-6.9222e-02, -1.3775e-01, -1.1978e-02],
          [ 4.9163e-02,  7.5529e-03,  5.7976e-02],
          [-2.7135e-02,  2.1618e-02, -8.8310e-02]],

         [[ 3.5483e-02,  3.7398e-02, -1.0867e-01],
          [-5.8170e-02,  1.1111e-02,  1.3567e-02],
          [ 1.0666e-01,  6.5243e-02, -4.4194e-02]],

         [[-4.5956e-03,  1.3105e-01,  4.0300e-03],
          [ 1.4075e-02, -1.2095e-02,  3.9343e-02],
          [ 5.6685e-02, -9.1041e-02,  5.7808e-02]]],


        [[[ 6.6645e-03,  1.1386e-01,  1.2591e-01],
          [-3.8061e-02, -4.5056e-02,  4.2942e-02],
          [ 3.3297e-02,  2.4982e-02, -2.1376e-02]],

         [[ 3.2029e-02,  1.2862e-01,  1.0451e-01],
          [-1.7551e-02,  3.5663e-02, -6.0896e-02],
          [-2.8698e-02,  1.4869e-02,  7.0558e-02]],

         [[-5.5017e-02,  1.4288e-02, -7.1366e-03],
          [-9.0231e-02, -2.8397e-02, -3.8936e-02],
          [-5.8678e-02,  2.9583e-02, -6.5396e-02]],

         ...,

         [[-6.9897e-02,  8.2024e-03,  4.5855e-02],
          [ 3.7267e-02, -5.1068e-02,  4.0742e-02],
          [ 9.0005e-03,  6.3162e-02,  4.5778e-02]],

         [[ 1.0635e-01, -1.9508e-02,  7.1114e-02],
          [-9.1494e-02,  2.9288e-02,  1.6223e-02],
          [-4.3150e-02,  4.7123e-02, -5.9920e-02]],

         [[ 2.6012e-02,  4.0489e-02,  4.7054e-02],
          [ 2.2463e-02, -4.3616e-02, -1.0823e-01],
          [ 4.1643e-03, -4.9668e-02,  2.7226e-02]]],


        [[[ 4.1738e-02,  4.9142e-02,  7.4885e-02],
          [-6.3409e-02,  3.4313e-02,  6.4334e-02],
          [-3.5184e-02, -3.4291e-02,  8.1500e-02]],

         [[ 9.2171e-03,  5.1047e-03, -1.2081e-02],
          [-5.8486e-02, -5.6807e-02, -8.4802e-02],
          [ 7.7603e-03,  1.0591e-01,  1.9729e-02]],

         [[ 3.0246e-02,  1.4691e-02, -6.1626e-02],
          [-3.3413e-02,  3.4980e-02,  8.5082e-02],
          [-9.4965e-02, -6.2836e-02, -2.5138e-02]],

         ...,

         [[ 2.8860e-02,  4.3417e-02, -2.1123e-02],
          [-7.3669e-03, -9.4339e-02,  1.9898e-02],
          [-2.6283e-02,  6.2137e-02,  7.0393e-02]],

         [[ 1.1506e-01, -9.2158e-02,  5.7457e-02],
          [-3.6587e-02,  1.4043e-01,  4.1234e-02],
          [-4.5718e-02, -6.3483e-03,  1.2341e-02]],

         [[-3.3950e-02, -1.9464e-02, -5.5408e-02],
          [ 1.3818e-01, -7.4104e-02,  4.6479e-02],
          [ 1.2902e-01,  1.8112e-02,  1.4442e-02]]],


        ...,


        [[[-3.9773e-02, -6.2141e-02,  5.7758e-02],
          [-2.7480e-02,  2.9334e-02, -1.3085e-01],
          [-1.6204e-02,  3.5739e-02, -1.0500e-01]],

         [[-4.6808e-03, -7.5766e-03, -1.0637e-01],
          [-1.7042e-02,  4.2761e-02,  3.5909e-02],
          [-6.9282e-02, -4.1678e-02,  5.0912e-02]],

         [[ 1.4098e-01, -5.4977e-02, -3.8458e-02],
          [-7.1451e-02,  2.8200e-02,  2.7500e-02],
          [-2.7545e-02,  7.3873e-02, -1.1971e-02]],

         ...,

         [[-3.2104e-02,  2.1767e-02,  1.1267e-02],
          [ 3.5516e-02, -3.0347e-02, -7.8354e-02],
          [-5.2817e-02, -7.3557e-02,  1.1121e-01]],

         [[ 2.6952e-02, -2.7341e-02, -1.2071e-03],
          [-6.3327e-02, -9.1992e-02,  1.3026e-02],
          [ 3.5869e-02,  1.0015e-01,  5.5995e-02]],

         [[ 7.9422e-02, -6.3839e-03,  1.7061e-02],
          [-4.5577e-04, -4.7333e-02,  1.4081e-02],
          [ 1.7425e-02,  5.6996e-02,  2.8656e-03]]],


        [[[-8.4355e-03, -8.0583e-02, -1.3670e-03],
          [-2.1489e-02,  4.6437e-02, -3.7421e-02],
          [-1.1374e-02, -2.0054e-02, -5.5725e-02]],

         [[-2.8778e-02, -3.7324e-02,  1.6206e-02],
          [-8.9545e-02, -3.6575e-03, -7.5040e-02],
          [ 5.3211e-02,  4.5093e-02,  1.5832e-01]],

         [[-9.2413e-04, -9.6546e-02, -9.3230e-02],
          [ 2.9311e-02, -1.3250e-02,  5.7837e-02],
          [-4.3912e-02, -3.7373e-02, -3.7255e-02]],

         ...,

         [[-2.3324e-02, -8.4438e-02, -2.9536e-02],
          [ 4.1191e-02, -4.7504e-02,  1.8173e-02],
          [-7.3079e-02, -3.5819e-03,  9.2418e-02]],

         [[-1.1864e-01,  3.6170e-02, -4.9786e-02],
          [ 6.6808e-02,  6.1363e-03, -2.2176e-02],
          [ 4.5433e-03,  3.4562e-02, -4.8314e-02]],

         [[ 2.7855e-02, -6.0056e-02,  5.3787e-02],
          [-2.7394e-02, -2.7236e-02, -6.5702e-02],
          [-3.7904e-02, -1.6267e-03,  5.7457e-04]]],


        [[[ 4.0689e-02,  1.3542e-01, -2.6648e-02],
          [ 1.4806e-02, -1.7087e-02,  3.1997e-02],
          [ 2.2244e-02,  1.3653e-01,  3.2260e-02]],

         [[ 1.0242e-01, -1.1120e-02, -5.3629e-02],
          [-6.1118e-02,  2.1503e-02,  1.3467e-02],
          [-1.2054e-02,  7.6143e-02, -1.9369e-02]],

         [[-6.9799e-02,  8.7519e-02, -1.1515e-01],
          [-7.7222e-02,  5.8852e-02, -1.6102e-02],
          [-5.4056e-02,  7.6893e-02, -4.9795e-03]],

         ...,

         [[-1.3439e-04,  1.6298e-01,  1.0644e-01],
          [ 4.0014e-02,  9.2025e-02,  4.8463e-02],
          [ 1.1993e-01,  4.6034e-02,  3.3128e-02]],

         [[-1.0183e-01, -1.2457e-01, -3.2636e-03],
          [-1.7189e-02,  6.8007e-03, -5.4524e-02],
          [ 2.9954e-02, -4.4507e-02, -1.1231e-01]],

         [[ 4.7322e-02, -5.1107e-02, -2.2775e-02],
          [ 1.0725e-01,  5.4381e-02,  3.1904e-03],
          [ 7.5673e-02, -4.9973e-02, -1.2158e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',
       requires_grad=True)
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.conv2.weight Parameter containing:
tensor([[[[-0.0874]],

         [[-0.0099]],

         [[-0.1485]],

         ...,

         [[ 0.0578]],

         [[-0.0424]],

         [[ 0.0599]]],


        [[[ 0.0034]],

         [[ 0.0133]],

         [[-0.0796]],

         ...,

         [[ 0.0113]],

         [[-0.0204]],

         [[ 0.0687]]],


        [[[-0.0020]],

         [[-0.2047]],

         [[-0.0849]],

         ...,

         [[ 0.0621]],

         [[ 0.0151]],

         [[ 0.1221]]],


        ...,


        [[[ 0.0192]],

         [[ 0.1312]],

         [[-0.0991]],

         ...,

         [[-0.0594]],

         [[ 0.1803]],

         [[-0.1085]]],


        [[[ 0.0305]],

         [[-0.1700]],

         [[-0.0151]],

         ...,

         [[-0.0520]],

         [[-0.0173]],

         [[ 0.0657]]],


        [[[ 0.0234]],

         [[-0.0168]],

         [[-0.0938]],

         ...,

         [[-0.0129]],

         [[-0.0942]],

         [[-0.0866]]]], device='cuda:0', requires_grad=True)
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-0.0359, -0.0417,  0.0013],
          [-0.0262, -0.0120,  0.0196],
          [-0.0278,  0.0513,  0.0284]],

         [[-0.0565,  0.0601,  0.0388],
          [-0.0466,  0.1008, -0.0182],
          [ 0.0086, -0.0075, -0.0214]],

         [[ 0.0276,  0.0182,  0.0142],
          [-0.0145,  0.0007, -0.0769],
          [ 0.0935, -0.0172, -0.0446]],

         ...,

         [[ 0.0527, -0.0305,  0.0448],
          [-0.0234,  0.0121, -0.0397],
          [ 0.0049, -0.0474, -0.0523]],

         [[-0.0237, -0.0345,  0.0840],
          [-0.0114, -0.0620,  0.0178],
          [ 0.0052, -0.0226,  0.0358]],

         [[-0.0164,  0.0970,  0.0121],
          [-0.0382,  0.0127, -0.0927],
          [-0.0245,  0.0471, -0.0202]]],


        [[[ 0.0168,  0.0369,  0.0293],
          [-0.0205, -0.0069, -0.0868],
          [ 0.0074, -0.1135, -0.0077]],

         [[ 0.0815,  0.0085, -0.0529],
          [-0.0781,  0.0171,  0.0294],
          [ 0.0023, -0.0119, -0.0399]],

         [[-0.0027, -0.0280, -0.0487],
          [-0.0471,  0.0385,  0.0004],
          [ 0.0947,  0.0395,  0.0236]],

         ...,

         [[-0.0846,  0.0303, -0.0415],
          [ 0.0595,  0.0076,  0.0427],
          [ 0.0301, -0.0004,  0.0086]],

         [[ 0.0269, -0.0333,  0.0539],
          [-0.0277, -0.0191, -0.0112],
          [ 0.0576, -0.0050,  0.0311]],

         [[ 0.0478,  0.0481, -0.0034],
          [-0.0272, -0.0106, -0.0315],
          [-0.0211, -0.0741,  0.0052]]],


        [[[-0.0478, -0.0251, -0.0079],
          [-0.0842, -0.0103,  0.0610],
          [-0.0344,  0.0088, -0.0268]],

         [[-0.0383, -0.0440, -0.0210],
          [ 0.0998,  0.1128, -0.0139],
          [-0.0073, -0.0022,  0.0780]],

         [[ 0.0356, -0.0651,  0.0455],
          [-0.0368, -0.0092, -0.0446],
          [ 0.0926, -0.0199, -0.0413]],

         ...,

         [[-0.0229,  0.0456,  0.0270],
          [-0.0641, -0.0205, -0.0848],
          [ 0.0049,  0.0501,  0.0589]],

         [[-0.0297,  0.0100,  0.0902],
          [-0.0065, -0.0210,  0.0665],
          [-0.0306,  0.0544,  0.0905]],

         [[-0.0227, -0.0783,  0.0430],
          [-0.0610,  0.0642, -0.0861],
          [-0.0222,  0.0451, -0.0482]]],


        ...,


        [[[ 0.0589,  0.0197, -0.0548],
          [-0.0521, -0.0136, -0.0398],
          [ 0.0121,  0.0509, -0.0457]],

         [[-0.0619, -0.0634,  0.0237],
          [-0.0560, -0.1163, -0.0279],
          [-0.0381,  0.0289, -0.0639]],

         [[ 0.0227,  0.0013,  0.0764],
          [ 0.0123, -0.0175, -0.1152],
          [-0.0438,  0.0705, -0.0041]],

         ...,

         [[ 0.0056,  0.0150, -0.0093],
          [-0.0496, -0.0104,  0.0031],
          [ 0.0079,  0.0233,  0.0282]],

         [[-0.0572, -0.0353, -0.0372],
          [-0.0283, -0.0074,  0.0027],
          [ 0.0199,  0.0743, -0.0536]],

         [[ 0.0254,  0.0371, -0.0167],
          [-0.0247, -0.0255, -0.0709],
          [-0.0834, -0.0195,  0.0134]]],


        [[[ 0.0551,  0.0106, -0.0150],
          [-0.0446,  0.0068, -0.0011],
          [-0.0398, -0.0238, -0.0361]],

         [[-0.0426, -0.0149, -0.0539],
          [ 0.0252, -0.0274,  0.0152],
          [-0.0042,  0.0867, -0.0033]],

         [[-0.0225,  0.0283, -0.0257],
          [-0.0425,  0.0066,  0.1020],
          [-0.0326, -0.0304,  0.0822]],

         ...,

         [[ 0.0880,  0.0059,  0.0571],
          [ 0.0750, -0.0095, -0.0485],
          [ 0.0116,  0.0537, -0.0078]],

         [[-0.0374, -0.1326, -0.0511],
          [ 0.0197, -0.0167,  0.0197],
          [-0.0131, -0.0213,  0.0296]],

         [[-0.0523,  0.0166, -0.0282],
          [ 0.0247, -0.0262,  0.0891],
          [ 0.0374, -0.0324, -0.0513]]],


        [[[-0.0590,  0.0329, -0.0231],
          [-0.0382,  0.0651,  0.0021],
          [ 0.0108,  0.0029,  0.0127]],

         [[ 0.0137,  0.0962,  0.1250],
          [-0.0396,  0.0509,  0.0236],
          [-0.0751,  0.0154,  0.0099]],

         [[ 0.0065,  0.0868, -0.0329],
          [-0.0041, -0.0165,  0.0374],
          [ 0.0122, -0.0413, -0.0653]],

         ...,

         [[ 0.0235, -0.0240, -0.0821],
          [ 0.0407,  0.0237,  0.0675],
          [-0.0421,  0.0415, -0.0064]],

         [[ 0.0068, -0.0124, -0.0633],
          [ 0.1251, -0.0499,  0.0481],
          [ 0.0058,  0.0566,  0.0011]],

         [[-0.0332,  0.0724, -0.0493],
          [-0.1138,  0.0146,  0.0246],
          [-0.0649,  0.0227, -0.0311]]]], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-0.0147,  0.0954,  0.0301],
          [ 0.0019,  0.1012,  0.0586],
          [-0.0549, -0.0497, -0.0150]],

         [[ 0.0342, -0.0198, -0.0743],
          [-0.0185,  0.0441, -0.0090],
          [ 0.0108, -0.0811,  0.0270]],

         [[ 0.1013, -0.0098, -0.0295],
          [ 0.0061, -0.0227, -0.0056],
          [ 0.0642,  0.0088,  0.0194]],

         ...,

         [[ 0.0578, -0.0175, -0.0492],
          [ 0.0029, -0.0180,  0.0002],
          [ 0.0365,  0.0382, -0.0455]],

         [[ 0.0232, -0.0837, -0.0551],
          [-0.0513,  0.0814, -0.0490],
          [-0.0222, -0.0655, -0.0611]],

         [[ 0.0635, -0.0258,  0.0226],
          [-0.0215, -0.0119, -0.0077],
          [-0.0031, -0.0398, -0.0256]]],


        [[[-0.0132,  0.0211, -0.0721],
          [ 0.0423, -0.0632, -0.0196],
          [ 0.0231,  0.0508, -0.0704]],

         [[ 0.0306, -0.1268,  0.0326],
          [ 0.0511,  0.0013, -0.0064],
          [-0.0867,  0.0275, -0.0617]],

         [[-0.0079,  0.0486, -0.0037],
          [ 0.0089,  0.0585, -0.0328],
          [-0.0265, -0.0234,  0.0578]],

         ...,

         [[-0.0050,  0.0135, -0.0452],
          [-0.0635,  0.0330,  0.0243],
          [-0.0229,  0.0158, -0.0687]],

         [[ 0.0252, -0.0283, -0.0030],
          [-0.0740,  0.0199,  0.0058],
          [-0.0410, -0.0197,  0.0652]],

         [[-0.0098,  0.0654, -0.0469],
          [ 0.1276,  0.0567, -0.0185],
          [ 0.0378,  0.0817,  0.0372]]],


        [[[-0.0016, -0.0249,  0.0459],
          [ 0.0868, -0.0563, -0.0698],
          [-0.0399, -0.0203, -0.0252]],

         [[-0.0126, -0.1393, -0.0924],
          [-0.0039, -0.0551,  0.0423],
          [ 0.0176,  0.0733,  0.0120]],

         [[ 0.0625, -0.0687,  0.0467],
          [-0.0709,  0.0158, -0.0260],
          [ 0.0617,  0.0444, -0.0439]],

         ...,

         [[-0.0302,  0.0053, -0.0415],
          [ 0.0041, -0.0336,  0.0189],
          [ 0.0396,  0.0279, -0.0551]],

         [[-0.0062, -0.0158,  0.0516],
          [-0.0119,  0.0620, -0.0008],
          [ 0.0472, -0.1231,  0.0289]],

         [[ 0.0548, -0.0338, -0.0405],
          [ 0.0406, -0.0384,  0.0427],
          [-0.1187,  0.0654, -0.0186]]],


        ...,


        [[[ 0.0033, -0.0627, -0.0251],
          [ 0.0583,  0.0510, -0.0163],
          [ 0.0926, -0.0082,  0.0374]],

         [[ 0.0347,  0.0045, -0.0016],
          [-0.0040,  0.1162, -0.0732],
          [ 0.0592, -0.0375,  0.0012]],

         [[ 0.0599,  0.0430, -0.0277],
          [-0.0389,  0.0285,  0.0153],
          [-0.0435, -0.0316, -0.0056]],

         ...,

         [[-0.0401, -0.0018,  0.0674],
          [-0.0849, -0.0845, -0.0078],
          [-0.0496, -0.0376, -0.0747]],

         [[-0.0550,  0.0365, -0.0123],
          [ 0.0510,  0.1022,  0.0184],
          [ 0.0185,  0.0318, -0.0859]],

         [[-0.0876,  0.0368,  0.0497],
          [-0.0633, -0.0104, -0.0184],
          [-0.0013,  0.0379,  0.0004]]],


        [[[-0.0596,  0.0354,  0.0036],
          [-0.0017, -0.0032, -0.0151],
          [-0.0131, -0.0142,  0.0505]],

         [[ 0.0342,  0.0080, -0.0073],
          [ 0.0076,  0.0393, -0.0445],
          [-0.0403,  0.0845, -0.0128]],

         [[ 0.0150, -0.0228, -0.0012],
          [-0.0157, -0.0552, -0.0084],
          [-0.0144,  0.0158, -0.0209]],

         ...,

         [[-0.0572, -0.0707, -0.0293],
          [ 0.0568, -0.0289, -0.0883],
          [ 0.0454, -0.0237, -0.0242]],

         [[ 0.0299,  0.0206,  0.0214],
          [-0.0435,  0.0168, -0.0126],
          [-0.0538,  0.0715,  0.1098]],

         [[-0.0443, -0.0645,  0.0541],
          [ 0.0257, -0.0614, -0.0517],
          [-0.0256,  0.0760, -0.0474]]],


        [[[-0.0196, -0.0272,  0.0067],
          [ 0.0261,  0.0234, -0.0038],
          [ 0.0709,  0.0150, -0.0419]],

         [[-0.0172,  0.0126,  0.0626],
          [-0.0225,  0.0334,  0.0335],
          [-0.0966, -0.0662,  0.0083]],

         [[ 0.0027,  0.0287, -0.0507],
          [ 0.0226,  0.0583,  0.0139],
          [ 0.0189, -0.0920, -0.0702]],

         ...,

         [[ 0.0012,  0.0056,  0.0082],
          [-0.0750,  0.0059, -0.0847],
          [-0.0280, -0.1047,  0.0498]],

         [[ 0.0479, -0.0116,  0.0377],
          [ 0.0226, -0.0597,  0.0497],
          [-0.0117, -0.0091, -0.0252]],

         [[ 0.0943, -0.0245, -0.0081],
          [-0.0184,  0.0429, -0.0270],
          [-0.0653,  0.0963,  0.1100]]]], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0720]],

         [[ 0.2716]],

         [[-0.2963]],

         ...,

         [[ 0.0780]],

         [[-0.2766]],

         [[ 0.1995]]],


        [[[-0.0757]],

         [[-0.0234]],

         [[ 0.0979]],

         ...,

         [[-0.1416]],

         [[ 0.1209]],

         [[-0.1590]]],


        [[[ 0.0330]],

         [[ 0.0354]],

         [[ 0.0392]],

         ...,

         [[-0.0757]],

         [[ 0.0609]],

         [[-0.1220]]],


        ...,


        [[[-0.0346]],

         [[-0.0898]],

         [[-0.1921]],

         ...,

         [[ 0.1329]],

         [[-0.0355]],

         [[-0.0788]]],


        [[[ 0.1250]],

         [[ 0.0471]],

         [[ 0.0148]],

         ...,

         [[-0.0271]],

         [[ 0.0091]],

         [[ 0.0396]]],


        [[[-0.1042]],

         [[-0.0078]],

         [[ 0.3527]],

         ...,

         [[-0.0153]],

         [[ 0.0094]],

         [[-0.1412]]]], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 4.7320e-03,  5.2791e-02,  5.2642e-02],
          [ 6.0196e-02,  2.1449e-02,  9.2293e-03],
          [ 2.3637e-02, -9.0992e-02, -9.4711e-03]],

         [[-1.5283e-03,  8.1362e-03,  3.1278e-02],
          [ 6.4533e-02, -1.9956e-02, -3.0632e-02],
          [ 3.2839e-02,  2.1741e-02,  3.3954e-02]],

         [[ 5.1334e-02, -8.7476e-02,  2.5870e-02],
          [-5.8472e-02,  3.6889e-02,  3.0689e-03],
          [-8.8813e-02,  2.3560e-02,  5.8467e-02]],

         ...,

         [[-1.4597e-02, -1.0912e-01, -2.3115e-02],
          [-2.7550e-02, -5.7369e-02,  4.3957e-02],
          [ 6.5496e-02, -1.5339e-01,  1.5904e-04]],

         [[ 4.2409e-02, -3.4514e-03,  2.6148e-02],
          [ 1.1811e-03, -1.6689e-03,  5.0087e-02],
          [-3.2452e-02,  1.6540e-02,  6.6880e-02]],

         [[ 1.1622e-02, -1.9841e-02, -1.0926e-03],
          [ 1.8514e-03, -4.6940e-02, -2.4639e-02],
          [-4.4362e-03,  7.6277e-02, -5.8635e-02]]],


        [[[ 6.0583e-02, -6.9708e-02,  1.4346e-02],
          [ 4.3516e-02,  6.4399e-02, -2.5123e-02],
          [-6.1255e-03,  7.2890e-02,  1.2926e-01]],

         [[ 1.7300e-02,  1.5192e-02,  8.9903e-03],
          [ 2.6054e-02,  3.0015e-02, -3.3389e-02],
          [-7.3137e-02, -8.4297e-02, -2.7935e-02]],

         [[ 4.4836e-02, -7.0266e-02, -2.8918e-02],
          [-4.8338e-02, -1.6644e-02, -2.5558e-02],
          [-1.8707e-02,  7.1985e-02,  5.3396e-02]],

         ...,

         [[-2.1065e-02, -7.7986e-03, -2.6929e-02],
          [ 1.3318e-02, -4.5447e-02, -2.9646e-03],
          [ 3.1776e-02, -2.1795e-02, -4.4633e-02]],

         [[ 5.5540e-02, -5.7979e-02, -9.9877e-02],
          [ 6.2015e-02,  3.8821e-02, -6.0088e-03],
          [-9.3272e-02, -1.0130e-01,  3.9850e-02]],

         [[ 8.3556e-02, -1.0526e-01, -1.8756e-02],
          [ 4.9846e-02,  2.3293e-02,  2.6387e-02],
          [-1.1739e-01,  1.6662e-02, -4.8491e-02]]],


        [[[-8.6288e-02, -9.1458e-03, -5.0901e-02],
          [ 2.4477e-03, -1.1925e-02,  9.1861e-03],
          [-2.5339e-02, -3.5108e-02,  1.1102e-01]],

         [[ 3.9305e-02, -4.5114e-02,  4.8255e-02],
          [ 8.6551e-02,  6.0615e-03,  5.4561e-02],
          [ 2.4657e-02, -4.5495e-02,  1.0973e-01]],

         [[ 4.9137e-02,  2.7291e-02, -1.0774e-01],
          [-4.8597e-02, -4.3890e-02,  6.7519e-03],
          [-5.4177e-02,  2.0614e-02, -2.9315e-02]],

         ...,

         [[ 1.0599e-02,  3.6715e-03, -2.4775e-02],
          [-5.9607e-02, -7.8577e-02,  9.8985e-03],
          [ 8.2236e-02,  7.3529e-03, -4.6059e-02]],

         [[-3.2783e-02, -2.3889e-02, -1.7226e-02],
          [-5.5114e-02, -2.6583e-02,  5.6847e-02],
          [ 9.6562e-03,  1.3681e-02, -3.6498e-02]],

         [[-3.6982e-02,  5.5331e-02, -3.5561e-02],
          [-1.9039e-02, -4.6021e-02,  1.3964e-03],
          [ 9.0763e-02, -6.0626e-02,  3.8639e-02]]],


        ...,


        [[[-2.0391e-02,  2.7501e-02, -5.7100e-02],
          [-4.3179e-02, -1.1030e-01,  8.6138e-03],
          [-2.3163e-03,  1.1039e-01, -9.1531e-02]],

         [[ 3.2885e-03, -8.3724e-02, -4.2085e-02],
          [ 2.1062e-02, -3.2212e-03, -6.7124e-03],
          [-2.1756e-02, -4.3640e-03,  1.8492e-02]],

         [[ 5.1091e-03,  2.4966e-02, -1.9370e-02],
          [-3.1137e-02,  6.8293e-02,  5.3506e-02],
          [-6.5003e-02, -2.2265e-02,  5.8389e-02]],

         ...,

         [[ 7.4103e-02,  3.3185e-02,  2.4229e-02],
          [-3.4335e-02,  4.6689e-02,  5.9967e-02],
          [ 3.9725e-02,  1.4266e-03, -8.6458e-03]],

         [[-8.3500e-02, -5.4982e-02,  2.0446e-02],
          [-8.4649e-02, -7.6813e-02,  4.2436e-02],
          [ 1.2099e-02,  3.7430e-02, -2.8730e-03]],

         [[ 5.3300e-02,  3.8815e-02,  1.6173e-02],
          [-8.0690e-02, -5.2430e-03, -5.3969e-02],
          [-2.1292e-02,  3.2790e-02, -1.7146e-02]]],


        [[[ 8.1321e-03,  2.1059e-02, -1.8956e-02],
          [ 4.2884e-02, -4.7541e-02, -6.5781e-02],
          [ 4.7552e-02,  5.5579e-02, -3.3133e-03]],

         [[-6.1850e-02,  2.9589e-03,  1.6095e-02],
          [-3.7274e-02, -5.4117e-02, -9.9150e-03],
          [-5.9153e-02,  2.8477e-02, -4.2137e-02]],

         [[-1.0994e-03,  6.1769e-02,  5.6470e-03],
          [-5.9053e-02,  5.5319e-02,  5.4466e-03],
          [-8.2016e-02, -4.3875e-03, -4.9985e-02]],

         ...,

         [[-2.5411e-03,  1.6603e-02, -4.8906e-03],
          [ 8.4754e-02,  1.6249e-02, -8.3510e-02],
          [-2.3104e-02,  3.9365e-02, -1.2842e-02]],

         [[ 2.1014e-02,  1.0950e-02,  9.1293e-02],
          [ 2.1915e-02, -1.1724e-02,  1.2670e-02],
          [-8.0447e-03,  4.5807e-02, -9.2163e-03]],

         [[ 1.3477e-02,  1.9140e-02, -2.6805e-02],
          [-3.6437e-02, -1.1527e-02, -7.9802e-02],
          [-3.9284e-02,  3.5351e-02,  4.8434e-02]]],


        [[[-2.1034e-02, -3.2828e-02, -5.8143e-03],
          [-3.1054e-02, -2.0540e-02,  1.9691e-02],
          [-1.1939e-02,  1.7813e-02,  1.4512e-02]],

         [[ 1.9759e-02, -1.9500e-02, -3.1623e-02],
          [ 9.3318e-02,  2.4525e-02, -3.5629e-02],
          [ 4.2070e-02,  2.7374e-02,  8.0152e-03]],

         [[-2.1787e-02, -6.5691e-03,  2.8631e-02],
          [ 5.4888e-02, -6.2985e-02,  1.7781e-01],
          [ 2.2215e-02,  2.4986e-03, -3.9540e-02]],

         ...,

         [[-3.2625e-03, -1.9382e-02,  4.4142e-02],
          [-4.7415e-04,  3.4445e-02, -5.7515e-02],
          [ 5.3746e-02, -2.6092e-02,  8.7227e-02]],

         [[ 3.5847e-03,  7.9673e-03,  9.2140e-02],
          [ 2.4154e-02,  2.6580e-02, -1.7222e-02],
          [ 3.8903e-02, -2.3677e-02, -2.4880e-02]],

         [[-8.2663e-02,  4.7267e-02, -5.7647e-02],
          [-6.4415e-02,  1.4999e-02, -2.1821e-02],
          [-1.2065e-02, -1.4987e-02,  1.0705e-01]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0345, -0.0192, -0.0225],
          [-0.0130, -0.0305, -0.0397],
          [-0.0906, -0.0566, -0.0725]],

         [[-0.0061,  0.0598,  0.0136],
          [-0.0106,  0.0224, -0.0207],
          [-0.0366, -0.0461,  0.0184]],

         [[-0.0718,  0.0170, -0.0476],
          [-0.1105, -0.1089,  0.0818],
          [-0.0106,  0.0006,  0.0524]],

         ...,

         [[-0.0778,  0.2130, -0.0039],
          [ 0.0260, -0.0117, -0.0612],
          [ 0.0399, -0.0435, -0.0709]],

         [[ 0.0738, -0.0090,  0.0407],
          [-0.0413,  0.0269,  0.0333],
          [ 0.0073,  0.0059,  0.0684]],

         [[ 0.0471,  0.0198,  0.0425],
          [ 0.0490, -0.0682,  0.0689],
          [-0.0291, -0.0181,  0.1017]]],


        [[[-0.0317, -0.0229, -0.0109],
          [ 0.0977,  0.0370, -0.0883],
          [-0.0306, -0.0317, -0.1268]],

         [[ 0.0315, -0.0559,  0.0400],
          [ 0.0112,  0.0430,  0.0129],
          [ 0.0198,  0.0016,  0.0136]],

         [[ 0.0289, -0.0877,  0.0296],
          [ 0.0307,  0.0343, -0.0228],
          [ 0.0378,  0.0072, -0.0850]],

         ...,

         [[ 0.0413, -0.0499,  0.0787],
          [ 0.0443,  0.0035,  0.0867],
          [-0.0186,  0.1183, -0.0274]],

         [[-0.0343,  0.0519,  0.0051],
          [ 0.0405,  0.0322, -0.0683],
          [-0.0066, -0.0048, -0.0037]],

         [[ 0.0525,  0.0064,  0.0604],
          [-0.0241, -0.0056, -0.1109],
          [ 0.0345,  0.0121,  0.0955]]],


        [[[ 0.0360, -0.0540, -0.0459],
          [-0.0637, -0.0102,  0.0895],
          [ 0.0476,  0.0022,  0.0080]],

         [[ 0.0208,  0.0062,  0.0050],
          [ 0.0269, -0.0555,  0.0628],
          [ 0.0364, -0.0542,  0.0368]],

         [[ 0.0464, -0.0245, -0.0765],
          [-0.0417, -0.0695,  0.0499],
          [-0.0113, -0.0038,  0.0614]],

         ...,

         [[-0.0246,  0.0068,  0.0085],
          [ 0.0885, -0.0109, -0.0342],
          [ 0.0010, -0.0347,  0.0953]],

         [[-0.0024, -0.0330,  0.0025],
          [ 0.0520,  0.0200, -0.1109],
          [-0.0499,  0.0547,  0.0370]],

         [[-0.0185,  0.0127, -0.0681],
          [-0.0084,  0.0088,  0.0423],
          [ 0.1201, -0.0185,  0.0954]]],


        ...,


        [[[ 0.0361,  0.0157,  0.0189],
          [ 0.0107,  0.0006,  0.0440],
          [ 0.0084, -0.0186, -0.1122]],

         [[ 0.0186,  0.0009,  0.1249],
          [-0.0266,  0.0036, -0.0131],
          [ 0.1611, -0.0361,  0.0111]],

         [[-0.0302, -0.0383, -0.0224],
          [ 0.0695,  0.0326,  0.0594],
          [ 0.0358, -0.0192,  0.0618]],

         ...,

         [[ 0.0425,  0.0440,  0.0685],
          [-0.0082, -0.0497,  0.0302],
          [ 0.0246,  0.1556, -0.0443]],

         [[-0.0036,  0.0549, -0.0012],
          [ 0.0887, -0.0150,  0.0215],
          [ 0.0027,  0.0353, -0.0097]],

         [[-0.0767,  0.0153,  0.0604],
          [-0.0374, -0.0079, -0.0566],
          [ 0.0251,  0.0987,  0.0062]]],


        [[[ 0.0019,  0.0639, -0.0431],
          [-0.0417, -0.0201, -0.0098],
          [-0.0467,  0.0339, -0.0159]],

         [[-0.0086, -0.0691, -0.0575],
          [ 0.0287, -0.0166, -0.0167],
          [-0.0351,  0.0181, -0.0026]],

         [[-0.0017,  0.0284, -0.0994],
          [ 0.0544, -0.0207,  0.0714],
          [-0.0358,  0.0676,  0.0289]],

         ...,

         [[ 0.0276, -0.0228, -0.0518],
          [ 0.0169, -0.0788,  0.0115],
          [-0.0045,  0.0499,  0.0187]],

         [[-0.0438,  0.0156, -0.0632],
          [-0.0229,  0.0816, -0.0065],
          [ 0.0478, -0.1192, -0.1300]],

         [[-0.0008,  0.0286,  0.0251],
          [ 0.0096, -0.0747, -0.1357],
          [-0.1264,  0.0301,  0.0574]]],


        [[[-0.0394, -0.0332,  0.0061],
          [-0.0453, -0.0409,  0.0281],
          [ 0.0329,  0.0475,  0.0430]],

         [[ 0.0062,  0.1131,  0.0606],
          [-0.0243, -0.0179,  0.1392],
          [ 0.0261, -0.0486, -0.0017]],

         [[-0.0190, -0.0453,  0.0129],
          [-0.0083, -0.0465,  0.1364],
          [-0.0110, -0.0041, -0.0466]],

         ...,

         [[ 0.0519,  0.0156, -0.0077],
          [ 0.0584, -0.1127, -0.0628],
          [ 0.1000,  0.0471, -0.0031]],

         [[-0.0004,  0.0294,  0.0457],
          [ 0.0666, -0.0095,  0.0283],
          [-0.0836,  0.0519,  0.0020]],

         [[-0.0733, -0.0087,  0.0131],
          [ 0.0061, -0.0027,  0.0386],
          [ 0.0861,  0.0588, -0.0316]]]], device='cuda:0', requires_grad=True)
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True)
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-0.0466,  0.0601,  0.0030],
          [-0.0205, -0.0311,  0.0111],
          [-0.0572,  0.0051, -0.0338]],

         [[ 0.0100,  0.0291,  0.0021],
          [ 0.0804, -0.0082,  0.0226],
          [ 0.0439, -0.0450,  0.0965]],

         [[-0.0343, -0.0234,  0.0653],
          [-0.0382,  0.0229, -0.0170],
          [-0.0411, -0.0255,  0.0034]],

         ...,

         [[ 0.0201, -0.0215, -0.0271],
          [-0.0063,  0.0541, -0.0013],
          [-0.0931,  0.0055,  0.0047]],

         [[ 0.0142, -0.0008,  0.0246],
          [-0.0773, -0.0514,  0.0239],
          [-0.0185,  0.0087, -0.0070]],

         [[ 0.0563,  0.0864,  0.0394],
          [ 0.0071,  0.0334,  0.0019],
          [ 0.0671, -0.0542, -0.0071]]],


        [[[-0.0224,  0.1045,  0.0070],
          [-0.0257,  0.0463, -0.0615],
          [ 0.0677,  0.0092, -0.0390]],

         [[-0.0239,  0.0616,  0.0099],
          [-0.0328, -0.0091,  0.0367],
          [-0.0363,  0.0298, -0.0643]],

         [[ 0.0889, -0.0095, -0.0168],
          [-0.0087,  0.1165, -0.0562],
          [-0.0191,  0.0804, -0.0409]],

         ...,

         [[ 0.0007,  0.0085,  0.0239],
          [ 0.0554, -0.0504, -0.0072],
          [ 0.0436, -0.0346,  0.0056]],

         [[ 0.0405,  0.0515, -0.0709],
          [-0.0130, -0.0469, -0.0159],
          [-0.0057,  0.0809,  0.0592]],

         [[-0.0042,  0.0343,  0.0101],
          [-0.0450, -0.1134, -0.0439],
          [ 0.0341, -0.0123,  0.0869]]],


        [[[ 0.0191, -0.0177,  0.0276],
          [-0.1032, -0.0014,  0.0487],
          [-0.0464,  0.0266,  0.0194]],

         [[ 0.0156,  0.0650, -0.0211],
          [ 0.0605, -0.0356, -0.0005],
          [ 0.0235,  0.0447,  0.0318]],

         [[ 0.0090,  0.1010,  0.0599],
          [ 0.0742, -0.0146, -0.0073],
          [-0.0124, -0.0402,  0.0146]],

         ...,

         [[-0.0533, -0.0392,  0.0104],
          [ 0.0435, -0.0128,  0.0465],
          [-0.0552,  0.0485, -0.0169]],

         [[ 0.0123, -0.0470,  0.0065],
          [-0.0057, -0.0408, -0.0077],
          [ 0.0481, -0.0754, -0.0502]],

         [[-0.0228, -0.0046,  0.0183],
          [ 0.0502,  0.0425,  0.0340],
          [-0.0298, -0.0316,  0.0396]]],


        ...,


        [[[-0.0355, -0.0310,  0.1006],
          [ 0.0011, -0.0126, -0.0100],
          [-0.0405, -0.0446,  0.0453]],

         [[-0.0402, -0.0279, -0.0106],
          [ 0.0057,  0.1391, -0.0155],
          [-0.0100, -0.0581,  0.0167]],

         [[ 0.0107, -0.0599, -0.0301],
          [-0.0183, -0.0176,  0.0810],
          [ 0.0627, -0.0727,  0.0331]],

         ...,

         [[ 0.0191,  0.0008, -0.0291],
          [ 0.0141, -0.0514, -0.0327],
          [ 0.0136,  0.0343, -0.0833]],

         [[ 0.0165, -0.0126, -0.0298],
          [ 0.0504,  0.0570,  0.0058],
          [ 0.0363, -0.0745, -0.0383]],

         [[ 0.0622, -0.0038, -0.0050],
          [-0.0614, -0.0364,  0.0089],
          [ 0.0847, -0.0339, -0.0193]]],


        [[[-0.0210,  0.0122, -0.0815],
          [-0.0245,  0.0694, -0.0961],
          [ 0.0037, -0.0569, -0.0679]],

         [[-0.0086, -0.0147,  0.0231],
          [-0.0268, -0.0008, -0.0771],
          [-0.0429,  0.0348, -0.0481]],

         [[-0.0624, -0.0692,  0.0421],
          [ 0.0035,  0.0039,  0.0036],
          [-0.0170,  0.0200,  0.0454]],

         ...,

         [[ 0.0351, -0.0031, -0.0050],
          [ 0.0347,  0.0982,  0.0117],
          [-0.0062,  0.0651,  0.0067]],

         [[ 0.0015,  0.0372, -0.0490],
          [ 0.0408, -0.0727,  0.0579],
          [ 0.0126,  0.0021,  0.0297]],

         [[ 0.0458, -0.0034, -0.0124],
          [-0.0477, -0.0282,  0.0450],
          [ 0.0290, -0.0130, -0.0101]]],


        [[[ 0.0009, -0.0008, -0.0095],
          [-0.0003,  0.0102, -0.0399],
          [ 0.0690, -0.0070,  0.0569]],

         [[ 0.0190, -0.0618, -0.0226],
          [ 0.0204, -0.0302, -0.0089],
          [-0.0222,  0.0110, -0.0197]],

         [[ 0.0569,  0.0141,  0.0217],
          [-0.1430,  0.0642, -0.0407],
          [ 0.0461, -0.0206,  0.0243]],

         ...,

         [[ 0.0435,  0.0648,  0.0148],
          [ 0.0465,  0.0094,  0.0161],
          [ 0.0400,  0.0466,  0.0476]],

         [[ 0.0363, -0.0181, -0.0320],
          [ 0.0176,  0.0240, -0.0515],
          [-0.0573,  0.1018,  0.0214]],

         [[-0.0667, -0.0879,  0.0161],
          [-0.0997, -0.0148,  0.0323],
          [ 0.0087, -0.0139, -0.0897]]]], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-1.8263e-02,  6.2651e-04,  3.3423e-02],
          [ 4.6474e-02, -2.8444e-02,  1.4094e-02],
          [ 4.4656e-02, -1.6984e-02, -3.4193e-02]],

         [[-6.7892e-02, -1.5397e-02,  2.6264e-02],
          [ 6.0277e-02, -1.7331e-02,  1.6681e-02],
          [-5.6091e-04,  4.0237e-02,  3.4015e-03]],

         [[-1.0480e-02,  1.3865e-02,  1.4990e-02],
          [-8.4846e-02,  5.9154e-02, -3.8591e-02],
          [-2.2874e-02,  2.7707e-02,  3.0810e-02]],

         ...,

         [[ 2.2911e-02, -1.7577e-02,  1.9398e-02],
          [-6.3906e-02, -4.0291e-02, -5.6699e-02],
          [-1.9752e-02,  3.0985e-02,  4.7022e-02]],

         [[ 8.9324e-03,  1.1058e-01,  1.4459e-02],
          [-1.2922e-02, -1.2889e-02,  5.9234e-02],
          [-9.8943e-05,  3.0557e-02,  3.4741e-02]],

         [[ 5.0046e-02,  1.2944e-03, -6.3299e-03],
          [-1.1870e-02,  4.0195e-02,  1.2714e-01],
          [-8.7230e-02, -1.1809e-01,  5.7090e-02]]],


        [[[-5.4289e-03, -3.0680e-02, -1.7209e-02],
          [ 2.9879e-02,  4.1323e-02, -2.1109e-02],
          [ 5.5859e-02,  5.3623e-02, -3.3634e-02]],

         [[-2.7349e-02,  1.0554e-03, -6.2392e-03],
          [-2.9568e-02,  5.7494e-03,  1.3239e-02],
          [ 6.4959e-02,  3.1629e-02,  4.1874e-02]],

         [[-2.7870e-02,  1.4053e-02, -7.1591e-03],
          [-3.3366e-02, -1.2262e-03, -3.3215e-02],
          [ 1.3576e-02,  2.1370e-02, -3.5781e-02]],

         ...,

         [[ 1.6951e-02, -1.3410e-02,  9.1007e-03],
          [-1.6562e-02, -1.0611e-01,  4.4099e-02],
          [ 4.7415e-02,  1.4202e-03,  4.1444e-02]],

         [[ 1.9653e-03,  6.4716e-02,  2.6048e-02],
          [ 2.0074e-02, -8.8613e-02, -5.0572e-02],
          [-1.0141e-02,  3.1199e-02, -6.3006e-02]],

         [[ 5.9466e-03,  7.7716e-02, -4.3310e-03],
          [-2.4615e-02, -7.2106e-02,  6.2983e-03],
          [ 1.0273e-03, -2.8708e-02, -5.9009e-02]]],


        [[[ 1.4119e-02, -2.7617e-02,  2.9242e-02],
          [ 2.2364e-02,  3.1141e-02,  2.8807e-02],
          [ 1.9541e-02, -1.5347e-02, -8.6940e-03]],

         [[ 3.9332e-02, -1.1036e-02, -1.7718e-02],
          [ 4.8197e-02,  2.2819e-02, -7.0119e-02],
          [-1.2382e-02, -2.0466e-02, -3.2371e-02]],

         [[ 4.1265e-03,  1.8984e-02,  4.1685e-02],
          [ 9.0690e-02,  3.6241e-02,  1.9836e-02],
          [ 3.9595e-02,  4.7786e-04, -8.8314e-03]],

         ...,

         [[-3.4379e-02, -2.1501e-02, -2.5564e-02],
          [ 1.6440e-02, -3.1506e-02, -3.3553e-02],
          [ 1.6583e-04,  6.8170e-02,  4.0183e-02]],

         [[-4.5331e-02, -2.9203e-02, -2.2400e-02],
          [ 8.1360e-02,  4.8883e-02, -2.9330e-02],
          [ 4.5923e-02, -1.5871e-02, -3.5884e-02]],

         [[-3.5573e-02, -1.9618e-04, -5.0760e-02],
          [-4.1490e-03,  5.0481e-02, -2.8604e-02],
          [ 4.3544e-02,  2.6456e-02,  4.3970e-02]]],


        ...,


        [[[-2.4765e-03, -3.6245e-02,  6.0292e-03],
          [-4.4847e-02,  6.2989e-03,  1.5930e-02],
          [-3.0219e-02,  5.2976e-02, -6.4431e-02]],

         [[-2.2674e-02, -3.9648e-02, -5.0042e-02],
          [-3.2066e-02, -2.4422e-02, -5.0582e-02],
          [-7.4675e-03,  4.4518e-02, -6.7232e-02]],

         [[-2.7379e-02, -1.6657e-02, -7.8467e-03],
          [-2.5159e-03, -1.2108e-02, -9.9088e-03],
          [ 5.9663e-03,  9.8466e-03,  2.6599e-02]],

         ...,

         [[-5.8798e-03,  3.2189e-02, -4.2023e-02],
          [-1.0975e-02,  6.1151e-02, -6.6434e-02],
          [ 3.6224e-02,  4.2884e-02, -3.3045e-02]],

         [[-4.8895e-02, -8.5408e-02,  1.0243e-01],
          [ 6.3310e-02, -2.2972e-02, -7.7382e-02],
          [-7.5392e-03, -1.6045e-02,  8.3849e-05]],

         [[-5.7290e-02,  2.8379e-02, -4.8560e-02],
          [ 5.9239e-02,  2.7467e-02,  6.7809e-02],
          [-2.7455e-02,  1.7265e-02, -1.3995e-02]]],


        [[[ 1.0639e-02, -1.2725e-02,  7.0050e-02],
          [-1.0016e-03,  2.4414e-02,  1.1970e-02],
          [ 3.7900e-02, -6.7737e-02, -4.3121e-02]],

         [[-7.0812e-02,  4.1713e-02, -9.3470e-02],
          [-2.1946e-02, -2.6011e-02, -1.0538e-02],
          [-1.1267e-02,  3.5809e-02, -4.5619e-02]],

         [[-2.8504e-02,  5.6134e-02, -3.1888e-02],
          [ 5.3607e-02,  8.2839e-02,  6.8517e-02],
          [ 1.1468e-02, -5.4734e-02,  9.4249e-03]],

         ...,

         [[-2.4582e-02,  1.2745e-02,  1.6636e-02],
          [ 3.6036e-02,  9.5594e-02, -2.9559e-03],
          [-3.4495e-03, -4.2314e-02, -9.3390e-03]],

         [[-1.8180e-02,  2.5850e-03,  7.3907e-03],
          [-2.4532e-03, -1.0766e-03, -7.7093e-02],
          [-1.7607e-02,  4.0909e-03,  9.5921e-02]],

         [[ 1.2935e-02, -4.9835e-02,  8.0538e-03],
          [-1.0245e-02, -5.1557e-02,  9.6939e-03],
          [ 3.6113e-02,  9.9383e-03,  1.5061e-02]]],


        [[[-1.6875e-02, -2.3513e-02, -1.7777e-03],
          [ 4.1533e-02,  8.6067e-02,  6.2589e-02],
          [-4.5531e-02, -2.9641e-02,  7.3330e-03]],

         [[-1.8888e-02,  3.8939e-02, -4.3649e-02],
          [-2.2934e-02, -2.8286e-03, -2.1555e-02],
          [-4.4235e-02, -6.3255e-02, -5.3125e-02]],

         [[ 4.1027e-02,  5.3560e-02, -2.4187e-02],
          [ 4.0681e-04,  1.7049e-02, -6.6795e-02],
          [ 3.5687e-02,  6.1327e-03, -1.8868e-02]],

         ...,

         [[ 8.7945e-03,  7.3158e-02,  5.1880e-02],
          [ 3.1435e-02,  8.1017e-02, -7.8686e-03],
          [-3.0918e-02,  3.2115e-02,  3.0897e-02]],

         [[-2.7238e-02,  3.1861e-02,  3.6856e-02],
          [ 4.2113e-03, -3.2458e-02, -1.3788e-01],
          [-2.0228e-02,  2.4538e-02,  1.8352e-03]],

         [[-9.7101e-02, -4.1618e-02,  5.3133e-02],
          [-5.6656e-02,  1.4918e-02, -6.5471e-03],
          [ 2.2311e-02, -1.9531e-02,  8.2167e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1630]],

         [[ 0.0538]],

         [[-0.0059]],

         ...,

         [[-0.0215]],

         [[-0.0437]],

         [[-0.3983]]],


        [[[ 0.1359]],

         [[ 0.1019]],

         [[ 0.2465]],

         ...,

         [[-0.1459]],

         [[ 0.3361]],

         [[ 0.1368]]],


        [[[-0.1046]],

         [[-0.1739]],

         [[ 0.0618]],

         ...,

         [[-0.1471]],

         [[ 0.1033]],

         [[-0.1593]]],


        ...,


        [[[ 0.0881]],

         [[-0.0290]],

         [[-0.1015]],

         ...,

         [[-0.0863]],

         [[ 0.1491]],

         [[ 0.0877]]],


        [[[-0.0172]],

         [[-0.0743]],

         [[ 0.0713]],

         ...,

         [[ 0.0103]],

         [[-0.0164]],

         [[-0.0726]]],


        [[[ 0.1135]],

         [[-0.0543]],

         [[-0.1538]],

         ...,

         [[-0.0371]],

         [[-0.1853]],

         [[-0.0028]]]], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-1.7036e-02, -3.1886e-02, -3.8432e-02],
          [ 3.0771e-02, -5.8375e-02, -2.1330e-02],
          [ 5.8709e-02, -4.0421e-03,  1.4427e-02]],

         [[-1.0775e-02,  4.5694e-02,  2.9386e-02],
          [-1.0216e-02,  3.2405e-02, -1.9051e-02],
          [-3.4900e-02,  4.2784e-03, -8.9591e-02]],

         [[ 1.1601e-02,  7.8789e-02, -2.9376e-02],
          [ 5.6257e-03,  3.6176e-03, -6.8575e-02],
          [-2.4076e-03,  5.8552e-02,  8.5785e-03]],

         ...,

         [[-1.0433e-04, -6.5140e-02, -1.9650e-02],
          [ 3.6987e-02, -1.0213e-01,  3.3468e-03],
          [-7.2055e-02, -5.6172e-03,  7.4842e-02]],

         [[-5.5923e-03, -1.1162e-02,  1.1642e-01],
          [-2.2358e-02, -3.6277e-02, -4.7592e-03],
          [-8.2052e-02, -6.0589e-02,  3.4038e-02]],

         [[-1.9931e-02,  2.2320e-02, -3.4667e-02],
          [ 4.3253e-02, -9.3464e-02, -6.1527e-02],
          [ 2.3536e-02, -2.8392e-02,  4.0250e-02]]],


        [[[-5.6781e-02, -2.8790e-02, -4.2374e-02],
          [-3.3337e-02,  1.9589e-02,  8.0641e-02],
          [ 3.5782e-03, -6.1240e-02, -1.1655e-02]],

         [[ 7.8466e-02, -1.2825e-02,  1.7649e-03],
          [-6.9380e-03,  3.6949e-03,  6.1057e-02],
          [-1.6597e-02,  4.8345e-02, -5.6850e-02]],

         [[ 3.1640e-02,  3.6651e-02, -1.4740e-02],
          [-6.5616e-03,  4.5100e-02, -4.2112e-02],
          [ 3.7795e-02, -2.1440e-02,  2.3216e-02]],

         ...,

         [[ 6.4869e-02,  3.5104e-02, -1.6158e-02],
          [-2.7414e-02, -3.4800e-02, -4.5807e-02],
          [ 2.5881e-02, -2.8848e-02, -1.0474e-02]],

         [[ 4.4191e-02, -5.1849e-03, -7.1724e-02],
          [ 3.5568e-03,  3.3928e-02, -1.3117e-02],
          [-4.4375e-02,  1.7885e-02,  2.6127e-02]],

         [[-3.4499e-02, -6.1557e-02,  4.6087e-02],
          [-1.2318e-02, -8.7716e-03,  5.4325e-02],
          [ 5.0754e-02, -6.0762e-02,  4.8361e-02]]],


        [[[-3.2082e-03, -9.8707e-03,  6.8504e-02],
          [-3.6685e-02,  8.1107e-02,  8.5357e-02],
          [ 6.9130e-03, -4.5535e-02,  4.4001e-02]],

         [[ 3.7069e-02,  3.8202e-02,  3.7864e-02],
          [-6.8146e-03,  1.8006e-03, -5.8716e-02],
          [ 6.8989e-02, -1.7950e-02, -6.9559e-02]],

         [[ 5.7946e-02, -1.9188e-02, -3.3375e-02],
          [ 2.8761e-02, -1.0457e-02, -2.1896e-02],
          [-2.5099e-02, -1.1113e-02, -2.1400e-02]],

         ...,

         [[ 2.7652e-02, -2.7929e-02, -5.1254e-02],
          [-4.3685e-02,  4.1863e-02, -8.7611e-04],
          [ 3.2853e-02,  4.7180e-02, -7.5178e-02]],

         [[-2.6359e-02,  6.4221e-02,  5.5970e-02],
          [ 3.4787e-02,  1.9268e-02,  1.4642e-02],
          [ 5.2527e-02, -2.4819e-02,  9.2229e-02]],

         [[ 1.3331e-02, -4.7025e-02,  2.5026e-02],
          [-9.5261e-03, -2.2173e-02, -3.3475e-02],
          [ 1.2971e-03,  7.0727e-03, -3.6921e-02]]],


        ...,


        [[[-2.4347e-02,  6.2334e-02,  1.9862e-02],
          [-2.4791e-03, -1.0918e-02, -3.1073e-02],
          [ 5.2609e-03, -1.0230e-02, -1.0253e-02]],

         [[-2.7084e-02,  2.6862e-02, -3.6040e-02],
          [ 1.8357e-02, -1.4647e-02,  2.4975e-02],
          [-1.8884e-02,  1.0371e-02, -1.5063e-02]],

         [[-1.4855e-03,  3.6580e-02, -3.9693e-02],
          [ 7.9988e-03,  3.1446e-02,  6.6214e-03],
          [ 6.5961e-03,  7.8755e-03, -1.9321e-02]],

         ...,

         [[-2.2902e-02, -1.2022e-02,  4.5231e-02],
          [-6.2523e-02, -7.0749e-03,  1.8043e-02],
          [ 3.4078e-02,  4.8390e-02, -6.3070e-04]],

         [[ 5.3410e-02,  1.6051e-02,  5.2888e-02],
          [-9.2618e-02,  5.7964e-02,  3.5267e-03],
          [ 6.4428e-02,  2.0856e-02, -6.9434e-04]],

         [[-3.6913e-02, -1.9455e-02, -5.5070e-02],
          [-7.0338e-02, -2.6016e-02, -1.0328e-02],
          [ 1.2516e-02,  5.7847e-03, -4.9395e-02]]],


        [[[ 3.8221e-02,  4.2278e-02, -1.6362e-02],
          [-7.2731e-02, -4.1164e-02, -3.3043e-02],
          [ 4.1931e-02,  9.5752e-02, -8.4259e-03]],

         [[ 2.0152e-02,  5.9939e-02, -4.9672e-03],
          [ 3.5201e-02,  2.0502e-02, -5.7653e-02],
          [-1.7517e-02, -4.5666e-02,  7.4785e-02]],

         [[-3.4195e-02, -2.2438e-02,  7.6143e-02],
          [ 1.7930e-02,  5.3777e-02, -4.8778e-02],
          [-7.4487e-03,  4.8713e-02,  2.7390e-02]],

         ...,

         [[ 1.3942e-02, -2.6073e-02, -1.4904e-03],
          [-6.3186e-02,  2.4462e-02, -1.5019e-02],
          [ 2.6545e-02, -9.3617e-03,  2.2645e-02]],

         [[-6.2782e-02, -4.0807e-02, -3.1201e-02],
          [ 3.1347e-03,  1.4703e-02,  1.4565e-02],
          [ 4.8119e-02,  1.1870e-02, -6.9916e-02]],

         [[-1.4869e-02,  2.4067e-02, -5.4703e-02],
          [ 3.4381e-02,  4.0458e-02,  1.4837e-02],
          [-1.0212e-02, -7.8621e-02,  7.5674e-02]]],


        [[[ 4.3448e-02, -1.2085e-02, -1.0456e-02],
          [-2.0290e-02,  5.1348e-02, -2.5030e-02],
          [-4.8971e-04, -5.9165e-02, -1.2207e-02]],

         [[ 6.3059e-02, -2.0485e-02,  6.6469e-02],
          [-4.6856e-02,  1.1540e-02, -2.3577e-02],
          [ 2.8259e-02,  3.0789e-02,  2.9194e-02]],

         [[-4.2805e-02, -7.2582e-02,  2.8649e-02],
          [-7.1967e-02,  1.8745e-02,  7.4804e-02],
          [-4.6551e-02, -4.7200e-02, -6.4547e-02]],

         ...,

         [[ 1.5842e-02,  5.3673e-02,  6.1734e-02],
          [ 5.7664e-02,  3.8628e-02, -5.1039e-02],
          [-1.9874e-02, -1.0973e-02, -5.8299e-04]],

         [[-8.9773e-02,  3.9194e-02, -9.0251e-03],
          [ 8.8691e-03, -3.5873e-02, -6.0796e-03],
          [ 9.3540e-02, -4.3489e-02, -1.9452e-03]],

         [[-2.2989e-02,  8.8883e-02,  4.9688e-02],
          [ 7.5525e-03,  5.4367e-02,  1.4867e-03],
          [-4.4830e-02, -5.4968e-03, -1.2577e-02]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 2.3870e-02, -7.0076e-04, -6.8888e-03],
          [-4.8280e-02, -3.0181e-02, -7.1531e-02],
          [-1.4487e-02,  1.0809e-02, -4.2693e-02]],

         [[-2.7966e-02, -4.6917e-02,  6.0563e-02],
          [ 3.3102e-02, -1.3307e-01, -8.2465e-02],
          [ 3.5625e-02, -1.1257e-03,  1.0429e-02]],

         [[ 5.4595e-02,  5.8158e-03, -2.6036e-02],
          [-1.8375e-02, -3.2810e-02,  7.2083e-02],
          [-3.8372e-02,  2.4200e-02, -4.0023e-02]],

         ...,

         [[-3.8829e-02,  3.0805e-02,  2.2595e-02],
          [-7.5592e-02,  1.0526e-02, -5.4281e-02],
          [-3.4972e-02, -7.8323e-02,  1.3726e-02]],

         [[-5.3643e-03,  5.5351e-02,  6.9580e-03],
          [ 3.4707e-03,  3.2464e-03,  2.5295e-02],
          [-5.2395e-02,  1.6826e-02,  4.5432e-03]],

         [[ 1.6629e-02, -5.4656e-02,  2.7135e-02],
          [ 3.0748e-02, -3.1359e-02,  7.0130e-02],
          [ 1.7024e-02,  1.3092e-02,  2.6236e-02]]],


        [[[ 3.0482e-04,  2.8701e-02,  3.2603e-02],
          [-1.6640e-02,  5.9598e-03, -1.3760e-02],
          [-2.0291e-02, -3.5700e-02, -5.1329e-02]],

         [[-2.4731e-02, -1.6620e-02,  5.6660e-02],
          [ 1.2114e-02, -8.9317e-03,  7.5637e-02],
          [-3.5739e-02, -2.8423e-02, -1.3036e-02]],

         [[-3.4244e-02, -4.0115e-02, -2.9565e-02],
          [-3.6702e-02, -2.6879e-02,  4.8270e-02],
          [-4.7266e-02,  2.7672e-02, -1.3659e-02]],

         ...,

         [[ 3.4169e-02,  2.6453e-02, -1.1393e-03],
          [ 2.0239e-02, -2.1224e-02,  3.3532e-02],
          [ 2.5114e-02, -1.0864e-03,  4.7937e-02]],

         [[ 1.3040e-02,  1.1256e-02,  5.5975e-02],
          [-1.5244e-02, -2.6934e-02, -2.6255e-02],
          [-5.3336e-02,  4.9049e-03, -3.4671e-02]],

         [[ 8.1370e-02, -4.5603e-02,  9.3445e-02],
          [ 5.2551e-02,  7.4316e-03, -7.2185e-02],
          [ 5.6427e-02, -1.0069e-01, -3.6902e-04]]],


        [[[ 4.7197e-02, -9.9117e-02,  4.5430e-02],
          [-8.7253e-03, -3.5926e-02, -1.9403e-02],
          [ 5.2639e-03, -2.2888e-02, -2.6331e-02]],

         [[-2.2046e-02, -6.2640e-02,  1.1964e-02],
          [-6.6021e-02,  5.9437e-02,  2.4476e-02],
          [ 3.4322e-02, -3.2857e-02, -1.2746e-02]],

         [[-5.7654e-04, -4.0014e-02, -3.3699e-03],
          [-8.0765e-05,  3.3564e-02,  6.4683e-02],
          [ 1.8807e-02,  3.1144e-02, -1.1143e-02]],

         ...,

         [[ 4.9864e-02, -3.6434e-02,  3.5556e-02],
          [ 6.9541e-02, -2.8658e-02,  2.6180e-02],
          [ 5.1448e-02,  1.3159e-01,  3.2707e-02]],

         [[ 1.9772e-02,  2.1628e-02,  1.9072e-03],
          [-6.4664e-02, -1.6740e-02,  4.7542e-02],
          [ 8.6597e-03, -1.1677e-03,  1.4945e-02]],

         [[ 1.3657e-02,  5.0128e-02,  5.5909e-02],
          [-6.8608e-03,  4.9672e-02,  1.0012e-02],
          [-1.1020e-02,  3.6143e-02, -2.7498e-02]]],


        ...,


        [[[-4.3298e-03,  1.0385e-02, -2.5630e-02],
          [-5.0489e-02, -4.0183e-02,  8.2479e-02],
          [-4.0455e-02, -3.1196e-02, -3.5176e-03]],

         [[-2.9304e-02, -3.7070e-02, -2.8862e-02],
          [-3.6531e-02,  8.5954e-02, -3.3770e-02],
          [ 3.8634e-02,  2.3821e-02,  2.0256e-03]],

         [[ 2.4912e-02, -3.8807e-02,  7.8303e-02],
          [-6.4658e-02,  4.8773e-02,  7.6474e-02],
          [-6.7530e-02,  3.2882e-02,  1.2800e-02]],

         ...,

         [[-3.3921e-02,  8.4151e-02, -1.0468e-02],
          [-7.1750e-02,  4.3719e-02, -2.0950e-02],
          [-6.7221e-02,  3.8778e-03,  7.8443e-03]],

         [[ 3.8908e-02,  2.2985e-02,  3.2404e-02],
          [ 2.0120e-03, -7.5403e-03, -3.1426e-02],
          [-1.4799e-02, -3.2084e-02,  6.0406e-02]],

         [[-7.6685e-03,  1.2056e-02, -2.0800e-02],
          [-4.3917e-02, -2.1276e-02, -7.8208e-02],
          [ 2.8465e-02,  3.9496e-02,  2.0118e-02]]],


        [[[-6.2975e-03, -7.8779e-03, -3.1997e-02],
          [-2.3147e-02, -3.5300e-02, -4.2044e-02],
          [ 5.2277e-02,  3.8248e-02, -3.3090e-02]],

         [[-7.1813e-02,  3.5569e-02,  4.5217e-02],
          [ 3.4379e-02,  5.1215e-02, -6.2183e-02],
          [-8.3025e-03, -3.4553e-02,  1.6698e-02]],

         [[ 4.3590e-03, -1.4269e-02, -7.6597e-02],
          [-4.4073e-02, -9.1253e-03,  6.3881e-02],
          [ 1.6484e-02,  1.8092e-02,  5.8021e-02]],

         ...,

         [[-4.4325e-02, -2.9642e-02, -2.8341e-02],
          [-4.6699e-02,  5.9297e-03, -3.3174e-02],
          [-4.4130e-02,  2.0505e-03, -5.2473e-02]],

         [[ 1.5851e-02, -1.1513e-03, -6.8622e-02],
          [-1.3011e-02,  1.2152e-02, -3.4626e-02],
          [ 1.1107e-01, -4.7407e-03,  4.3808e-02]],

         [[ 1.9503e-02, -3.8333e-02, -2.1696e-02],
          [ 8.0330e-04,  2.5829e-02, -8.9372e-02],
          [ 3.1908e-02, -1.3363e-02, -1.1748e-02]]],


        [[[ 5.2122e-02, -1.9019e-02,  5.0432e-02],
          [ 6.7089e-02, -4.5315e-02, -5.5780e-03],
          [-3.3356e-02, -3.3683e-02, -1.4172e-02]],

         [[ 5.4482e-02,  7.8590e-02,  4.7816e-02],
          [ 1.3363e-02,  4.2034e-02,  3.0941e-02],
          [ 9.6183e-03,  8.4778e-02,  1.3259e-01]],

         [[ 6.8269e-02, -1.8082e-02, -3.6240e-02],
          [-3.0965e-02, -3.2270e-02,  3.6396e-02],
          [ 1.4147e-02,  3.2374e-02,  7.0522e-02]],

         ...,

         [[-1.9175e-03,  3.6939e-02, -2.7897e-02],
          [-5.7048e-02, -2.8992e-02,  8.4870e-02],
          [ 5.6198e-02, -6.1242e-03, -5.0350e-02]],

         [[ 5.4703e-02,  2.4641e-02,  2.0897e-02],
          [ 1.2130e-03, -5.9663e-02, -4.7381e-02],
          [ 5.3941e-02,  2.4405e-02,  3.7505e-02]],

         [[-7.8183e-02, -1.0353e-02,  2.4705e-02],
          [-8.0079e-03,  4.9211e-02, -3.9594e-03],
          [ 8.3349e-02, -2.4544e-03, -5.1600e-03]]]], device='cuda:0',
       requires_grad=True)
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 16:21:17,130 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 6:14:04, time: 0.225, data_time: 0.008, memory: 702, loss_flow: 62.4238, loss: 62.4238, grad_norm: 1034.9791
2022-10-09 16:21:25,614 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 5:28:12, time: 0.170, data_time: 0.004, memory: 702, loss_flow: 43.6479, loss: 43.6479, grad_norm: 503.3812
2022-10-09 16:21:35,061 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 5:23:29, time: 0.189, data_time: 0.004, memory: 702, loss_flow: 41.4191, loss: 41.4191, grad_norm: 562.7245
2022-10-09 16:21:42,692 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 5:05:57, time: 0.153, data_time: 0.003, memory: 702, loss_flow: 58.0187, loss: 58.0187, grad_norm: 722.8842
2022-10-09 16:21:51,521 - mmflow - INFO - Iter [250/100000]	lr: 1.097e-05, eta: 5:03:21, time: 0.177, data_time: 0.004, memory: 702, loss_flow: 72.5769, loss: 72.5769, grad_norm: 864.9651
2022-10-09 16:22:00,359 - mmflow - INFO - Iter [300/100000]	lr: 1.217e-05, eta: 5:01:37, time: 0.177, data_time: 0.004, memory: 702, loss_flow: 80.5672, loss: 80.5672, grad_norm: 1097.0052
2022-10-09 16:22:09,057 - mmflow - INFO - Iter [350/100000]	lr: 1.337e-05, eta: 4:59:40, time: 0.174, data_time: 0.004, memory: 702, loss_flow: 81.8979, loss: 81.8979, grad_norm: 811.2255
2022-10-09 16:22:17,479 - mmflow - INFO - Iter [400/100000]	lr: 1.457e-05, eta: 4:57:02, time: 0.168, data_time: 0.004, memory: 702, loss_flow: 63.8764, loss: 63.8764, grad_norm: 636.7032
2022-10-09 16:22:25,962 - mmflow - INFO - Iter [450/100000]	lr: 1.577e-05, eta: 4:55:10, time: 0.170, data_time: 0.004, memory: 702, loss_flow: 65.4081, loss: 65.4081, grad_norm: 750.0263
2022-10-09 16:22:35,008 - mmflow - INFO - Iter [500/100000]	lr: 1.697e-05, eta: 4:55:31, time: 0.181, data_time: 0.004, memory: 702, loss_flow: 49.8212, loss: 49.8212, grad_norm: 541.1668
2022-10-09 16:22:44,026 - mmflow - INFO - Iter [550/100000]	lr: 1.817e-05, eta: 4:55:41, time: 0.180, data_time: 0.004, memory: 702, loss_flow: 52.3853, loss: 52.3853, grad_norm: 552.7724
2022-10-09 16:22:53,032 - mmflow - INFO - Iter [600/100000]	lr: 1.936e-05, eta: 4:55:47, time: 0.180, data_time: 0.004, memory: 702, loss_flow: 55.7663, loss: 55.7663, grad_norm: 543.1505
2022-10-09 16:23:01,630 - mmflow - INFO - Iter [650/100000]	lr: 2.056e-05, eta: 4:54:47, time: 0.172, data_time: 0.003, memory: 702, loss_flow: 45.0901, loss: 45.0901, grad_norm: 526.4912
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 265, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1376, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 1.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 68, in __call__
    img1 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


