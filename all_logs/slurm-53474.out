2022-10-09 21:39:46,999 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 21:39:47,001 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 21:39:47,067 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 21:39:47,069 - mmflow - INFO - Distributed training: False
2022-10-09 21:39:48,480 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dCADDY'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dKITTI'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09_h21'
auto_resume = False
gpu_ids = [0]

2022-10-09 21:39:48,482 - mmflow - INFO - Set random seed to 1624222969, deterministic: False
2022-10-09 21:39:48,638 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:39:50,421 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:39:50,533 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 21:39:51,978 - mmflow - INFO - dataset size 1200
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 21:39:54,591 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 21:39:54,744 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21
2022-10-09 21:39:54,746 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 21:39:54,780 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 21:39:54,781 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-8.7565e-03,  3.2284e-04, -1.8646e-02,  ..., -3.4900e-02,
            8.0593e-02,  1.3040e-02],
          [ 1.3924e-02, -9.8174e-03, -5.5586e-02,  ..., -4.4227e-02,
           -4.3373e-02,  4.9217e-02],
          [-1.4493e-02, -2.3737e-02,  1.4043e-02,  ...,  2.6680e-02,
            6.8987e-03, -1.3409e-02],
          ...,
          [ 5.1781e-02,  1.8432e-03,  1.1318e-02,  ...,  2.8755e-03,
           -1.7577e-02,  1.5650e-03],
          [ 1.9666e-02,  3.4264e-02, -1.1834e-03,  ...,  8.0490e-03,
            4.7011e-02, -4.0024e-02],
          [ 2.4736e-03,  1.9375e-03,  8.2142e-03,  ..., -3.0258e-02,
            3.8835e-02,  9.0921e-03]],

         [[-1.1327e-02,  2.6113e-02,  2.6298e-02,  ..., -1.5147e-02,
           -1.0218e-02, -4.6032e-03],
          [-2.2073e-03, -2.9748e-02,  1.7035e-02,  ...,  1.6915e-02,
           -6.3796e-03,  6.1868e-03],
          [ 1.1845e-02,  9.6036e-03,  3.7168e-03,  ..., -1.2168e-02,
            2.1934e-02, -4.9530e-02],
          ...,
          [-2.0848e-02,  3.7233e-02, -6.6095e-03,  ..., -1.0452e-02,
            2.4687e-03,  3.6844e-03],
          [ 4.3394e-02, -7.5356e-02, -8.3887e-03,  ...,  2.5694e-02,
            1.1538e-02,  2.4372e-02],
          [-1.9014e-02, -2.2986e-03,  2.9488e-02,  ...,  6.7973e-03,
           -3.1475e-03, -2.0623e-02]],

         [[-5.5640e-02, -1.6151e-02, -1.5177e-02,  ...,  1.1329e-02,
            2.0662e-03, -1.3703e-03],
          [-3.2366e-02, -2.1457e-02, -1.4775e-02,  ...,  1.7278e-02,
           -1.4477e-02, -9.2369e-03],
          [-1.8402e-02, -2.9006e-02,  1.9942e-02,  ..., -2.9283e-03,
           -2.9047e-03, -1.1042e-02],
          ...,
          [ 5.0549e-03,  4.0364e-02, -3.8218e-02,  ...,  4.1521e-02,
            2.6601e-02, -1.9001e-02],
          [-1.7153e-02, -3.8866e-03,  1.3258e-02,  ...,  4.7549e-02,
           -3.6855e-02, -2.1773e-02],
          [ 4.0216e-02, -4.3905e-02, -1.1482e-02,  ...,  3.7554e-02,
            8.8803e-03, -2.9908e-02]]],


        [[[ 5.7338e-02,  5.9753e-03,  1.1701e-03,  ...,  7.4628e-03,
           -2.8789e-02, -2.9270e-02],
          [-3.7832e-02,  5.6010e-03, -4.8890e-02,  ..., -8.0904e-03,
            1.5244e-02,  3.1199e-02],
          [-1.9904e-02, -2.9610e-02, -9.7766e-03,  ...,  1.9660e-02,
           -2.0388e-03, -2.3830e-02],
          ...,
          [-4.9663e-03, -5.1694e-04,  2.2211e-02,  ...,  1.2732e-02,
            2.9791e-02, -1.5313e-02],
          [ 1.9840e-02,  5.6361e-03, -3.1497e-02,  ...,  7.1108e-03,
           -6.4022e-03, -2.7017e-02],
          [ 2.4418e-02,  1.2000e-02,  4.0867e-03,  ...,  1.0232e-02,
           -7.1402e-02,  2.5147e-02]],

         [[ 1.0590e-02,  4.9509e-02,  6.0582e-03,  ...,  8.0378e-03,
           -3.6078e-02, -7.2741e-03],
          [ 1.3079e-02, -3.2111e-02,  3.3821e-02,  ..., -4.1686e-02,
           -2.0661e-02,  3.9724e-02],
          [ 1.9716e-03, -1.2140e-02, -4.2339e-02,  ...,  6.8742e-02,
            1.1639e-02,  6.7593e-03],
          ...,
          [ 5.7391e-02,  3.5056e-02, -7.3944e-04,  ...,  1.4677e-02,
           -1.1420e-02,  8.4953e-03],
          [ 1.3483e-02,  4.2377e-03,  4.0365e-03,  ...,  5.6836e-03,
           -5.8211e-02, -4.4055e-03],
          [ 1.4939e-02,  5.3034e-02,  1.8842e-03,  ..., -1.9305e-02,
           -2.1578e-02, -1.1709e-02]],

         [[-3.3081e-02,  3.5608e-03,  1.4448e-02,  ..., -2.5967e-02,
           -1.4246e-02,  9.2078e-03],
          [-1.5776e-02,  3.1692e-02,  4.0353e-02,  ..., -2.1246e-02,
           -3.4495e-02, -3.3429e-02],
          [-8.3929e-03,  1.8185e-02,  8.0697e-04,  ...,  6.6973e-03,
           -4.2642e-03,  1.8462e-02],
          ...,
          [-4.5718e-02,  3.9453e-03, -4.6227e-02,  ..., -7.0262e-02,
           -3.7421e-02,  6.9848e-03],
          [-2.1557e-02, -1.1852e-02,  4.5153e-02,  ..., -4.0413e-02,
           -6.3200e-03,  3.9773e-03],
          [-1.0350e-02, -4.8388e-02,  1.5448e-02,  ..., -2.9519e-02,
            2.4079e-02,  3.2938e-03]]],


        [[[-2.3983e-02,  4.9354e-02, -2.2790e-02,  ..., -1.5950e-02,
            3.4369e-02,  1.2485e-02],
          [-1.4305e-02, -8.5949e-02, -8.6274e-03,  ...,  4.0245e-03,
           -3.6566e-03,  4.9951e-02],
          [-5.6099e-04, -6.9933e-05, -9.6993e-03,  ..., -1.2572e-02,
            2.0472e-02,  3.7661e-03],
          ...,
          [-9.7747e-03,  2.2131e-02, -2.8674e-02,  ...,  1.7316e-02,
           -3.3789e-02, -1.5401e-02],
          [-3.6027e-02, -7.8850e-04, -1.4971e-03,  ...,  5.1409e-03,
           -9.7095e-03,  2.0048e-02],
          [-3.7104e-02, -9.4644e-03,  6.2353e-02,  ..., -1.5418e-02,
           -3.1928e-02, -4.8934e-02]],

         [[ 2.3700e-02,  1.4435e-02,  7.2532e-03,  ..., -3.9283e-02,
           -2.2346e-02,  8.1883e-03],
          [-2.6887e-02,  8.1139e-02,  6.1788e-04,  ...,  5.4622e-02,
           -4.1566e-03,  5.4677e-02],
          [-2.9804e-02, -2.5032e-02,  8.7762e-03,  ..., -6.7849e-02,
           -6.4496e-04, -2.4362e-02],
          ...,
          [-5.0158e-03,  1.8447e-02, -1.5276e-03,  ..., -3.5206e-02,
            2.5503e-02, -4.3706e-02],
          [-5.9188e-03,  2.2082e-02,  2.4199e-03,  ..., -3.8435e-02,
            4.6166e-04,  3.7527e-02],
          [-2.2704e-02,  4.3000e-02,  2.8927e-02,  ..., -8.8038e-04,
            1.2213e-02, -1.7443e-02]],

         [[ 9.2836e-04, -1.8354e-02,  4.0431e-02,  ...,  2.2065e-04,
           -3.3237e-02,  4.9024e-03],
          [ 1.6936e-02, -7.3354e-03, -4.3768e-02,  ..., -1.8895e-02,
            1.9974e-02, -1.6990e-03],
          [ 1.2304e-02, -2.1401e-02, -1.0918e-02,  ...,  1.7657e-03,
            4.7161e-02,  3.6154e-02],
          ...,
          [-5.7546e-03,  3.2080e-02, -2.7559e-02,  ...,  8.9519e-03,
           -7.8808e-03, -4.0574e-02],
          [-1.7862e-02, -4.2731e-02, -4.5531e-03,  ..., -2.7023e-02,
           -4.6545e-02,  1.4546e-02],
          [ 2.1445e-02, -1.7664e-02,  7.3884e-03,  ..., -3.6741e-02,
            1.0467e-02,  1.5540e-02]]],


        ...,


        [[[ 1.5742e-03, -9.1753e-03, -3.4224e-03,  ..., -9.7878e-03,
           -1.7226e-02, -3.2595e-02],
          [-3.3632e-02,  1.5587e-03, -2.4030e-02,  ...,  4.5194e-02,
           -4.7195e-02,  3.8833e-02],
          [-3.7617e-04,  4.1756e-03, -8.5071e-03,  ...,  1.3498e-02,
            4.8008e-02, -2.2838e-02],
          ...,
          [ 3.2640e-03,  8.2378e-03, -5.9334e-03,  ..., -5.2317e-03,
            9.4899e-03,  1.3575e-02],
          [-2.3791e-03, -6.3053e-03, -1.8559e-02,  ..., -1.0414e-02,
            1.5406e-02,  4.5438e-04],
          [-1.9692e-02, -6.2157e-02,  8.0609e-03,  ..., -1.1325e-02,
           -1.7182e-02, -2.8761e-02]],

         [[-1.3520e-03, -2.2389e-02, -2.4007e-02,  ..., -3.5152e-02,
           -5.2181e-02, -2.1659e-02],
          [-2.4854e-02, -5.5791e-03,  2.0698e-02,  ...,  1.2699e-02,
            1.4516e-02,  5.9603e-03],
          [-9.8539e-03,  2.0463e-02,  5.2676e-02,  ...,  1.9012e-03,
            1.2824e-02, -6.3290e-03],
          ...,
          [ 8.8068e-03, -2.1948e-02,  6.7236e-02,  ..., -2.4946e-03,
            2.7857e-02, -1.6782e-02],
          [ 1.3997e-02,  5.2866e-03, -1.3705e-02,  ...,  4.2040e-03,
            5.8017e-03,  4.6098e-02],
          [ 1.8304e-02,  1.6325e-02, -9.0339e-03,  ...,  5.6443e-03,
           -1.1386e-02,  2.2527e-02]],

         [[-6.1976e-02,  2.4216e-02, -6.6958e-02,  ...,  7.9651e-03,
            1.7628e-02, -3.7668e-02],
          [-1.5252e-02,  7.1039e-03,  1.6718e-02,  ...,  3.8199e-02,
            1.2480e-02, -1.5624e-02],
          [-3.6538e-02, -2.1115e-03, -5.8882e-03,  ..., -4.9076e-02,
            1.7169e-02, -1.5296e-02],
          ...,
          [-3.9931e-02, -5.3395e-02, -2.2711e-03,  ..., -2.7577e-02,
            3.7122e-03, -1.7833e-02],
          [ 1.1144e-02,  5.1825e-05,  4.0176e-02,  ...,  1.0303e-02,
           -2.5904e-02, -2.7055e-03],
          [ 8.0895e-03, -1.3573e-02, -4.3606e-02,  ..., -8.8032e-02,
            9.0444e-03,  3.7097e-02]]],


        [[[ 3.2947e-02,  1.3383e-02, -2.7597e-02,  ..., -1.3187e-02,
           -9.0587e-03,  3.5488e-02],
          [-1.3682e-02,  2.1070e-02,  3.4784e-02,  ..., -3.4355e-03,
           -1.1493e-02, -7.6248e-03],
          [-2.7892e-02,  1.9588e-02, -1.7178e-02,  ..., -5.0769e-02,
           -1.0316e-02,  3.9900e-02],
          ...,
          [-4.8355e-02,  1.0838e-02, -3.2682e-02,  ..., -3.7233e-03,
            1.4808e-02, -9.5169e-03],
          [ 3.8422e-02, -4.2279e-03, -2.5123e-02,  ..., -3.4263e-02,
           -1.3141e-02, -1.7905e-02],
          [ 1.9186e-04, -3.1787e-03, -5.8421e-03,  ..., -5.2417e-03,
            1.8037e-02, -2.4447e-02]],

         [[ 3.3759e-02, -1.7712e-03, -1.6593e-02,  ..., -2.2462e-03,
            1.6097e-02,  4.5757e-02],
          [-2.4746e-02,  1.0476e-03, -2.8959e-02,  ..., -2.4148e-02,
           -7.6013e-03, -4.2969e-02],
          [ 3.0955e-03,  1.7984e-02, -6.0224e-03,  ...,  1.0524e-02,
           -2.5954e-02, -9.1293e-03],
          ...,
          [-5.2224e-02,  9.6265e-03,  8.5103e-03,  ...,  4.7968e-03,
            1.5525e-02,  1.5069e-02],
          [ 9.8124e-03, -4.6553e-02, -1.1750e-02,  ..., -5.0932e-03,
           -1.1292e-02, -1.7532e-02],
          [-1.7012e-03,  3.4048e-02,  2.4207e-02,  ...,  5.2186e-02,
           -1.4768e-02,  3.6586e-02]],

         [[-4.8835e-04,  3.5941e-02,  6.5809e-03,  ..., -4.9619e-03,
            2.3498e-02, -1.7981e-02],
          [-6.8771e-03,  7.3185e-03, -3.2492e-02,  ..., -1.4004e-02,
           -4.2881e-02, -8.0555e-03],
          [ 1.4703e-03,  3.1532e-02, -2.2468e-02,  ..., -4.0339e-02,
           -4.9825e-02,  1.7498e-02],
          ...,
          [-1.9305e-02, -1.9126e-02, -9.6803e-03,  ..., -2.0500e-02,
            7.2940e-03, -2.2860e-02],
          [ 7.1009e-03, -6.2656e-04,  9.8013e-03,  ...,  5.0363e-02,
           -5.3387e-02,  6.5726e-02],
          [-9.1741e-03, -2.5872e-02,  9.6137e-03,  ..., -1.2112e-03,
            3.7137e-02, -6.4495e-03]]],


        [[[-7.1750e-03,  7.5498e-03,  1.4428e-02,  ...,  7.2559e-03,
           -4.4088e-02, -2.9105e-02],
          [-9.1839e-03,  8.4407e-03, -9.8837e-03,  ..., -4.0595e-02,
            1.1294e-02,  1.9601e-02],
          [ 2.5504e-02,  4.1154e-02,  4.5663e-04,  ..., -2.1642e-02,
            4.1937e-03,  4.1286e-02],
          ...,
          [ 2.0987e-02, -1.1332e-03, -9.6661e-03,  ...,  2.6953e-03,
           -4.0114e-02,  9.0964e-04],
          [ 4.5586e-02,  2.4935e-02,  8.1139e-03,  ..., -8.3898e-03,
           -1.5391e-02,  1.8233e-02],
          [ 6.6513e-02,  2.9174e-02,  4.3896e-03,  ..., -3.1351e-02,
           -3.2416e-02,  2.1469e-02]],

         [[-2.9510e-02,  1.4390e-02, -4.1845e-03,  ..., -1.5062e-02,
           -1.4694e-02,  3.5802e-02],
          [ 5.4348e-03, -1.1091e-02, -2.1835e-03,  ...,  1.8602e-02,
            1.1679e-02, -6.5924e-03],
          [-3.0384e-02, -3.5671e-02, -4.4613e-02,  ...,  1.7659e-02,
            1.9920e-02,  3.5875e-02],
          ...,
          [ 1.4946e-03, -3.3508e-02, -3.0815e-02,  ...,  6.1811e-03,
           -2.3316e-02, -4.7003e-02],
          [ 1.0306e-02,  4.4700e-03,  1.3344e-02,  ..., -4.2843e-02,
           -4.8334e-03, -2.5808e-03],
          [ 4.6162e-02,  1.2539e-03, -9.1121e-03,  ...,  1.0686e-02,
           -5.5106e-03, -4.3557e-02]],

         [[ 2.5469e-02, -2.0831e-02,  1.5879e-02,  ...,  3.4743e-02,
           -2.9135e-03, -6.8151e-03],
          [-1.9101e-02,  2.3416e-02,  4.7898e-04,  ...,  6.4897e-03,
            4.2778e-02, -2.4397e-02],
          [-4.0500e-02,  5.0727e-03, -1.7561e-02,  ...,  1.2003e-02,
            6.6471e-02,  2.0082e-02],
          ...,
          [-2.0570e-02,  4.2103e-02,  2.1151e-02,  ..., -1.0873e-02,
            1.6895e-02, -1.0701e-02],
          [-6.8804e-03, -1.9776e-02, -1.2088e-02,  ..., -2.3589e-02,
           -1.4401e-02, -5.1591e-03],
          [ 1.1777e-02, -1.1946e-02, -7.2884e-03,  ...,  2.5129e-02,
           -3.5903e-02,  3.8349e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0917,  0.0367, -0.0734],
          [ 0.0279, -0.0082, -0.0768],
          [-0.0019,  0.0689,  0.0909]],

         [[ 0.0825, -0.1024, -0.0378],
          [ 0.0076,  0.0228,  0.0253],
          [-0.0397, -0.0291,  0.0156]],

         [[-0.0412, -0.0119, -0.0184],
          [-0.0577, -0.1236, -0.0018],
          [-0.0633, -0.0249, -0.0193]],

         ...,

         [[-0.0200,  0.0254, -0.1088],
          [-0.0178,  0.0686,  0.0442],
          [-0.0019,  0.0220,  0.0615]],

         [[ 0.0441,  0.0109, -0.0137],
          [ 0.0834,  0.0365,  0.1110],
          [ 0.0444, -0.0720,  0.0997]],

         [[ 0.0290,  0.0223,  0.0258],
          [-0.0699, -0.0900, -0.0258],
          [ 0.0743,  0.0062,  0.0350]]],


        [[[-0.0275, -0.0668,  0.0567],
          [-0.0811, -0.0246, -0.0357],
          [ 0.0484, -0.0357,  0.0010]],

         [[-0.0092,  0.0299,  0.0188],
          [-0.0315, -0.0310, -0.0718],
          [ 0.0892, -0.0026, -0.0102]],

         [[ 0.0143, -0.0495, -0.0065],
          [ 0.0803,  0.0234,  0.0366],
          [-0.0839, -0.0060, -0.0061]],

         ...,

         [[ 0.0391, -0.0019,  0.0455],
          [ 0.0349, -0.0825, -0.0519],
          [-0.0712,  0.1002,  0.0491]],

         [[-0.0422,  0.0787, -0.1248],
          [-0.0114,  0.0087, -0.0832],
          [ 0.0480, -0.0090,  0.0442]],

         [[-0.0085,  0.0137, -0.0728],
          [-0.0005, -0.0776, -0.0106],
          [-0.0408, -0.0016,  0.0363]]],


        [[[ 0.0165, -0.0462, -0.0761],
          [-0.0275, -0.1506, -0.0004],
          [-0.0668,  0.0118,  0.0290]],

         [[ 0.0908,  0.0950, -0.0151],
          [ 0.0068, -0.0751,  0.1614],
          [ 0.0220, -0.0682, -0.0608]],

         [[ 0.0347, -0.1052, -0.1313],
          [-0.1367, -0.0162, -0.0388],
          [ 0.1024, -0.0122,  0.1091]],

         ...,

         [[ 0.0763, -0.0730,  0.1053],
          [ 0.0158, -0.0433, -0.1011],
          [-0.0897, -0.0927, -0.1991]],

         [[ 0.1388, -0.0592, -0.0524],
          [ 0.0217, -0.0939, -0.0556],
          [-0.0738, -0.0222, -0.0033]],

         [[-0.0263, -0.0178, -0.0261],
          [-0.0258,  0.0672, -0.0638],
          [ 0.0872, -0.0521, -0.0936]]],


        ...,


        [[[ 0.0180,  0.0528,  0.0467],
          [-0.0200,  0.0769, -0.0116],
          [-0.0569, -0.1381, -0.0179]],

         [[ 0.0757, -0.0445,  0.2092],
          [ 0.0501, -0.0732,  0.1336],
          [ 0.0077, -0.1243,  0.0442]],

         [[-0.0468,  0.0581,  0.0895],
          [-0.0388, -0.0305, -0.0834],
          [-0.0257, -0.0456, -0.0663]],

         ...,

         [[ 0.0622,  0.0082, -0.0091],
          [-0.0224, -0.0339, -0.0163],
          [ 0.0332, -0.0831,  0.1276]],

         [[ 0.0106, -0.0369,  0.0305],
          [ 0.0063,  0.0574,  0.0800],
          [ 0.0322,  0.0802, -0.0683]],

         [[ 0.0046,  0.0268, -0.0331],
          [-0.1231, -0.0472,  0.0445],
          [-0.0738,  0.1176,  0.0543]]],


        [[[-0.0065,  0.0258,  0.0750],
          [-0.0761, -0.0331,  0.0137],
          [ 0.0442,  0.0197, -0.0043]],

         [[-0.0340, -0.1510,  0.0338],
          [ 0.0631,  0.0178, -0.0579],
          [-0.0319, -0.0772,  0.0148]],

         [[ 0.0959, -0.0272,  0.1511],
          [ 0.0348,  0.0348, -0.0482],
          [-0.0050, -0.0154, -0.0068]],

         ...,

         [[-0.0578,  0.0431, -0.0614],
          [ 0.0742,  0.0306,  0.0121],
          [ 0.0587, -0.1511,  0.0501]],

         [[ 0.0031, -0.0456,  0.0370],
          [ 0.0047,  0.0192, -0.0723],
          [-0.0449,  0.0692,  0.1113]],

         [[-0.0166,  0.0896,  0.0452],
          [-0.0565,  0.0751, -0.0652],
          [-0.0633, -0.0802,  0.0573]]],


        [[[-0.0253,  0.0391,  0.0153],
          [-0.0969,  0.1137,  0.0414],
          [ 0.0190,  0.0022,  0.0098]],

         [[ 0.0124,  0.0248,  0.0021],
          [ 0.0370,  0.0036,  0.0246],
          [-0.0396,  0.1081, -0.0225]],

         [[ 0.0667,  0.0015, -0.0009],
          [-0.0470,  0.0354,  0.0507],
          [-0.0426,  0.0247, -0.0435]],

         ...,

         [[-0.0433, -0.0285,  0.0305],
          [ 0.0711,  0.0125, -0.0077],
          [-0.0789,  0.0133, -0.0150]],

         [[ 0.0674,  0.0186,  0.0074],
          [ 0.0403,  0.0461,  0.0631],
          [-0.0576, -0.0447,  0.0256]],

         [[ 0.0050, -0.0315, -0.0765],
          [-0.0308, -0.0374,  0.0479],
          [-0.0335,  0.0069,  0.0512]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 4.7152e-02,  2.9856e-02,  7.0892e-03],
          [ 9.1870e-03, -6.1448e-03, -5.8253e-02],
          [-5.5584e-02, -5.0640e-02, -6.0742e-02]],

         [[ 1.3709e-01, -1.4184e-02,  6.8439e-02],
          [ 6.5276e-02,  1.5750e-03, -3.0177e-02],
          [-1.9614e-02,  4.8844e-02,  1.4934e-02]],

         [[-6.1720e-02, -9.7016e-02,  9.5693e-02],
          [-7.0334e-02, -5.6660e-02,  1.9602e-02],
          [ 4.5891e-03, -5.9577e-02,  5.5791e-02]],

         ...,

         [[-9.8612e-02,  5.9778e-02,  3.7169e-02],
          [-1.4262e-01, -3.2439e-02, -3.2727e-02],
          [ 2.3475e-02,  1.5569e-02, -3.1574e-02]],

         [[ 2.9462e-02, -9.0602e-02,  1.3891e-02],
          [ 6.6522e-02, -6.7804e-02, -2.0980e-03],
          [-1.2791e-03, -7.9264e-02, -3.1739e-02]],

         [[-3.8863e-02,  5.2265e-02, -3.5134e-02],
          [ 2.2710e-02,  6.1363e-02,  3.8137e-02],
          [-2.2969e-02,  3.3727e-02,  1.1379e-01]]],


        [[[ 3.3898e-02, -6.9898e-02, -4.4699e-02],
          [ 6.5989e-02, -4.2722e-02, -1.9544e-02],
          [ 3.6301e-02,  2.6908e-02, -8.4614e-02]],

         [[ 1.3649e-02, -4.0590e-02, -8.8020e-02],
          [ 3.3817e-02, -3.6684e-03, -4.3646e-02],
          [ 5.8621e-02,  1.4458e-02, -1.6948e-03]],

         [[-1.4640e-02,  3.3882e-02, -9.0335e-02],
          [-1.8809e-02,  2.3416e-02, -1.3993e-02],
          [-7.3650e-02, -9.8727e-03,  5.6711e-03]],

         ...,

         [[ 4.4922e-02,  7.3577e-02, -9.7594e-03],
          [ 9.3310e-03, -2.6734e-03,  1.4350e-02],
          [ 7.8332e-02,  3.7784e-02, -7.0785e-02]],

         [[-7.7173e-02,  8.1070e-02,  1.3336e-02],
          [-7.9461e-02, -1.4506e-01, -9.0568e-03],
          [ 7.9659e-02, -1.2662e-02, -4.6842e-02]],

         [[ 2.0354e-03,  7.7374e-02,  6.8071e-03],
          [-5.6233e-02, -6.9312e-02, -2.1239e-02],
          [-1.0466e-02,  9.5777e-02, -1.0467e-01]]],


        [[[-1.7717e-02, -4.0708e-03, -9.2509e-03],
          [ 3.2455e-02,  4.6336e-02, -3.4923e-02],
          [-4.7794e-02,  5.8761e-02, -6.9842e-02]],

         [[ 1.3314e-01,  6.1280e-02, -7.0106e-02],
          [ 5.2027e-02,  4.4596e-02, -8.2832e-02],
          [ 6.5479e-02,  4.4594e-02,  9.0392e-02]],

         [[ 6.2560e-02, -1.7080e-03, -4.1071e-02],
          [ 7.6126e-02,  2.9502e-03,  7.1517e-02],
          [-9.9961e-02, -4.1156e-02, -8.7737e-02]],

         ...,

         [[ 9.6182e-02,  6.5053e-02, -4.2479e-02],
          [-4.8213e-02,  1.3187e-02, -1.8889e-02],
          [-1.0692e-01,  3.3419e-02,  5.8365e-02]],

         [[ 5.0328e-02, -3.6577e-02,  4.8862e-03],
          [ 2.2004e-03, -1.7739e-02,  1.0240e-01],
          [-7.4633e-02, -6.0832e-02, -9.4931e-02]],

         [[ 2.7750e-02, -5.5231e-03,  6.4048e-02],
          [-1.2650e-01,  6.5635e-02,  3.6773e-02],
          [ 6.4235e-02,  7.3238e-02, -8.9972e-02]]],


        ...,


        [[[ 3.8665e-02, -4.5409e-02, -1.4044e-02],
          [-9.8860e-03, -8.7913e-02, -6.3689e-03],
          [ 5.9636e-02, -1.1212e-02, -3.1685e-02]],

         [[ 4.8290e-02, -7.9124e-02,  1.6980e-02],
          [-8.1391e-02, -4.4854e-02,  5.1585e-02],
          [ 4.6542e-02, -1.2042e-02, -5.6775e-02]],

         [[-5.0407e-02,  2.1442e-02,  4.9558e-02],
          [-5.3781e-02,  5.2075e-02,  8.7278e-05],
          [-1.6250e-02,  4.8453e-02,  7.6305e-02]],

         ...,

         [[-6.0796e-02,  5.0984e-02,  1.0400e-01],
          [ 6.6811e-02, -1.3583e-02, -2.4933e-02],
          [ 2.0591e-02, -1.2074e-02,  4.9384e-02]],

         [[-2.3397e-02, -3.1285e-02, -6.3847e-02],
          [-4.2314e-02,  3.3013e-02,  5.8189e-02],
          [-4.9423e-02,  5.7890e-02,  5.9959e-02]],

         [[ 5.1776e-02,  1.9439e-02, -4.1369e-02],
          [ 5.2741e-02,  1.9101e-01,  9.4646e-02],
          [-2.6879e-02, -2.6266e-02,  2.1574e-02]]],


        [[[ 7.0366e-02, -2.1739e-02,  6.0621e-04],
          [ 5.7338e-02, -4.3297e-02, -9.3183e-02],
          [-3.6087e-02,  3.7323e-02, -2.4641e-02]],

         [[-1.5268e-03,  8.5863e-02,  4.4861e-02],
          [ 7.2309e-02,  4.1396e-04, -3.8846e-02],
          [-1.8087e-02,  5.0137e-02, -1.8549e-02]],

         [[ 4.0921e-02,  2.9325e-03,  5.3317e-02],
          [ 9.7876e-03, -6.0782e-02, -6.3448e-02],
          [-2.2664e-02, -3.0484e-02,  3.4159e-03]],

         ...,

         [[-2.0715e-02,  1.7805e-02, -1.5005e-01],
          [-1.4948e-01,  1.5440e-01, -6.4058e-03],
          [ 1.1435e-01,  2.8738e-02,  1.5030e-03]],

         [[ 5.3690e-02,  4.1151e-03, -3.9461e-02],
          [-2.2612e-02, -7.3158e-02, -5.2126e-02],
          [-2.0963e-02,  2.7061e-02,  2.4618e-02]],

         [[ 1.0312e-01,  1.2998e-02, -6.6355e-02],
          [ 1.2237e-02,  1.0690e-01, -4.4611e-02],
          [-4.7631e-02,  4.0116e-02,  1.5903e-02]]],


        [[[ 8.1455e-02, -4.5439e-02, -1.4218e-02],
          [ 6.5073e-02,  3.5520e-03,  7.3241e-02],
          [ 1.0867e-01, -2.1739e-02,  4.6084e-02]],

         [[-2.1546e-02,  1.7042e-02, -5.9660e-02],
          [ 7.6564e-02, -1.0465e-01, -1.8638e-02],
          [-1.7823e-02, -3.5834e-02,  1.1865e-01]],

         [[ 9.4866e-02, -1.4198e-02,  1.5341e-01],
          [-2.6543e-02,  3.3742e-02, -3.2260e-02],
          [-1.3080e-02,  1.2662e-02,  3.8932e-02]],

         ...,

         [[ 4.4089e-02,  8.5493e-02,  3.8676e-02],
          [ 2.9971e-02, -7.2745e-03,  3.1383e-02],
          [-3.7582e-02,  6.3837e-02,  2.3476e-02]],

         [[ 3.4756e-02, -2.1758e-02, -3.8016e-02],
          [ 1.5565e-01,  1.3039e-01,  5.8391e-02],
          [-2.3559e-02,  1.9672e-02,  3.3588e-02]],

         [[ 2.8939e-02,  4.6746e-02, -1.3594e-01],
          [ 5.3752e-02,  8.2266e-02,  1.7298e-02],
          [-9.8119e-02,  3.9727e-02, -9.8983e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-0.0097, -0.1423, -0.0088],
          [-0.0086, -0.0493, -0.0373],
          [-0.1138,  0.0414, -0.0969]],

         [[-0.1045, -0.0618, -0.0161],
          [ 0.0576,  0.0386, -0.0043],
          [ 0.0602,  0.0543, -0.0152]],

         [[-0.0233, -0.0638,  0.0866],
          [ 0.0755,  0.0525,  0.0017],
          [ 0.0032, -0.0064, -0.0936]],

         ...,

         [[ 0.0738, -0.0559,  0.0445],
          [-0.0272, -0.0569,  0.0081],
          [-0.0873, -0.0769, -0.0925]],

         [[-0.0278, -0.0111,  0.0572],
          [ 0.0082, -0.1396, -0.0402],
          [ 0.0532,  0.0985,  0.0707]],

         [[ 0.0274, -0.1007, -0.0893],
          [ 0.0836, -0.0894, -0.0342],
          [ 0.0246,  0.0763,  0.0066]]],


        [[[-0.0486, -0.0484,  0.0082],
          [-0.0493, -0.0038, -0.0158],
          [ 0.0062, -0.1103, -0.0339]],

         [[-0.0475,  0.0251, -0.0127],
          [ 0.0904,  0.0339, -0.0218],
          [ 0.0381,  0.1134,  0.0886]],

         [[-0.0046,  0.0694,  0.0061],
          [-0.0316, -0.0476,  0.0484],
          [ 0.0278, -0.1221,  0.0900]],

         ...,

         [[ 0.0917, -0.0253, -0.0124],
          [-0.0207,  0.0672,  0.0242],
          [ 0.0047,  0.0033, -0.0168]],

         [[-0.0444, -0.1147,  0.0622],
          [ 0.0086, -0.0062,  0.0382],
          [-0.0052,  0.0534,  0.0167]],

         [[-0.0457, -0.0770,  0.0167],
          [-0.0011,  0.0924, -0.0822],
          [ 0.1495,  0.0029,  0.0223]]],


        [[[-0.0053, -0.0970,  0.0877],
          [-0.0813,  0.0747, -0.1316],
          [ 0.0148, -0.0198,  0.1081]],

         [[-0.0479, -0.0472, -0.0783],
          [ 0.0943,  0.0008,  0.0369],
          [-0.0203,  0.0952,  0.0540]],

         [[-0.0081,  0.1400,  0.0209],
          [-0.0191, -0.0851,  0.1028],
          [-0.0221, -0.0806, -0.0628]],

         ...,

         [[ 0.1470, -0.0806, -0.0797],
          [-0.0312,  0.0065,  0.0557],
          [-0.0474,  0.0697, -0.0408]],

         [[-0.0938,  0.0775,  0.0746],
          [-0.0710, -0.0451,  0.0149],
          [ 0.0487, -0.0742, -0.0228]],

         [[-0.0347, -0.1090, -0.0166],
          [ 0.0127,  0.0079,  0.0946],
          [ 0.0153, -0.0820,  0.0411]]],


        ...,


        [[[-0.0070, -0.0065,  0.0200],
          [ 0.0627,  0.0511, -0.0937],
          [ 0.0212,  0.0586,  0.1199]],

         [[ 0.0093,  0.0296,  0.0941],
          [ 0.0864, -0.0135,  0.0387],
          [-0.0239,  0.0467, -0.0929]],

         [[-0.0300,  0.0765, -0.0431],
          [-0.0286, -0.0597, -0.0116],
          [-0.0403, -0.0467, -0.0567]],

         ...,

         [[-0.0150,  0.0520, -0.0387],
          [-0.0129,  0.0359,  0.0825],
          [ 0.0419,  0.0726, -0.0485]],

         [[-0.0373, -0.0851,  0.0301],
          [-0.0734,  0.0444, -0.0073],
          [-0.0470,  0.0270, -0.0051]],

         [[-0.0395, -0.0666,  0.0400],
          [-0.0690, -0.0175, -0.0574],
          [ 0.0142, -0.0886,  0.0089]]],


        [[[-0.0162,  0.0564, -0.1148],
          [ 0.1630,  0.0133, -0.0201],
          [ 0.1243, -0.1428, -0.0507]],

         [[-0.0080, -0.0387,  0.0650],
          [-0.0075,  0.0918, -0.0044],
          [-0.0144, -0.0310,  0.0010]],

         [[ 0.0228,  0.0004, -0.1226],
          [ 0.0339,  0.0601,  0.0165],
          [ 0.0132,  0.0099, -0.0482]],

         ...,

         [[ 0.1059,  0.0454,  0.0069],
          [ 0.1367, -0.0082,  0.1044],
          [ 0.0916,  0.0667, -0.0385]],

         [[-0.0266,  0.0491, -0.0322],
          [-0.0206, -0.0611, -0.0371],
          [-0.0588, -0.0322,  0.0826]],

         [[-0.1332, -0.0447,  0.0234],
          [-0.0737,  0.0034,  0.0422],
          [ 0.0344, -0.0529, -0.0777]]],


        [[[-0.2127, -0.0186, -0.0583],
          [-0.0248,  0.0320, -0.0481],
          [ 0.0118, -0.0256, -0.0326]],

         [[-0.0025,  0.1024, -0.0131],
          [-0.1133,  0.0485, -0.0249],
          [ 0.0437,  0.0385, -0.0103]],

         [[-0.0653,  0.0381, -0.0008],
          [ 0.0546,  0.0461,  0.0401],
          [-0.0270, -0.1300,  0.1539]],

         ...,

         [[-0.0116, -0.0593,  0.0375],
          [ 0.0708, -0.0144, -0.0797],
          [ 0.0666,  0.0229, -0.0005]],

         [[ 0.0199, -0.0542,  0.1326],
          [ 0.0585, -0.0612,  0.1620],
          [-0.0253, -0.0184, -0.1164]],

         [[ 0.0189, -0.0432, -0.0110],
          [ 0.0334, -0.0288, -0.0427],
          [ 0.0749, -0.0572,  0.0160]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 6.3309e-02, -1.0099e-02, -4.4460e-02],
          [ 1.2766e-01, -1.8574e-02,  5.3192e-02],
          [ 3.4804e-02, -8.1301e-02,  4.6857e-02]],

         [[-1.6124e-02, -6.6399e-02, -3.5237e-03],
          [ 8.3928e-02, -1.1124e-02, -7.0031e-02],
          [ 7.8131e-02, -8.9911e-02,  3.5097e-02]],

         [[ 6.8973e-02,  3.2164e-02, -3.3223e-02],
          [-2.1282e-02, -2.5182e-02, -3.3870e-02],
          [-6.6864e-03, -3.7097e-02,  2.0611e-02]],

         ...,

         [[-6.3384e-02,  7.2037e-02, -6.2122e-02],
          [-5.8509e-02,  2.8343e-02, -4.1717e-02],
          [ 1.1021e-01, -3.7222e-02,  3.9184e-02]],

         [[ 2.8986e-02, -1.0293e-01, -6.4509e-02],
          [ 6.4462e-02,  1.4888e-01, -1.1052e-02],
          [ 1.7530e-01,  4.5718e-02, -5.1598e-02]],

         [[-1.0387e-01,  9.1114e-04, -3.9121e-02],
          [-2.3840e-02,  1.7030e-01, -9.8101e-02],
          [ 3.7531e-02, -2.7407e-02,  5.9290e-02]]],


        [[[ 5.3954e-02, -2.3274e-02, -1.1885e-02],
          [ 8.4218e-02, -8.2058e-02,  1.6856e-02],
          [ 4.3980e-02,  3.9865e-02, -5.0516e-02]],

         [[ 7.5967e-02,  6.7617e-02,  5.3402e-02],
          [ 8.2834e-02,  6.7435e-02,  5.1455e-02],
          [-6.8567e-02, -1.4801e-02,  2.4720e-02]],

         [[-3.6695e-02,  7.1109e-02, -7.0005e-02],
          [-1.8609e-02, -1.2256e-02,  2.6911e-02],
          [ 6.8658e-02,  2.3413e-02,  1.7689e-02]],

         ...,

         [[ 2.6175e-02,  2.8965e-02,  4.5391e-02],
          [-2.3808e-02, -2.3196e-02, -7.0487e-02],
          [-1.4074e-01, -1.1007e-02,  8.0308e-02]],

         [[ 1.0304e-01, -5.6228e-02, -3.4265e-03],
          [-5.9528e-02,  3.7571e-02, -9.4387e-03],
          [-7.7657e-02, -4.8463e-02, -9.6952e-02]],

         [[-9.2908e-02,  3.9263e-02,  9.4318e-02],
          [-2.6341e-02, -1.0293e-01,  4.9979e-02],
          [-8.7533e-03, -9.2766e-03, -2.7913e-02]]],


        [[[-1.4757e-02,  8.9140e-02,  4.3536e-02],
          [-8.0900e-03, -3.2875e-02,  4.0375e-02],
          [-7.5539e-03,  4.5798e-02,  1.4790e-02]],

         [[-2.4943e-02,  3.2809e-02,  4.6773e-02],
          [-5.0032e-02,  1.4925e-01,  9.3381e-02],
          [ 5.7167e-02, -5.7808e-02, -9.5318e-04]],

         [[ 1.2525e-01,  3.0880e-02, -1.5829e-02],
          [-1.5465e-02, -4.4057e-02, -5.3753e-02],
          [ 7.8919e-03, -3.2543e-02, -1.8375e-02]],

         ...,

         [[ 5.2390e-02,  9.2839e-03, -3.0852e-04],
          [-3.1684e-02, -4.7324e-03,  7.3826e-02],
          [-5.2955e-02,  2.1489e-01,  8.4644e-02]],

         [[ 5.3829e-02, -5.4480e-04, -6.2694e-02],
          [ 1.7218e-02, -1.6067e-01, -1.4732e-01],
          [ 1.2206e-02,  3.3478e-02,  4.1819e-03]],

         [[ 8.8142e-03,  9.8001e-02,  2.8717e-02],
          [ 9.0737e-02, -4.4722e-02, -9.7428e-03],
          [ 1.3593e-01,  2.2221e-02, -2.6874e-03]]],


        ...,


        [[[ 1.2013e-01,  4.0192e-02,  9.7513e-02],
          [ 7.2320e-03, -1.1218e-02, -1.8385e-02],
          [ 7.5387e-03,  1.1569e-04,  1.2226e-01]],

         [[-6.1922e-03, -1.2652e-02,  4.5720e-02],
          [-1.2639e-02, -1.1512e-01, -4.1590e-02],
          [-7.6082e-02, -5.4992e-02, -2.0075e-02]],

         [[ 5.9369e-02,  7.5876e-02,  4.0683e-02],
          [-3.3190e-02,  4.7754e-02,  2.3138e-02],
          [-1.1173e-02,  1.9980e-04, -2.3140e-02]],

         ...,

         [[ 3.5255e-02, -6.1387e-03,  3.4933e-02],
          [ 6.9632e-02,  4.8146e-02, -2.2774e-02],
          [ 5.0082e-02, -1.5646e-02,  3.1938e-02]],

         [[-6.8920e-03,  2.8828e-02,  3.7129e-02],
          [-2.4397e-02,  4.1832e-02, -7.5313e-02],
          [-1.1770e-01,  2.4241e-03, -2.9930e-02]],

         [[ 7.3277e-02,  9.8854e-02, -9.7160e-02],
          [-2.9105e-02,  2.6107e-02,  5.0039e-02],
          [ 3.8920e-03,  7.3823e-02, -1.2227e-01]]],


        [[[-1.6665e-03,  8.3957e-02, -3.5502e-02],
          [ 4.6794e-02, -1.3013e-02,  9.7801e-02],
          [-1.4705e-03,  9.2768e-03, -1.3805e-01]],

         [[ 6.5728e-02, -9.6828e-04, -4.9798e-03],
          [-6.2117e-02,  7.0089e-02,  4.6339e-02],
          [ 3.0154e-02,  5.4082e-02, -1.2604e-03]],

         [[ 6.8784e-02,  1.6281e-02,  1.1048e-03],
          [ 6.5884e-02, -7.7342e-02, -9.4437e-02],
          [-6.3907e-02, -1.3992e-02,  6.0287e-02]],

         ...,

         [[-1.0909e-02,  1.0815e-01, -4.7272e-02],
          [-3.8611e-02,  8.4432e-03,  3.1637e-02],
          [ 4.8384e-02, -1.3821e-01, -4.7575e-02]],

         [[-2.9394e-03,  6.6048e-02,  2.1318e-02],
          [-5.7952e-02, -2.7419e-02, -8.2682e-02],
          [ 1.0093e-01,  2.9694e-02,  4.9848e-02]],

         [[-1.4413e-02, -9.9954e-02, -7.6149e-02],
          [-3.1820e-02, -9.4883e-03,  1.8817e-02],
          [-8.8409e-02, -1.3031e-01, -1.9301e-02]]],


        [[[ 7.1168e-02, -2.7578e-02, -2.1953e-02],
          [ 3.6873e-02, -4.8468e-02,  5.7406e-03],
          [-2.7851e-02,  9.8862e-02, -1.2156e-02]],

         [[-9.1612e-02,  5.5645e-02, -2.7945e-02],
          [ 3.1847e-02, -7.8960e-02,  3.5624e-03],
          [ 1.2457e-02, -1.2084e-01,  3.5211e-02]],

         [[-3.0591e-02,  5.6621e-02,  8.3172e-03],
          [ 9.5865e-02,  9.2534e-02,  6.9070e-02],
          [-6.1489e-02, -1.4027e-02, -1.1139e-02]],

         ...,

         [[-1.7658e-02,  2.4293e-02,  1.1167e-01],
          [-7.0116e-02, -8.6689e-02, -5.8678e-02],
          [ 4.0021e-02, -3.1069e-02, -1.0274e-01]],

         [[-9.6068e-02,  7.3488e-02,  5.2817e-02],
          [ 2.6974e-02, -4.9028e-02,  1.3198e-01],
          [ 6.8393e-02,  1.1252e-01,  8.9696e-03]],

         [[-8.1805e-04, -1.9738e-02, -1.5596e-02],
          [ 3.9830e-02,  4.5775e-03,  7.6699e-02],
          [ 1.3645e-04, -3.5434e-02,  7.4158e-03]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.0054]],

         [[ 0.0235]],

         [[ 0.1821]],

         ...,

         [[ 0.1005]],

         [[-0.1967]],

         [[-0.0670]]],


        [[[-0.0525]],

         [[ 0.0747]],

         [[-0.0808]],

         ...,

         [[-0.0659]],

         [[-0.0087]],

         [[-0.0444]]],


        [[[ 0.1130]],

         [[-0.1109]],

         [[-0.1368]],

         ...,

         [[ 0.0193]],

         [[-0.0401]],

         [[ 0.0428]]],


        ...,


        [[[-0.0809]],

         [[ 0.0698]],

         [[-0.0514]],

         ...,

         [[-0.0531]],

         [[-0.0720]],

         [[-0.0723]]],


        [[[-0.0789]],

         [[-0.0177]],

         [[ 0.0379]],

         ...,

         [[ 0.0137]],

         [[ 0.0095]],

         [[ 0.0888]]],


        [[[-0.0558]],

         [[ 0.0689]],

         [[ 0.1094]],

         ...,

         [[ 0.0083]],

         [[-0.0095]],

         [[-0.0536]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-0.0532, -0.0013, -0.0326],
          [-0.0169, -0.0588, -0.0090],
          [ 0.0238, -0.0363,  0.0429]],

         [[-0.0208,  0.0048,  0.0016],
          [-0.0230, -0.0081,  0.1058],
          [ 0.0505,  0.0039, -0.0374]],

         [[ 0.0410,  0.0146,  0.0614],
          [ 0.0094,  0.1053,  0.1096],
          [-0.0287,  0.0849,  0.0907]],

         ...,

         [[-0.0200,  0.0322,  0.0543],
          [-0.0029, -0.1009, -0.0079],
          [-0.0062,  0.0061, -0.0289]],

         [[-0.0114, -0.0071,  0.0175],
          [-0.0011,  0.0034,  0.0506],
          [-0.0843,  0.0732,  0.0163]],

         [[-0.0214, -0.0004, -0.0428],
          [ 0.0324,  0.0297, -0.0033],
          [-0.0289, -0.0885, -0.0847]]],


        [[[ 0.0633,  0.0258,  0.0052],
          [ 0.0134,  0.0469,  0.0048],
          [ 0.0066,  0.0439,  0.0267]],

         [[-0.0198, -0.0196, -0.0406],
          [-0.0158,  0.0128,  0.0008],
          [-0.0065,  0.0239, -0.0619]],

         [[-0.0546,  0.0826, -0.0410],
          [-0.1057,  0.0463, -0.0324],
          [-0.1243,  0.0499, -0.0421]],

         ...,

         [[ 0.1226, -0.0504,  0.0310],
          [-0.0260, -0.0254, -0.0857],
          [ 0.0072,  0.0003, -0.0363]],

         [[ 0.0523, -0.0183, -0.0990],
          [ 0.0071,  0.0533, -0.0457],
          [ 0.0195,  0.0059, -0.0219]],

         [[ 0.0615, -0.0139, -0.0196],
          [-0.0404,  0.0258, -0.0933],
          [ 0.0220,  0.0382,  0.0231]]],


        [[[ 0.0605, -0.0477, -0.0427],
          [ 0.0095, -0.0020, -0.0179],
          [-0.0203,  0.0138,  0.0183]],

         [[-0.0208,  0.1079, -0.0049],
          [-0.0245, -0.0159, -0.0590],
          [-0.0063,  0.0209,  0.0999]],

         [[-0.0700,  0.0116,  0.0125],
          [ 0.0588,  0.0333, -0.0364],
          [-0.0296, -0.0085,  0.0102]],

         ...,

         [[-0.0047, -0.0458,  0.0021],
          [-0.0461,  0.0155, -0.0161],
          [ 0.0266, -0.0297, -0.0586]],

         [[ 0.0443, -0.0226, -0.0539],
          [-0.0632,  0.0137,  0.0804],
          [ 0.0619, -0.0616, -0.0124]],

         [[-0.0311,  0.0183,  0.0471],
          [-0.0733,  0.0272,  0.0198],
          [ 0.0380,  0.0603,  0.0026]]],


        ...,


        [[[ 0.0145, -0.0177, -0.0351],
          [ 0.0606,  0.0516, -0.0539],
          [ 0.0451, -0.0286,  0.0201]],

         [[-0.0892, -0.0322,  0.0475],
          [ 0.0531,  0.0060,  0.0059],
          [-0.0139, -0.1191, -0.0136]],

         [[-0.0013,  0.0248, -0.0106],
          [ 0.0827,  0.0455,  0.0492],
          [ 0.0794,  0.0098, -0.0556]],

         ...,

         [[ 0.0328, -0.0274,  0.0319],
          [-0.0131, -0.0034,  0.0757],
          [ 0.0406,  0.0043, -0.0190]],

         [[-0.0157,  0.1028,  0.0261],
          [-0.0265,  0.0031,  0.0386],
          [-0.0296,  0.0470,  0.0562]],

         [[ 0.0637, -0.0221,  0.0429],
          [ 0.0230, -0.0896,  0.0452],
          [-0.0776, -0.0065, -0.0161]]],


        [[[-0.0007,  0.0208,  0.0174],
          [ 0.0707,  0.0301,  0.0335],
          [ 0.0545, -0.0329, -0.0538]],

         [[ 0.0115, -0.0789, -0.1184],
          [ 0.1025, -0.0493,  0.0340],
          [ 0.0561, -0.0327,  0.0323]],

         [[ 0.0330,  0.0238,  0.0293],
          [ 0.0290,  0.1312,  0.0004],
          [ 0.0089,  0.0332, -0.0127]],

         ...,

         [[ 0.0771,  0.0234, -0.0763],
          [-0.0701, -0.0978,  0.0654],
          [ 0.0387,  0.0649,  0.0004]],

         [[-0.0404, -0.0601,  0.0010],
          [ 0.0241,  0.0170,  0.0388],
          [-0.0813, -0.0026,  0.0349]],

         [[ 0.0431,  0.0224, -0.0435],
          [ 0.0441,  0.0105, -0.0473],
          [ 0.0036,  0.0223, -0.0328]]],


        [[[-0.0360, -0.1188,  0.0208],
          [ 0.0084, -0.0963, -0.1189],
          [-0.0081,  0.1072, -0.0298]],

         [[ 0.0739, -0.0055, -0.0197],
          [ 0.0437, -0.0154, -0.0206],
          [ 0.0078,  0.0488, -0.0327]],

         [[ 0.0333, -0.0679, -0.0646],
          [ 0.0085, -0.0040, -0.0226],
          [ 0.0174,  0.0271,  0.0067]],

         ...,

         [[-0.0798,  0.0535, -0.0316],
          [ 0.0863, -0.0443,  0.0083],
          [-0.0390, -0.0591,  0.0931]],

         [[-0.0254,  0.1081,  0.0038],
          [-0.0886,  0.0821,  0.0358],
          [ 0.0056, -0.0259,  0.0174]],

         [[-0.0291,  0.0020,  0.0157],
          [-0.0331,  0.0540, -0.0093],
          [-0.1003,  0.1384,  0.0651]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 0.0822,  0.0278,  0.0217],
          [ 0.0122,  0.0822,  0.0136],
          [ 0.0307,  0.0214, -0.0869]],

         [[ 0.0227,  0.0390,  0.0753],
          [ 0.0302, -0.0281,  0.0065],
          [ 0.1027,  0.0580,  0.0149]],

         [[ 0.0023,  0.0289,  0.0183],
          [-0.0591, -0.0178,  0.0248],
          [ 0.0388, -0.0304, -0.0487]],

         ...,

         [[-0.0599,  0.0540,  0.0364],
          [ 0.0674, -0.0493,  0.0539],
          [-0.0580,  0.0710, -0.0124]],

         [[ 0.0701,  0.0331,  0.0035],
          [-0.0135,  0.0210, -0.0109],
          [-0.0185, -0.0135, -0.0266]],

         [[-0.0658, -0.0341, -0.0022],
          [-0.0573, -0.0108,  0.1203],
          [ 0.0387,  0.0121,  0.0396]]],


        [[[-0.0127,  0.0092,  0.1027],
          [-0.0096,  0.0182, -0.0477],
          [-0.0121,  0.0294,  0.0483]],

         [[-0.0844,  0.0212, -0.0229],
          [-0.0262, -0.0432, -0.0143],
          [-0.0431,  0.0011, -0.0675]],

         [[-0.0241, -0.0065, -0.0500],
          [ 0.0183, -0.0252, -0.0886],
          [-0.0130, -0.1078, -0.0390]],

         ...,

         [[ 0.0041, -0.0065,  0.0077],
          [ 0.0061,  0.0293, -0.0076],
          [-0.0140, -0.0259,  0.0611]],

         [[-0.0315, -0.1042,  0.1085],
          [-0.1073,  0.0825,  0.0447],
          [-0.0542,  0.0660,  0.0104]],

         [[-0.1228, -0.0014, -0.0335],
          [ 0.0551, -0.0191, -0.0847],
          [-0.0135, -0.0318, -0.0282]]],


        [[[ 0.0111,  0.0240,  0.0197],
          [ 0.0959,  0.0300,  0.0464],
          [ 0.0220,  0.0571,  0.0541]],

         [[ 0.0352,  0.0692,  0.0184],
          [-0.0227,  0.0144, -0.0471],
          [-0.0944,  0.0217, -0.1060]],

         [[-0.0393,  0.0256,  0.0709],
          [-0.0048,  0.0167,  0.0005],
          [-0.0041, -0.0138,  0.1084]],

         ...,

         [[ 0.0665, -0.0321,  0.0038],
          [ 0.0078,  0.0276,  0.0060],
          [ 0.0974,  0.0010,  0.0127]],

         [[ 0.0045,  0.0109,  0.0186],
          [-0.0186,  0.1391, -0.0369],
          [-0.0120, -0.0656, -0.0428]],

         [[ 0.0589,  0.0749, -0.0450],
          [ 0.1070,  0.0017,  0.0130],
          [-0.0555, -0.0234, -0.0176]]],


        ...,


        [[[-0.0463,  0.0441,  0.0206],
          [-0.0628,  0.0523,  0.0276],
          [ 0.0436, -0.0494,  0.0738]],

         [[-0.0789, -0.0850,  0.0459],
          [-0.0441,  0.0160,  0.0048],
          [-0.0043,  0.0218,  0.0206]],

         [[ 0.0502, -0.0062, -0.0052],
          [ 0.0013,  0.0176,  0.0602],
          [-0.1084, -0.0907,  0.0006]],

         ...,

         [[-0.0420, -0.0543, -0.0633],
          [-0.0774,  0.0634, -0.0180],
          [-0.0226,  0.0593,  0.0096]],

         [[ 0.0191, -0.0191,  0.0348],
          [-0.0320,  0.0644,  0.0639],
          [ 0.0425, -0.0664,  0.0524]],

         [[-0.0861,  0.0388, -0.1132],
          [-0.0343,  0.0804, -0.0235],
          [-0.0810,  0.0980, -0.0350]]],


        [[[-0.0689, -0.0263,  0.0383],
          [ 0.0086,  0.0734,  0.0474],
          [-0.0241,  0.0459, -0.0476]],

         [[-0.0058, -0.0372,  0.0107],
          [-0.0221,  0.0595,  0.1033],
          [ 0.0666,  0.0439,  0.1152]],

         [[ 0.0393, -0.0626,  0.0316],
          [-0.0353,  0.0003,  0.0694],
          [-0.0338,  0.0535, -0.0285]],

         ...,

         [[-0.0166,  0.0468,  0.0111],
          [ 0.0217,  0.0597,  0.0062],
          [ 0.0818,  0.0257, -0.0247]],

         [[-0.0532, -0.0039,  0.0505],
          [ 0.0940, -0.0159, -0.0114],
          [ 0.0919,  0.0077, -0.0435]],

         [[ 0.0742, -0.0094, -0.0213],
          [ 0.0488, -0.0471, -0.0092],
          [ 0.0257,  0.0064,  0.0969]]],


        [[[-0.0011,  0.0192,  0.0189],
          [-0.1014, -0.0241,  0.0521],
          [ 0.0905, -0.0952,  0.0814]],

         [[ 0.0640,  0.0445, -0.0642],
          [-0.0101,  0.0025,  0.0356],
          [ 0.0354, -0.0413, -0.0577]],

         [[-0.0814, -0.0789, -0.0065],
          [ 0.0278,  0.0750, -0.0125],
          [-0.0638, -0.0919, -0.0229]],

         ...,

         [[-0.0053,  0.0953, -0.0683],
          [-0.0129,  0.0452, -0.0633],
          [-0.0025, -0.0203,  0.0099]],

         [[ 0.0560, -0.0083,  0.0510],
          [-0.0692,  0.0051, -0.0167],
          [-0.0368,  0.0016,  0.0578]],

         [[ 0.0546,  0.0015,  0.1132],
          [-0.0118,  0.0080,  0.0230],
          [ 0.0723,  0.0137,  0.0472]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.2345]],

         [[ 0.0259]],

         [[ 0.1963]],

         ...,

         [[ 0.1073]],

         [[ 0.0638]],

         [[ 0.0490]]],


        [[[ 0.0094]],

         [[ 0.1294]],

         [[ 0.0441]],

         ...,

         [[ 0.1203]],

         [[-0.0112]],

         [[-0.0389]]],


        [[[ 0.1822]],

         [[-0.0936]],

         [[-0.0137]],

         ...,

         [[ 0.2323]],

         [[-0.0323]],

         [[-0.0105]]],


        ...,


        [[[ 0.0453]],

         [[ 0.2682]],

         [[-0.0684]],

         ...,

         [[-0.0194]],

         [[-0.0648]],

         [[ 0.0279]]],


        [[[ 0.0165]],

         [[-0.1052]],

         [[ 0.1055]],

         ...,

         [[ 0.0030]],

         [[-0.1676]],

         [[-0.0453]]],


        [[[ 0.0607]],

         [[ 0.0085]],

         [[-0.0843]],

         ...,

         [[-0.2635]],

         [[-0.0105]],

         [[ 0.1955]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0668,  0.0284,  0.0367],
          [ 0.0296, -0.0266,  0.0529],
          [ 0.0396, -0.0141,  0.0489]],

         [[ 0.0386,  0.0287,  0.0079],
          [-0.0126, -0.0053, -0.0712],
          [-0.0168,  0.0034, -0.0236]],

         [[-0.0354, -0.0794, -0.0109],
          [-0.0247, -0.0372, -0.0506],
          [ 0.0400, -0.0975,  0.0563]],

         ...,

         [[ 0.0230, -0.0509, -0.0599],
          [ 0.0203,  0.0200,  0.0513],
          [-0.0215,  0.0632,  0.0027]],

         [[-0.0419, -0.0589, -0.0391],
          [-0.0394, -0.0647, -0.0296],
          [ 0.0091, -0.0650, -0.0277]],

         [[ 0.0080,  0.0637,  0.0057],
          [ 0.0046, -0.0640,  0.0583],
          [ 0.0518,  0.0558,  0.0028]]],


        [[[ 0.0304,  0.0385,  0.0367],
          [ 0.0242, -0.0040, -0.0174],
          [ 0.0544,  0.0086,  0.1072]],

         [[ 0.0342,  0.0284, -0.0547],
          [-0.0155,  0.0404, -0.0130],
          [ 0.0963, -0.0102, -0.0188]],

         [[-0.0038, -0.1246,  0.0088],
          [ 0.0364,  0.1211, -0.0433],
          [ 0.0713,  0.0073, -0.0066]],

         ...,

         [[-0.0301, -0.0115, -0.0214],
          [ 0.0881, -0.0085, -0.0402],
          [-0.0058,  0.0609, -0.0423]],

         [[ 0.0887, -0.0112,  0.0041],
          [ 0.0285,  0.0208,  0.0656],
          [ 0.0424, -0.0299,  0.0080]],

         [[-0.0787,  0.0125,  0.0578],
          [ 0.0225, -0.0605, -0.0414],
          [-0.0344, -0.0597,  0.0606]]],


        [[[-0.0198, -0.0005,  0.0030],
          [-0.0190,  0.0174, -0.0649],
          [ 0.0184, -0.0299, -0.0371]],

         [[-0.1515, -0.0676, -0.0670],
          [ 0.0138, -0.0288,  0.0961],
          [ 0.1054, -0.0169,  0.0722]],

         [[ 0.0148, -0.0630,  0.0127],
          [-0.0006, -0.0351,  0.0237],
          [-0.0666, -0.0739,  0.0065]],

         ...,

         [[ 0.0152,  0.0812, -0.0195],
          [-0.0539, -0.0448,  0.0543],
          [-0.0407, -0.0849, -0.1336]],

         [[-0.0443, -0.0430,  0.0281],
          [-0.0209,  0.0640,  0.0392],
          [ 0.0167,  0.0067,  0.0229]],

         [[ 0.0840, -0.0156,  0.0324],
          [-0.0288, -0.0641,  0.0035],
          [-0.0179, -0.0622,  0.0538]]],


        ...,


        [[[-0.0143,  0.0211, -0.0649],
          [-0.0521, -0.0486, -0.0117],
          [ 0.0972, -0.0378,  0.0362]],

         [[-0.0056, -0.0828,  0.0126],
          [ 0.0822, -0.0151, -0.0352],
          [ 0.0647,  0.0462, -0.0610]],

         [[-0.1017,  0.0059, -0.0020],
          [ 0.0369, -0.0382, -0.0381],
          [-0.0117, -0.1253, -0.0021]],

         ...,

         [[-0.0768, -0.0731,  0.0102],
          [ 0.0563, -0.0002, -0.0587],
          [ 0.0241, -0.0535, -0.0351]],

         [[ 0.0815,  0.1027, -0.0967],
          [ 0.0099, -0.0527, -0.0296],
          [ 0.0820, -0.0452,  0.0102]],

         [[-0.0305, -0.0200, -0.0191],
          [ 0.0324, -0.0486,  0.0141],
          [ 0.0201,  0.0547, -0.0445]]],


        [[[ 0.0403,  0.0105,  0.0716],
          [ 0.0118,  0.0417,  0.0065],
          [ 0.0410,  0.0946, -0.0217]],

         [[ 0.0421,  0.0954, -0.0408],
          [-0.0198, -0.0125, -0.0444],
          [-0.0282, -0.0954,  0.0694]],

         [[-0.0425,  0.0256, -0.0127],
          [-0.0128,  0.0836,  0.0090],
          [ 0.0489,  0.0750,  0.0660]],

         ...,

         [[-0.0525,  0.0006,  0.0693],
          [ 0.0919,  0.1058,  0.0612],
          [-0.0287,  0.0025,  0.0875]],

         [[ 0.0569,  0.0051, -0.0434],
          [ 0.0066, -0.0296, -0.0223],
          [ 0.0922, -0.0166,  0.0039]],

         [[-0.0012,  0.0113, -0.0460],
          [-0.0369,  0.0622,  0.0462],
          [ 0.0195,  0.0133, -0.0627]]],


        [[[-0.0472, -0.0480,  0.0275],
          [-0.0494,  0.0279,  0.0815],
          [-0.1023, -0.0236, -0.0379]],

         [[ 0.0416, -0.0185, -0.0438],
          [ 0.0218,  0.0268,  0.0763],
          [-0.0581,  0.0087, -0.0599]],

         [[ 0.0359,  0.0323, -0.0438],
          [ 0.0164,  0.0353,  0.0256],
          [-0.0219, -0.0426, -0.0905]],

         ...,

         [[-0.0190,  0.0793,  0.0919],
          [-0.0097,  0.0753,  0.0245],
          [ 0.0415,  0.0402, -0.0075]],

         [[-0.0721,  0.1065, -0.0762],
          [-0.0137,  0.0059,  0.0256],
          [-0.0525, -0.0418, -0.0447]],

         [[-0.0768,  0.1416,  0.0602],
          [-0.0532, -0.0013, -0.0265],
          [-0.0133,  0.0636,  0.0107]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-6.8035e-02, -7.3370e-02,  4.1061e-02],
          [ 5.3979e-02, -1.3060e-02, -5.8241e-02],
          [ 1.6257e-02, -1.8659e-02, -2.3592e-02]],

         [[ 3.2092e-02,  4.1012e-03, -1.7004e-03],
          [ 5.0840e-02,  5.9197e-04, -2.9634e-02],
          [-6.2694e-02,  4.0554e-02, -4.3801e-02]],

         [[ 5.2048e-02, -2.3853e-02, -7.3360e-03],
          [ 7.3542e-02,  6.8937e-02, -2.4619e-02],
          [-2.5594e-02,  5.6328e-02,  4.7662e-03]],

         ...,

         [[ 3.8296e-02,  5.2690e-03, -8.4078e-02],
          [-1.5613e-02,  1.9143e-03,  7.5562e-02],
          [-5.0836e-02,  5.9859e-02, -2.8398e-02]],

         [[ 5.0606e-02, -6.1887e-02, -4.6971e-03],
          [-2.1032e-02,  5.7056e-03, -3.6477e-02],
          [-4.2665e-04, -3.0832e-02,  2.5832e-02]],

         [[-5.2074e-02,  2.3794e-03, -6.3393e-02],
          [-2.2318e-02,  1.6660e-02,  1.5204e-03],
          [ 7.0929e-02, -2.2750e-02, -1.4086e-02]]],


        [[[ 1.7349e-02, -4.4686e-02,  6.5858e-02],
          [-6.0080e-03, -7.5224e-03,  3.1366e-02],
          [ 1.5570e-02, -4.7281e-03,  5.6399e-02]],

         [[-2.0708e-02,  6.6224e-02,  3.5497e-02],
          [-1.8957e-02, -5.2043e-02,  3.0202e-02],
          [ 5.7185e-02,  4.9197e-02,  1.4465e-02]],

         [[-9.2238e-03, -2.0302e-02, -3.0625e-02],
          [ 2.5482e-02, -1.8642e-02,  1.3612e-02],
          [-6.1330e-02,  8.4724e-02,  4.0809e-02]],

         ...,

         [[ 4.4312e-02,  4.1344e-02,  1.5272e-02],
          [-1.9341e-02, -2.8786e-03,  5.9631e-02],
          [ 4.1066e-02, -9.7393e-05,  4.7920e-03]],

         [[ 5.6196e-02,  6.0050e-03,  2.1862e-02],
          [-6.1790e-02,  2.0815e-02,  2.0507e-02],
          [ 3.6719e-02, -5.3995e-02,  3.4213e-02]],

         [[-5.7112e-02,  8.8254e-02, -8.7414e-03],
          [ 1.4051e-02, -9.8313e-02,  2.7914e-02],
          [-7.3133e-02,  6.0892e-03, -1.0924e-02]]],


        [[[ 1.8335e-02, -4.7945e-03, -3.0378e-02],
          [-1.0952e-02, -2.0575e-02, -8.2637e-02],
          [-1.6561e-02, -7.7033e-02,  3.1167e-02]],

         [[-3.1661e-02,  2.0934e-02,  3.2147e-02],
          [ 5.9777e-03, -4.0951e-02,  4.4597e-02],
          [ 4.5086e-02,  5.6998e-02, -2.8526e-02]],

         [[-2.6966e-02,  8.5384e-02,  5.1806e-02],
          [ 2.9504e-02, -3.3177e-02, -5.5778e-02],
          [ 4.8778e-02, -1.5469e-02, -6.1760e-02]],

         ...,

         [[-2.1703e-02, -2.4615e-02, -7.0445e-03],
          [ 1.3726e-02, -3.6578e-02, -6.0210e-03],
          [ 4.7817e-02,  6.0658e-02, -2.1547e-02]],

         [[-5.5401e-02, -1.0170e-02,  2.6967e-02],
          [-2.0059e-02,  4.9622e-02,  3.2908e-02],
          [-3.1474e-02, -3.2371e-02,  5.9909e-02]],

         [[-4.1737e-02, -2.1126e-02,  3.2485e-02],
          [-9.2633e-02,  3.2808e-02, -4.7628e-02],
          [ 1.9219e-04,  8.4346e-02,  4.1710e-02]]],


        ...,


        [[[-3.9410e-02, -1.1816e-02,  1.0021e-01],
          [ 3.1879e-02,  3.1388e-02, -8.1078e-02],
          [-9.7509e-02,  1.2861e-01,  1.0786e-01]],

         [[-9.2239e-03,  3.5778e-02,  3.6556e-02],
          [ 3.0782e-03,  5.0498e-02,  5.3313e-02],
          [-2.9095e-02,  9.5006e-03, -3.9704e-02]],

         [[ 6.6956e-03,  2.9099e-02,  1.7327e-02],
          [ 1.9142e-02, -2.9867e-02,  1.6409e-02],
          [ 1.5494e-02, -5.2032e-02,  1.2410e-02]],

         ...,

         [[ 1.2050e-02, -3.1119e-02,  2.5939e-02],
          [-5.9951e-02, -5.0241e-02,  9.4828e-02],
          [ 9.1292e-02,  1.7916e-01, -9.3973e-02]],

         [[-6.1068e-02, -1.1161e-02, -3.0775e-02],
          [-5.7757e-02, -1.5987e-02,  2.8466e-02],
          [-5.4607e-02,  4.6954e-02,  6.0201e-02]],

         [[ 8.2412e-04,  2.8914e-02,  1.2390e-02],
          [ 1.3853e-02, -1.9490e-02,  3.6674e-02],
          [-5.9575e-03, -6.9921e-02, -8.5320e-03]]],


        [[[ 9.0429e-03,  3.7611e-03, -7.3529e-02],
          [ 2.2972e-02,  4.1859e-02, -7.5219e-02],
          [ 2.0096e-02,  7.3148e-02, -1.5137e-02]],

         [[-3.6642e-02,  1.1032e-01, -5.7900e-03],
          [ 2.2851e-02, -8.6983e-03, -3.5461e-02],
          [-7.9420e-03, -3.4111e-02,  5.8666e-02]],

         [[ 5.3338e-02,  4.0448e-03, -5.4741e-02],
          [ 4.0296e-03,  1.0460e-01,  1.2207e-02],
          [ 6.6695e-03, -3.0387e-02, -1.2921e-01]],

         ...,

         [[-5.3599e-02,  6.8142e-02,  6.6770e-03],
          [ 3.9661e-02, -4.3888e-03, -1.1054e-01],
          [ 2.4611e-03, -3.3991e-03,  4.1160e-03]],

         [[ 6.0287e-02,  9.4174e-03,  3.2462e-02],
          [-1.4895e-02, -1.1949e-02,  5.3244e-02],
          [-6.9831e-02,  1.8168e-04, -2.3550e-02]],

         [[-3.3176e-02, -6.1385e-02, -1.1925e-01],
          [ 1.1795e-02,  2.0775e-02, -3.0391e-02],
          [ 4.6374e-02, -5.4999e-02,  1.7120e-02]]],


        [[[-5.7728e-02, -4.5970e-02, -2.2969e-02],
          [-1.2479e-02, -3.2002e-02, -9.9171e-02],
          [ 1.1782e-02, -6.2402e-02, -3.0065e-02]],

         [[ 1.0412e-02, -1.9977e-02, -9.8653e-02],
          [-4.3553e-02, -1.6116e-02,  4.7123e-02],
          [-4.0277e-02,  5.4891e-03, -2.2064e-02]],

         [[-5.2798e-02,  5.4721e-02,  2.5853e-02],
          [ 7.1897e-03,  4.7361e-03,  2.7247e-02],
          [ 6.1247e-02,  7.8078e-02, -2.9407e-02]],

         ...,

         [[-1.2540e-02,  5.6605e-02,  4.7403e-02],
          [-8.2104e-03,  3.3796e-03,  4.0698e-02],
          [-4.3074e-02, -7.3038e-02,  4.6992e-02]],

         [[-1.2338e-02, -2.2918e-02,  6.6165e-02],
          [ 5.6077e-03,  6.0940e-03,  3.8739e-02],
          [ 1.0031e-02,  1.6910e-02, -1.8180e-02]],

         [[ 5.4726e-02, -9.6905e-02,  1.3730e-02],
          [ 1.7460e-02,  9.6661e-02,  3.8640e-02],
          [ 1.2853e-01,  2.3724e-02,  2.9126e-02]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-0.0364,  0.0207, -0.0012],
          [-0.0308, -0.1066,  0.0015],
          [-0.0301, -0.0272,  0.0464]],

         [[ 0.0072,  0.0266,  0.0628],
          [ 0.0167,  0.0644, -0.0259],
          [ 0.0397,  0.0245, -0.0338]],

         [[ 0.0258, -0.0032,  0.0049],
          [-0.0795,  0.0179, -0.0329],
          [ 0.0550,  0.0504,  0.0580]],

         ...,

         [[-0.0505,  0.0056,  0.0340],
          [ 0.0183, -0.0109,  0.0833],
          [-0.0285, -0.0286,  0.0956]],

         [[ 0.0182,  0.0674, -0.0020],
          [ 0.0136, -0.0047,  0.0318],
          [-0.0347,  0.0734, -0.0493]],

         [[-0.0297, -0.0574, -0.0313],
          [ 0.0195,  0.0353, -0.0059],
          [ 0.0442,  0.0080, -0.0274]]],


        [[[ 0.0795,  0.0028, -0.0079],
          [-0.0479,  0.0083,  0.0522],
          [-0.0444,  0.0542, -0.0130]],

         [[ 0.0239, -0.0721, -0.0256],
          [ 0.0074,  0.0093, -0.0319],
          [ 0.0071, -0.1015, -0.0024]],

         [[-0.0277,  0.0475, -0.0115],
          [ 0.0211,  0.0662, -0.0465],
          [-0.0008, -0.0075, -0.0269]],

         ...,

         [[ 0.0090, -0.0112,  0.0301],
          [ 0.0052, -0.0602, -0.0057],
          [ 0.0474,  0.0095, -0.0175]],

         [[-0.0033,  0.0014, -0.0768],
          [ 0.0470, -0.0063, -0.0330],
          [-0.0257,  0.0067,  0.0414]],

         [[ 0.0152, -0.0364,  0.0258],
          [ 0.0921,  0.0087, -0.0175],
          [ 0.0071, -0.0102, -0.0078]]],


        [[[-0.0470,  0.0236, -0.0170],
          [ 0.0103, -0.0187,  0.0067],
          [-0.0053, -0.0131, -0.0647]],

         [[ 0.0542,  0.0259,  0.0289],
          [ 0.0055,  0.0528,  0.0128],
          [ 0.0568, -0.0066, -0.0367]],

         [[ 0.0296,  0.0045, -0.0317],
          [ 0.0260,  0.0297,  0.0623],
          [-0.0053, -0.0158, -0.0184]],

         ...,

         [[ 0.0141,  0.0288, -0.0163],
          [-0.0359,  0.0229, -0.0236],
          [-0.0365, -0.0375, -0.0395]],

         [[-0.0557, -0.0035,  0.0317],
          [-0.0044, -0.0050, -0.0712],
          [ 0.0015, -0.0197, -0.0740]],

         [[ 0.0159,  0.0317, -0.0231],
          [ 0.0130,  0.0173,  0.0620],
          [ 0.0163,  0.0180, -0.0622]]],


        ...,


        [[[ 0.0353, -0.0588,  0.0307],
          [-0.0063,  0.0177,  0.0254],
          [-0.0414, -0.0460,  0.0818]],

         [[-0.0873, -0.0283, -0.0164],
          [ 0.0472, -0.0048, -0.0184],
          [-0.0075,  0.0998, -0.0486]],

         [[ 0.0302,  0.0163, -0.0663],
          [-0.0171,  0.0235,  0.0534],
          [-0.0806,  0.0127, -0.0002]],

         ...,

         [[ 0.0456, -0.0743,  0.0087],
          [-0.0516,  0.0116,  0.0159],
          [ 0.0462, -0.0855, -0.0352]],

         [[ 0.0111, -0.0096, -0.0712],
          [-0.0509,  0.0161,  0.0364],
          [-0.0608, -0.0059,  0.0418]],

         [[ 0.0023, -0.0736, -0.0521],
          [ 0.0110,  0.0427,  0.0450],
          [-0.0104,  0.0241, -0.0200]]],


        [[[-0.0451, -0.0201,  0.0396],
          [ 0.0076,  0.0042,  0.0540],
          [ 0.0127, -0.0167,  0.0576]],

         [[-0.0784, -0.0409,  0.0418],
          [-0.0045, -0.0060, -0.0040],
          [-0.0310, -0.0258,  0.0232]],

         [[ 0.0403,  0.0390,  0.0395],
          [-0.0759,  0.0280, -0.0159],
          [-0.0314,  0.0521, -0.0324]],

         ...,

         [[ 0.0465, -0.0155,  0.0267],
          [ 0.0137,  0.0198, -0.0782],
          [-0.0836, -0.0879, -0.0966]],

         [[ 0.0433,  0.0351, -0.0266],
          [ 0.0308,  0.0011, -0.0884],
          [-0.0482, -0.0328,  0.0116]],

         [[-0.0155, -0.0219,  0.0521],
          [ 0.0137, -0.0333,  0.0413],
          [-0.0057,  0.0377,  0.0099]]],


        [[[ 0.0079, -0.0016, -0.0324],
          [ 0.0313,  0.0223,  0.0629],
          [ 0.0120, -0.0448,  0.0021]],

         [[-0.0266,  0.1046,  0.0525],
          [-0.0603, -0.0113,  0.0497],
          [ 0.0163, -0.0672,  0.0632]],

         [[ 0.0342,  0.0400, -0.0291],
          [-0.0471,  0.1053, -0.0229],
          [ 0.0082, -0.0023, -0.0206]],

         ...,

         [[ 0.0507, -0.0095, -0.0041],
          [-0.0462,  0.0467,  0.0403],
          [-0.0137, -0.0096,  0.0179]],

         [[ 0.0584, -0.0492,  0.0209],
          [ 0.0195, -0.0525,  0.0353],
          [ 0.0294, -0.0610,  0.0391]],

         [[-0.0441, -0.0116,  0.0351],
          [ 0.0296,  0.0052,  0.0516],
          [ 0.0042,  0.0003,  0.0547]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-2.0816e-02, -2.6096e-02,  2.9364e-02],
          [-4.7738e-02,  7.5916e-02, -9.7431e-03],
          [ 2.8736e-02, -2.0316e-02, -1.1570e-02]],

         [[-3.8833e-02,  2.3591e-02, -1.0690e-02],
          [ 3.2585e-02, -1.5502e-02, -9.0307e-03],
          [ 4.4779e-02, -4.0836e-03,  3.6847e-02]],

         [[ 1.2766e-02,  5.4929e-02, -2.5497e-02],
          [ 3.3608e-02,  5.8377e-02,  1.9646e-02],
          [-5.0403e-03,  3.9960e-02,  3.3279e-02]],

         ...,

         [[-2.7942e-03, -2.2592e-02, -5.9712e-02],
          [-6.5157e-02, -4.4218e-02,  2.6779e-02],
          [-2.9162e-02, -1.1102e-01,  1.7604e-02]],

         [[ 5.0842e-02,  4.2109e-03,  3.4547e-02],
          [-3.3089e-02, -2.4464e-02, -4.2892e-03],
          [ 2.5739e-02, -1.3921e-02, -6.6353e-02]],

         [[-3.0196e-02, -9.1937e-02, -1.8744e-02],
          [-4.7126e-02, -8.6931e-02, -3.7624e-02],
          [ 5.0107e-02, -5.2572e-02, -3.6437e-02]]],


        [[[ 3.3074e-02,  9.2762e-03,  1.3556e-02],
          [ 1.7271e-02,  1.1048e-02, -2.1666e-02],
          [-1.0071e-03, -1.9374e-02,  3.5639e-02]],

         [[ 2.0788e-02,  2.2583e-02, -2.5751e-03],
          [ 1.4306e-02,  3.7702e-02, -1.0493e-03],
          [ 5.7891e-02,  1.2868e-02, -4.1156e-02]],

         [[-1.8268e-02, -9.1152e-02, -2.7207e-02],
          [-4.6153e-02, -2.2401e-02,  4.8804e-03],
          [ 4.7883e-02,  4.9005e-02, -2.7215e-02]],

         ...,

         [[ 1.3763e-02,  3.1477e-02,  2.7669e-02],
          [ 1.7061e-02, -2.3414e-02,  1.4204e-02],
          [ 6.4903e-03,  2.6742e-02, -6.3909e-02]],

         [[-5.0526e-02,  8.2017e-02,  7.6448e-03],
          [ 1.5358e-02, -9.7982e-03, -1.8773e-02],
          [-1.4201e-02, -2.2322e-02, -1.6316e-02]],

         [[ 2.0518e-02,  1.7625e-02, -4.9745e-03],
          [-3.7860e-02,  6.3845e-02, -4.2477e-02],
          [ 2.8722e-02, -1.8862e-02,  3.6128e-03]]],


        [[[-1.1725e-02,  1.4872e-02,  1.6150e-02],
          [ 1.0511e-02,  9.1867e-03, -1.3298e-02],
          [-1.0350e-01, -3.9310e-02,  9.4253e-04]],

         [[ 1.1613e-02,  4.5248e-02, -4.3070e-02],
          [-7.6549e-03, -9.9670e-03,  1.0126e-01],
          [ 4.6757e-02,  8.0543e-02,  6.8418e-02]],

         [[-7.6627e-03, -2.5971e-02, -4.4685e-02],
          [ 3.4560e-02,  2.9863e-02, -1.3390e-01],
          [ 2.6466e-02, -1.0683e-02, -2.0362e-02]],

         ...,

         [[-2.8841e-02,  1.7563e-03, -4.3280e-02],
          [-1.2227e-03,  1.7187e-02,  2.3773e-02],
          [ 5.7891e-02,  5.5254e-02, -3.3672e-03]],

         [[ 1.6741e-02, -1.4026e-02,  2.4742e-02],
          [ 2.9688e-02,  8.2458e-03, -1.0925e-02],
          [-2.1601e-02,  1.0257e-02, -1.4476e-02]],

         [[-4.5256e-02, -1.9685e-02,  6.4571e-03],
          [ 1.9087e-02,  2.6978e-02, -5.3049e-02],
          [ 7.7530e-03,  2.5137e-02,  3.3223e-03]]],


        ...,


        [[[ 1.9369e-02, -6.6827e-02,  8.0205e-04],
          [-1.6758e-02,  6.5332e-02,  2.7214e-02],
          [ 8.6898e-03, -5.8452e-03, -2.7493e-02]],

         [[-2.8876e-02,  3.3907e-02, -1.3703e-02],
          [ 2.8144e-02, -1.8885e-02, -7.4457e-03],
          [-1.9795e-02, -5.1901e-02, -3.6937e-02]],

         [[-2.1667e-02, -3.9191e-02,  3.0850e-02],
          [-1.6422e-03, -1.0020e-01, -4.1975e-02],
          [ 3.3200e-02,  2.2730e-02, -4.6711e-02]],

         ...,

         [[ 6.5452e-03, -2.6075e-02, -9.9146e-03],
          [-5.9935e-02, -2.1103e-03,  7.0962e-02],
          [ 6.9902e-03,  1.0168e-04,  5.3839e-02]],

         [[ 9.9490e-03, -1.7717e-02,  6.5270e-02],
          [-3.9471e-02,  2.2120e-02,  4.0454e-02],
          [-1.2508e-02, -1.8787e-02,  1.2542e-02]],

         [[-6.0417e-02, -9.0676e-03, -6.7656e-02],
          [-3.0909e-02, -2.1293e-02,  3.8262e-02],
          [ 2.5135e-02, -4.0474e-02, -6.1069e-02]]],


        [[[ 6.3081e-02,  5.8776e-02, -1.3277e-02],
          [ 6.9841e-02,  4.0129e-02,  8.4559e-03],
          [ 1.4472e-02,  7.2754e-04,  7.4727e-02]],

         [[-4.2839e-02,  1.3506e-02, -1.0103e-02],
          [-2.3354e-02, -1.2311e-03,  8.3066e-02],
          [-4.1433e-02,  1.9427e-03,  4.4168e-02]],

         [[ 6.7039e-02, -1.0146e-02, -2.0562e-02],
          [-6.4647e-02,  4.8723e-02,  2.0170e-02],
          [-3.0805e-02,  1.3047e-02, -2.6456e-02]],

         ...,

         [[ 1.3734e-02, -1.5334e-02,  1.4140e-03],
          [ 9.5801e-02,  5.6523e-02, -2.4803e-02],
          [ 1.4492e-02,  6.8272e-02, -4.3988e-03]],

         [[-4.6342e-02, -1.0781e-02, -1.6913e-02],
          [ 1.6171e-02, -3.9294e-02, -4.5304e-02],
          [ 5.0129e-02, -1.3984e-02,  6.7810e-02]],

         [[-8.2606e-02, -5.5356e-02,  1.6939e-02],
          [-6.2662e-02, -5.4778e-02, -4.3347e-02],
          [-2.3936e-02, -3.5181e-02, -6.0339e-03]]],


        [[[-5.7496e-02,  3.6029e-02,  2.1201e-02],
          [ 3.2313e-02,  5.5192e-02, -3.5401e-02],
          [ 5.7016e-02, -5.3288e-02,  6.4653e-02]],

         [[ 1.0883e-03, -1.5221e-02,  6.1066e-02],
          [ 7.1235e-02, -1.6994e-02,  3.1051e-02],
          [-3.7603e-03,  1.7907e-02, -3.6942e-02]],

         [[-1.8013e-02,  1.4163e-02, -2.8304e-03],
          [ 4.7217e-03, -6.5115e-02,  4.9210e-03],
          [ 8.1309e-03,  4.8948e-02, -1.5448e-04]],

         ...,

         [[ 2.0657e-02, -5.3788e-02,  5.6322e-02],
          [ 7.0873e-02,  1.6253e-02, -7.0412e-02],
          [-2.2814e-02,  5.9644e-03,  7.6558e-02]],

         [[ 1.3242e-02,  4.8408e-02, -2.6006e-02],
          [ 8.1900e-03,  7.3635e-03, -1.5181e-02],
          [ 6.5595e-02,  4.2054e-02,  8.3054e-02]],

         [[ 4.3232e-03,  8.7702e-02, -1.0601e-01],
          [-4.3182e-03, -5.9517e-02,  1.7640e-02],
          [-3.0950e-02, -7.7437e-03,  2.6593e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.1746]],

         [[ 0.2457]],

         [[ 0.1478]],

         ...,

         [[ 0.0025]],

         [[-0.0164]],

         [[-0.0331]]],


        [[[ 0.0450]],

         [[-0.2301]],

         [[-0.2079]],

         ...,

         [[-0.1096]],

         [[-0.0678]],

         [[ 0.1005]]],


        [[[-0.0961]],

         [[ 0.2427]],

         [[-0.0656]],

         ...,

         [[ 0.0326]],

         [[-0.0177]],

         [[ 0.0888]]],


        ...,


        [[[ 0.1814]],

         [[-0.0509]],

         [[-0.1295]],

         ...,

         [[-0.1003]],

         [[-0.0426]],

         [[ 0.0362]]],


        [[[-0.0710]],

         [[ 0.1223]],

         [[-0.0464]],

         ...,

         [[-0.0816]],

         [[-0.0541]],

         [[-0.3698]]],


        [[[ 0.0063]],

         [[-0.1605]],

         [[ 0.0037]],

         ...,

         [[-0.1029]],

         [[-0.1018]],

         [[-0.0339]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-8.0991e-02,  7.9017e-02, -1.4350e-02],
          [-2.1840e-02, -7.5490e-03, -3.0827e-02],
          [ 2.5098e-02,  5.0128e-02, -4.5289e-02]],

         [[ 3.0052e-02,  1.9288e-02, -7.6971e-02],
          [ 2.8271e-02,  4.1733e-03,  6.5371e-02],
          [ 2.4019e-03,  1.1694e-03,  4.6648e-02]],

         [[-4.1252e-02,  4.1743e-02,  3.0902e-02],
          [ 8.3830e-02, -9.5784e-03, -5.3941e-03],
          [-3.8644e-02,  3.9296e-02,  8.0077e-03]],

         ...,

         [[-4.3221e-02,  4.4002e-02,  4.1999e-02],
          [ 2.8821e-02, -1.7181e-03, -4.6595e-02],
          [ 2.6473e-02,  2.6995e-02,  1.0456e-02]],

         [[ 2.1751e-02,  3.8652e-02,  5.1183e-02],
          [ 1.1571e-02, -3.3707e-02,  8.0147e-02],
          [ 1.0504e-02, -2.4810e-02, -2.0385e-02]],

         [[ 3.6582e-02, -2.5390e-02, -3.2106e-02],
          [ 1.3614e-02, -4.9212e-02, -4.1277e-02],
          [-3.4290e-02,  5.0446e-02, -2.9133e-02]]],


        [[[-1.9527e-02,  4.4960e-02, -2.5677e-02],
          [-1.2303e-02, -4.1983e-02, -4.6041e-02],
          [-3.3381e-02, -5.2503e-02,  4.5155e-02]],

         [[-4.4140e-02,  2.1004e-02, -1.2083e-02],
          [ 9.2254e-02,  7.3866e-03, -3.2746e-02],
          [-6.4357e-02, -1.2626e-02,  2.4340e-02]],

         [[-4.3402e-03, -6.1266e-02, -2.4027e-02],
          [ 3.0091e-02,  8.8057e-03, -3.0420e-03],
          [ 5.2943e-02,  3.1904e-02, -4.1747e-02]],

         ...,

         [[ 1.6513e-02, -1.5186e-02,  2.3352e-02],
          [ 4.8041e-02,  1.6260e-02, -4.3472e-02],
          [ 3.0583e-03, -6.1882e-02,  7.7861e-02]],

         [[-3.3708e-02, -2.4406e-02,  1.2163e-02],
          [-9.3650e-03, -7.9136e-03,  5.8485e-02],
          [ 3.7994e-02, -3.6584e-02, -5.1139e-02]],

         [[-3.5894e-02, -3.8824e-04, -5.0670e-02],
          [ 4.2292e-02,  7.0219e-02,  2.7287e-02],
          [ 1.5091e-02, -3.4879e-02, -3.4247e-02]]],


        [[[ 1.7182e-02, -2.7682e-02,  2.5271e-02],
          [-3.6194e-02, -2.4139e-02,  1.1604e-02],
          [-3.6978e-02, -5.7926e-02, -6.1456e-02]],

         [[ 6.8564e-03,  1.3258e-02, -2.8188e-03],
          [-3.0020e-02,  2.6146e-02, -2.6256e-02],
          [ 4.3627e-02, -5.8535e-03,  7.4173e-03]],

         [[ 2.0433e-02,  7.2583e-02, -2.8538e-02],
          [-4.2029e-05, -7.5210e-02,  9.0213e-02],
          [-4.9704e-03,  7.1125e-03,  2.3216e-02]],

         ...,

         [[ 1.1513e-02, -2.0030e-02,  1.4338e-02],
          [ 2.6497e-02, -2.2393e-02, -9.3393e-02],
          [-4.5395e-02,  8.5474e-02, -4.4400e-02]],

         [[-6.1874e-03, -4.5844e-02,  3.2576e-02],
          [ 3.1630e-02,  2.3808e-02, -1.0712e-02],
          [-8.9556e-02,  6.0461e-02, -2.9604e-02]],

         [[ 7.9248e-03,  2.6684e-02, -4.7649e-02],
          [-1.5453e-03, -2.8127e-02,  1.0335e-02],
          [-1.6797e-02,  3.1791e-02,  1.2826e-03]]],


        ...,


        [[[-8.3719e-02, -8.0689e-02,  3.0204e-03],
          [-6.6560e-02,  4.7827e-02, -5.3480e-02],
          [ 6.9846e-02,  6.2386e-04,  7.1790e-02]],

         [[ 9.4579e-06, -3.2821e-02,  2.5632e-02],
          [-4.3466e-02,  1.4196e-02, -1.4582e-02],
          [ 5.8477e-02,  8.9288e-02, -7.9501e-02]],

         [[ 1.8438e-02,  5.9048e-02,  2.0851e-02],
          [ 1.2842e-02,  2.0520e-02,  5.6764e-02],
          [-1.3381e-02, -1.5402e-02,  9.7958e-02]],

         ...,

         [[ 2.9591e-02, -2.5932e-02,  1.1508e-02],
          [-1.0670e-02,  1.7272e-02, -5.9254e-02],
          [ 1.2987e-02, -5.4957e-02,  1.4218e-02]],

         [[ 3.6060e-03, -1.8359e-02, -1.3945e-02],
          [-1.0413e-02, -3.2368e-02,  1.3148e-02],
          [-1.5532e-02,  1.2938e-02,  2.0002e-02]],

         [[ 1.5443e-02, -1.8073e-02,  5.1110e-03],
          [ 6.1628e-02, -5.9113e-02, -8.0986e-02],
          [-6.2867e-02, -9.3061e-02,  5.4623e-02]]],


        [[[-2.0506e-02,  3.4588e-02, -3.7705e-02],
          [-3.3563e-02, -3.9059e-02, -4.6188e-02],
          [-2.9530e-03, -3.3809e-02,  7.3547e-02]],

         [[-4.1005e-02, -1.8408e-02,  3.7378e-02],
          [-8.8769e-02,  7.8781e-02, -2.6034e-02],
          [-9.0549e-03, -4.9826e-02, -7.7182e-03]],

         [[ 2.9853e-02, -2.2574e-02, -5.9484e-02],
          [-1.0993e-01,  1.1143e-01, -2.2624e-02],
          [ 3.6314e-02,  3.3442e-02, -5.4956e-02]],

         ...,

         [[-1.5720e-02, -1.6509e-02,  3.7859e-02],
          [ 7.4943e-02, -1.9653e-02, -8.1402e-02],
          [ 1.7017e-02, -5.5898e-04,  5.6825e-02]],

         [[-4.2472e-02, -2.5617e-02, -2.7357e-02],
          [-2.0474e-02,  4.2691e-02, -6.3653e-02],
          [-6.4726e-02,  3.1660e-02, -5.7464e-02]],

         [[-1.6980e-02,  5.9063e-03, -5.1177e-02],
          [-3.7477e-02, -4.7080e-02,  4.9027e-02],
          [-1.1983e-01,  1.0498e-02, -2.5960e-02]]],


        [[[-5.3304e-02, -4.9445e-02,  1.4377e-02],
          [-1.4333e-03,  3.3586e-02, -4.5261e-02],
          [ 1.2606e-02, -8.1942e-02, -2.9162e-02]],

         [[-2.6303e-02, -4.3634e-02, -1.3373e-02],
          [ 7.5915e-02,  2.1418e-02, -5.2800e-02],
          [ 7.3413e-02,  7.5881e-02, -8.0008e-03]],

         [[ 5.2963e-02,  1.1874e-02,  7.5550e-04],
          [ 6.4841e-03, -4.2925e-02, -1.2894e-02],
          [ 6.4051e-02, -3.8346e-02, -7.7679e-02]],

         ...,

         [[ 3.5221e-02,  6.2326e-02, -9.6182e-02],
          [ 3.4527e-02,  4.2678e-03,  2.3362e-03],
          [-6.7429e-02, -5.8288e-03, -4.5480e-02]],

         [[-3.1628e-02, -2.1794e-02, -1.7790e-02],
          [ 2.8444e-03, -2.1166e-02, -7.3061e-02],
          [-4.5289e-02,  3.9581e-03,  5.5639e-02]],

         [[-2.6761e-02,  1.8324e-02,  4.9499e-02],
          [ 1.1877e-02, -7.4194e-02, -2.5261e-02],
          [-5.5720e-02, -1.1627e-01, -3.2206e-03]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-7.5542e-02,  3.9506e-03, -6.7461e-02],
          [-1.6554e-02, -5.7507e-03, -2.5923e-02],
          [-1.1977e-02,  7.9577e-03,  2.3573e-02]],

         [[-1.3419e-02, -8.5196e-03, -1.8709e-02],
          [ 7.0521e-02,  2.8529e-02, -1.9933e-02],
          [-7.0587e-02,  5.0581e-02,  6.7049e-03]],

         [[ 4.1078e-02, -5.6728e-02,  3.6089e-02],
          [-7.6826e-03, -5.0574e-03, -1.2543e-02],
          [-7.0935e-02,  4.1705e-02, -4.2882e-02]],

         ...,

         [[-6.9524e-02, -5.2977e-04, -5.6931e-02],
          [ 2.2734e-02,  1.6681e-02,  9.4226e-03],
          [-7.0359e-02, -3.8062e-02, -7.4810e-02]],

         [[-3.1811e-02,  2.3579e-02, -1.2499e-02],
          [-1.7756e-02,  1.9179e-02, -2.5678e-02],
          [ 5.9149e-03,  1.9882e-04,  1.3099e-02]],

         [[ 4.9114e-02, -1.0611e-02,  3.9198e-02],
          [ 8.3677e-02, -2.3959e-02,  3.9743e-02],
          [ 3.4752e-02, -7.0020e-02, -2.7938e-02]]],


        [[[-5.7353e-02, -3.7507e-02,  9.7810e-02],
          [-2.0687e-03,  3.6724e-02, -2.9329e-02],
          [-4.3417e-02, -2.0971e-02, -1.0746e-01]],

         [[ 8.6278e-02,  8.7704e-03, -3.7438e-02],
          [ 4.8788e-02, -1.5671e-02, -3.2043e-02],
          [-2.3955e-03,  2.2038e-02,  2.4858e-02]],

         [[-1.0819e-01, -2.9620e-02, -1.2000e-02],
          [ 2.9824e-02, -2.8220e-02,  7.3098e-03],
          [-2.2898e-02,  1.6204e-02, -1.2317e-01]],

         ...,

         [[ 2.1086e-02, -4.9407e-02,  5.4334e-02],
          [ 1.2112e-01,  4.7448e-02, -3.5607e-02],
          [-3.6195e-02, -6.5244e-02, -5.4020e-02]],

         [[ 3.7080e-02, -2.8119e-02,  2.3497e-02],
          [-2.9803e-04,  1.9230e-02, -4.6699e-05],
          [ 5.7983e-02,  6.1169e-02, -7.4442e-03]],

         [[ 2.6484e-02,  2.0080e-02, -6.3548e-03],
          [-5.0868e-02, -5.7172e-02,  1.6160e-02],
          [ 4.1487e-02,  1.0529e-02,  5.6567e-02]]],


        [[[-3.8932e-02,  4.9298e-02,  3.9092e-03],
          [-1.7900e-02,  3.1474e-02,  8.9171e-03],
          [ 2.2449e-02, -2.4928e-02,  3.5519e-02]],

         [[-9.1812e-02,  6.7471e-02,  2.0797e-02],
          [ 4.3874e-02,  1.7344e-02,  2.5490e-02],
          [-1.9129e-02, -2.0756e-02,  2.8802e-02]],

         [[-4.8915e-03, -4.7350e-03, -4.3885e-02],
          [ 5.5929e-02,  1.6008e-02, -2.0526e-02],
          [ 3.2789e-02, -1.4623e-02, -3.2056e-03]],

         ...,

         [[ 4.7537e-02,  5.7281e-03, -3.3544e-02],
          [ 1.8909e-02,  1.4926e-02,  2.8435e-02],
          [-7.5480e-02,  1.5624e-02,  1.4078e-02]],

         [[ 7.0648e-03, -5.9915e-02,  3.9225e-02],
          [ 3.7669e-02,  1.3207e-02, -1.3015e-02],
          [-8.0127e-02,  1.7745e-02, -5.5165e-02]],

         [[ 5.7792e-02,  3.2246e-02,  3.9059e-03],
          [-2.5700e-02,  5.0707e-02, -2.8741e-02],
          [ 3.3944e-02, -9.3500e-02, -4.1371e-03]]],


        ...,


        [[[ 8.5274e-03, -3.0705e-02,  3.0124e-02],
          [-2.5798e-02, -1.0662e-01, -4.2540e-02],
          [ 3.6907e-02, -5.4777e-02, -5.5788e-02]],

         [[ 2.3604e-02, -8.3859e-02,  7.7107e-02],
          [ 1.2959e-03, -3.5024e-02, -2.5491e-03],
          [-8.1463e-03, -2.9809e-02, -2.8329e-02]],

         [[-4.3254e-02,  7.0099e-03,  6.2808e-03],
          [ 9.3527e-02,  1.7470e-03,  3.2323e-02],
          [-3.0096e-03,  1.4697e-02,  2.5395e-02]],

         ...,

         [[ 1.1616e-02,  6.5720e-02, -1.1344e-02],
          [ 2.3503e-02, -2.0445e-02,  4.9494e-02],
          [ 8.8632e-03,  5.4982e-02,  1.0062e-02]],

         [[-6.5095e-02,  8.8770e-04,  3.9144e-02],
          [-5.7634e-02, -1.9697e-02,  1.6855e-02],
          [-5.3822e-02, -2.4246e-02,  4.5046e-02]],

         [[-2.2194e-02, -4.0464e-03, -3.9437e-02],
          [ 2.4337e-04, -6.3549e-02,  8.9393e-02],
          [-3.5044e-02, -4.7920e-02, -9.9848e-03]]],


        [[[ 7.6381e-02, -2.1894e-02, -3.9707e-02],
          [ 1.5031e-02, -4.3567e-02, -2.9215e-02],
          [-3.7781e-02, -1.7520e-02, -2.7584e-02]],

         [[ 1.8377e-02, -3.8107e-02,  2.0393e-02],
          [ 7.2060e-02,  5.7882e-02,  4.3968e-02],
          [-5.3607e-02,  1.0109e-01,  5.7090e-03]],

         [[ 3.4855e-02, -4.7826e-03,  9.6409e-03],
          [-6.4023e-02, -8.1084e-02, -8.6477e-02],
          [ 3.2145e-02,  1.7929e-02, -4.2130e-02]],

         ...,

         [[-3.5917e-02, -1.0570e-01,  5.7092e-02],
          [ 1.9225e-02,  2.4914e-03, -8.5409e-02],
          [-2.6242e-02,  5.0280e-02,  3.8612e-02]],

         [[ 1.7766e-02,  1.5675e-02, -7.2721e-02],
          [-7.2985e-03, -3.4165e-02,  5.2483e-02],
          [-4.6406e-04, -5.5522e-02,  9.1719e-02]],

         [[ 1.5286e-02,  1.5489e-02,  5.0515e-03],
          [ 7.2531e-03,  4.1842e-02, -7.2934e-03],
          [ 2.5016e-04, -1.8465e-02,  3.0043e-02]]],


        [[[-2.1747e-02,  2.6481e-02,  5.2959e-02],
          [-4.7608e-02, -5.8749e-02, -4.0242e-02],
          [-2.2369e-02,  1.6904e-02, -1.8388e-02]],

         [[-5.0554e-02,  2.2618e-02, -6.0271e-02],
          [-1.2618e-02, -3.0590e-02, -3.5888e-02],
          [ 6.0254e-03, -1.6555e-02,  2.2579e-02]],

         [[ 3.2485e-02, -1.8908e-02,  7.6823e-02],
          [-5.6796e-02, -3.4431e-02, -1.1424e-02],
          [-4.8510e-03,  2.7033e-02, -4.6671e-02]],

         ...,

         [[-1.4793e-02,  2.9357e-02, -5.6907e-02],
          [ 1.9883e-02,  2.6963e-02,  8.3778e-02],
          [-5.5909e-02, -1.5502e-02,  1.6482e-02]],

         [[ 1.2852e-02,  5.4180e-02,  1.6675e-03],
          [ 3.1887e-02, -1.2546e-02,  3.6773e-02],
          [ 4.9253e-02,  8.0171e-02,  3.7393e-02]],

         [[-3.0902e-02,  4.0054e-02,  1.9657e-02],
          [ 2.8691e-02,  1.6702e-02,  3.3279e-02],
          [ 3.5182e-02,  3.9601e-02, -9.1616e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[-0.0581]],

         [[-0.1465]],

         [[ 0.1662]],

         ...,

         [[ 0.0343]],

         [[ 0.0242]],

         [[ 0.0054]]],


        [[[-0.1958]],

         [[-0.0284]],

         [[-0.0226]],

         ...,

         [[-0.0735]],

         [[-0.0328]],

         [[ 0.0963]]],


        [[[ 0.0005]],

         [[-0.1206]],

         [[ 0.0874]],

         ...,

         [[-0.0021]],

         [[-0.0247]],

         [[-0.0483]]],


        ...,


        [[[-0.0245]],

         [[ 0.0450]],

         [[-0.1267]],

         ...,

         [[ 0.0528]],

         [[ 0.0469]],

         [[-0.0934]]],


        [[[-0.0558]],

         [[ 0.0587]],

         [[-0.0567]],

         ...,

         [[ 0.0481]],

         [[-0.0639]],

         [[ 0.0038]]],


        [[[ 0.0184]],

         [[ 0.0206]],

         [[ 0.1328]],

         ...,

         [[-0.0390]],

         [[-0.1934]],

         [[-0.1088]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[ 1.2375e-02, -2.5513e-02,  4.1500e-02],
          [ 1.5550e-02,  2.6096e-02,  2.7395e-02],
          [ 4.3644e-02, -7.9645e-02, -1.4211e-02]],

         [[-1.0233e-02,  1.7074e-02, -4.9890e-02],
          [ 6.9706e-02, -1.8477e-02,  5.7993e-02],
          [-5.7536e-02,  2.6274e-02, -5.8571e-02]],

         [[-1.8084e-02,  6.9345e-03,  3.2877e-02],
          [ 6.6250e-02, -6.8685e-02, -3.1710e-02],
          [-2.5677e-02, -1.1447e-02, -2.7821e-02]],

         ...,

         [[-3.9837e-02,  2.1286e-02,  1.2261e-02],
          [-5.9390e-02, -3.2006e-02, -1.0883e-02],
          [-5.8458e-02,  1.4017e-02, -1.2818e-03]],

         [[ 5.8534e-02,  2.5008e-02, -3.0779e-02],
          [ 2.9556e-02,  1.5959e-02,  2.2737e-02],
          [-1.6681e-02, -1.4113e-03,  4.0894e-02]],

         [[ 2.4325e-02, -1.6671e-02,  3.0993e-03],
          [-3.6120e-02, -8.0936e-03,  3.0183e-02],
          [ 2.8804e-02, -6.1921e-03,  3.8511e-02]]],


        [[[ 5.3565e-02, -3.9759e-02,  9.3891e-02],
          [ 5.7348e-03, -3.5659e-02, -2.0199e-02],
          [ 4.1232e-02,  2.6483e-02, -3.7020e-03]],

         [[-7.4169e-03,  7.0697e-03,  2.0505e-02],
          [-7.0443e-02,  4.4617e-02,  1.2796e-02],
          [-3.2460e-02,  2.3610e-02,  6.9373e-03]],

         [[ 6.5598e-03, -1.8321e-02, -5.9879e-02],
          [-3.2768e-02, -1.1923e-02, -3.8166e-02],
          [-2.9392e-02,  5.7211e-02, -1.0272e-02]],

         ...,

         [[-4.9621e-02, -1.2079e-02,  1.0567e-02],
          [-1.5042e-02, -2.1964e-02,  6.0233e-03],
          [-6.7701e-03, -3.6725e-02, -1.1282e-02]],

         [[-1.2941e-02, -4.0517e-02,  7.1233e-02],
          [-4.7395e-02, -5.5968e-02,  1.9800e-02],
          [ 5.5702e-02, -5.2638e-02,  7.1032e-02]],

         [[-7.3041e-03,  7.0754e-03,  1.9636e-02],
          [ 2.7361e-02, -1.4117e-02, -1.7065e-02],
          [ 3.3909e-03, -1.8617e-03,  4.8642e-02]]],


        [[[-3.3708e-02, -2.2482e-02,  4.8643e-02],
          [-1.0642e-03,  2.2111e-02, -1.9001e-02],
          [ 5.6628e-02,  1.0580e-02, -1.2364e-03]],

         [[ 1.9348e-03,  9.7787e-02, -7.9323e-02],
          [ 1.7353e-03, -6.8776e-04, -1.7797e-02],
          [-7.5118e-03,  3.7086e-02,  3.4466e-02]],

         [[ 6.8894e-02,  3.4978e-02, -3.2732e-02],
          [-1.4397e-02, -2.7503e-02,  1.1552e-02],
          [ 3.8099e-02,  4.7967e-04, -5.4421e-02]],

         ...,

         [[ 1.9208e-02,  1.6836e-02,  1.0985e-02],
          [-1.9790e-02, -3.2728e-02,  1.0333e-01],
          [-5.4073e-02,  2.3385e-03,  2.2024e-02]],

         [[-1.7413e-02,  5.6501e-02, -1.6856e-02],
          [ 9.8870e-03,  2.1049e-02,  2.7614e-02],
          [-2.9040e-02, -3.3562e-02, -2.9622e-02]],

         [[-2.5993e-02,  3.2892e-02, -1.7744e-02],
          [ 3.5476e-02,  4.1043e-02,  2.7011e-02],
          [-1.4123e-02,  3.9395e-02,  1.6596e-02]]],


        ...,


        [[[-1.9973e-02, -1.4374e-02,  6.5279e-02],
          [ 1.3038e-02,  1.6334e-02, -4.4194e-02],
          [-2.5644e-02,  3.7195e-02, -1.0172e-01]],

         [[-3.6510e-02,  1.0979e-02,  4.8890e-03],
          [-7.6328e-02, -7.7168e-02,  6.8637e-03],
          [-4.8696e-02,  3.5211e-02, -4.8334e-02]],

         [[-1.5542e-02,  3.1420e-02,  5.2849e-03],
          [ 1.0289e-02,  6.9436e-02,  6.1121e-02],
          [ 3.7630e-02, -5.0857e-02,  2.6078e-04]],

         ...,

         [[ 3.1097e-04, -5.3968e-02,  3.5217e-02],
          [ 1.1928e-02, -3.7170e-02, -9.3427e-03],
          [ 5.6567e-03, -3.1379e-02, -8.8763e-02]],

         [[ 1.3647e-02,  3.7691e-02, -4.5817e-03],
          [ 2.2187e-02, -3.0476e-02, -1.1856e-02],
          [ 2.0325e-02, -7.0062e-02, -1.1751e-02]],

         [[ 7.5630e-02,  1.7610e-02, -2.5063e-02],
          [-5.8175e-05, -1.2181e-02,  4.9608e-03],
          [-3.7184e-02,  1.4939e-02, -3.2051e-02]]],


        [[[ 3.8504e-02, -3.4486e-02, -2.8556e-02],
          [-2.4891e-03, -7.3902e-03,  4.7046e-02],
          [ 1.7137e-02, -5.3805e-02, -1.3262e-02]],

         [[ 4.8279e-03,  1.8536e-03, -3.4150e-03],
          [ 3.8476e-02,  4.7705e-02,  7.0354e-04],
          [ 2.8905e-02, -3.7885e-03, -1.6303e-02]],

         [[ 4.3516e-02,  5.0392e-03, -1.3461e-02],
          [-1.1059e-02, -5.9394e-03,  5.4696e-02],
          [-4.5217e-02,  1.0395e-02, -3.4927e-02]],

         ...,

         [[ 1.5250e-02,  1.0314e-02,  6.4369e-03],
          [-4.1033e-02,  3.1965e-02,  4.5743e-02],
          [-1.7188e-02, -1.5577e-03,  5.1843e-02]],

         [[ 1.2177e-03, -4.9386e-02,  2.9557e-02],
          [ 1.0214e-02, -5.8299e-03,  2.8751e-02],
          [ 2.6235e-02,  1.8689e-02, -7.8003e-04]],

         [[-3.1911e-02, -7.1313e-03,  6.0819e-03],
          [-3.4646e-02, -1.8519e-02, -1.5955e-02],
          [-2.3029e-02, -3.2291e-02,  5.8914e-03]]],


        [[[ 5.8017e-02,  2.8674e-02,  1.3554e-02],
          [-7.1541e-03,  1.2614e-02, -1.7980e-02],
          [ 3.8862e-02,  8.0625e-02, -1.1192e-02]],

         [[-5.2854e-02,  1.3322e-02,  4.9696e-02],
          [ 4.9173e-03, -3.9761e-02, -5.1081e-02],
          [-7.6285e-02, -1.9539e-02,  8.0711e-02]],

         [[-5.6525e-02,  2.9737e-02, -1.7491e-03],
          [-2.2882e-02,  4.9757e-02,  2.3828e-03],
          [ 3.3894e-02,  5.8223e-02,  5.0501e-02]],

         ...,

         [[-3.8056e-02,  4.6748e-02, -4.1261e-02],
          [-2.6546e-02,  4.7861e-03,  4.6216e-02],
          [-6.1231e-02, -2.9043e-03,  1.4360e-02]],

         [[-4.2631e-02, -4.4155e-02,  4.2875e-02],
          [-4.8046e-02,  6.7717e-02, -2.5924e-02],
          [-3.0885e-02, -2.8105e-02,  1.0097e-02]],

         [[-7.3167e-02, -9.3484e-03, -7.7863e-02],
          [ 1.5556e-03, -1.1264e-02,  1.4241e-02],
          [-3.0202e-02, -5.6335e-02, -3.5797e-03]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 1.9761e-02, -1.0420e-02, -3.5152e-02,  ..., -1.0180e-02,
            2.5118e-02, -4.1349e-03],
          [ 5.3396e-03,  1.8007e-02,  1.8065e-02,  ...,  1.8518e-02,
           -1.6788e-02,  5.6935e-03],
          [-1.4485e-02, -4.6825e-03,  1.1430e-02,  ..., -8.5606e-03,
           -1.0543e-02, -6.2223e-03],
          ...,
          [-8.7373e-03,  2.2792e-02,  1.9581e-02,  ..., -2.0860e-04,
           -3.2561e-02, -3.8075e-03],
          [-3.5462e-02,  2.8310e-03,  5.4125e-03,  ...,  2.8384e-02,
           -1.3992e-02,  1.9875e-03],
          [ 1.7266e-02, -7.1319e-04, -1.0205e-03,  ..., -2.5524e-02,
            9.7033e-03,  1.1857e-02]],

         [[-1.4795e-02, -7.2104e-03, -4.8292e-03,  ..., -9.9721e-03,
           -2.1388e-02, -2.6276e-03],
          [ 5.2302e-03, -1.7926e-02, -3.9261e-04,  ..., -1.9444e-02,
            5.8817e-03,  3.5286e-03],
          [-6.5013e-03,  3.3241e-02,  2.6497e-03,  ...,  4.0079e-03,
            5.1203e-03,  1.4749e-02],
          ...,
          [-2.7214e-03,  2.0423e-02,  1.1161e-03,  ..., -1.2919e-02,
           -6.7207e-03, -1.8461e-02],
          [ 7.6082e-03,  1.8195e-02, -2.1777e-03,  ...,  3.3600e-03,
           -1.3825e-02, -1.7787e-02],
          [ 2.0340e-02, -5.5920e-03,  8.3885e-04,  ..., -1.4877e-02,
           -1.7136e-02,  3.0252e-05]]],


        [[[-7.0822e-03,  6.2099e-03,  2.2572e-03,  ..., -1.7858e-02,
           -4.3214e-03, -5.8594e-03],
          [ 2.7053e-02,  1.7078e-02,  1.0764e-02,  ..., -1.3255e-03,
            1.7748e-02, -1.1481e-02],
          [ 3.3923e-03,  1.9412e-02,  1.4954e-03,  ...,  3.1267e-02,
            1.9335e-02,  4.0614e-03],
          ...,
          [-2.6398e-02,  1.3026e-03, -7.6396e-03,  ...,  9.6720e-03,
           -2.0274e-03,  2.7074e-02],
          [-2.4962e-02,  3.2151e-02,  6.4007e-03,  ..., -1.5034e-03,
           -5.2199e-03,  3.2281e-02],
          [-2.8577e-02,  9.8566e-03, -2.5531e-02,  ..., -2.6574e-02,
            3.6728e-03, -3.3853e-02]],

         [[ 3.2469e-02,  1.4715e-02,  4.2324e-02,  ...,  1.2838e-03,
           -5.4674e-03, -3.1575e-02],
          [ 3.5270e-02,  1.2156e-02,  6.9024e-03,  ...,  1.8535e-02,
            4.6303e-02, -3.8971e-03],
          [ 1.1877e-02, -8.8168e-03,  1.5317e-03,  ...,  2.8930e-02,
           -5.1927e-05, -1.7994e-02],
          ...,
          [ 4.0077e-02,  1.8818e-02,  1.9678e-02,  ..., -4.1465e-03,
           -1.0611e-02,  8.5622e-03],
          [ 1.3556e-02, -2.3964e-02,  1.3528e-02,  ...,  7.1393e-03,
           -2.0104e-02, -1.0094e-02],
          [ 2.2327e-02, -1.5758e-02,  1.6315e-02,  ...,  2.9142e-02,
            2.9734e-02, -8.7428e-03]]],


        [[[ 3.6192e-03, -3.2121e-02,  1.5643e-02,  ..., -1.6400e-02,
            3.0422e-02,  2.1103e-02],
          [ 4.3951e-03, -2.9356e-02,  4.1192e-04,  ..., -2.6911e-02,
            1.5646e-02, -4.0804e-02],
          [ 1.4130e-02, -1.4773e-02, -2.7790e-03,  ...,  3.7599e-02,
            4.2839e-03, -3.9590e-02],
          ...,
          [ 2.0820e-02, -1.8589e-02, -7.8007e-03,  ..., -2.5043e-02,
           -1.1509e-02, -3.5618e-02],
          [ 2.8209e-04, -6.6295e-03,  1.1080e-02,  ...,  5.3341e-03,
           -1.7842e-04,  3.8851e-02],
          [-6.9504e-03, -6.3341e-04,  2.7246e-02,  ..., -9.4498e-03,
           -6.7410e-03,  8.1394e-03]],

         [[ 1.1199e-02,  1.7496e-02,  3.4973e-02,  ..., -2.6183e-02,
           -1.7426e-02,  5.3338e-03],
          [-5.1167e-02, -1.7642e-02, -2.0550e-02,  ..., -1.9399e-02,
            1.6129e-02,  3.4410e-02],
          [-2.0395e-02,  8.5323e-03, -1.5122e-02,  ...,  2.0588e-02,
           -1.5849e-02, -1.0229e-02],
          ...,
          [-1.5750e-02, -2.4666e-02, -1.4056e-02,  ..., -2.7801e-02,
           -1.2186e-02,  1.4284e-02],
          [-1.6927e-02,  1.9113e-02,  2.8251e-02,  ..., -1.8389e-02,
            2.2831e-02, -2.0319e-02],
          [-2.4671e-02,  2.3759e-02,  4.2727e-02,  ..., -3.3191e-03,
            2.7806e-02,  2.8195e-03]]],


        ...,


        [[[-2.7911e-02, -1.2047e-02, -2.2665e-02,  ..., -7.9866e-03,
           -2.0898e-02,  2.5795e-02],
          [ 4.0757e-03,  2.3626e-02,  2.1249e-03,  ...,  1.5094e-02,
           -2.6825e-02,  2.6392e-03],
          [ 8.5427e-03,  2.7119e-02,  5.1471e-02,  ..., -1.3624e-02,
            2.0356e-02,  1.6850e-02],
          ...,
          [-7.9627e-03,  1.2775e-02,  2.2873e-02,  ...,  2.0345e-02,
           -2.4041e-02, -2.8813e-03],
          [-3.7672e-03, -2.2065e-02, -3.8483e-03,  ..., -1.1333e-02,
            4.5684e-03,  6.7834e-04],
          [ 3.2858e-02,  4.5405e-02, -1.1082e-02,  ...,  1.4976e-02,
            4.2244e-02, -8.4959e-03]],

         [[-2.8152e-02, -7.5953e-03, -3.2424e-03,  ...,  1.1572e-02,
           -2.1800e-02, -1.5073e-02],
          [-5.1498e-02,  7.4368e-03, -2.4842e-03,  ...,  8.6900e-03,
           -1.9200e-03, -1.0827e-02],
          [-4.7434e-03, -3.9436e-03,  8.5606e-03,  ...,  2.0920e-02,
           -2.4963e-02, -4.3501e-03],
          ...,
          [ 3.5639e-03,  6.2295e-03,  2.3912e-02,  ...,  2.8454e-03,
           -2.3917e-03, -9.5271e-04],
          [-6.3583e-03,  1.1873e-02, -1.6276e-02,  ...,  2.7808e-03,
            2.7019e-02,  3.0088e-03],
          [-8.2579e-03,  8.8902e-03,  7.3702e-04,  ..., -1.9707e-02,
           -2.1340e-02,  4.0887e-02]]],


        [[[-2.4446e-02,  1.2700e-02,  1.3010e-02,  ..., -3.8242e-03,
            1.6964e-02, -3.7523e-03],
          [ 1.3585e-03, -1.8750e-02, -1.2112e-02,  ..., -1.5670e-02,
           -2.9055e-02,  8.8181e-03],
          [-2.7004e-02,  9.2062e-03, -1.6483e-02,  ...,  2.0922e-02,
            1.3940e-02, -2.8147e-02],
          ...,
          [ 9.8966e-03,  2.3546e-02, -2.1159e-02,  ...,  8.3345e-04,
            2.0021e-02, -9.0716e-04],
          [-2.1257e-02,  3.7754e-03, -1.1314e-02,  ..., -2.1660e-02,
            1.3026e-02, -7.5221e-03],
          [ 3.3932e-02,  2.3349e-02,  2.4851e-02,  ..., -8.5988e-03,
            8.0922e-03,  9.7256e-03]],

         [[ 5.7594e-03,  1.2189e-02,  7.3761e-03,  ...,  5.6266e-04,
           -8.6579e-03, -4.0862e-02],
          [ 3.5223e-02, -2.9988e-02,  1.6708e-02,  ...,  1.0673e-02,
           -1.5679e-02,  3.6936e-02],
          [-1.3613e-02, -3.3932e-02,  3.1460e-02,  ...,  1.4300e-02,
           -1.5632e-02,  5.1926e-03],
          ...,
          [ 1.2483e-02, -4.9743e-02,  1.4728e-03,  ..., -5.4199e-03,
           -6.9912e-03, -1.1593e-03],
          [-7.2551e-04, -1.1367e-02,  5.2995e-03,  ...,  5.8532e-03,
           -2.5981e-02, -2.4216e-02],
          [-1.1873e-02, -3.5504e-04, -8.0044e-03,  ...,  2.3033e-02,
           -2.4629e-02,  9.4171e-03]]],


        [[[-1.3570e-02, -1.8106e-03,  1.2395e-02,  ..., -2.6293e-02,
            2.3068e-02, -1.0984e-02],
          [-3.1241e-03,  9.2598e-04, -2.7535e-02,  ...,  1.2219e-02,
            1.9035e-02, -1.3709e-02],
          [-1.0782e-02,  1.4725e-02, -2.1713e-03,  ...,  1.3134e-02,
           -6.1259e-03,  1.2280e-03],
          ...,
          [-4.7526e-03, -3.4057e-02, -6.3127e-03,  ...,  2.8883e-02,
           -7.1745e-03, -1.3183e-02],
          [ 1.3313e-02,  2.2398e-02,  1.3726e-02,  ...,  1.2973e-02,
           -3.6285e-03,  1.0032e-02],
          [-1.6173e-02, -3.9859e-03, -1.5343e-02,  ...,  6.7853e-03,
            1.9892e-02, -1.5419e-03]],

         [[ 4.5279e-02,  7.6245e-03, -1.0099e-02,  ..., -1.6722e-02,
            2.4275e-02, -1.9271e-03],
          [-1.8548e-02,  7.6086e-03,  9.4661e-03,  ..., -3.7714e-02,
           -2.1291e-04, -1.0145e-02],
          [ 1.3198e-02,  7.8791e-03,  2.6477e-02,  ...,  7.6558e-03,
           -2.1628e-02,  1.4435e-02],
          ...,
          [-1.2404e-02,  3.6159e-02,  6.7275e-03,  ...,  1.0910e-02,
           -2.9364e-03,  1.0024e-02],
          [-1.4969e-02,  2.0233e-02,  7.2881e-03,  ..., -2.5990e-02,
           -2.5029e-02, -2.6904e-03],
          [ 7.3954e-03,  1.1478e-02, -4.1253e-04,  ...,  3.5567e-03,
            8.4196e-03, -2.9721e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[ 1.4647e-02,  6.5913e-02, -6.2004e-02],
          [-4.8522e-02, -8.5628e-03, -6.0447e-02],
          [ 1.0136e-01,  4.6622e-02, -1.3093e-01]],

         [[ 1.7926e-02,  1.4523e-02, -2.9388e-02],
          [ 8.7934e-03,  1.1671e-02, -6.4927e-02],
          [ 4.3181e-02,  6.0069e-02,  2.8864e-02]],

         [[ 5.6511e-02, -3.9208e-02, -9.4810e-02],
          [-1.5047e-02, -3.3667e-02, -8.4943e-02],
          [ 1.5903e-01, -5.4454e-02,  1.0101e-01]],

         ...,

         [[ 4.9567e-03, -1.0186e-01, -5.7197e-03],
          [-7.8945e-02, -2.0408e-02,  1.7373e-02],
          [-5.6123e-03, -1.8392e-02, -4.1977e-02]],

         [[ 2.2037e-02, -3.4638e-02, -1.9298e-02],
          [ 2.2758e-02,  7.0011e-02, -6.1777e-02],
          [-8.7026e-03, -1.7221e-02,  7.3367e-02]],

         [[ 1.2402e-01,  6.1887e-02, -7.6589e-02],
          [-1.0367e-02, -3.4692e-02, -3.0314e-02],
          [-5.5195e-03,  7.2592e-02, -2.7833e-02]]],


        [[[ 1.0298e-02,  3.0281e-02, -2.7443e-02],
          [-3.0949e-03, -5.2092e-02,  3.9346e-03],
          [ 5.3676e-02, -7.4589e-02, -4.6168e-02]],

         [[-4.2340e-02,  3.1253e-02,  3.9020e-02],
          [ 5.9340e-02,  5.0341e-02, -5.7111e-02],
          [-1.2923e-01,  1.3579e-02, -4.0864e-02]],

         [[-9.6913e-04, -1.6118e-01, -5.6253e-02],
          [-8.1157e-03, -4.9769e-02,  7.9658e-02],
          [ 1.1443e-02,  4.9699e-02,  2.4733e-02]],

         ...,

         [[ 1.1806e-01, -2.6547e-02, -1.3254e-01],
          [ 9.2251e-02, -1.0849e-02, -5.4357e-02],
          [-7.8531e-02,  8.8551e-03, -2.0817e-01]],

         [[ 3.3266e-03,  6.9312e-03, -1.4518e-02],
          [-7.4969e-02,  1.5105e-02,  8.3933e-03],
          [ 5.5883e-02,  2.6431e-02, -3.0274e-02]],

         [[-3.1951e-02, -4.2153e-02, -7.4285e-02],
          [ 2.8547e-02,  4.2019e-02,  8.7809e-02],
          [-4.7539e-02,  4.7450e-02,  6.0586e-02]]],


        [[[ 8.1522e-03, -1.3606e-02,  2.2240e-02],
          [ 2.2292e-02, -2.7120e-03, -5.8063e-02],
          [-2.4394e-02,  1.0252e-03, -3.6887e-02]],

         [[ 5.0373e-02, -3.7737e-02, -3.5350e-02],
          [-2.7397e-02,  9.3916e-02, -1.3301e-01],
          [-5.0367e-02,  3.3194e-02, -1.5994e-02]],

         [[-8.2324e-02,  3.3939e-02,  3.4464e-02],
          [ 8.5039e-02,  1.1060e-01,  7.6713e-02],
          [ 3.9443e-03,  8.7342e-02,  8.3821e-02]],

         ...,

         [[ 5.7427e-02, -4.8553e-02, -1.0519e-01],
          [ 1.4509e-02, -5.4134e-02, -1.6767e-02],
          [-4.7786e-02, -2.6437e-02,  4.7857e-02]],

         [[ 8.2672e-03, -1.1071e-02, -1.2706e-01],
          [ 2.3931e-02, -4.8030e-02,  8.6310e-02],
          [ 6.1376e-03,  7.2881e-02,  2.3324e-02]],

         [[ 3.9280e-02, -5.2809e-02, -1.2555e-01],
          [-4.9565e-02,  3.0524e-02,  8.4960e-02],
          [ 3.7458e-03,  2.4075e-02,  3.8944e-02]]],


        ...,


        [[[-3.9248e-02, -3.7562e-02,  8.4902e-02],
          [ 7.2219e-03, -2.5837e-02,  7.0425e-02],
          [-2.5462e-02, -9.3440e-02,  1.9690e-02]],

         [[-2.3724e-02, -1.4198e-01,  1.0883e-03],
          [ 7.7311e-02,  1.7585e-02,  1.2382e-01],
          [ 2.9470e-02,  5.3894e-02,  9.8757e-03]],

         [[-8.5815e-02, -3.3466e-02,  1.1436e-01],
          [ 4.4522e-02, -3.2325e-03, -4.8077e-02],
          [-7.7397e-03,  6.6876e-02, -1.1839e-02]],

         ...,

         [[ 2.5294e-02, -1.6182e-02, -6.4401e-02],
          [ 2.1669e-02, -8.3089e-03,  1.0269e-02],
          [-1.4622e-01, -1.7864e-02, -2.0495e-02]],

         [[-7.1675e-02,  4.4196e-02,  1.0803e-01],
          [-3.7397e-02,  4.8582e-02, -2.7381e-02],
          [ 1.4616e-02,  1.9821e-02, -6.2238e-02]],

         [[-8.3115e-02, -6.4832e-03,  3.4538e-02],
          [ 3.0254e-02,  1.0694e-02, -7.0450e-02],
          [-7.6169e-02,  3.0143e-02, -6.0833e-03]]],


        [[[-6.7915e-02, -9.4930e-02,  1.0035e-01],
          [-9.8268e-02, -4.7863e-03,  7.6009e-02],
          [ 2.7243e-02,  6.1891e-02,  5.6210e-02]],

         [[ 2.4813e-02, -1.6574e-02, -3.9680e-02],
          [-1.1216e-02,  8.0943e-02, -7.8028e-02],
          [ 1.4793e-02, -3.9372e-02,  1.9024e-02]],

         [[-4.6949e-02, -4.4727e-02, -1.2988e-02],
          [ 1.7555e-02,  5.9543e-02,  6.7897e-02],
          [-1.1608e-01,  3.5278e-02,  4.5256e-03]],

         ...,

         [[-1.4547e-02,  7.1375e-03,  1.7118e-02],
          [ 5.5017e-06, -4.1646e-02, -5.3248e-02],
          [-3.2281e-02, -3.2123e-03, -7.2065e-02]],

         [[-8.5061e-02, -5.8906e-02, -9.6416e-02],
          [ 5.7741e-02,  7.0445e-02, -7.4037e-02],
          [ 3.2121e-04, -1.2422e-01, -4.3287e-02]],

         [[-8.4412e-03, -4.3773e-02,  1.9193e-02],
          [ 5.6461e-02, -1.4743e-02,  7.5463e-02],
          [-4.3224e-02,  3.9950e-02,  4.8482e-02]]],


        [[[-3.9695e-02, -5.5958e-02, -2.0925e-02],
          [ 9.4117e-02,  1.0557e-02, -5.5609e-02],
          [ 2.7678e-02, -1.5248e-02,  5.9300e-02]],

         [[ 1.6131e-02,  1.5648e-02, -6.3709e-02],
          [ 6.0990e-02,  3.5667e-02,  6.7869e-02],
          [ 4.7665e-02,  3.9900e-02, -4.2529e-02]],

         [[ 7.9973e-03, -2.7258e-02,  9.3111e-03],
          [-7.6840e-02, -2.4171e-02, -3.5798e-02],
          [ 6.2929e-02,  5.4159e-03,  1.2887e-01]],

         ...,

         [[ 2.8153e-02, -1.3906e-02, -3.3738e-03],
          [-3.1470e-02, -3.2669e-02,  9.5361e-02],
          [ 3.0748e-02, -5.6434e-02, -7.7092e-03]],

         [[-7.6745e-03, -3.4425e-03,  2.1980e-02],
          [ 7.6666e-03,  8.4003e-02, -2.4365e-02],
          [-2.8030e-03, -5.3606e-02, -4.6098e-02]],

         [[-7.7627e-02, -8.0262e-02,  3.7111e-02],
          [-5.6221e-02, -2.4398e-02, -3.8312e-02],
          [ 5.0736e-02,  6.5495e-02,  2.3469e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-4.6203e-05, -7.9605e-02,  1.7956e-02],
          [-2.0556e-02, -3.9566e-02, -3.1113e-02],
          [ 3.6189e-02,  7.9092e-02, -1.7128e-02]],

         [[ 4.2335e-02,  3.5644e-02,  1.3370e-02],
          [ 5.7253e-04, -7.8499e-02,  6.3593e-02],
          [-1.9479e-02,  8.6141e-03,  6.6143e-02]],

         [[-6.2804e-02, -5.0223e-02,  1.8843e-02],
          [-5.4386e-02, -8.5277e-02,  4.1136e-02],
          [ 2.6791e-02,  2.0242e-02,  4.2414e-02]],

         ...,

         [[-1.1625e-02, -4.1810e-04,  1.4457e-02],
          [-3.5313e-02, -3.4434e-03,  3.1040e-04],
          [ 7.6206e-02,  4.6958e-02, -3.7301e-02]],

         [[ 2.7116e-02, -8.7385e-03,  9.9947e-03],
          [ 1.1168e-02,  5.6954e-03, -7.7686e-02],
          [ 1.3481e-02,  3.5672e-03,  1.4020e-02]],

         [[ 1.1106e-02,  1.7678e-02,  8.3303e-03],
          [ 4.5252e-02,  1.5935e-02,  2.9388e-02],
          [-3.2794e-02,  1.0292e-01,  1.8751e-02]]],


        [[[-6.3614e-02, -6.8055e-03, -6.1327e-02],
          [-4.1228e-02, -1.8537e-02, -2.0930e-02],
          [ 6.4877e-02,  4.5619e-03,  1.7190e-02]],

         [[-1.3872e-02, -3.7228e-02, -3.1179e-02],
          [-9.3698e-03,  2.7480e-02, -2.6944e-02],
          [-1.1199e-02, -6.2933e-02, -6.2478e-02]],

         [[-7.5971e-02,  1.4126e-02, -9.8001e-03],
          [-2.9977e-02, -4.7822e-02,  2.5445e-02],
          [-1.3141e-02, -4.2611e-02,  8.6571e-02]],

         ...,

         [[ 1.3335e-02,  8.4548e-03, -2.0521e-02],
          [-1.3987e-02, -7.8844e-03, -6.0660e-02],
          [ 7.2726e-02,  5.7641e-02,  2.6815e-02]],

         [[-5.4593e-02, -6.1178e-02, -4.4588e-03],
          [ 2.1258e-02,  2.7451e-02,  3.0909e-03],
          [-6.7048e-03,  2.3035e-03,  2.9936e-02]],

         [[ 4.5590e-03, -1.8286e-02, -3.7695e-02],
          [-1.7013e-02, -6.1138e-02, -1.2290e-03],
          [ 9.3738e-03,  2.2812e-02, -4.9259e-02]]],


        [[[ 3.6884e-03,  8.9150e-02, -3.6513e-02],
          [ 3.0778e-02,  4.6959e-03, -2.8524e-02],
          [ 2.5306e-02, -8.7759e-02, -7.6963e-02]],

         [[ 5.8774e-02, -1.1329e-01, -6.2851e-02],
          [ 5.1974e-03, -2.6649e-02,  1.6193e-02],
          [-2.1355e-02,  1.9847e-02,  9.6248e-03]],

         [[-3.0844e-02,  1.8922e-02, -5.1192e-02],
          [-1.8851e-03, -6.7096e-03, -2.2053e-02],
          [ 6.0664e-02, -8.3842e-02, -9.8367e-03]],

         ...,

         [[-4.0297e-02, -1.1236e-01, -6.1829e-02],
          [-7.8405e-02, -8.8064e-02, -1.7323e-02],
          [ 6.9097e-02,  2.2494e-02, -2.3997e-02]],

         [[ 6.8249e-03, -7.9828e-02, -5.9362e-04],
          [ 3.3317e-02, -1.3770e-02, -2.6052e-02],
          [-3.5430e-02, -3.5118e-02,  3.9921e-02]],

         [[ 3.2506e-02,  7.9217e-03, -8.6623e-03],
          [-2.1375e-02,  7.1479e-02,  3.7915e-02],
          [-3.0984e-02, -4.3231e-02,  3.5797e-02]]],


        ...,


        [[[-3.6378e-02,  6.6735e-03, -9.7978e-03],
          [-1.5039e-03, -5.3572e-02, -5.0889e-02],
          [ 4.7758e-02, -3.4059e-02, -1.6470e-02]],

         [[ 4.6314e-03,  4.9484e-02, -3.1756e-02],
          [ 3.0349e-03, -6.9950e-02,  1.3249e-02],
          [ 9.3019e-03,  2.6153e-02, -2.4931e-02]],

         [[ 3.8815e-02,  4.2627e-02,  8.6561e-03],
          [ 2.6051e-02, -2.5375e-02, -1.9379e-02],
          [ 1.4634e-02,  5.5125e-02,  1.9572e-02]],

         ...,

         [[ 4.6285e-03,  3.5078e-03, -1.4457e-02],
          [-4.2389e-02,  4.3370e-02, -6.0433e-02],
          [-1.3341e-02,  2.4703e-02,  2.5567e-03]],

         [[-1.7595e-02,  1.3694e-02,  6.3127e-02],
          [-3.8370e-02, -1.2042e-02,  3.8766e-02],
          [ 1.3520e-02, -2.5289e-03, -1.6236e-02]],

         [[ 1.4140e-02,  1.1395e-02,  4.1859e-02],
          [ 3.0438e-02, -6.7923e-02, -8.5839e-04],
          [ 3.9691e-02, -8.2640e-02,  3.4666e-02]]],


        [[[ 3.4924e-02, -4.5403e-02,  6.5669e-02],
          [-8.1586e-02,  7.3340e-03, -2.4122e-02],
          [-1.9951e-02, -2.7229e-02,  3.3575e-02]],

         [[ 1.6190e-02, -9.2007e-02, -1.8368e-02],
          [ 5.9061e-02,  1.4862e-02,  3.0602e-03],
          [-2.4735e-02, -8.1880e-03, -1.1778e-02]],

         [[-1.5635e-02,  1.4071e-02, -9.4426e-02],
          [ 5.4379e-02, -2.8496e-03, -3.9670e-02],
          [ 4.1421e-02,  7.9581e-03,  4.1915e-02]],

         ...,

         [[ 5.0956e-02,  1.7746e-02,  2.9184e-02],
          [-4.0916e-02, -1.4964e-02, -2.6144e-02],
          [ 1.0079e-02, -1.0513e-02, -5.3316e-02]],

         [[-8.5870e-03,  1.5014e-02,  3.0438e-02],
          [-3.0261e-02, -2.1321e-02, -5.4291e-02],
          [ 4.7482e-02,  6.8654e-02, -2.5729e-02]],

         [[ 1.5628e-02,  1.1556e-02,  2.8381e-04],
          [-9.0519e-02,  1.7503e-02,  2.1118e-02],
          [ 1.2668e-02,  5.3764e-02,  3.7814e-02]]],


        [[[-6.7673e-02, -4.3426e-02, -2.4181e-02],
          [-1.3984e-02, -6.7280e-02, -4.4644e-02],
          [ 5.4900e-02, -1.6259e-02, -4.7083e-02]],

         [[-3.0479e-02, -2.6255e-02, -2.4733e-02],
          [-1.9895e-02,  2.9907e-02, -1.1770e-02],
          [-1.0192e-01,  4.3602e-02, -9.7825e-02]],

         [[ 2.4530e-02, -4.3219e-03,  8.1212e-03],
          [ 3.9475e-03,  2.3685e-02, -1.0170e-01],
          [ 2.5130e-02,  5.4738e-02, -2.9563e-02]],

         ...,

         [[ 4.0327e-02,  2.9276e-02, -5.9768e-04],
          [ 4.5569e-02,  4.3037e-02,  7.1945e-02],
          [ 3.9995e-02, -9.2459e-02, -2.3268e-02]],

         [[ 3.0471e-03, -3.9412e-02, -4.2671e-02],
          [ 1.1807e-01, -6.1770e-02, -2.1913e-02],
          [-9.3343e-02, -1.3498e-02,  5.0020e-02]],

         [[-2.9924e-02, -3.1423e-02, -4.7611e-03],
          [ 6.3928e-02,  1.5874e-02,  3.7130e-02],
          [-4.1688e-02, -4.6704e-02, -5.9210e-02]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[-0.0312,  0.0156,  0.0189,  0.0055,  0.0279]],

         [[-0.0028,  0.0560, -0.0081,  0.0191, -0.0152]],

         [[ 0.0369, -0.0182, -0.0401, -0.0123,  0.0030]],

         ...,

         [[-0.0055, -0.0061,  0.0493,  0.0489, -0.0217]],

         [[-0.0277, -0.0235, -0.0153,  0.0176, -0.0437]],

         [[-0.0114, -0.0085,  0.0102, -0.0020,  0.0188]]],


        [[[ 0.0149, -0.0234,  0.0068, -0.0044, -0.0014]],

         [[-0.0127, -0.0050, -0.0139,  0.0588,  0.0267]],

         [[ 0.0097, -0.0262,  0.0115, -0.0083,  0.0124]],

         ...,

         [[-0.0160,  0.0009, -0.0080,  0.0088,  0.0052]],

         [[-0.0161, -0.0523, -0.0370, -0.0075, -0.0021]],

         [[-0.0105,  0.0225, -0.0209,  0.0208,  0.0006]]],


        [[[ 0.0256,  0.0015,  0.0128,  0.0303,  0.0021]],

         [[-0.0112,  0.0112, -0.0001, -0.0098,  0.0129]],

         [[ 0.0174,  0.0238,  0.0213, -0.0385, -0.0146]],

         ...,

         [[-0.0247,  0.0066,  0.0550,  0.0179,  0.0321]],

         [[ 0.0185, -0.0063, -0.0179,  0.0071, -0.0167]],

         [[-0.0024,  0.0134,  0.0033, -0.0185,  0.0013]]],


        ...,


        [[[-0.0212,  0.0047, -0.0212, -0.0189,  0.0064]],

         [[ 0.0183, -0.0113,  0.0061, -0.0032,  0.0212]],

         [[-0.0015,  0.0284,  0.0127, -0.0033,  0.0084]],

         ...,

         [[-0.0129,  0.0292,  0.0271,  0.0250,  0.0184]],

         [[-0.0087,  0.0124, -0.0181,  0.0198, -0.0389]],

         [[ 0.0015, -0.0116,  0.0535,  0.0271, -0.0056]]],


        [[[ 0.0470,  0.0310, -0.0133,  0.0185, -0.0220]],

         [[ 0.0316,  0.0241,  0.0305, -0.0265,  0.0198]],

         [[ 0.0028,  0.0124,  0.0358,  0.0107, -0.0084]],

         ...,

         [[ 0.0276, -0.0067,  0.0034, -0.0486,  0.0130]],

         [[-0.0041, -0.0491,  0.0174, -0.0278,  0.0004]],

         [[ 0.0007,  0.0150,  0.0106,  0.0268, -0.0211]]],


        [[[ 0.0019,  0.0060, -0.0276, -0.0171, -0.0134]],

         [[ 0.0383, -0.0272, -0.0081,  0.0090,  0.0165]],

         [[-0.0032,  0.0095,  0.0125, -0.0132, -0.0384]],

         ...,

         [[-0.0097,  0.0429, -0.0123,  0.0069, -0.0063]],

         [[-0.0006,  0.0144,  0.0289,  0.0103, -0.0451]],

         [[ 0.0029, -0.0231, -0.0030, -0.0182, -0.0063]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 6.0062e-02],
          [-1.5132e-02],
          [-3.8906e-02],
          [-2.2348e-02],
          [-3.6624e-03]],

         [[ 2.0327e-02],
          [ 7.3976e-05],
          [ 4.5017e-03],
          [ 2.4314e-02],
          [ 2.2100e-02]],

         [[-5.8374e-03],
          [ 1.4311e-02],
          [ 1.3522e-02],
          [ 3.4000e-02],
          [ 1.1619e-02]],

         ...,

         [[ 1.1070e-02],
          [ 4.1410e-02],
          [-3.0008e-03],
          [-2.1897e-02],
          [ 2.8877e-02]],

         [[-2.3391e-02],
          [-1.3838e-02],
          [-2.4685e-02],
          [ 4.9163e-03],
          [-4.6283e-02]],

         [[ 1.9330e-02],
          [ 2.6808e-02],
          [-3.6639e-02],
          [-1.2890e-02],
          [-1.7292e-02]]],


        [[[ 3.1069e-02],
          [ 6.0835e-02],
          [-9.4555e-03],
          [ 5.5865e-03],
          [ 3.3461e-02]],

         [[-7.8876e-03],
          [ 2.8180e-02],
          [-3.5933e-03],
          [ 9.7006e-03],
          [-1.4593e-02]],

         [[-1.5232e-02],
          [ 2.2544e-03],
          [ 5.9528e-03],
          [ 8.0968e-03],
          [ 3.5775e-02]],

         ...,

         [[-2.1866e-02],
          [-2.1788e-02],
          [-1.2395e-02],
          [-2.5962e-03],
          [ 8.9918e-04]],

         [[ 1.0806e-02],
          [-2.6149e-02],
          [-1.4642e-02],
          [ 7.2304e-03],
          [-2.1052e-02]],

         [[-2.0484e-02],
          [ 3.8301e-02],
          [-2.9101e-02],
          [-1.2205e-02],
          [ 2.0017e-02]]],


        [[[-3.2769e-02],
          [ 5.0856e-02],
          [-5.9111e-03],
          [ 1.9081e-02],
          [-1.1366e-02]],

         [[ 1.4894e-02],
          [ 2.5649e-02],
          [-6.5997e-03],
          [ 3.4407e-02],
          [ 2.5798e-02]],

         [[ 5.8586e-03],
          [ 1.2974e-02],
          [ 5.6875e-03],
          [-1.9609e-02],
          [-5.6630e-02]],

         ...,

         [[ 4.5259e-02],
          [ 1.5483e-02],
          [-3.4150e-02],
          [-3.3440e-03],
          [-1.6952e-02]],

         [[-2.2209e-02],
          [ 3.7858e-03],
          [-1.2630e-02],
          [-3.3535e-03],
          [ 3.1413e-02]],

         [[ 2.7878e-03],
          [-7.2666e-03],
          [ 4.1608e-02],
          [ 2.4886e-02],
          [-9.4647e-03]]],


        ...,


        [[[ 2.8289e-03],
          [ 3.3034e-02],
          [-4.1344e-03],
          [-3.3183e-02],
          [-1.1875e-02]],

         [[ 2.5243e-02],
          [ 7.0659e-03],
          [-1.2982e-02],
          [-4.4541e-02],
          [ 2.3554e-03]],

         [[-9.8988e-03],
          [-5.1619e-02],
          [-2.3790e-02],
          [ 5.7851e-02],
          [ 2.9206e-04]],

         ...,

         [[ 5.2008e-02],
          [-7.2068e-03],
          [-2.3645e-02],
          [-2.6014e-02],
          [-1.8876e-02]],

         [[ 1.5377e-03],
          [ 1.2903e-02],
          [ 2.6772e-02],
          [ 1.5283e-02],
          [-1.8478e-02]],

         [[ 4.8260e-03],
          [ 2.0752e-02],
          [-3.1668e-03],
          [ 3.5468e-02],
          [-4.5680e-02]]],


        [[[ 1.0761e-02],
          [-1.3838e-02],
          [ 4.3921e-03],
          [ 2.4156e-02],
          [ 5.2960e-03]],

         [[ 1.4866e-02],
          [-3.5274e-02],
          [-4.6345e-03],
          [-1.4141e-02],
          [-1.5674e-02]],

         [[ 3.3252e-02],
          [ 9.8797e-03],
          [-5.5620e-03],
          [-3.4774e-02],
          [ 8.0465e-03]],

         ...,

         [[ 2.0851e-02],
          [ 1.0638e-03],
          [ 1.4422e-03],
          [ 2.6252e-02],
          [-3.9441e-02]],

         [[ 4.2858e-02],
          [-1.9211e-02],
          [-1.6249e-02],
          [-7.5783e-03],
          [ 5.9996e-03]],

         [[-2.4595e-02],
          [ 1.1331e-03],
          [-2.8655e-02],
          [-4.0106e-02],
          [ 5.3078e-04]]],


        [[[ 1.6266e-02],
          [-4.5614e-02],
          [ 5.0491e-03],
          [ 4.9496e-03],
          [-1.8021e-02]],

         [[ 3.0039e-02],
          [-8.3419e-03],
          [ 1.2515e-02],
          [ 2.0670e-02],
          [-2.6058e-02]],

         [[-2.6196e-02],
          [-2.8013e-02],
          [ 4.0944e-03],
          [ 1.8016e-02],
          [ 3.2696e-02]],

         ...,

         [[ 9.6396e-03],
          [-1.0510e-02],
          [ 2.5075e-02],
          [ 2.1997e-02],
          [ 2.0225e-02]],

         [[ 2.6668e-02],
          [-1.0642e-02],
          [ 5.3948e-02],
          [ 1.0601e-03],
          [ 2.2223e-02]],

         [[ 5.6641e-02],
          [ 9.3287e-03],
          [-1.7936e-02],
          [ 2.0281e-02],
          [ 4.8068e-02]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[ 5.2707e-03, -4.4382e-04,  1.3687e-02,  1.8718e-02, -2.6714e-02]],

         [[ 1.8112e-02, -2.0366e-02,  1.5521e-02, -1.7967e-02, -4.6787e-02]],

         [[-3.5763e-02, -2.8067e-02,  2.1434e-02,  4.4076e-02,  2.6324e-02]],

         ...,

         [[-9.8888e-03,  3.4720e-03, -3.8015e-03,  5.7673e-03, -1.9894e-02]],

         [[ 4.9195e-03,  1.2881e-02,  6.2274e-03, -8.9184e-03,  2.7746e-02]],

         [[-2.4094e-02,  1.2866e-02, -2.4790e-02, -3.3598e-02,  9.5907e-03]]],


        [[[ 1.7157e-02, -2.3540e-02,  1.8036e-02, -5.4939e-02,  3.1454e-02]],

         [[-4.0070e-02, -2.4618e-02,  8.2305e-03,  1.7082e-03, -3.1256e-02]],

         [[-3.0116e-02,  2.4004e-02,  2.2327e-02,  8.3524e-03,  1.2738e-02]],

         ...,

         [[ 3.4626e-02,  3.1467e-02, -1.4817e-02, -8.3361e-03,  1.3283e-02]],

         [[-7.2606e-03, -3.5218e-02, -3.4539e-02, -9.0124e-03, -2.9803e-02]],

         [[-2.7207e-02, -1.9567e-02, -3.6889e-02,  4.7795e-03,  3.4353e-02]]],


        [[[-1.7961e-02, -1.7170e-03, -1.4570e-02,  2.9372e-03, -1.2328e-02]],

         [[ 2.3281e-03, -5.0547e-03,  2.0389e-02, -3.8897e-02, -2.2598e-02]],

         [[ 2.9133e-02,  1.7939e-02, -3.9649e-02,  1.7301e-02, -1.2440e-02]],

         ...,

         [[ 2.9974e-02, -1.2888e-02, -8.8350e-03, -1.1009e-02,  2.1881e-02]],

         [[ 4.8540e-02, -6.7811e-03, -5.5844e-02, -1.3244e-02,  9.6992e-03]],

         [[-3.9641e-05, -4.3718e-02,  1.4609e-02,  4.3169e-02, -2.9680e-02]]],


        ...,


        [[[ 9.7796e-03, -8.7449e-03, -1.5418e-02,  2.7855e-02, -4.2410e-02]],

         [[ 8.2009e-03, -6.1587e-03,  5.6280e-03,  8.1538e-03,  2.9010e-02]],

         [[-5.7455e-03,  2.1973e-02,  2.8308e-02,  3.7848e-03,  4.0419e-03]],

         ...,

         [[-9.2945e-03,  3.7175e-02,  1.5904e-02,  1.4048e-03, -4.3315e-03]],

         [[ 2.7849e-02,  1.3206e-02,  2.6944e-02, -6.2536e-03, -1.2097e-02]],

         [[ 5.8635e-03, -1.1815e-02,  2.5352e-02, -2.2275e-03, -4.8137e-03]]],


        [[[-2.5231e-02, -7.0475e-03, -1.4598e-02, -9.1243e-03,  1.3680e-02]],

         [[ 1.6845e-02, -2.2778e-02,  1.9868e-02,  2.6948e-02,  3.8807e-02]],

         [[-2.3734e-02, -1.7805e-02, -8.5516e-03,  3.4943e-03,  9.6182e-03]],

         ...,

         [[ 5.0474e-03,  1.8489e-02, -3.4077e-03, -1.5506e-03,  2.4767e-03]],

         [[ 2.4745e-03, -7.3553e-03, -4.8802e-03, -7.8858e-03,  6.5302e-03]],

         [[ 1.0012e-02,  3.6627e-02,  2.9887e-02, -1.9060e-02,  3.7224e-02]]],


        [[[ 5.8164e-03, -4.7367e-03,  7.9818e-03, -3.4439e-02, -8.5943e-03]],

         [[ 2.3273e-02,  9.3443e-03,  1.1773e-02, -4.5504e-02, -5.5190e-02]],

         [[-1.2657e-02,  3.0735e-02,  2.7620e-02, -1.5106e-02,  2.9139e-02]],

         ...,

         [[ 6.4633e-03,  3.9019e-02,  6.6693e-03,  2.3523e-02, -3.3492e-02]],

         [[ 1.8916e-02,  8.0128e-04, -3.5024e-02, -1.6123e-02, -2.6866e-02]],

         [[-1.6152e-02, -4.5151e-03, -7.1914e-03, -6.3931e-03,  1.8968e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[-1.7360e-02],
          [-2.9393e-02],
          [-1.2520e-02],
          [ 1.2094e-02],
          [ 4.6206e-03]],

         [[-4.3715e-02],
          [ 5.0132e-02],
          [ 8.5671e-03],
          [-2.4666e-02],
          [ 1.6367e-02]],

         [[ 4.4177e-02],
          [ 9.5656e-03],
          [-4.3985e-04],
          [ 1.0674e-02],
          [-9.0549e-04]],

         ...,

         [[-5.8355e-02],
          [ 1.2257e-02],
          [ 1.0078e-02],
          [-4.2014e-02],
          [ 9.6663e-03]],

         [[ 4.2070e-03],
          [ 1.5055e-03],
          [ 1.1530e-02],
          [-1.1116e-02],
          [-6.9164e-03]],

         [[ 2.9687e-02],
          [-1.9707e-02],
          [ 5.8198e-02],
          [-3.0853e-03],
          [-1.0548e-02]]],


        [[[-6.6525e-02],
          [ 2.4028e-02],
          [-1.7879e-02],
          [ 9.9230e-03],
          [-5.7940e-03]],

         [[-4.4707e-02],
          [ 1.1115e-02],
          [-4.8856e-03],
          [ 2.5165e-03],
          [-2.6167e-02]],

         [[-9.2429e-03],
          [ 3.7911e-04],
          [-2.7215e-03],
          [ 2.9837e-02],
          [-1.6748e-02]],

         ...,

         [[-1.0819e-02],
          [ 6.3334e-02],
          [ 3.7193e-03],
          [-3.9749e-02],
          [ 1.3277e-02]],

         [[ 1.1840e-02],
          [-5.7238e-03],
          [-5.7315e-04],
          [-2.0397e-02],
          [ 2.4978e-02]],

         [[ 8.2546e-03],
          [ 2.1034e-02],
          [-7.2083e-03],
          [-8.9500e-03],
          [ 1.9766e-02]]],


        [[[-3.7196e-03],
          [ 2.8396e-02],
          [ 2.0072e-03],
          [-1.4481e-02],
          [ 2.0914e-02]],

         [[-5.1175e-02],
          [ 6.3397e-03],
          [-2.0236e-02],
          [-6.8581e-03],
          [ 6.9469e-03]],

         [[ 1.6624e-02],
          [-1.6813e-02],
          [-1.0961e-02],
          [-3.4249e-02],
          [ 3.8620e-02]],

         ...,

         [[-2.4538e-02],
          [ 9.8517e-03],
          [ 2.1373e-02],
          [ 2.1461e-02],
          [ 1.3953e-02]],

         [[-1.6985e-02],
          [ 1.1717e-02],
          [-6.8225e-03],
          [-2.3645e-02],
          [-7.9119e-02]],

         [[-1.4562e-02],
          [-2.5254e-04],
          [ 1.2964e-02],
          [ 2.1621e-02],
          [ 4.8884e-02]]],


        ...,


        [[[ 5.0043e-03],
          [ 1.5723e-02],
          [-1.6737e-03],
          [ 4.4817e-03],
          [ 4.1037e-02]],

         [[-2.4194e-02],
          [-1.8014e-02],
          [ 3.8931e-02],
          [-5.3129e-02],
          [ 9.2159e-03]],

         [[ 3.1383e-03],
          [-8.7888e-03],
          [ 3.2823e-02],
          [ 3.5799e-03],
          [-3.0830e-03]],

         ...,

         [[-3.3522e-02],
          [ 5.2012e-03],
          [ 3.0367e-02],
          [ 1.5311e-03],
          [ 4.4514e-02]],

         [[-3.2073e-02],
          [-2.3382e-02],
          [ 1.0457e-02],
          [-7.1408e-03],
          [-2.5794e-02]],

         [[-1.5526e-02],
          [ 3.9935e-02],
          [-9.7985e-03],
          [ 1.1489e-02],
          [ 2.0295e-02]]],


        [[[ 1.3709e-02],
          [ 8.1030e-03],
          [-1.8513e-02],
          [ 6.3061e-03],
          [ 1.4846e-02]],

         [[ 3.1215e-02],
          [ 3.9278e-02],
          [ 4.8871e-03],
          [ 1.5654e-02],
          [ 4.7850e-02]],

         [[ 1.1445e-02],
          [ 2.9473e-02],
          [ 1.1002e-02],
          [ 4.7218e-02],
          [-4.0200e-02]],

         ...,

         [[ 1.6956e-03],
          [-4.8675e-03],
          [-2.0946e-02],
          [-2.6597e-02],
          [ 2.5470e-03]],

         [[-3.0483e-02],
          [-4.8492e-03],
          [-3.3210e-03],
          [-1.0764e-02],
          [-4.0148e-02]],

         [[ 1.4356e-02],
          [ 2.8305e-02],
          [ 8.8609e-03],
          [-1.9561e-02],
          [ 1.1335e-02]]],


        [[[ 1.2079e-02],
          [ 2.0931e-03],
          [ 1.2765e-02],
          [ 1.4155e-02],
          [ 1.4799e-03]],

         [[ 7.0300e-03],
          [-2.2636e-02],
          [-7.9608e-03],
          [-1.3161e-02],
          [ 1.0590e-02]],

         [[-1.1862e-02],
          [ 3.6925e-05],
          [ 7.4570e-04],
          [ 2.3483e-03],
          [ 1.7251e-02]],

         ...,

         [[-9.9658e-04],
          [ 1.3003e-02],
          [ 2.7914e-02],
          [-1.0357e-02],
          [ 1.1402e-02]],

         [[ 1.2819e-02],
          [-3.8471e-03],
          [-1.0676e-03],
          [-1.1935e-02],
          [ 8.4256e-03]],

         [[ 1.1056e-02],
          [ 4.9897e-03],
          [-4.1367e-02],
          [ 8.0357e-03],
          [-1.4257e-02]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-4.9975e-02,  1.9417e-02,  1.1833e-02,  1.1555e-02,  1.0374e-02]],

         [[-1.0018e-02, -3.7850e-03,  1.5080e-02,  2.8018e-03, -2.0934e-02]],

         [[ 1.6697e-02,  1.7141e-02, -4.7616e-02,  8.7006e-03, -3.0264e-02]],

         ...,

         [[ 1.0074e-03, -1.1624e-02, -2.7513e-02,  5.2543e-04, -3.0539e-02]],

         [[ 1.9079e-02,  5.7474e-03,  4.0167e-02, -6.9316e-03, -1.1112e-02]],

         [[-2.4171e-02,  4.7810e-02,  3.5701e-03,  2.4000e-03, -1.1444e-03]]],


        [[[-1.6709e-02, -9.6576e-03, -3.3535e-03,  1.4042e-03,  5.8306e-03]],

         [[ 1.7965e-02,  2.7610e-02, -1.6033e-02,  3.1619e-02, -1.0498e-02]],

         [[ 1.0500e-02, -3.0689e-03,  6.7693e-03, -2.6124e-02, -5.2944e-03]],

         ...,

         [[ 2.6327e-03,  3.2872e-02,  8.7466e-03, -2.8575e-03, -1.5506e-02]],

         [[ 9.0218e-03, -3.6957e-03, -2.1887e-02,  1.2654e-02, -1.1274e-02]],

         [[-3.3030e-02,  1.0901e-02,  1.2658e-02, -1.1071e-02,  2.0300e-02]]],


        [[[ 1.3415e-02, -6.3385e-04,  2.4611e-03, -2.4708e-02,  3.3628e-02]],

         [[ 2.1796e-02,  8.5872e-03,  8.0581e-03, -1.3926e-02, -2.6031e-02]],

         [[-1.5145e-02, -8.2595e-03,  2.0878e-02,  3.5335e-02, -1.5294e-04]],

         ...,

         [[ 1.7509e-02, -1.9312e-02, -5.3249e-03, -1.0556e-02, -2.9118e-02]],

         [[-2.6453e-02, -2.4572e-02,  2.0251e-02, -1.1735e-02, -1.8169e-02]],

         [[ 1.1401e-02, -4.9821e-02,  2.2147e-02,  7.2200e-04,  7.8204e-03]]],


        ...,


        [[[ 8.0935e-03, -1.8528e-02, -2.0016e-02,  2.6761e-02,  1.6084e-02]],

         [[ 3.0674e-02,  7.4082e-04,  3.5616e-03, -3.2111e-02, -7.6601e-03]],

         [[ 8.4127e-03,  8.9726e-03, -1.1564e-03,  1.9636e-02,  8.3774e-03]],

         ...,

         [[ 3.1889e-02, -9.2702e-03,  9.1064e-03, -2.4737e-03,  2.0753e-02]],

         [[-2.0167e-02,  6.4410e-03, -1.9902e-02, -1.5780e-02,  1.4718e-03]],

         [[ 4.8333e-03, -1.2469e-02, -2.0238e-02, -1.1507e-02, -9.6731e-03]]],


        [[[-2.0471e-02,  3.4770e-03,  1.0697e-05, -3.1547e-02,  1.8121e-02]],

         [[-1.3157e-02, -4.4949e-02, -1.7464e-02, -3.3353e-03, -1.9443e-02]],

         [[-1.7575e-02,  4.5529e-02,  3.1636e-02,  1.2781e-02, -1.0044e-02]],

         ...,

         [[-4.3348e-02,  1.4052e-02,  2.3153e-02,  3.0213e-02, -1.8131e-02]],

         [[-3.7274e-02,  2.0589e-02, -2.0229e-02, -2.5797e-02, -2.6337e-02]],

         [[-1.8129e-02,  6.0453e-03, -9.9655e-03,  2.9480e-03,  3.5429e-02]]],


        [[[-2.0388e-03,  9.0538e-03,  3.4385e-02,  1.6116e-02, -3.0923e-03]],

         [[-1.9619e-04, -2.9376e-02,  2.1783e-02, -5.3959e-02,  1.3125e-02]],

         [[-6.7646e-03, -3.7787e-02, -1.4869e-02,  2.6363e-02, -1.1002e-02]],

         ...,

         [[-2.3123e-03,  2.6529e-02,  1.5357e-02, -1.5933e-02,  6.6281e-03]],

         [[-7.0371e-03,  3.0019e-03,  1.4110e-02, -3.3673e-02, -4.1917e-02]],

         [[ 1.2238e-02,  1.8528e-02, -4.3361e-02,  3.6777e-03,  4.8670e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-1.1224e-02],
          [ 7.7319e-03],
          [ 1.3878e-02],
          [-2.8590e-02],
          [-2.1562e-02]],

         [[-3.9099e-02],
          [-3.4080e-02],
          [ 1.6363e-02],
          [-1.1981e-02],
          [ 1.3229e-02]],

         [[-7.8738e-03],
          [ 9.6990e-03],
          [ 4.3300e-03],
          [-1.7417e-02],
          [ 1.7098e-02]],

         ...,

         [[-1.8071e-02],
          [-2.7267e-04],
          [ 3.5451e-03],
          [-1.6392e-02],
          [ 4.4612e-03]],

         [[-3.3094e-02],
          [ 5.1421e-02],
          [ 5.3345e-02],
          [-5.9033e-02],
          [-3.3284e-04]],

         [[ 3.7163e-02],
          [-6.5516e-03],
          [ 2.9948e-02],
          [-8.4074e-03],
          [ 6.9533e-02]]],


        [[[ 1.2110e-02],
          [ 2.4509e-02],
          [ 4.6588e-03],
          [ 1.3147e-02],
          [-1.8896e-02]],

         [[-1.3453e-02],
          [ 1.6719e-02],
          [-9.7759e-03],
          [ 1.8220e-02],
          [-3.3574e-02]],

         [[ 3.7876e-03],
          [ 1.0526e-02],
          [ 4.2867e-03],
          [-9.0583e-03],
          [ 1.8683e-02]],

         ...,

         [[-1.3958e-02],
          [ 5.0888e-03],
          [ 2.8565e-03],
          [-3.9449e-02],
          [-2.3304e-03]],

         [[ 3.2029e-02],
          [ 2.1574e-02],
          [ 2.1392e-02],
          [-1.4323e-02],
          [-7.3114e-03]],

         [[ 4.2450e-02],
          [-1.9599e-02],
          [-2.8198e-02],
          [ 2.2429e-02],
          [-4.0227e-03]]],


        [[[ 2.9564e-02],
          [-4.7266e-02],
          [ 4.0531e-04],
          [-1.3600e-02],
          [-2.3695e-02]],

         [[ 8.0805e-03],
          [-7.7873e-03],
          [-2.1827e-02],
          [-1.4585e-02],
          [ 2.7632e-02]],

         [[ 5.8286e-02],
          [-5.0805e-04],
          [ 2.2726e-02],
          [ 1.1676e-02],
          [-1.0957e-02]],

         ...,

         [[-6.3713e-03],
          [-1.4331e-02],
          [-5.9133e-02],
          [ 4.8328e-05],
          [-1.2070e-02]],

         [[ 1.2324e-02],
          [-2.3594e-02],
          [-1.9929e-02],
          [ 7.7502e-03],
          [ 4.6653e-04]],

         [[-1.7423e-02],
          [-2.8580e-03],
          [ 2.3244e-03],
          [-1.3643e-02],
          [ 1.6304e-02]]],


        ...,


        [[[ 1.4236e-03],
          [-7.6404e-03],
          [ 2.6959e-04],
          [-2.1673e-02],
          [ 1.4213e-02]],

         [[-2.5217e-02],
          [-2.6825e-02],
          [-3.1272e-02],
          [ 1.2030e-02],
          [ 3.3128e-02]],

         [[ 4.0628e-02],
          [-1.0949e-02],
          [ 1.8304e-02],
          [-5.6171e-03],
          [-4.1854e-03]],

         ...,

         [[-2.0096e-03],
          [-1.0308e-02],
          [ 1.4461e-02],
          [ 2.3686e-02],
          [-1.8855e-02]],

         [[ 2.6365e-02],
          [-4.0235e-02],
          [-1.6403e-03],
          [ 1.9026e-02],
          [-1.0479e-02]],

         [[ 2.4453e-03],
          [ 6.9037e-03],
          [ 6.8373e-03],
          [-1.9760e-02],
          [-1.1994e-02]]],


        [[[-2.1918e-03],
          [ 1.6486e-02],
          [-4.0792e-02],
          [-3.2720e-02],
          [ 1.3337e-02]],

         [[ 1.1709e-02],
          [-2.8456e-02],
          [-1.9791e-03],
          [-3.0849e-03],
          [-2.3382e-03]],

         [[-2.5087e-02],
          [ 1.1376e-02],
          [ 9.3684e-03],
          [ 1.6517e-02],
          [-7.5894e-03]],

         ...,

         [[-7.2272e-03],
          [-1.2584e-02],
          [-1.2256e-02],
          [-1.2593e-02],
          [ 3.6388e-02]],

         [[-3.4172e-03],
          [ 8.4600e-03],
          [-1.4433e-02],
          [ 1.3858e-02],
          [ 1.7197e-02]],

         [[ 1.1427e-02],
          [ 1.1264e-03],
          [-1.8416e-02],
          [-8.2724e-03],
          [ 1.6587e-02]]],


        [[[ 1.3649e-02],
          [ 3.1331e-02],
          [-1.4095e-02],
          [ 1.0611e-02],
          [ 9.7759e-05]],

         [[ 4.6836e-02],
          [ 1.2338e-02],
          [-2.4841e-02],
          [ 5.5911e-03],
          [-1.1675e-03]],

         [[ 3.0087e-02],
          [-2.9926e-02],
          [-2.3674e-03],
          [-7.6623e-03],
          [ 3.7446e-02]],

         ...,

         [[ 2.1848e-02],
          [ 3.1922e-02],
          [ 3.8576e-02],
          [ 2.7720e-02],
          [-9.3462e-03]],

         [[-6.9815e-03],
          [-1.9851e-02],
          [ 1.3131e-02],
          [-6.1748e-03],
          [-1.0616e-02]],

         [[ 9.3569e-03],
          [ 2.6665e-02],
          [ 8.1964e-03],
          [ 1.2346e-02],
          [ 3.6578e-02]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-0.0119, -0.0327,  0.0185],
          [ 0.0065, -0.0288,  0.0338],
          [-0.0149,  0.0090,  0.0097]],

         [[ 0.0512, -0.0219,  0.0101],
          [-0.0376, -0.0394, -0.0007],
          [-0.0112, -0.0395,  0.0367]],

         [[ 0.0251, -0.0248,  0.0141],
          [-0.0249, -0.0121, -0.0051],
          [ 0.0301,  0.0480, -0.0157]],

         ...,

         [[ 0.0143, -0.0148, -0.0739],
          [-0.0346, -0.0525, -0.0232],
          [ 0.0307, -0.0514,  0.0315]],

         [[ 0.0365, -0.0291, -0.0286],
          [-0.0038, -0.0055,  0.0423],
          [-0.0433, -0.0109,  0.0049]],

         [[-0.0487, -0.0219,  0.0044],
          [-0.0163, -0.0088,  0.0147],
          [-0.0028,  0.0282, -0.0131]]],


        [[[ 0.0015, -0.0791,  0.0084],
          [-0.0131, -0.0099,  0.0389],
          [-0.0037, -0.0099,  0.0296]],

         [[ 0.0020, -0.0292,  0.0084],
          [-0.0448, -0.0513, -0.0357],
          [-0.0565, -0.0104,  0.0228]],

         [[-0.0034, -0.0118,  0.0045],
          [ 0.0214,  0.0178, -0.0368],
          [-0.0240,  0.0154,  0.0052]],

         ...,

         [[ 0.0217, -0.0688,  0.0643],
          [ 0.0255,  0.0137, -0.0104],
          [-0.0018,  0.0080,  0.0158]],

         [[ 0.0272, -0.0194,  0.0379],
          [ 0.0041, -0.0277,  0.0314],
          [-0.0453, -0.0049,  0.0174]],

         [[ 0.0509, -0.0110,  0.0474],
          [-0.0271,  0.0203,  0.0284],
          [-0.0022, -0.0074,  0.0193]]],


        [[[ 0.0294, -0.0270,  0.0080],
          [-0.0106, -0.0185, -0.0008],
          [-0.0100,  0.0162, -0.0482]],

         [[ 0.0017, -0.0335, -0.0097],
          [ 0.0191, -0.0051,  0.0196],
          [-0.0520, -0.0081, -0.0006]],

         [[ 0.0217,  0.0217, -0.0569],
          [-0.0104, -0.0445,  0.0283],
          [-0.0075,  0.0193, -0.0242]],

         ...,

         [[ 0.0647,  0.0582, -0.0150],
          [ 0.0058,  0.0104, -0.0297],
          [-0.0273, -0.0068,  0.0386]],

         [[ 0.0339,  0.0109, -0.0315],
          [ 0.0007,  0.0240,  0.0199],
          [-0.0520,  0.0234,  0.0118]],

         [[-0.0172,  0.0465,  0.0665],
          [ 0.0038, -0.0105,  0.0046],
          [ 0.0451,  0.0604, -0.0687]]],


        ...,


        [[[-0.0224,  0.0052, -0.0242],
          [ 0.0020, -0.0074, -0.0282],
          [-0.0130,  0.0425, -0.0174]],

         [[-0.0138,  0.0193, -0.0388],
          [ 0.0062,  0.0139,  0.0541],
          [-0.0167,  0.0510, -0.0313]],

         [[-0.0038, -0.0115, -0.0172],
          [ 0.0186,  0.0174,  0.0258],
          [-0.0563,  0.0015, -0.0194]],

         ...,

         [[-0.0553,  0.0071, -0.0292],
          [ 0.0402, -0.0208,  0.0029],
          [ 0.0097, -0.0020, -0.0070]],

         [[ 0.0400, -0.0012, -0.0155],
          [ 0.0075, -0.0388,  0.0273],
          [ 0.0268, -0.0364, -0.0428]],

         [[-0.0263, -0.0368, -0.0108],
          [ 0.0389,  0.0379,  0.0421],
          [-0.0075,  0.0047, -0.0483]]],


        [[[-0.0130,  0.0334,  0.0181],
          [-0.0079,  0.0294, -0.0057],
          [-0.0212,  0.0088, -0.0001]],

         [[ 0.0381, -0.0298,  0.0005],
          [-0.0064, -0.0063, -0.0049],
          [-0.0238, -0.0172, -0.0223]],

         [[ 0.0007, -0.0330, -0.0045],
          [-0.0447, -0.0746,  0.0282],
          [ 0.0083,  0.0589, -0.0057]],

         ...,

         [[ 0.0397,  0.0371,  0.0171],
          [-0.0093, -0.0411, -0.0699],
          [-0.0175, -0.0012, -0.0083]],

         [[ 0.0377, -0.0430,  0.0332],
          [ 0.0378,  0.0513, -0.0082],
          [-0.0274, -0.0109, -0.0500]],

         [[ 0.0003, -0.0502, -0.0114],
          [-0.0376, -0.0039,  0.0251],
          [ 0.0385, -0.0653,  0.0503]]],


        [[[-0.0168,  0.0890,  0.0043],
          [ 0.0244,  0.0219,  0.0071],
          [ 0.0495,  0.0250,  0.0090]],

         [[-0.0413, -0.0204, -0.0528],
          [ 0.0399,  0.0214, -0.0102],
          [-0.0035,  0.0649, -0.0346]],

         [[ 0.0147, -0.0233, -0.0289],
          [-0.0229,  0.0144, -0.0095],
          [ 0.0102, -0.0027,  0.0169]],

         ...,

         [[ 0.0441, -0.0250, -0.0129],
          [ 0.0062, -0.0527,  0.0715],
          [ 0.0068, -0.0373,  0.0192]],

         [[-0.0187,  0.0170,  0.0331],
          [-0.0056,  0.0249,  0.0278],
          [ 0.0120, -0.0095,  0.0350]],

         [[-0.0241, -0.0070, -0.0203],
          [ 0.0005,  0.0163, -0.0497],
          [ 0.0253,  0.0350,  0.0620]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[ 0.0024,  0.0140,  0.0172],
          [-0.0026, -0.0144, -0.0157],
          [ 0.0134,  0.0032, -0.0200]],

         [[ 0.0069,  0.0009, -0.0003],
          [-0.0043, -0.0176, -0.0162],
          [ 0.0079,  0.0062, -0.0142]],

         [[-0.0004,  0.0052, -0.0069],
          [-0.0161,  0.0109, -0.0091],
          [-0.0132, -0.0036,  0.0040]],

         ...,

         [[-0.0091, -0.0191,  0.0113],
          [-0.0173,  0.0180,  0.0206],
          [ 0.0131, -0.0090,  0.0124]],

         [[ 0.0088, -0.0092,  0.0010],
          [-0.0208,  0.0076,  0.0150],
          [ 0.0058, -0.0118,  0.0196]],

         [[-0.0077, -0.0109,  0.0156],
          [-0.0126,  0.0100,  0.0096],
          [ 0.0061, -0.0025,  0.0123]]],


        [[[ 0.0005,  0.0082, -0.0074],
          [-0.0026,  0.0150,  0.0180],
          [-0.0174,  0.0133,  0.0184]],

         [[-0.0017,  0.0195, -0.0089],
          [ 0.0188,  0.0129,  0.0090],
          [-0.0174,  0.0120,  0.0116]],

         [[ 0.0118, -0.0202,  0.0151],
          [ 0.0168,  0.0133,  0.0196],
          [-0.0149,  0.0207, -0.0056]],

         ...,

         [[ 0.0108, -0.0055,  0.0088],
          [ 0.0055,  0.0115,  0.0075],
          [ 0.0019,  0.0049, -0.0053]],

         [[ 0.0206,  0.0056,  0.0156],
          [-0.0171, -0.0158, -0.0104],
          [-0.0088, -0.0082,  0.0172]],

         [[ 0.0065, -0.0060, -0.0110],
          [ 0.0080, -0.0010,  0.0144],
          [ 0.0042,  0.0115, -0.0182]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([-0.0091, -0.0152], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-3.8818e-03,  4.2806e-03,  5.0195e-02],
          [-8.6416e-03,  2.9431e-02, -1.4750e-02],
          [-1.3999e-03, -4.0632e-02,  9.3837e-03]],

         [[ 1.2914e-04, -1.9538e-02, -1.2471e-02],
          [ 1.4968e-02, -2.9995e-02, -1.3588e-02],
          [-4.4495e-02, -4.1702e-02, -2.9726e-02]],

         [[-4.6560e-02, -1.2665e-02, -2.8725e-02],
          [ 1.2101e-02,  1.9537e-03, -2.5741e-02],
          [-2.5002e-02,  3.6804e-02, -3.7429e-03]],

         ...,

         [[ 3.6178e-02,  7.0545e-03, -3.0627e-02],
          [ 6.6525e-03, -2.6215e-02, -2.9130e-02],
          [-6.1418e-02,  1.9231e-03,  6.8835e-03]],

         [[ 2.0013e-02, -4.5139e-02,  1.7879e-02],
          [ 4.2329e-02,  8.8506e-03,  4.0531e-02],
          [-1.3764e-02,  6.7757e-02, -1.5864e-02]],

         [[ 3.3567e-02,  3.6195e-02, -4.4547e-02],
          [-3.3522e-02,  2.3619e-02,  3.6538e-03],
          [-3.5761e-02, -2.5291e-02, -1.6008e-02]]],


        [[[-8.4614e-03, -3.0619e-02, -2.2527e-02],
          [ 2.6153e-02, -4.5905e-03, -4.8601e-02],
          [-1.8770e-02, -3.2760e-03,  1.8337e-03]],

         [[ 4.2772e-02, -1.1608e-02,  2.8583e-02],
          [ 2.9643e-02, -2.2999e-02, -4.2456e-02],
          [ 3.1860e-02,  3.5277e-02,  2.0804e-02]],

         [[-1.8532e-02, -1.9796e-02,  1.6240e-02],
          [-8.8682e-03,  2.2399e-02, -2.2440e-02],
          [ 3.7642e-02,  8.5316e-02, -1.6414e-02]],

         ...,

         [[ 3.6722e-04, -1.4963e-02, -1.7609e-02],
          [ 2.8789e-03,  1.3715e-02, -1.3442e-02],
          [ 7.8979e-02,  4.4063e-02, -1.6259e-02]],

         [[-3.2479e-04,  2.6582e-02,  7.4047e-03],
          [ 2.1186e-02, -3.2191e-02, -5.9069e-03],
          [-2.5804e-02, -1.5666e-02, -2.1742e-02]],

         [[ 1.4270e-02,  3.8098e-02,  5.0456e-02],
          [-1.9937e-02,  1.1468e-03,  4.0469e-03],
          [ 2.0003e-02,  9.0066e-03,  3.8767e-04]]],


        [[[-1.9985e-02,  1.8129e-02, -6.5680e-03],
          [-1.8854e-02,  1.8151e-02,  3.3584e-02],
          [ 6.5198e-03, -3.3270e-03, -3.7139e-02]],

         [[-4.2249e-03, -7.7545e-03,  2.6132e-02],
          [ 6.5355e-02,  1.8571e-04,  1.4759e-02],
          [-1.7207e-02, -3.1763e-03, -3.5476e-02]],

         [[-2.1634e-02, -3.6415e-02,  1.5897e-02],
          [ 2.6973e-02,  1.9261e-02, -1.6958e-02],
          [ 4.7219e-02, -2.9823e-02,  1.4078e-02]],

         ...,

         [[ 6.0234e-02,  5.6142e-03,  6.2761e-02],
          [ 1.9286e-02,  9.0909e-03,  8.5471e-03],
          [-3.4733e-02, -3.4961e-02,  2.1378e-02]],

         [[-4.7280e-02,  4.1829e-02, -4.1900e-02],
          [-1.3259e-03, -2.7320e-03, -1.9472e-02],
          [-2.8937e-02, -3.4752e-02, -2.1361e-02]],

         [[-1.3090e-02, -1.3279e-02, -1.0196e-02],
          [-1.1055e-02,  1.3018e-02,  7.9635e-03],
          [-6.0390e-02, -1.3217e-02,  3.2900e-02]]],


        ...,


        [[[ 2.7524e-02, -1.4729e-02,  2.3690e-02],
          [-4.0185e-02,  3.0877e-02,  3.6372e-03],
          [ 2.2835e-02, -9.5018e-03,  5.3332e-02]],

         [[-3.0424e-02, -7.9434e-03,  3.3483e-02],
          [ 4.2030e-02, -1.6573e-03,  1.7175e-03],
          [-2.2120e-02, -4.8685e-02,  1.5558e-02]],

         [[ 2.6286e-04, -1.0839e-02, -2.0477e-02],
          [ 2.6565e-03,  2.2391e-03, -2.2526e-02],
          [ 2.1042e-02,  3.2804e-02, -3.8112e-02]],

         ...,

         [[-2.7265e-03,  1.8113e-02, -2.5393e-02],
          [-2.6910e-02,  3.7538e-02,  2.3948e-02],
          [-3.4995e-02,  7.5756e-02,  2.9793e-02]],

         [[ 3.5348e-03, -5.6124e-02,  1.1031e-02],
          [ 2.9082e-02, -4.3506e-02, -8.3530e-03],
          [ 3.4563e-02, -1.1262e-02, -2.4587e-02]],

         [[ 2.0338e-02,  9.2710e-02,  2.6224e-02],
          [ 2.7232e-02, -3.8281e-02, -2.0215e-03],
          [-2.0453e-03, -3.0291e-02,  2.4469e-03]]],


        [[[ 5.9353e-02, -1.1341e-02,  7.7976e-03],
          [-5.1712e-03, -1.4797e-02, -2.6513e-02],
          [-8.3227e-03, -2.0849e-02,  4.7339e-02]],

         [[ 3.1464e-02,  1.1913e-02, -3.6739e-02],
          [-1.2069e-02,  2.9968e-02, -5.0582e-02],
          [ 8.3514e-03,  3.2226e-03, -5.0514e-02]],

         [[-1.5200e-02, -4.0247e-03,  2.4214e-02],
          [ 1.1749e-03, -1.3166e-02,  3.5804e-02],
          [ 1.6168e-02,  4.9495e-02, -2.4532e-02]],

         ...,

         [[-3.8280e-02, -1.5499e-02, -1.6234e-02],
          [-2.3635e-02, -2.4250e-02, -1.0980e-02],
          [ 1.3548e-02, -5.3200e-02,  6.3506e-02]],

         [[-2.3997e-02, -3.1095e-02,  6.2555e-02],
          [ 1.0014e-02, -3.6746e-02,  2.8908e-02],
          [ 4.8440e-02, -6.6805e-03,  4.6947e-02]],

         [[-4.0970e-03, -1.8836e-02, -3.9938e-02],
          [-2.3446e-02,  1.0676e-02, -3.2772e-03],
          [ 1.3400e-02,  1.9701e-02,  9.5665e-03]]],


        [[[-2.6063e-02, -3.4834e-02, -7.6341e-03],
          [-1.1488e-02, -2.4459e-02,  3.0366e-02],
          [-3.4988e-02,  3.0913e-02,  2.0163e-02]],

         [[ 3.1084e-02, -2.7493e-03, -2.7770e-02],
          [ 3.3573e-02,  9.5514e-03, -2.5902e-02],
          [-2.2821e-02, -3.4296e-03, -3.7968e-02]],

         [[ 2.8845e-02,  7.8869e-03,  4.1586e-02],
          [-1.5959e-02, -2.1940e-03,  9.3846e-03],
          [-1.4569e-02,  2.2906e-03,  2.4440e-03]],

         ...,

         [[-2.6921e-02, -4.1980e-02,  1.8529e-02],
          [ 4.8140e-02, -9.4508e-03,  2.1838e-02],
          [-3.4932e-02,  2.0444e-02, -3.0471e-02]],

         [[ 7.5823e-05, -1.4046e-02, -4.9952e-03],
          [ 1.0739e-02, -1.4461e-02, -3.8093e-02],
          [-2.0603e-02, -3.5666e-02,  2.3463e-02]],

         [[-7.3696e-02, -5.7748e-03,  2.9482e-02],
          [ 4.1821e-03, -2.3512e-02,  1.2202e-02],
          [-2.5590e-02, -5.0833e-03, -3.4287e-02]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[ 0.0082]],

         [[ 0.0128]],

         [[ 0.0285]],

         ...,

         [[-0.0365]],

         [[-0.0184]],

         [[-0.0527]]],


        [[[ 0.0258]],

         [[ 0.0327]],

         [[ 0.0549]],

         ...,

         [[ 0.0514]],

         [[ 0.0624]],

         [[-0.0621]]],


        [[[ 0.0145]],

         [[ 0.0350]],

         [[-0.0465]],

         ...,

         [[-0.0229]],

         [[ 0.0099]],

         [[-0.0466]]],


        ...,


        [[[ 0.0421]],

         [[-0.0031]],

         [[ 0.0279]],

         ...,

         [[ 0.0437]],

         [[ 0.0507]],

         [[ 0.0321]]],


        [[[ 0.0004]],

         [[ 0.0293]],

         [[ 0.0213]],

         ...,

         [[ 0.0622]],

         [[ 0.0074]],

         [[ 0.0158]]],


        [[[-0.0068]],

         [[ 0.0461]],

         [[ 0.0369]],

         ...,

         [[ 0.0348]],

         [[ 0.0317]],

         [[-0.0315]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([ 2.1033e-02, -5.8048e-02, -4.7773e-02, -3.5048e-02,  4.7738e-02,
         1.8804e-02,  4.0857e-02, -1.1476e-02, -3.7117e-03, -3.9627e-02,
        -2.4484e-02,  2.4601e-02,  5.5061e-02, -4.4616e-02, -5.2091e-02,
        -1.6475e-02,  5.3343e-02,  5.0655e-02,  5.4448e-02, -5.9738e-02,
        -5.8921e-02,  3.3747e-03,  8.4361e-03, -3.5913e-02,  8.6262e-03,
         2.0018e-02, -2.7422e-03,  6.2279e-02,  1.2704e-02,  2.9727e-02,
         2.1857e-02,  5.0370e-03, -1.8207e-02, -5.7197e-02, -1.4655e-02,
        -1.1395e-02, -4.5059e-02, -2.2109e-02,  2.5560e-02,  6.1480e-02,
        -3.2262e-02,  2.3853e-02,  2.8212e-02,  2.9309e-02, -4.9776e-02,
         5.8650e-02, -3.4621e-02,  1.6376e-02,  5.0841e-02,  1.7644e-02,
        -4.4535e-02, -1.4885e-02, -4.7091e-02, -4.7989e-03, -5.2209e-02,
         4.8003e-02,  5.3884e-02, -6.0128e-02, -4.9622e-03, -1.2460e-02,
        -2.5463e-02,  1.2755e-02,  1.1264e-02,  4.2807e-02,  2.9011e-02,
         1.4825e-02,  4.9105e-02, -7.5530e-03,  6.0164e-02,  2.5470e-02,
        -2.9553e-02,  6.0217e-02, -1.7093e-02,  1.3215e-02, -2.4689e-02,
        -8.2256e-03,  5.4264e-02,  1.2271e-02, -1.7705e-03, -5.6822e-02,
         1.3025e-02, -5.0968e-02, -2.0382e-02,  2.4871e-02,  5.7945e-02,
        -4.3274e-02, -4.5351e-02,  2.9911e-02,  3.6387e-02, -5.6924e-02,
         5.3615e-02,  4.8812e-02,  5.0263e-02, -5.6691e-02,  3.6811e-02,
         4.7672e-02, -2.1983e-02,  1.7898e-02, -3.1533e-03,  6.2483e-02,
         5.9731e-02, -2.2788e-02,  1.9799e-02,  5.3859e-02, -1.5554e-02,
         4.9636e-02, -6.0166e-02,  1.4248e-02, -2.9931e-03, -1.6026e-02,
        -1.6145e-02, -4.9088e-02,  2.4008e-02,  3.2632e-02, -8.4360e-03,
        -3.2010e-02, -1.9368e-02, -3.4336e-02, -3.2276e-03, -3.4099e-02,
        -4.0604e-02,  4.9241e-02,  3.0003e-02, -6.1488e-02,  3.7099e-02,
        -4.6151e-02, -3.9516e-02,  2.3680e-02, -1.2117e-02, -1.8680e-02,
         4.8154e-02,  6.5618e-03, -2.0780e-02, -5.2078e-02,  1.2264e-02,
        -2.5938e-02, -2.0637e-02,  3.5723e-02,  6.1144e-02,  1.4780e-02,
         3.9884e-02, -5.3935e-02, -1.2594e-02, -2.8500e-02, -1.9718e-02,
         2.7090e-02, -4.2961e-02, -2.3051e-03,  4.1245e-03, -2.5676e-02,
         7.6807e-03,  4.8196e-02, -5.3405e-02, -1.4220e-02, -3.2588e-02,
        -4.6752e-02, -6.0293e-02,  5.6184e-02,  1.2334e-02, -2.9754e-02,
        -1.0232e-02,  5.8637e-02,  8.5028e-03,  5.6107e-02,  9.4093e-03,
        -5.6573e-02,  3.3777e-02, -5.2902e-02,  5.9606e-02,  1.3480e-02,
        -3.8942e-02, -5.9054e-03,  2.6279e-03,  5.5490e-02,  2.5608e-03,
        -1.8726e-03, -1.2618e-02,  3.2552e-02,  4.3216e-02, -2.3089e-02,
         6.5472e-03,  4.7011e-02,  3.2579e-02,  5.3312e-03,  5.9910e-02,
        -3.8539e-04, -4.9165e-02, -3.2009e-02,  3.7952e-02, -7.3823e-03,
        -2.0775e-03,  1.4833e-02, -7.5656e-03, -4.0402e-03,  2.5681e-02,
        -3.2991e-02, -2.9278e-02,  1.9004e-02,  2.1045e-03,  4.5136e-02,
         5.8273e-02, -4.2209e-02, -4.7137e-02, -3.8553e-02, -4.5680e-02,
        -1.1232e-02,  3.5804e-02, -1.0766e-02,  4.2813e-03, -4.7844e-02,
         2.3550e-02, -3.7489e-02,  3.2568e-02, -3.6956e-02, -4.9823e-02,
        -5.7167e-02, -3.9145e-04,  6.1604e-02, -6.0408e-02, -2.5987e-03,
         5.6642e-02, -2.9572e-02,  4.4221e-02, -8.5582e-03,  5.9546e-02,
         1.1644e-02, -7.9781e-03,  5.4623e-02, -3.2877e-02,  1.8651e-03,
         1.2208e-02,  3.6971e-02,  2.6471e-02,  2.9306e-02, -5.6288e-02,
        -4.9373e-02,  2.0357e-02,  1.1003e-02, -1.2099e-02, -3.9866e-02,
        -1.5006e-02,  4.8290e-02,  5.5123e-02,  1.4554e-02,  5.8791e-03,
         5.0735e-02, -3.4751e-02,  4.0849e-02,  5.7668e-02, -5.3102e-02,
        -3.1798e-03, -2.7056e-02, -4.7534e-02,  4.4001e-02, -2.7301e-02,
         3.8005e-02, -4.0709e-02, -1.2173e-02, -2.5841e-02, -2.0498e-02,
         7.4054e-03,  8.6112e-03,  6.0772e-02,  6.0593e-02, -7.6745e-03,
        -1.9512e-02, -3.7819e-02,  2.1559e-02,  6.0388e-02, -4.6958e-02,
         9.8268e-04,  6.1114e-02, -5.2095e-02,  2.3484e-02,  6.1238e-02,
        -3.1392e-02,  5.5225e-02,  4.8629e-02, -5.4941e-02,  5.1611e-02,
        -1.7818e-02, -2.8864e-02, -4.3531e-02, -5.5916e-02, -1.6376e-02,
        -5.0709e-02, -5.5658e-02, -5.6711e-02,  4.1468e-02, -1.4342e-03,
        -4.6837e-02,  4.5144e-03,  2.2647e-02,  2.6990e-02, -7.9183e-03,
         1.9529e-02, -1.5233e-02,  4.9423e-02, -2.5000e-02, -3.4300e-02,
         5.6481e-02, -4.7471e-02,  4.6182e-02,  4.5588e-02,  5.8987e-02,
         4.2894e-02,  1.9093e-02,  6.1200e-02,  1.7485e-02, -5.3725e-04,
        -1.4275e-02, -2.2662e-02, -6.0405e-02, -4.8564e-03, -9.8260e-03,
        -7.1385e-03, -2.8991e-02, -1.8065e-02, -6.3106e-03, -4.4867e-02,
        -2.5213e-02, -5.6404e-02, -6.0044e-04, -3.0620e-02, -1.6741e-02,
        -3.4643e-02, -3.8964e-03, -4.8848e-02, -3.4605e-02, -6.0780e-02,
        -4.6663e-02,  1.7486e-02,  5.5588e-02, -3.2478e-02,  2.1601e-02,
        -3.9719e-03,  1.1149e-02,  5.7922e-02, -4.1553e-02,  2.5375e-02,
         4.8868e-02, -3.1326e-02,  8.6812e-03,  1.1235e-02,  2.3249e-02,
        -5.7449e-02,  4.8205e-04, -3.7185e-02,  1.0824e-02,  1.6358e-02,
         2.0046e-03, -4.5531e-02, -8.4132e-03, -6.1177e-02,  5.8333e-02,
        -3.3284e-02,  3.7392e-02,  6.0982e-02, -3.6422e-02,  4.2864e-02,
        -2.9275e-02,  2.1218e-02,  2.7914e-02, -3.4749e-02, -1.2592e-02,
         5.6466e-02,  3.6931e-02, -2.7834e-02, -5.9334e-02, -4.8920e-02,
         2.8368e-02,  8.4961e-03,  4.6813e-02, -1.5442e-02,  5.7235e-02,
        -5.4247e-02, -3.7597e-02,  3.1825e-02, -4.5443e-03,  2.5647e-02,
         4.6003e-02, -3.8041e-02, -4.4338e-02,  5.6314e-02, -6.0815e-02,
        -4.6462e-02, -2.3097e-02, -2.1575e-02, -2.2300e-02, -1.9521e-05,
        -3.1156e-02,  1.4469e-02, -6.9724e-04,  3.2292e-03,  2.8813e-02,
        -3.1081e-02,  3.7931e-03, -2.6645e-02,  4.7481e-02, -1.1500e-02,
         5.5040e-02,  2.5048e-02, -2.9285e-02,  3.4551e-02, -1.8417e-03,
         4.6028e-02,  2.4346e-02, -1.4907e-02, -7.5440e-03, -1.9568e-02,
        -3.3854e-02,  5.8793e-02, -2.4519e-02,  1.6464e-02,  3.4835e-02,
         3.5348e-02,  4.7108e-02,  3.2052e-04,  5.9759e-02,  5.5321e-03,
        -1.9058e-02,  5.7448e-02,  3.3748e-02,  8.7824e-03, -5.2453e-02,
        -2.8309e-02, -1.6920e-02,  4.4516e-02,  3.8509e-02,  4.7104e-02,
        -5.7007e-02, -2.3839e-02,  5.0176e-02, -2.1784e-02, -5.3360e-03,
        -4.7791e-02,  1.5019e-02,  4.0138e-02, -2.0062e-02, -4.0987e-02,
         4.3878e-02, -6.1353e-02, -5.9743e-02, -1.9318e-02,  1.7644e-02,
         4.6822e-02,  1.6580e-02, -4.2555e-03,  3.8155e-02,  3.2306e-02,
         5.3139e-02,  5.3986e-02, -3.7414e-02, -2.0274e-03, -4.5595e-02,
        -2.1357e-02,  1.6334e-02,  3.2199e-03,  1.1027e-02, -1.7583e-02,
        -1.6918e-02, -3.6995e-02, -4.1868e-02,  3.5399e-02, -2.2195e-02,
         5.6178e-02,  1.5074e-02, -5.3695e-02, -1.4043e-02, -5.8934e-02,
         6.1319e-02,  3.8350e-02, -2.6193e-02,  5.5285e-02,  4.3400e-02,
         5.1676e-02,  1.9043e-02,  1.6115e-02,  5.2680e-02, -1.1963e-02,
         1.1908e-02,  3.0969e-02,  2.1013e-02, -3.4721e-02, -3.2136e-02,
         8.4049e-04, -3.2715e-02, -5.7825e-04, -4.1761e-02,  1.9926e-02,
         3.9522e-02,  1.4134e-03, -3.6893e-03,  3.8037e-02,  2.4670e-04,
         2.0053e-02,  5.0535e-02, -3.5636e-02, -2.6500e-02,  3.5505e-02,
         4.9581e-02, -5.7840e-02, -9.1126e-03,  5.5307e-03, -3.0068e-02,
         1.2349e-02,  5.9894e-02, -5.7638e-02, -3.4272e-02, -4.9735e-02,
         3.7933e-02,  8.1570e-03, -5.4080e-02,  4.7232e-02,  2.1632e-02,
         6.0394e-02,  3.2945e-02, -1.7186e-03,  3.0825e-02, -2.5441e-02,
         3.9233e-02, -2.9266e-02,  4.0828e-02, -4.3614e-02,  4.6288e-02,
        -4.4904e-02, -3.2181e-02,  5.4333e-02,  3.2862e-02,  2.3952e-02,
        -5.9339e-02, -5.4336e-02, -5.6684e-02, -2.6265e-03, -3.1588e-02,
         4.7838e-02, -2.1172e-02, -2.6475e-03,  1.9935e-02, -1.8716e-02,
        -2.6799e-02, -1.3593e-02, -3.0524e-02,  4.3410e-02, -1.6402e-02,
         4.2933e-02, -3.5285e-02, -5.7022e-02,  5.5562e-02, -3.7148e-02,
         1.6524e-02, -3.6700e-03, -3.6888e-02, -4.7561e-02, -3.3023e-03,
         2.6954e-02, -4.7652e-02,  2.8102e-03, -4.6835e-02, -5.2760e-02,
         1.6874e-02, -2.3179e-02, -1.1731e-02,  3.2623e-02, -4.0654e-02,
        -4.4851e-02, -3.8773e-03,  4.4641e-02,  3.4658e-02, -6.1792e-02,
        -6.0071e-02,  6.4149e-03, -1.3290e-02, -3.5131e-02,  2.7684e-02,
         3.3600e-02], device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[ 9.3660e-03,  3.4255e-02,  8.0198e-03,  ...,  1.3611e-02,
           -4.4049e-02,  3.6878e-02],
          [ 6.8212e-03, -1.0275e-02,  7.3642e-02,  ..., -1.7490e-02,
            4.7938e-02,  5.0413e-02],
          [ 1.4039e-02, -1.7082e-02,  3.7507e-03,  ..., -2.2398e-02,
            2.4212e-05, -5.0059e-03],
          ...,
          [-3.0128e-02,  1.0097e-02,  2.6978e-02,  ..., -8.3801e-03,
            7.2015e-03, -3.0551e-02],
          [ 6.3703e-03, -7.7848e-03, -6.2290e-03,  ..., -7.4179e-03,
           -2.0364e-02, -9.6983e-03],
          [ 1.0368e-03,  6.8403e-03, -1.2427e-02,  ...,  1.7322e-03,
            1.1893e-02, -1.3011e-02]],

         [[ 1.7658e-02, -9.7394e-03, -5.3526e-05,  ...,  4.0979e-02,
            1.3405e-02,  3.3150e-02],
          [ 2.3624e-02, -2.0426e-02, -1.8033e-02,  ...,  9.7880e-03,
           -1.1002e-04,  1.2604e-02],
          [ 3.8109e-02, -1.9909e-02,  3.4982e-02,  ..., -2.7478e-04,
            2.9991e-02, -9.6248e-03],
          ...,
          [-4.6118e-02, -9.1720e-03, -1.1705e-02,  ...,  5.1241e-03,
            4.2312e-05,  3.5437e-02],
          [-1.7083e-02,  2.5795e-02,  4.2192e-02,  ...,  2.0878e-02,
            3.5882e-02,  2.2142e-03],
          [-3.1317e-02,  1.1413e-02, -4.1558e-03,  ..., -3.6832e-02,
           -8.5304e-03, -2.7816e-02]],

         [[-3.2130e-02,  7.9407e-03,  3.2472e-02,  ..., -3.3855e-02,
            5.8817e-03,  3.1487e-02],
          [-4.2677e-02, -1.9725e-02, -1.1560e-02,  ...,  8.7668e-03,
            1.0851e-02,  2.7895e-03],
          [ 1.9616e-02,  3.8196e-04,  4.5608e-02,  ..., -5.0591e-03,
           -1.3720e-02, -7.0996e-03],
          ...,
          [-1.1821e-02,  1.5066e-02,  1.1906e-02,  ...,  7.0001e-03,
           -4.1819e-02, -1.2886e-02],
          [ 2.3421e-02,  4.6290e-02,  3.9211e-03,  ..., -2.8333e-03,
            5.2962e-03,  2.5361e-02],
          [-4.1894e-02, -7.7171e-03, -1.2404e-02,  ...,  1.5987e-02,
           -2.1171e-02,  5.8073e-02]]],


        [[[-2.2666e-02,  8.3315e-03,  1.6212e-02,  ...,  2.2111e-02,
            3.4711e-02,  1.6869e-02],
          [-4.4014e-03, -4.7908e-02, -1.7859e-02,  ...,  1.0494e-02,
            7.1535e-02, -8.9844e-04],
          [ 3.2548e-02, -4.4715e-02,  2.2612e-02,  ..., -9.6588e-03,
           -3.0729e-02, -2.8831e-02],
          ...,
          [-1.3776e-02, -1.2773e-02, -5.9621e-03,  ..., -1.0696e-02,
            2.5091e-03,  1.3300e-02],
          [-7.8411e-03, -1.1138e-02, -8.0704e-03,  ..., -2.3283e-02,
           -2.3408e-02, -2.8261e-02],
          [ 1.3781e-02, -1.1272e-02, -2.0799e-02,  ...,  3.3648e-02,
            4.6301e-04,  2.4931e-02]],

         [[-3.4264e-03,  3.9057e-02,  3.4939e-02,  ...,  1.3913e-02,
            5.8346e-03,  4.8022e-02],
          [-8.8767e-03, -3.3490e-03,  1.0815e-02,  ...,  1.1336e-02,
           -2.6274e-02, -5.3042e-02],
          [-3.9977e-02, -2.2305e-02,  6.2705e-02,  ..., -1.5039e-02,
            2.3338e-02, -4.7290e-03],
          ...,
          [-1.1926e-02, -3.9191e-03,  2.1393e-02,  ..., -4.2305e-02,
            2.9268e-02, -2.2382e-02],
          [-2.2253e-02,  4.6178e-02, -1.5208e-04,  ...,  2.3633e-02,
            2.5371e-03, -5.8167e-02],
          [ 2.6424e-02,  1.3830e-02, -2.6541e-02,  ...,  6.1996e-03,
           -1.9377e-03, -5.5727e-03]],

         [[-2.2434e-02, -2.5228e-02, -5.2884e-02,  ..., -2.9629e-02,
            5.9731e-03,  5.7350e-03],
          [-1.5036e-02, -3.2835e-02,  1.5566e-02,  ...,  1.1921e-02,
            2.1554e-02, -4.9678e-02],
          [-3.3408e-02,  2.0380e-02, -3.4650e-03,  ...,  1.9778e-02,
           -2.5454e-02, -7.6269e-03],
          ...,
          [-8.4134e-03, -7.9052e-03, -1.1867e-02,  ...,  1.9412e-02,
            4.3796e-03,  1.1388e-02],
          [-4.2743e-02,  1.9682e-02, -2.1693e-02,  ...,  1.2255e-02,
           -4.7413e-02,  4.2004e-02],
          [-3.1075e-03,  2.0378e-02,  3.0713e-02,  ...,  1.4505e-02,
           -1.2540e-02,  2.6018e-02]]],


        [[[-3.0272e-02, -2.7318e-02,  2.1768e-02,  ...,  1.4485e-02,
            3.1330e-03,  1.0363e-02],
          [-2.0027e-02, -3.0556e-02, -7.4017e-03,  ...,  6.0126e-03,
           -2.4516e-03, -2.0965e-03],
          [-3.4522e-03, -2.5340e-02, -2.9697e-02,  ...,  8.2063e-03,
           -1.5921e-02,  2.1990e-02],
          ...,
          [-2.0634e-02,  1.2521e-03,  4.8857e-03,  ...,  3.6843e-02,
            1.3997e-02,  1.5825e-02],
          [-2.3555e-02, -1.4649e-02,  3.7018e-03,  ..., -6.1496e-03,
            1.6814e-02,  3.0392e-02],
          [ 2.1534e-02, -2.4130e-02, -1.5336e-02,  ...,  3.7869e-03,
           -2.6851e-03, -1.1246e-03]],

         [[-1.2596e-02,  2.9397e-02, -4.5345e-02,  ..., -1.1341e-02,
            8.2404e-03,  1.9548e-02],
          [-1.3340e-02, -3.2969e-02,  6.2159e-03,  ...,  2.0306e-02,
            1.0265e-02,  3.8931e-02],
          [-2.6828e-02, -2.7743e-03, -1.4907e-02,  ...,  7.2512e-03,
            1.2573e-02, -1.2864e-02],
          ...,
          [ 3.5042e-02,  2.8351e-02, -1.7116e-02,  ...,  2.3979e-02,
           -1.2275e-02, -1.4920e-02],
          [-7.6231e-03,  2.7001e-02, -2.8784e-02,  ..., -2.3861e-02,
           -5.8203e-02,  6.7301e-03],
          [ 2.7297e-02,  2.1018e-03,  3.7661e-02,  ...,  3.0167e-03,
           -1.3368e-02,  1.9877e-02]],

         [[ 1.4494e-02, -3.5140e-02,  2.9123e-02,  ..., -1.8195e-02,
            1.1866e-02,  7.2031e-03],
          [-6.5001e-02,  1.6484e-02, -2.1917e-02,  ...,  2.0785e-02,
            1.5065e-02, -5.0963e-02],
          [ 5.3817e-02,  1.8810e-02,  1.2406e-02,  ..., -3.5061e-02,
            1.3210e-02,  2.8909e-03],
          ...,
          [ 1.8915e-03, -4.6020e-02, -1.2792e-03,  ..., -1.0761e-02,
            1.5405e-02, -1.2953e-02],
          [-6.1255e-03,  1.2337e-02,  3.5078e-04,  ..., -1.1365e-02,
            3.4999e-02,  3.8635e-03],
          [ 1.3726e-02,  1.1365e-02,  4.6235e-03,  ...,  1.6760e-03,
           -2.1523e-02, -2.1621e-03]]],


        ...,


        [[[-4.0697e-02,  1.6141e-02,  1.8489e-02,  ...,  9.5301e-03,
            1.7649e-02,  3.0018e-02],
          [ 2.4709e-02,  5.3226e-02, -4.4442e-02,  ..., -1.4426e-03,
           -3.9863e-03, -4.7564e-03],
          [-2.0820e-02,  2.2634e-02,  5.3184e-03,  ...,  1.1675e-02,
            4.5791e-03, -2.0261e-02],
          ...,
          [-1.9387e-02, -7.3480e-03,  2.9486e-02,  ..., -1.8151e-02,
            2.8650e-02, -3.7214e-02],
          [-6.4628e-02,  1.4616e-02, -2.4528e-03,  ..., -1.6718e-02,
            1.5865e-02, -1.5383e-03],
          [-5.0229e-03, -2.1041e-02, -4.4577e-03,  ..., -6.1970e-03,
           -2.5727e-02, -3.0021e-02]],

         [[ 2.7514e-02,  1.4701e-03,  1.6947e-02,  ...,  3.2004e-02,
           -1.0992e-03, -9.6725e-04],
          [-3.1845e-03,  2.1334e-02,  2.7295e-02,  ...,  5.4489e-02,
            1.0764e-02,  1.8840e-02],
          [-8.6262e-03,  3.5977e-04,  1.8232e-03,  ...,  7.0766e-03,
           -2.5336e-02, -2.2343e-02],
          ...,
          [ 6.2767e-02, -2.4461e-02, -6.7025e-03,  ...,  3.2136e-02,
           -9.3792e-03, -7.3454e-03],
          [ 3.4225e-02, -4.1820e-04,  2.3275e-02,  ...,  7.3181e-03,
           -2.4443e-02,  3.9619e-03],
          [ 8.1201e-03,  1.1204e-02, -2.0536e-02,  ...,  1.3741e-03,
            2.8065e-02,  2.8598e-02]],

         [[ 4.2295e-02,  3.0476e-02, -3.6516e-02,  ..., -8.9344e-04,
            3.3102e-02,  1.1621e-02],
          [ 2.7012e-02, -1.7764e-02, -3.9024e-02,  ...,  3.6300e-02,
           -2.3822e-02,  2.8001e-02],
          [ 9.6543e-03,  4.0289e-02, -2.1654e-03,  ...,  4.1523e-02,
            1.4853e-02, -1.7553e-02],
          ...,
          [ 1.9131e-02, -1.7155e-03, -1.3616e-02,  ...,  2.9294e-02,
            4.0500e-02, -4.0519e-02],
          [ 2.5212e-02, -1.5599e-02, -4.3252e-03,  ..., -3.3189e-02,
            3.4281e-02,  1.9987e-02],
          [ 5.6606e-03,  1.8309e-02,  7.0513e-02,  ..., -3.2395e-02,
            5.7825e-03, -5.3390e-02]]],


        [[[ 2.1363e-02,  5.0479e-02,  3.2734e-02,  ...,  6.4268e-03,
            1.6155e-02,  2.8519e-02],
          [-2.6270e-02,  1.6572e-04, -9.8451e-03,  ..., -3.1113e-02,
            9.5828e-03,  8.7860e-03],
          [-1.5360e-02,  3.9241e-03, -2.6201e-02,  ..., -5.3704e-02,
           -2.0428e-02, -1.9403e-02],
          ...,
          [ 1.9063e-02,  1.4522e-02, -2.6960e-02,  ..., -3.5057e-02,
           -1.3578e-02, -1.2331e-02],
          [-9.7905e-03,  4.4553e-02,  2.3448e-02,  ..., -4.9355e-02,
            4.0987e-02,  2.9961e-02],
          [-8.8529e-03, -7.5451e-02, -5.9543e-04,  ..., -7.4403e-03,
           -1.2254e-02,  1.3604e-02]],

         [[-1.2821e-02,  2.3171e-02, -4.4923e-02,  ...,  1.7996e-02,
           -3.5081e-03, -9.7906e-03],
          [ 1.9905e-04, -9.6548e-04,  2.7208e-03,  ...,  2.6426e-02,
           -1.4893e-02, -2.9348e-02],
          [ 1.2937e-02,  1.0134e-02, -2.4364e-02,  ...,  1.8240e-02,
            3.6347e-02, -9.0143e-02],
          ...,
          [ 3.2882e-02, -4.1162e-02, -6.4655e-03,  ...,  9.6257e-03,
            1.4725e-02, -3.9617e-03],
          [ 4.0394e-03, -2.6319e-02,  1.6813e-02,  ...,  2.1211e-03,
           -3.3273e-02, -5.8976e-02],
          [-6.4063e-02,  1.5028e-02, -4.6051e-03,  ...,  2.7428e-02,
           -4.7606e-02, -1.5821e-03]],

         [[-3.9284e-02,  3.2633e-02, -3.2082e-02,  ...,  1.7199e-02,
            4.4865e-02,  9.7502e-03],
          [ 3.3200e-02,  4.7226e-02,  1.6416e-02,  ..., -5.9235e-03,
           -2.1711e-02,  4.6224e-03],
          [-1.9690e-03, -4.4505e-02, -5.2202e-02,  ...,  2.5391e-03,
           -3.7043e-03, -3.2767e-03],
          ...,
          [-2.5568e-02,  1.6903e-02,  4.7496e-03,  ...,  2.8333e-02,
           -2.2994e-02,  6.3523e-03],
          [ 1.3805e-02, -6.1460e-03,  1.9688e-02,  ..., -5.9841e-03,
           -1.1004e-04, -1.3778e-02],
          [ 1.2688e-02,  2.0161e-02,  2.4272e-02,  ..., -5.5212e-02,
           -1.3630e-03, -1.0687e-02]]],


        [[[-1.2171e-02, -1.6254e-02,  1.0252e-02,  ...,  6.9414e-03,
            3.8536e-02,  4.9161e-02],
          [ 2.3125e-03,  6.0521e-02,  3.3992e-03,  ..., -1.6098e-02,
           -1.6082e-02, -6.7178e-03],
          [-1.0815e-02,  1.6531e-02,  1.9117e-02,  ...,  6.6008e-02,
           -2.7080e-02, -2.6812e-02],
          ...,
          [ 4.6151e-02, -2.4810e-02,  2.0447e-02,  ..., -4.2296e-03,
            2.1637e-02,  4.5885e-03],
          [ 4.0134e-02, -2.9279e-02, -4.7195e-03,  ..., -4.9247e-04,
           -1.8785e-02,  1.9755e-02],
          [-1.2371e-02, -3.1758e-02, -2.4984e-02,  ...,  3.2210e-03,
           -2.2476e-02,  2.5026e-02]],

         [[-1.8268e-02,  6.2329e-03,  9.0626e-03,  ..., -2.4033e-02,
           -5.1877e-02, -1.0280e-02],
          [-4.5797e-02,  7.6000e-03, -1.8785e-02,  ..., -5.4859e-02,
           -1.5991e-02,  1.6881e-03],
          [ 1.5692e-02, -1.4407e-02,  2.2262e-02,  ...,  2.4529e-03,
            2.0049e-02,  3.1285e-03],
          ...,
          [-4.1413e-02, -9.9379e-04, -1.6523e-02,  ...,  2.7662e-03,
           -5.3869e-02,  2.9767e-02],
          [-1.0648e-02,  5.8670e-03, -1.0430e-02,  ...,  2.1929e-02,
           -1.6501e-02,  5.7704e-02],
          [ 4.4847e-02, -3.1656e-02,  2.6039e-02,  ...,  7.7504e-03,
           -6.3141e-03,  4.3261e-02]],

         [[-2.1119e-02, -2.0267e-02, -1.0667e-02,  ..., -2.5019e-02,
            3.3645e-02, -1.3858e-02],
          [-8.0770e-02,  4.0898e-03, -5.6593e-04,  ...,  6.9852e-03,
            5.2291e-03, -3.7369e-02],
          [-2.2220e-03,  4.7408e-03, -9.3577e-03,  ..., -3.6882e-03,
            6.1513e-03, -6.6823e-03],
          ...,
          [ 1.8049e-02, -3.7583e-02, -3.7180e-02,  ..., -2.3910e-02,
            1.3706e-02,  3.5487e-03],
          [-1.2210e-02,  2.3374e-02, -4.6649e-02,  ...,  1.9973e-02,
           -1.5488e-03,  3.5934e-02],
          [ 1.2767e-02, -2.2313e-02,  3.6582e-02,  ...,  2.2334e-02,
            1.8223e-02, -3.4971e-02]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 7.0441e-03, -2.4954e-02, -2.2157e-02],
          [-2.7865e-02,  7.8651e-02,  1.6022e-02],
          [ 1.0239e-01,  6.5846e-02, -9.3159e-02]],

         [[ 1.6204e-02, -1.1296e-01,  1.1668e-01],
          [-8.8464e-03,  1.2010e-02,  6.5062e-02],
          [-3.4902e-02,  1.1997e-02,  1.2771e-01]],

         [[-3.9831e-02, -1.9527e-02, -3.3225e-03],
          [-2.4489e-02, -1.2739e-01, -6.9403e-02],
          [-1.8015e-02, -3.9710e-02, -2.1103e-02]],

         ...,

         [[-1.0200e-01, -7.6052e-02, -5.0269e-02],
          [-1.2404e-02,  7.5946e-03,  2.7427e-02],
          [ 3.0514e-02, -1.0858e-01, -8.0652e-03]],

         [[ 6.9191e-02,  6.8584e-02,  6.7990e-02],
          [ 3.1297e-03, -6.8742e-03,  3.1275e-02],
          [ 5.3512e-02,  1.3597e-02, -3.1663e-02]],

         [[-7.2469e-02, -8.0403e-02,  9.7173e-02],
          [ 1.2933e-01,  6.7743e-02, -9.1139e-03],
          [-1.0181e-01,  7.8351e-02,  6.2075e-02]]],


        [[[ 2.2799e-02, -3.0826e-02, -1.8216e-02],
          [ 1.5140e-03, -1.4100e-02, -5.4347e-03],
          [ 4.3690e-02,  1.6089e-02,  2.3159e-02]],

         [[ 2.0135e-02, -2.8581e-02, -4.8922e-02],
          [-5.5697e-02, -1.5223e-02, -1.3220e-01],
          [ 1.0540e-01, -1.0167e-01,  2.1340e-02]],

         [[-4.5670e-02, -6.1066e-02, -1.8698e-02],
          [ 3.0310e-03, -6.3719e-02,  2.8995e-02],
          [ 7.0673e-02,  4.0850e-02, -1.1274e-01]],

         ...,

         [[-3.0361e-02,  5.2341e-03, -6.0140e-02],
          [-2.6124e-02,  1.2204e-01,  2.0417e-02],
          [ 4.9420e-02,  9.7702e-02, -7.5779e-02]],

         [[-2.7164e-02, -3.6513e-02, -2.1475e-02],
          [-1.6830e-02, -9.0957e-02,  1.8630e-02],
          [ 1.1006e-02,  2.8097e-02,  3.6464e-02]],

         [[-9.3959e-02,  7.8149e-02,  1.4294e-02],
          [-3.7449e-02,  8.1032e-02, -1.0415e-01],
          [ 5.3321e-02, -1.4543e-02,  1.3522e-02]]],


        [[[ 3.1622e-02,  1.8389e-02,  4.2611e-03],
          [-9.1334e-03,  1.7914e-02, -9.9699e-05],
          [ 2.1526e-02,  7.0712e-03,  1.2803e-02]],

         [[-1.5883e-01, -2.5239e-02,  3.3689e-02],
          [-2.9499e-02, -4.1118e-02, -4.9698e-02],
          [ 2.3950e-02,  4.6460e-03, -6.1488e-02]],

         [[ 4.9933e-02,  2.1823e-02,  6.9098e-02],
          [-3.3146e-02, -4.5265e-02, -1.7084e-02],
          [ 1.1765e-01,  1.3644e-01,  1.3603e-01]],

         ...,

         [[-9.8397e-04, -3.4342e-03, -9.0942e-02],
          [-1.0028e-01, -1.7229e-02,  5.6975e-02],
          [ 9.4890e-03,  3.3290e-02, -3.3254e-02]],

         [[ 6.2641e-02,  1.3615e-01, -5.5697e-02],
          [-1.8447e-02, -2.4588e-02,  8.0904e-02],
          [-9.3346e-02,  5.4025e-02, -1.6873e-02]],

         [[ 4.4919e-02,  4.4377e-02,  2.0150e-02],
          [ 6.1444e-02, -1.1887e-01, -1.8564e-03],
          [-3.9994e-02,  8.6501e-02, -3.0103e-02]]],


        ...,


        [[[-8.4550e-02,  3.3312e-02,  1.5838e-01],
          [-2.5834e-02, -1.2381e-02, -2.0138e-02],
          [ 2.0854e-02, -1.1277e-01,  1.6773e-01]],

         [[ 7.8175e-02,  5.3697e-02,  4.7716e-02],
          [-3.8405e-02,  8.2853e-02,  1.0616e-02],
          [ 6.8210e-03,  3.0735e-02, -1.7002e-02]],

         [[ 7.5399e-02,  3.5682e-02, -1.3706e-01],
          [ 3.2499e-02,  2.2892e-02, -2.5636e-02],
          [ 7.9672e-02,  8.1144e-02, -2.4372e-02]],

         ...,

         [[-4.1481e-02, -3.0356e-02, -9.3177e-02],
          [ 4.5177e-02,  6.8040e-02,  3.3803e-02],
          [ 3.4218e-02,  9.4130e-03,  4.9000e-02]],

         [[ 8.3266e-02, -4.6935e-02, -1.3325e-02],
          [-4.3973e-02,  4.6967e-02, -1.1020e-03],
          [-7.9990e-02,  3.6109e-02,  5.7840e-02]],

         [[-1.5677e-03, -5.7494e-02,  6.0627e-03],
          [-1.5674e-02, -9.8386e-02, -1.1662e-01],
          [-3.2659e-02, -5.1072e-02, -5.8020e-03]]],


        [[[ 9.9659e-03, -3.1319e-02, -5.8375e-02],
          [-1.7439e-02, -5.2083e-02,  8.2172e-02],
          [-6.0727e-02, -7.2381e-02,  1.8085e-02]],

         [[ 3.5780e-02,  3.2893e-03, -4.0839e-02],
          [-2.7453e-02, -2.2351e-02, -2.6932e-02],
          [-6.1967e-02,  3.5229e-02,  5.5118e-02]],

         [[ 6.3929e-02, -3.8155e-02, -2.4896e-02],
          [-3.2126e-02,  2.8621e-02, -4.6345e-02],
          [-5.3420e-02, -1.3016e-02, -1.2143e-02]],

         ...,

         [[-3.4409e-02,  1.1920e-03, -5.5482e-02],
          [-7.7852e-02, -1.4988e-02,  1.8179e-02],
          [ 1.7212e-02,  1.4894e-02,  2.3324e-02]],

         [[ 1.1227e-01, -5.6682e-02,  6.3051e-03],
          [-6.6793e-02,  3.5409e-02, -9.7870e-03],
          [-4.3871e-02, -3.3440e-02, -5.6680e-02]],

         [[-5.9643e-03,  1.0655e-01, -1.2247e-02],
          [-2.3142e-02, -3.6839e-02, -1.2765e-02],
          [ 1.2020e-02,  9.0324e-02, -5.8881e-02]]],


        [[[ 8.8639e-02, -3.8549e-02, -4.4962e-02],
          [ 7.5691e-02,  1.0571e-01, -2.7070e-02],
          [-3.0537e-02, -3.0303e-03, -5.8300e-02]],

         [[-2.3336e-02,  4.7366e-02, -2.8912e-02],
          [ 1.2590e-02,  5.2623e-02,  9.9775e-02],
          [-4.7392e-02, -3.1999e-02, -2.8827e-02]],

         [[-6.0376e-02, -9.6393e-02,  3.5178e-02],
          [ 3.9155e-02, -2.3409e-02,  6.5128e-02],
          [ 4.7662e-02,  3.4939e-02,  8.5566e-02]],

         ...,

         [[-9.2684e-02, -1.4739e-02,  2.7283e-02],
          [-6.5008e-02, -5.0641e-02, -4.7076e-02],
          [-6.8652e-03,  2.6706e-02, -5.4571e-02]],

         [[ 8.7256e-02, -6.0952e-04, -6.6602e-02],
          [-4.7459e-02,  3.5366e-02, -2.0860e-02],
          [ 8.1354e-03, -3.3754e-02,  4.2283e-02]],

         [[-1.5224e-02,  1.4100e-02,  8.3767e-02],
          [-4.3277e-02,  1.7844e-02,  1.0087e-01],
          [-1.2643e-02,  4.8681e-02, -1.5265e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-2.8278e-02, -3.8575e-02,  8.8652e-02],
          [-6.7260e-03, -3.2543e-03,  7.5010e-02],
          [ 4.3814e-02,  1.6203e-02, -1.4384e-02]],

         [[-9.5362e-03,  6.0263e-02,  1.9201e-02],
          [ 5.1883e-02, -3.3537e-03,  4.8620e-03],
          [-6.4900e-03,  8.1970e-02, -3.6850e-02]],

         [[ 2.6747e-02, -6.5702e-02, -9.1335e-02],
          [-1.4947e-02,  9.2521e-03, -1.8115e-02],
          [-4.6663e-02,  1.0152e-02,  1.2779e-01]],

         ...,

         [[-4.5871e-02, -1.1861e-02, -6.6521e-02],
          [-4.9779e-02,  5.0949e-02, -6.8982e-02],
          [ 6.0814e-02,  6.0177e-02,  1.2799e-01]],

         [[-2.6504e-02, -1.9749e-03,  4.3224e-02],
          [-1.4031e-02, -9.5231e-02, -4.0544e-02],
          [-1.0289e-02, -4.3838e-02, -1.9045e-02]],

         [[ 7.8404e-03, -2.3151e-02, -5.1191e-02],
          [-3.2510e-02,  2.3436e-02,  3.7403e-02],
          [ 1.0653e-01, -6.2813e-02,  1.2403e-02]]],


        [[[-6.7264e-02,  4.8818e-02, -1.1054e-02],
          [-8.5616e-02, -1.4315e-01,  7.3247e-02],
          [-1.1349e-03,  7.4996e-03, -1.0773e-01]],

         [[ 1.5526e-02, -2.5049e-02,  6.6132e-02],
          [-1.3950e-02, -2.3489e-02,  2.8572e-02],
          [ 4.5672e-02,  4.3867e-02,  6.4530e-02]],

         [[ 9.6719e-04, -9.0035e-03, -9.2685e-02],
          [ 4.6207e-02,  7.7086e-02, -1.3602e-02],
          [ 1.0529e-01, -1.7011e-02, -6.6237e-02]],

         ...,

         [[-7.7162e-03,  4.4013e-02, -2.2963e-02],
          [ 8.9200e-02,  2.6797e-02, -2.3391e-02],
          [-7.3472e-02, -1.2885e-01,  2.9824e-02]],

         [[ 7.6635e-02, -6.2221e-02,  9.8205e-02],
          [-8.6318e-02,  1.5059e-01,  1.2394e-01],
          [-1.0812e-02, -5.0680e-02, -7.0935e-02]],

         [[-1.0040e-01, -3.1350e-02, -3.8163e-02],
          [-9.1323e-02, -6.5722e-02,  1.0432e-01],
          [ 2.0067e-03, -1.2183e-02, -1.2430e-03]]],


        [[[-7.0905e-03,  3.7520e-02, -3.1203e-03],
          [ 1.1636e-03, -6.3738e-04, -2.7239e-02],
          [ 1.8650e-02, -6.2107e-03,  9.6452e-02]],

         [[-2.1537e-02, -7.1435e-02,  4.3770e-02],
          [ 4.9504e-02, -3.1370e-02,  2.8411e-02],
          [-9.2621e-03,  9.2365e-02,  4.1362e-03]],

         [[ 1.2840e-02,  5.4770e-02,  9.2298e-02],
          [ 5.1495e-02, -1.9216e-03, -5.2560e-02],
          [ 1.5990e-01,  1.8232e-02, -4.0473e-02]],

         ...,

         [[-1.1613e-01, -1.4827e-01, -5.9291e-02],
          [-5.7855e-02, -5.2782e-02, -7.2698e-02],
          [-7.9834e-02, -4.7549e-02, -7.1286e-02]],

         [[-1.2014e-02, -7.0070e-02,  5.0616e-02],
          [-2.7694e-02,  8.5791e-02, -1.7737e-03],
          [-4.7297e-02,  3.9896e-02, -4.0124e-02]],

         [[ 3.9219e-02, -9.4352e-02, -4.8716e-02],
          [ 9.1225e-02,  9.3973e-02, -1.7863e-02],
          [-1.6898e-02,  1.4581e-01,  6.9031e-02]]],


        ...,


        [[[-5.1067e-02, -6.5944e-02, -3.0841e-02],
          [ 1.2299e-01, -4.9851e-03,  3.5719e-02],
          [-1.4378e-02, -3.3196e-02,  3.3626e-02]],

         [[ 2.4310e-02, -7.2173e-03,  1.0129e-02],
          [ 1.4148e-02, -1.2331e-01, -1.9987e-04],
          [-1.7846e-02, -1.1639e-01, -1.9571e-02]],

         [[ 2.6401e-02, -5.7349e-02, -7.3924e-04],
          [ 9.3414e-02,  8.4174e-02,  7.5760e-02],
          [ 8.2558e-02,  1.8534e-02, -1.3614e-02]],

         ...,

         [[-3.8691e-02,  3.5339e-02, -2.4765e-02],
          [-6.5606e-02, -7.6246e-03,  1.2756e-02],
          [ 7.5991e-02,  4.4875e-02, -1.0223e-01]],

         [[-4.9584e-02, -1.5977e-02, -4.1290e-02],
          [-1.7514e-02, -8.4177e-03,  6.9157e-02],
          [-1.8162e-02,  9.9120e-02, -1.8916e-01]],

         [[ 2.9568e-02,  2.0689e-02,  7.7419e-02],
          [-9.6434e-02, -4.7541e-02, -2.9402e-02],
          [-2.3298e-02,  2.4889e-02, -7.3337e-02]]],


        [[[ 4.4965e-02,  6.5786e-02, -5.3881e-02],
          [-3.8001e-02,  7.9035e-02, -1.0183e-01],
          [ 1.0213e-01, -4.1946e-02,  2.0073e-04]],

         [[ 2.2974e-03,  1.5171e-02, -4.3245e-02],
          [-8.1426e-03, -2.8157e-02,  7.5476e-02],
          [ 1.1580e-01,  2.9746e-02, -5.0247e-02]],

         [[ 2.2595e-03, -8.5087e-03, -1.1633e-02],
          [-3.6057e-02,  6.2107e-02,  9.1828e-02],
          [ 1.9236e-02, -4.7996e-05, -4.9675e-02]],

         ...,

         [[ 6.0233e-03,  2.4096e-02, -3.6442e-02],
          [ 2.1447e-02, -3.1794e-03,  3.4715e-02],
          [ 1.2735e-01,  5.4650e-03, -5.9526e-02]],

         [[ 3.5737e-02,  1.5673e-02, -4.5494e-02],
          [ 1.5691e-02, -4.1157e-02, -6.7673e-02],
          [ 1.0082e-01, -4.1620e-02, -1.5737e-01]],

         [[ 5.0528e-02, -6.5252e-03,  1.2729e-01],
          [ 6.1393e-02,  7.0684e-02,  2.8169e-02],
          [ 1.8804e-02,  1.5748e-02,  2.6694e-02]]],


        [[[-4.9771e-04,  1.0792e-01, -1.0259e-01],
          [ 1.4363e-02,  8.5566e-03, -3.5956e-02],
          [ 1.1683e-01,  8.7059e-02, -1.9919e-02]],

         [[ 3.4140e-02, -8.1461e-02,  9.2105e-02],
          [-1.4582e-02,  5.3275e-02, -3.0047e-03],
          [-4.4814e-02, -5.7240e-02, -1.1447e-01]],

         [[-8.2236e-02, -1.0016e-01,  4.9998e-03],
          [ 7.1616e-02,  3.7792e-02,  1.5263e-02],
          [-3.6032e-02, -3.4046e-02,  3.5695e-02]],

         ...,

         [[ 1.0899e-02,  8.7450e-02, -9.3302e-02],
          [ 7.4295e-02, -2.9362e-02, -3.5315e-02],
          [-3.3054e-02, -6.5439e-02,  4.0291e-03]],

         [[ 6.1287e-02, -5.8946e-03,  6.9230e-02],
          [-6.1162e-02, -6.6292e-03, -5.4646e-02],
          [ 4.7544e-02,  1.5833e-02, -9.8155e-02]],

         [[ 5.3428e-02, -2.5969e-02, -1.7867e-02],
          [-2.5987e-02,  3.9858e-02, -4.1288e-02],
          [-3.2805e-02, -2.2086e-02, -6.4474e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 3.0825e-02,  1.6264e-02, -7.4913e-02],
          [ 4.7697e-02, -1.9619e-02, -5.7852e-02],
          [ 1.2963e-02, -2.4249e-02,  1.1242e-01]],

         [[-6.0100e-02, -4.4500e-03,  3.2788e-02],
          [ 4.9833e-02,  2.7604e-02,  4.6985e-02],
          [-1.9112e-01,  2.3320e-02,  2.8841e-02]],

         [[ 2.1172e-03,  1.0177e-01,  3.3584e-02],
          [ 7.5547e-02, -4.6315e-03, -2.5626e-02],
          [ 3.9217e-02,  9.2708e-02,  5.8393e-02]],

         ...,

         [[-8.2708e-02,  7.4317e-02,  9.8820e-02],
          [-9.8150e-02, -2.0710e-02, -1.1219e-01],
          [ 8.7623e-03, -1.1076e-01, -3.3551e-03]],

         [[ 6.8100e-02, -2.5833e-02, -7.4733e-03],
          [-9.1028e-02,  2.5530e-03,  2.7643e-02],
          [ 4.1322e-02,  9.2539e-03, -7.5053e-02]],

         [[-1.0957e-02, -4.2264e-02, -6.4460e-02],
          [ 2.0874e-02,  5.8624e-02, -6.8080e-02],
          [-2.7639e-02,  5.8014e-03,  2.7754e-02]]],


        [[[ 8.6674e-02,  6.0589e-02,  8.8578e-02],
          [ 2.0466e-03,  4.1267e-02,  5.3470e-02],
          [-2.2846e-02,  8.8168e-02, -9.4135e-02]],

         [[ 5.8359e-02,  1.5833e-02, -7.9093e-02],
          [-1.3279e-01, -2.9188e-02, -4.0799e-02],
          [ 6.9236e-02,  1.0530e-01,  1.5014e-02]],

         [[ 5.1364e-02,  5.4440e-02,  1.0932e-01],
          [-1.8874e-02,  3.2804e-02, -5.4858e-03],
          [ 7.8229e-02,  4.4459e-02,  7.2206e-02]],

         ...,

         [[ 4.6606e-02,  5.3756e-02, -4.0633e-02],
          [-3.6736e-02,  2.4108e-02,  8.8840e-03],
          [-6.1150e-02,  3.2376e-02, -1.7993e-04]],

         [[-2.3945e-02,  3.5462e-02,  7.5393e-02],
          [-9.9030e-02, -4.9954e-03,  5.1818e-02],
          [-6.9380e-02, -1.1194e-02,  1.0713e-02]],

         [[-8.7457e-03, -5.6747e-02, -2.8392e-02],
          [-6.9872e-02, -4.7248e-02, -2.0347e-02],
          [-3.1942e-02, -1.0622e-01,  1.3111e-02]]],


        [[[-1.0628e-01, -3.1684e-02,  1.2623e-02],
          [-4.6910e-02,  6.4219e-02,  5.4602e-02],
          [ 6.8734e-02, -1.5251e-02,  7.3287e-02]],

         [[ 8.5418e-02,  5.9620e-02, -3.3337e-02],
          [-8.4092e-02, -2.6717e-02,  1.1481e-01],
          [-5.9713e-02,  3.4670e-02, -5.8577e-03]],

         [[ 1.6250e-01,  4.5184e-02, -9.8188e-02],
          [ 1.5132e-02,  6.4680e-02, -9.0827e-02],
          [ 5.6137e-02,  7.2699e-02,  1.1194e-03]],

         ...,

         [[ 4.0774e-02,  3.0146e-02,  8.4512e-02],
          [ 2.4651e-02,  1.9498e-03,  4.1326e-02],
          [-2.7329e-02, -2.3885e-03,  2.2320e-02]],

         [[ 6.7933e-02, -1.5195e-02, -5.2946e-02],
          [-4.4015e-02, -3.3871e-02,  6.4564e-03],
          [-3.2602e-02, -6.1597e-02,  1.2669e-01]],

         [[-1.0415e-01,  1.2999e-02, -1.6708e-03],
          [ 9.0243e-02, -5.7806e-02, -2.7992e-02],
          [-7.9853e-02,  6.3108e-03, -7.7811e-03]]],


        ...,


        [[[-4.9699e-02,  2.2213e-02, -3.4583e-02],
          [-3.1064e-02,  9.9583e-02,  2.7935e-02],
          [ 2.7707e-02,  3.6579e-02, -7.8443e-02]],

         [[ 3.2881e-02,  5.1954e-02, -8.6765e-02],
          [ 4.2399e-03, -4.8233e-02,  1.7450e-01],
          [ 6.2962e-03, -1.2255e-02,  1.2589e-02]],

         [[ 1.5631e-01,  6.6960e-02, -9.9641e-02],
          [ 1.0592e-01,  2.8968e-02, -2.2749e-02],
          [ 7.9110e-02,  8.0174e-02, -5.1106e-02]],

         ...,

         [[ 1.3936e-02,  7.0468e-02, -2.8512e-02],
          [-9.3552e-03,  1.4602e-02,  8.9094e-02],
          [ 5.8385e-03, -3.8196e-02, -9.0072e-03]],

         [[-6.2822e-02,  2.2800e-02,  4.8232e-02],
          [-9.7509e-02, -6.5416e-02,  1.1029e-01],
          [ 5.2208e-02, -4.1014e-02,  4.1788e-02]],

         [[ 2.2068e-02,  1.1481e-02, -1.0381e-01],
          [ 8.6955e-02, -2.9446e-02, -1.1567e-02],
          [ 5.1143e-02, -3.3568e-02, -3.4435e-02]]],


        [[[-5.3795e-02, -3.5702e-02, -3.9488e-02],
          [ 5.7557e-03, -7.7967e-02, -2.1567e-02],
          [-7.6051e-02, -2.7957e-02, -7.0484e-02]],

         [[-6.0182e-02, -8.9875e-04,  1.7967e-02],
          [-1.3927e-02,  7.4547e-02,  2.7983e-02],
          [-1.5782e-02, -7.3180e-02, -1.9607e-02]],

         [[ 2.8390e-02,  7.8801e-02, -9.3433e-02],
          [ 5.2649e-02,  6.5971e-02, -3.6386e-02],
          [ 4.5661e-02, -3.9533e-02, -1.1589e-01]],

         ...,

         [[ 5.3904e-02, -4.6569e-02, -5.9192e-02],
          [ 4.3772e-02, -6.4236e-02,  7.7248e-02],
          [ 1.9442e-03, -3.4298e-02, -2.6074e-02]],

         [[-9.2884e-02,  4.3608e-02, -1.3274e-02],
          [ 1.0012e-01,  2.3979e-02,  5.7422e-02],
          [ 1.1197e-01, -4.4900e-03, -1.2622e-02]],

         [[ 1.8753e-02, -1.6699e-03,  4.0039e-02],
          [-3.1417e-02, -3.8751e-03,  2.2372e-02],
          [-7.1170e-02,  1.5192e-02,  7.9913e-03]]],


        [[[ 1.6073e-02, -1.6815e-02, -1.3582e-02],
          [ 2.0139e-02, -4.4589e-03, -1.3558e-02],
          [-9.4066e-02, -3.3935e-02, -2.0117e-02]],

         [[ 7.2368e-02, -5.7347e-02,  5.4161e-02],
          [-1.8473e-02,  3.0040e-02, -1.0183e-02],
          [-1.1544e-01,  6.5479e-02, -9.1020e-03]],

         [[-8.7899e-02,  5.5033e-03, -3.9328e-02],
          [ 1.1010e-02, -2.8961e-02,  1.8908e-02],
          [ 3.4890e-02, -3.5835e-02, -7.0830e-02]],

         ...,

         [[ 8.3833e-02,  5.1762e-02, -2.3159e-02],
          [ 5.8346e-02,  8.9740e-02,  7.1046e-03],
          [ 7.6964e-02, -3.5414e-02, -5.2939e-02]],

         [[-1.3613e-02, -1.0522e-02, -4.5902e-02],
          [ 5.1063e-02, -2.5649e-02, -6.0603e-02],
          [-6.9837e-02,  1.5906e-02,  6.5166e-02]],

         [[-7.7701e-02, -6.0839e-03,  4.0272e-02],
          [-1.4817e-02,  5.2035e-02,  7.7234e-02],
          [-2.4568e-02,  2.6491e-03,  8.5415e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 2.9315e-02,  1.3545e-02, -5.2037e-02],
          [-2.3310e-02, -4.0889e-02, -5.8695e-02],
          [ 4.2109e-02, -2.7924e-02,  3.9573e-02]],

         [[ 1.1766e-01,  6.7032e-03,  2.4174e-03],
          [ 6.9594e-02,  9.0548e-02, -6.3609e-02],
          [ 5.0486e-02,  6.5554e-03, -6.5825e-02]],

         [[-9.4868e-02,  4.1659e-02, -8.6699e-02],
          [ 2.1191e-02, -1.6122e-01, -7.2889e-02],
          [ 1.8582e-02, -6.6275e-02, -3.4809e-02]],

         ...,

         [[ 4.2843e-02,  7.0527e-02,  1.8245e-02],
          [ 8.9690e-02, -4.0942e-02,  6.7037e-02],
          [ 1.0497e-01,  1.6410e-02,  2.3679e-02]],

         [[ 1.1054e-02,  1.0738e-02,  5.7929e-03],
          [ 4.5295e-02,  5.0822e-02, -1.3057e-01],
          [-3.7876e-02, -8.9180e-02, -1.5315e-03]],

         [[ 8.1597e-02,  1.5653e-02,  3.8050e-02],
          [-1.3489e-02,  3.9992e-03,  4.3461e-02],
          [-1.4003e-02, -3.5722e-02,  1.3114e-02]]],


        [[[-6.9366e-03,  1.1019e-01, -4.1048e-02],
          [-3.6609e-02, -2.2486e-02, -4.0197e-02],
          [-8.3055e-02,  6.2534e-02,  7.7694e-03]],

         [[-8.6732e-04,  8.0950e-02, -3.5830e-02],
          [ 1.5546e-02, -8.9675e-02,  1.2647e-01],
          [ 4.7899e-02, -3.1089e-02, -2.4446e-02]],

         [[-4.5281e-02,  9.9124e-02, -8.4899e-02],
          [-4.2319e-03, -1.1769e-02, -1.1032e-01],
          [ 1.7395e-02, -1.1127e-01,  2.0365e-01]],

         ...,

         [[-5.5097e-02, -5.2646e-02,  1.2766e-01],
          [ 9.2527e-03, -2.0880e-02,  2.6393e-02],
          [-2.3975e-02,  4.2085e-02,  1.6017e-01]],

         [[-5.4922e-03, -8.0368e-03,  1.5343e-02],
          [ 6.3955e-02, -5.5762e-02,  2.8766e-02],
          [-5.9733e-02, -1.2040e-02, -1.7762e-02]],

         [[-1.0216e-02, -1.1258e-02,  5.2264e-02],
          [-6.4131e-03,  2.3509e-02, -1.3354e-02],
          [ 6.2880e-02,  7.8055e-02,  3.6056e-02]]],


        [[[-1.2279e-01,  3.0155e-02, -9.0035e-02],
          [ 5.5054e-02,  5.3970e-03, -4.2401e-02],
          [ 4.8764e-02, -6.0523e-02,  5.6648e-02]],

         [[ 5.1929e-02, -4.1993e-02, -1.1711e-02],
          [ 4.4567e-02,  8.0365e-02, -2.4594e-02],
          [-1.4775e-02,  6.0265e-02,  7.2752e-02]],

         [[-1.1994e-01,  1.1266e-02, -4.4113e-02],
          [-8.6558e-03, -5.6016e-02, -6.6741e-03],
          [ 4.7974e-02, -9.0067e-03, -9.9276e-03]],

         ...,

         [[-6.6887e-02, -1.0815e-02, -1.0926e-02],
          [-8.3128e-02,  9.3848e-02, -2.9977e-03],
          [ 3.1351e-02,  1.2354e-01,  9.3040e-02]],

         [[ 3.0358e-02, -4.6598e-02,  1.0475e-01],
          [-1.6300e-02,  9.4186e-02, -1.0652e-02],
          [-1.7947e-02,  3.0210e-02,  2.1626e-02]],

         [[ 4.7777e-02, -1.1782e-02, -1.9632e-02],
          [-4.1014e-02,  5.0027e-02,  3.9165e-02],
          [-3.5928e-02,  4.3293e-02, -8.4846e-02]]],


        ...,


        [[[ 6.8104e-02,  3.8566e-02, -1.4993e-02],
          [ 9.3378e-02,  9.6661e-02,  4.6197e-02],
          [-1.5784e-02, -6.3213e-03,  4.6521e-02]],

         [[-1.9216e-02,  4.3044e-02,  1.0779e-01],
          [-1.8212e-02, -5.5545e-02,  2.8128e-02],
          [ 5.0550e-03,  4.3725e-02,  3.2084e-02]],

         [[ 4.8335e-02,  7.6338e-02,  7.4414e-02],
          [-5.1692e-02, -1.0995e-01,  6.2157e-02],
          [-1.0791e-02,  1.3672e-02, -1.1914e-01]],

         ...,

         [[-6.4043e-04,  8.5313e-02,  9.8048e-04],
          [ 1.2140e-01, -2.0056e-02, -1.3674e-01],
          [-7.1091e-02,  1.4722e-02,  2.9153e-02]],

         [[-5.1562e-02,  1.7869e-02,  6.1828e-02],
          [-1.3210e-02, -8.3687e-03, -9.2987e-03],
          [ 6.0443e-02,  4.2687e-02,  5.1197e-02]],

         [[ 1.3131e-02,  1.0410e-02,  5.9934e-03],
          [-2.7872e-02,  4.2145e-02,  2.0658e-02],
          [ 9.3108e-04, -8.1478e-02, -6.4105e-02]]],


        [[[ 3.5328e-02,  4.1403e-02, -4.7412e-03],
          [-5.9842e-02,  7.0284e-02,  2.0998e-01],
          [-3.1296e-02, -5.8223e-02,  6.9135e-03]],

         [[-1.1950e-03, -6.9079e-02,  1.3239e-01],
          [-5.2795e-02, -7.8204e-02,  4.1458e-02],
          [-2.7467e-02,  1.2051e-01, -2.7477e-02]],

         [[ 4.6333e-02, -8.5748e-04, -1.6891e-02],
          [-6.6617e-02,  2.6030e-02,  2.3578e-02],
          [-3.9676e-02, -1.2914e-01,  4.9183e-02]],

         ...,

         [[ 1.2746e-02,  7.5262e-02,  2.6913e-02],
          [ 2.2854e-02, -2.0242e-02,  7.9075e-02],
          [ 2.6561e-02,  1.6946e-02,  1.9353e-02]],

         [[-9.0726e-02, -1.3075e-01, -5.5640e-04],
          [-5.7753e-02,  3.2688e-02,  2.9856e-02],
          [ 3.3699e-03,  1.0099e-01,  8.6964e-02]],

         [[ 5.4638e-03, -7.8516e-02,  2.9806e-02],
          [ 8.3673e-02, -8.5912e-02,  1.1904e-02],
          [-1.7798e-03,  5.3599e-02, -3.4961e-02]]],


        [[[ 2.3786e-02, -4.6686e-02,  1.2090e-02],
          [-4.0160e-02, -3.8216e-03, -8.6918e-02],
          [-2.9767e-02, -4.3655e-03,  1.7791e-02]],

         [[ 6.1203e-02, -6.7129e-02,  8.3363e-02],
          [-5.1258e-02, -1.6773e-02, -1.6070e-02],
          [ 5.4281e-02, -2.9524e-02,  1.4091e-01]],

         [[ 1.2964e-02, -8.8168e-03, -8.5847e-03],
          [-7.6825e-02,  1.0016e-02, -8.8996e-02],
          [ 2.4035e-02,  5.9675e-02, -3.5972e-02]],

         ...,

         [[-1.0631e-01,  7.7175e-02, -6.0161e-02],
          [ 2.8484e-02, -3.5380e-02, -2.2842e-02],
          [ 5.4731e-02, -7.0116e-02, -1.8545e-02]],

         [[ 1.0796e-01,  2.3146e-02, -8.5758e-02],
          [ 5.5976e-02, -1.9627e-02, -2.3540e-02],
          [ 1.2756e-02,  1.1823e-01, -1.3222e-04]],

         [[ 5.9129e-02,  7.5990e-02, -4.1409e-02],
          [-1.0470e-01,  7.9671e-03,  7.4509e-02],
          [ 1.0581e-01,  1.0981e-02, -3.0775e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[ 0.0340]],

         [[ 0.0494]],

         [[-0.0340]],

         ...,

         [[ 0.0784]],

         [[-0.0434]],

         [[-0.0360]]],


        [[[ 0.0334]],

         [[ 0.0076]],

         [[-0.1236]],

         ...,

         [[-0.0485]],

         [[ 0.0095]],

         [[ 0.1276]]],


        [[[-0.0606]],

         [[-0.0304]],

         [[ 0.0171]],

         ...,

         [[ 0.0519]],

         [[ 0.0260]],

         [[-0.0568]]],


        ...,


        [[[-0.1112]],

         [[ 0.0495]],

         [[ 0.0365]],

         ...,

         [[-0.1027]],

         [[ 0.0274]],

         [[ 0.0801]]],


        [[[-0.0670]],

         [[ 0.0362]],

         [[-0.0350]],

         ...,

         [[ 0.0065]],

         [[-0.0229]],

         [[ 0.0661]]],


        [[[-0.0669]],

         [[-0.0496]],

         [[-0.1304]],

         ...,

         [[-0.0144]],

         [[ 0.0194]],

         [[-0.1610]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 2.0485e-02,  4.0748e-02, -4.3477e-02],
          [ 5.1157e-02, -4.1149e-02,  9.8492e-06],
          [-4.1783e-02, -3.1226e-02, -1.1221e-01]],

         [[ 3.0332e-02,  1.0697e-01, -5.0061e-02],
          [ 2.8330e-02,  1.2210e-02,  7.4699e-02],
          [ 7.4450e-02, -5.0981e-02,  1.2231e-02]],

         [[-7.0746e-02,  2.2707e-02,  1.9709e-02],
          [-1.5769e-02, -4.2623e-02,  9.0538e-02],
          [ 1.9581e-02,  3.0398e-02,  4.7263e-02]],

         ...,

         [[-2.7957e-02,  3.3077e-02,  2.7309e-02],
          [ 6.2910e-02,  1.2710e-01, -2.6897e-02],
          [-4.7794e-02,  1.3441e-02,  2.1038e-02]],

         [[ 4.6758e-02, -3.1074e-02,  1.2938e-02],
          [ 8.5686e-02, -3.2190e-02,  2.8078e-02],
          [-7.4095e-03,  4.2656e-02,  2.9878e-02]],

         [[-5.3278e-02, -3.3652e-02, -1.5860e-02],
          [ 4.0690e-02,  6.5272e-02, -9.8863e-04],
          [-8.4483e-02,  2.3691e-02, -3.4536e-02]]],


        [[[ 6.0897e-02, -3.8219e-02,  3.6213e-02],
          [ 1.0989e-01, -4.0521e-02,  5.1366e-02],
          [-6.7642e-02, -1.2271e-02, -1.1312e-01]],

         [[ 1.6902e-02,  3.2973e-02,  9.7082e-03],
          [ 2.9509e-02, -2.3167e-02, -4.5878e-02],
          [ 4.1541e-02,  7.2684e-02, -6.0884e-02]],

         [[ 2.1177e-02, -3.5382e-03, -7.0855e-03],
          [-1.5436e-02,  2.7488e-02, -8.3985e-03],
          [ 4.7205e-03,  7.5633e-03, -9.5061e-03]],

         ...,

         [[-5.7188e-02, -7.5896e-03,  6.5469e-03],
          [ 3.4342e-02, -5.6898e-03, -4.6632e-02],
          [-5.2823e-03, -1.0753e-02,  6.9382e-02]],

         [[ 1.0939e-02, -5.1114e-02, -7.2119e-02],
          [ 2.3548e-02, -8.9203e-02, -1.6164e-02],
          [ 2.3699e-02,  5.1401e-02, -2.8672e-02]],

         [[ 6.5157e-02, -1.6336e-02, -2.7577e-02],
          [-2.6695e-02, -6.0318e-02, -1.0324e-02],
          [ 1.1966e-02,  2.6733e-03,  3.1063e-02]]],


        [[[ 2.3889e-02,  6.5392e-02,  1.8408e-03],
          [ 1.0780e-02,  1.1793e-01,  3.9454e-02],
          [-1.4867e-02, -5.1308e-02,  1.8195e-02]],

         [[ 5.7697e-02, -9.8126e-02, -3.6156e-02],
          [-4.8238e-03,  4.7128e-04, -1.1510e-02],
          [ 1.8405e-02, -2.5109e-02, -3.3120e-02]],

         [[ 5.8970e-02, -1.1295e-02, -3.0553e-02],
          [ 9.6893e-02,  5.7916e-02, -3.1007e-02],
          [ 1.1756e-01,  6.2408e-02, -1.8082e-02]],

         ...,

         [[ 8.8832e-02, -7.8364e-03,  4.5916e-02],
          [-9.0274e-02, -4.2283e-03, -1.9834e-02],
          [-5.1165e-02, -1.9425e-02,  3.6616e-02]],

         [[-2.3473e-02, -9.6863e-03,  8.2467e-03],
          [ 8.6288e-03,  1.1429e-02, -7.9001e-02],
          [ 2.4976e-02, -6.7035e-02,  1.5686e-01]],

         [[-4.9864e-02,  2.0895e-02, -6.6112e-02],
          [-2.9945e-02,  2.1095e-02,  7.3571e-02],
          [-5.8547e-02, -7.5133e-02,  5.5374e-02]]],


        ...,


        [[[ 2.2343e-02, -3.4528e-02, -9.0015e-02],
          [-5.7477e-02,  7.2768e-03, -4.4906e-02],
          [-1.1878e-02, -8.1386e-03, -1.7976e-02]],

         [[-3.7255e-02,  2.5560e-02, -1.3496e-01],
          [-6.2107e-02, -1.9931e-02,  4.3766e-02],
          [ 2.6176e-02,  2.4473e-03,  3.2206e-02]],

         [[ 5.5912e-02, -3.2645e-02, -2.2555e-02],
          [ 3.1380e-02,  3.3820e-02, -3.5664e-03],
          [ 8.6015e-02, -9.8097e-02,  1.4155e-02]],

         ...,

         [[-5.1385e-02, -4.9897e-02,  7.6774e-03],
          [-1.9115e-02,  4.1602e-02,  7.1408e-02],
          [-1.0168e-02, -1.1821e-02,  1.1283e-02]],

         [[ 3.4946e-02,  3.5366e-02,  7.4156e-04],
          [ 3.4312e-02, -5.3015e-04, -2.7479e-02],
          [ 2.0267e-02, -1.1122e-02, -1.5810e-02]],

         [[ 1.5015e-02,  1.2525e-02, -5.1010e-02],
          [ 2.2267e-02, -5.1692e-02, -1.1074e-02],
          [ 4.2421e-02,  7.7654e-02,  9.9536e-03]]],


        [[[ 5.3452e-02, -8.3448e-02,  6.7727e-03],
          [ 3.7989e-02,  2.9460e-02,  9.1611e-02],
          [-3.3772e-02, -2.9546e-02, -7.2346e-02]],

         [[-2.7677e-02, -8.0969e-02,  2.2363e-02],
          [ 4.9848e-03, -5.6656e-02,  3.0189e-02],
          [ 5.8499e-02,  1.5927e-02,  6.1915e-02]],

         [[ 2.8746e-02,  4.7314e-02,  1.1102e-02],
          [ 1.5694e-02, -1.1916e-01, -7.9327e-03],
          [ 2.8691e-02, -4.6855e-02,  1.7902e-02]],

         ...,

         [[ 1.9696e-02,  6.7406e-02, -3.3563e-02],
          [-8.6853e-03,  5.0451e-02, -1.0974e-01],
          [ 1.4279e-02, -1.1819e-02, -2.2019e-02]],

         [[ 3.0113e-02, -7.0300e-03,  6.9243e-02],
          [-3.4922e-02, -5.6632e-02,  4.0855e-03],
          [-4.6932e-02,  3.8271e-02,  3.2753e-02]],

         [[-1.3424e-02,  2.9797e-02,  6.0227e-02],
          [-7.1889e-02,  3.8340e-02, -5.4841e-02],
          [-2.2516e-03,  4.7781e-02, -3.7591e-02]]],


        [[[ 4.2760e-02,  6.9321e-02, -4.0826e-02],
          [ 1.7588e-03,  9.6440e-02,  1.1503e-02],
          [-4.5377e-03, -5.5590e-02,  9.2608e-03]],

         [[ 2.6995e-02,  3.6306e-02, -8.4973e-02],
          [ 6.9354e-02, -9.2887e-02, -5.6920e-03],
          [-1.4607e-02, -4.2607e-03,  5.5000e-03]],

         [[ 1.1234e-01,  6.3465e-02, -3.4352e-02],
          [-4.8435e-02,  1.4954e-02, -3.3481e-02],
          [-3.6396e-02, -1.1937e-01, -1.6740e-03]],

         ...,

         [[-5.9280e-03,  1.1558e-02,  3.2937e-03],
          [-4.5755e-02, -4.7485e-02,  1.3314e-02],
          [ 1.6028e-03,  4.0971e-02,  2.7299e-02]],

         [[-1.2733e-02,  1.1059e-01,  4.8414e-02],
          [ 4.0413e-02, -3.4916e-02,  4.9450e-02],
          [-2.9266e-02, -6.5642e-03,  6.2332e-02]],

         [[-6.3717e-02,  5.3751e-02,  1.8339e-02],
          [ 1.7902e-02,  5.1378e-02, -2.8569e-02],
          [-3.7432e-02, -7.6541e-03,  2.0956e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-4.1863e-02,  1.2241e-02, -3.6603e-02],
          [-1.4205e-02, -3.3783e-02,  6.5119e-02],
          [ 5.6302e-02, -2.8728e-02, -2.9658e-03]],

         [[ 8.0124e-02,  4.3492e-02,  4.2610e-02],
          [-2.6793e-02, -2.6045e-02, -6.4403e-02],
          [-4.0314e-02, -7.8817e-02, -2.6509e-02]],

         [[-2.5187e-03, -1.4826e-02,  5.0677e-02],
          [-1.4886e-02,  1.8754e-02, -3.1994e-02],
          [ 2.0582e-02, -2.7804e-02, -1.0982e-02]],

         ...,

         [[-7.6869e-02, -5.6987e-02, -2.4633e-02],
          [-4.4267e-02, -7.8061e-03, -6.1840e-02],
          [-1.6198e-02,  1.0759e-02, -5.6333e-03]],

         [[ 9.0883e-02, -3.8302e-02, -2.3867e-02],
          [ 3.0363e-04,  1.2533e-02,  1.9462e-02],
          [ 3.6726e-02,  1.7045e-02,  3.8534e-02]],

         [[-7.3234e-02,  2.3880e-02,  7.8005e-03],
          [-4.6682e-02, -2.2701e-02,  5.1960e-02],
          [-7.3073e-02,  2.1663e-02,  6.5067e-02]]],


        [[[-4.4319e-02, -9.2011e-02,  6.4854e-02],
          [ 2.4181e-02, -3.9759e-02, -9.9531e-04],
          [ 1.4927e-02,  3.3055e-02,  2.4750e-02]],

         [[-9.7562e-05, -3.3343e-02, -4.1745e-02],
          [-9.0443e-03, -4.6134e-02, -5.5555e-02],
          [ 3.1607e-02,  3.5148e-02,  5.8954e-03]],

         [[-8.5143e-02,  5.3969e-02, -6.4909e-02],
          [ 1.2410e-01,  2.9116e-02,  5.3997e-04],
          [-1.0723e-01, -6.6151e-02,  1.5475e-02]],

         ...,

         [[-2.2691e-02, -3.4854e-02, -5.9696e-03],
          [ 1.7241e-02, -2.9733e-03,  3.2601e-02],
          [-6.6312e-02, -2.0803e-03, -8.8349e-03]],

         [[ 1.9664e-02, -5.1480e-02,  8.1030e-03],
          [-1.9121e-02, -1.0112e-03, -4.7240e-02],
          [-4.6455e-02, -6.1132e-02, -3.2280e-02]],

         [[ 9.1197e-02, -3.2133e-02, -6.5172e-03],
          [ 2.1794e-02, -2.2120e-02,  1.2040e-02],
          [ 4.0430e-02,  3.7154e-02,  1.2750e-02]]],


        [[[-1.8649e-03, -1.2633e-02, -1.9010e-03],
          [-3.4696e-03, -2.5790e-02, -7.7083e-03],
          [ 2.7742e-02, -3.5152e-03, -4.7257e-02]],

         [[-3.6232e-04, -4.9476e-02,  4.0571e-03],
          [-7.9811e-02,  5.9766e-04,  2.3653e-02],
          [-6.3369e-02,  8.3918e-02,  1.5299e-02]],

         [[ 1.0351e-01, -3.3241e-02, -9.3686e-02],
          [ 7.0977e-02, -8.3122e-02, -5.7360e-02],
          [ 2.5929e-02,  3.3166e-02,  1.7617e-02]],

         ...,

         [[-4.9564e-02,  4.3035e-02, -5.7315e-02],
          [-1.9080e-02, -1.0266e-01, -3.6407e-02],
          [-1.3445e-01,  7.2096e-03, -5.2925e-02]],

         [[-6.0001e-02,  2.2359e-02, -4.5583e-03],
          [-6.1271e-02, -2.9217e-02,  4.6282e-02],
          [ 5.9662e-02, -1.9278e-02,  7.7362e-02]],

         [[-4.7383e-02,  3.1276e-02,  2.8602e-02],
          [-6.1261e-02, -9.4497e-03, -5.7493e-02],
          [ 8.5223e-02,  7.4891e-03,  6.8003e-02]]],


        ...,


        [[[ 4.1523e-02,  7.6873e-04, -4.3394e-02],
          [ 1.5142e-02, -8.0909e-03,  8.8190e-03],
          [ 4.6754e-02,  3.7653e-02, -4.8597e-03]],

         [[-5.8026e-03, -1.0751e-02,  3.4924e-02],
          [-2.0782e-02,  7.4745e-02,  3.3039e-02],
          [ 2.0664e-02,  4.2026e-02,  2.1856e-02]],

         [[-6.4783e-02, -1.2737e-02,  3.4376e-02],
          [-7.0407e-03, -5.8528e-04,  1.6907e-02],
          [ 1.5688e-02,  6.3121e-02, -1.4889e-02]],

         ...,

         [[ 1.7771e-02,  2.3873e-02,  3.3846e-02],
          [ 7.5024e-02, -5.5525e-02, -4.4570e-02],
          [ 3.9096e-02,  1.8064e-02,  5.8806e-03]],

         [[ 9.3198e-02, -7.3867e-02, -8.8575e-02],
          [-1.8836e-02, -3.8529e-02,  4.5476e-02],
          [-7.9630e-03,  2.2064e-02, -4.5029e-02]],

         [[-3.6009e-03, -7.4120e-02, -9.3868e-03],
          [ 1.8701e-03, -6.7145e-02,  5.7463e-03],
          [-3.5757e-02, -7.4804e-02, -1.2175e-02]]],


        [[[-1.1554e-02, -5.2337e-02,  7.3908e-02],
          [-1.9076e-02, -2.1122e-02,  3.0775e-02],
          [ 8.2389e-02,  1.4249e-02,  6.4380e-02]],

         [[ 6.1463e-02,  3.2132e-02, -4.8381e-02],
          [-2.1566e-02,  6.5762e-02, -3.8182e-02],
          [ 2.0158e-03, -3.4544e-02, -4.4743e-03]],

         [[-3.8809e-02,  4.5891e-02,  3.1461e-03],
          [-7.0225e-03, -1.0250e-01,  5.8551e-02],
          [-5.3257e-03, -1.0260e-01, -8.5007e-02]],

         ...,

         [[-4.8187e-02,  1.5285e-02,  5.2864e-02],
          [ 8.0453e-03,  1.1105e-01,  3.9275e-02],
          [-4.2412e-02,  2.9701e-02, -2.3434e-02]],

         [[-2.3499e-02, -4.9642e-02,  4.9491e-02],
          [ 7.2172e-02, -9.4064e-02, -4.7845e-02],
          [ 1.3069e-02, -5.3540e-03,  1.1652e-03]],

         [[-7.7577e-02,  3.9427e-02,  2.6676e-02],
          [ 7.3005e-02,  1.3145e-02,  1.0644e-01],
          [ 7.5531e-02,  4.0413e-02,  6.4353e-02]]],


        [[[ 4.7039e-02, -5.5257e-02, -6.5733e-03],
          [-9.1450e-02, -4.9442e-02,  3.3932e-02],
          [ 5.9760e-02, -6.2700e-02, -5.4812e-02]],

         [[-6.5883e-02,  9.5670e-03, -1.3204e-02],
          [-5.0598e-02,  2.8639e-02, -2.6228e-02],
          [-4.2965e-02, -5.5747e-02, -4.1998e-02]],

         [[ 3.2759e-02,  1.4753e-04, -2.0169e-03],
          [ 1.7454e-02, -5.1232e-02, -5.3044e-02],
          [-1.5612e-02, -3.9380e-02, -3.7723e-02]],

         ...,

         [[ 5.6174e-02,  1.7966e-02, -4.9806e-02],
          [ 9.4784e-04,  6.3871e-02, -7.9609e-02],
          [ 3.5995e-02,  3.3187e-02, -2.4847e-02]],

         [[ 1.0698e-01, -4.0302e-02, -2.1164e-02],
          [ 2.1453e-02, -3.5780e-02,  3.0117e-03],
          [-6.9019e-02, -2.7884e-02,  2.3799e-02]],

         [[-2.8335e-02, -7.1826e-02, -9.7464e-04],
          [-3.4196e-02,  5.0438e-02, -6.7412e-02],
          [-5.7152e-02, -1.0657e-02, -1.7434e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0455]],

         [[ 0.0879]],

         [[-0.3058]],

         ...,

         [[ 0.1403]],

         [[ 0.2021]],

         [[ 0.0587]]],


        [[[ 0.0317]],

         [[ 0.0109]],

         [[ 0.0481]],

         ...,

         [[-0.2927]],

         [[-0.2492]],

         [[ 0.0426]]],


        [[[-0.4224]],

         [[-0.0197]],

         [[ 0.1648]],

         ...,

         [[ 0.1990]],

         [[-0.0990]],

         [[-0.1040]]],


        ...,


        [[[ 0.0564]],

         [[ 0.0462]],

         [[-0.1617]],

         ...,

         [[ 0.1076]],

         [[-0.0989]],

         [[ 0.2533]]],


        [[[-0.0146]],

         [[-0.3737]],

         [[-0.1478]],

         ...,

         [[-0.1049]],

         [[-0.0987]],

         [[-0.0516]]],


        [[[-0.3142]],

         [[ 0.2033]],

         [[ 0.1498]],

         ...,

         [[ 0.0668]],

         [[-0.0399]],

         [[ 0.0380]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[-0.0403, -0.1399, -0.0128],
          [-0.0004, -0.0082,  0.0013],
          [ 0.0851, -0.0209, -0.0938]],

         [[-0.0590, -0.0345, -0.0570],
          [ 0.0815,  0.0269,  0.0222],
          [ 0.0161,  0.0029, -0.0798]],

         [[-0.0205,  0.1088,  0.0502],
          [-0.0223, -0.0270,  0.0828],
          [ 0.0546,  0.0638, -0.1513]],

         ...,

         [[ 0.0092,  0.0658, -0.0955],
          [-0.0120,  0.0506, -0.0140],
          [ 0.0466,  0.0345,  0.0943]],

         [[ 0.0759, -0.0300, -0.0365],
          [ 0.0406, -0.0010, -0.0483],
          [ 0.0668, -0.0702,  0.0202]],

         [[ 0.0105,  0.0178, -0.0360],
          [-0.0109, -0.0205, -0.0191],
          [ 0.0337, -0.0531, -0.0674]]],


        [[[ 0.0479,  0.0973,  0.0003],
          [ 0.1095, -0.0545, -0.0289],
          [ 0.0703,  0.0295, -0.0628]],

         [[ 0.0353,  0.0835,  0.1010],
          [ 0.0478,  0.0038, -0.0072],
          [-0.0270,  0.0046,  0.0818]],

         [[-0.0393,  0.0561, -0.0500],
          [-0.0189, -0.0454, -0.0957],
          [ 0.0193, -0.0117, -0.0089]],

         ...,

         [[-0.0354,  0.0176,  0.0891],
          [-0.0350, -0.0394, -0.0401],
          [ 0.0872,  0.0477, -0.0652]],

         [[-0.0729, -0.0361, -0.0641],
          [ 0.0366,  0.0008,  0.0091],
          [ 0.0190, -0.0623,  0.0330]],

         [[ 0.0519,  0.0097, -0.0576],
          [-0.0474, -0.0046, -0.0605],
          [ 0.0520, -0.0910, -0.0280]]],


        [[[ 0.0067, -0.1456, -0.0002],
          [ 0.1013, -0.0185, -0.1534],
          [ 0.1552,  0.0030,  0.0110]],

         [[ 0.0789, -0.0412,  0.0107],
          [-0.0801, -0.0128, -0.0035],
          [-0.0884, -0.0383,  0.0689]],

         [[-0.0174,  0.0339,  0.0228],
          [ 0.0615, -0.0266,  0.0108],
          [ 0.0333,  0.0160,  0.0416]],

         ...,

         [[ 0.1393,  0.0021, -0.0561],
          [ 0.0704,  0.0351, -0.0094],
          [ 0.0154, -0.0085,  0.0919]],

         [[-0.0896, -0.0123, -0.0174],
          [-0.0050,  0.0385,  0.0569],
          [ 0.0387, -0.0100, -0.0342]],

         [[ 0.0312,  0.0273, -0.0172],
          [-0.0272,  0.0047,  0.0670],
          [ 0.0049, -0.0157,  0.0355]]],


        ...,


        [[[-0.0695, -0.0145,  0.0480],
          [ 0.0075,  0.0006,  0.0551],
          [ 0.0145, -0.0574,  0.0702]],

         [[-0.0494, -0.0568, -0.0112],
          [-0.0499, -0.0005,  0.0209],
          [ 0.0668, -0.0370,  0.0393]],

         [[ 0.0198,  0.0214, -0.0252],
          [-0.0029,  0.0152,  0.0491],
          [-0.0441, -0.0704,  0.0109]],

         ...,

         [[-0.0101, -0.0337, -0.1043],
          [ 0.0645, -0.0152,  0.0157],
          [ 0.0901,  0.0394, -0.0009]],

         [[-0.0124,  0.0539, -0.0369],
          [ 0.0093,  0.0280, -0.0036],
          [ 0.0438,  0.0175, -0.0169]],

         [[-0.0054, -0.0628, -0.0027],
          [-0.0276,  0.0991, -0.0670],
          [-0.0304,  0.0555, -0.0212]]],


        [[[-0.0229,  0.0509,  0.0066],
          [-0.0253,  0.0392, -0.0969],
          [-0.0327,  0.0574, -0.0294]],

         [[-0.0442,  0.0859,  0.1063],
          [ 0.0150,  0.0227,  0.0571],
          [-0.0170,  0.0422,  0.0435]],

         [[ 0.1148,  0.0341,  0.0387],
          [ 0.0619, -0.0095, -0.0178],
          [-0.0273, -0.0287,  0.0864]],

         ...,

         [[ 0.0714, -0.0237, -0.0486],
          [-0.0508, -0.0329, -0.0724],
          [-0.0340, -0.0031,  0.0176]],

         [[ 0.0089, -0.0478,  0.0507],
          [-0.0301, -0.0018,  0.0152],
          [ 0.0317,  0.0415,  0.0151]],

         [[-0.0626,  0.0571, -0.0012],
          [-0.0319,  0.0048, -0.0345],
          [ 0.0205, -0.0018, -0.0672]]],


        [[[-0.0120, -0.0259,  0.0585],
          [ 0.0469,  0.0523, -0.0013],
          [ 0.0113, -0.0430, -0.0578]],

         [[ 0.0219, -0.0370,  0.0281],
          [-0.0259, -0.0415, -0.0146],
          [-0.0412,  0.0132,  0.0539]],

         [[ 0.0020,  0.0370, -0.0171],
          [-0.0263, -0.0582, -0.0353],
          [-0.0033, -0.0627, -0.0670]],

         ...,

         [[ 0.0190,  0.0071,  0.0344],
          [ 0.0338,  0.1296,  0.0143],
          [ 0.0474, -0.0560,  0.0368]],

         [[ 0.0926, -0.0519,  0.0065],
          [ 0.0495,  0.0005,  0.0188],
          [ 0.0002,  0.0589, -0.0191]],

         [[-0.0150, -0.0227,  0.0065],
          [ 0.0440, -0.0393, -0.0307],
          [ 0.0024,  0.0241,  0.0428]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0536,  0.0286,  0.0563],
          [-0.0734,  0.1215, -0.0263],
          [-0.0187, -0.0355, -0.0158]],

         [[-0.0144, -0.0665,  0.0423],
          [ 0.0510,  0.0289,  0.0480],
          [ 0.0057,  0.0573, -0.0032]],

         [[ 0.0351, -0.0132, -0.0507],
          [ 0.0116, -0.0037,  0.0063],
          [ 0.1645,  0.0435, -0.0003]],

         ...,

         [[-0.0329,  0.0356, -0.0726],
          [ 0.0394, -0.0508, -0.0285],
          [ 0.0250, -0.0482, -0.0179]],

         [[-0.0024,  0.0281,  0.0003],
          [ 0.0316, -0.0401,  0.0146],
          [ 0.0315,  0.0646, -0.0011]],

         [[-0.0238,  0.0037,  0.0787],
          [-0.0370,  0.0393, -0.0524],
          [-0.0631,  0.0020,  0.0854]]],


        [[[ 0.0079,  0.0111, -0.0786],
          [ 0.0222,  0.0259,  0.0700],
          [ 0.0297, -0.0402, -0.0214]],

         [[ 0.0135,  0.0419,  0.0211],
          [-0.0526,  0.0242,  0.0319],
          [-0.0609, -0.0598,  0.0060]],

         [[-0.0194,  0.1063, -0.0293],
          [-0.0849,  0.0067, -0.0115],
          [ 0.0773, -0.0512, -0.0034]],

         ...,

         [[-0.0242, -0.0166,  0.0666],
          [-0.0828,  0.0935,  0.0755],
          [ 0.0239, -0.0613,  0.0217]],

         [[-0.0246, -0.0453,  0.0073],
          [-0.0124,  0.0384, -0.0284],
          [-0.0662, -0.0123, -0.0032]],

         [[ 0.0197,  0.0426,  0.0890],
          [-0.0651, -0.0035, -0.0366],
          [-0.0299,  0.0117, -0.0127]]],


        [[[ 0.0590, -0.0036,  0.0225],
          [-0.0046, -0.0079,  0.0355],
          [-0.0913, -0.0415,  0.0348]],

         [[-0.0089, -0.0033,  0.0272],
          [-0.0571,  0.0603,  0.1148],
          [ 0.0013, -0.0033,  0.0210]],

         [[-0.0075, -0.0623, -0.0122],
          [-0.1188,  0.0036,  0.0062],
          [ 0.0302, -0.0277, -0.1328]],

         ...,

         [[-0.0823,  0.0166,  0.0077],
          [ 0.0335,  0.0064, -0.0523],
          [-0.0109,  0.0953,  0.0392]],

         [[-0.0582, -0.0201, -0.0934],
          [-0.0011, -0.0143, -0.0165],
          [-0.0162,  0.0453, -0.0055]],

         [[-0.0248, -0.0753, -0.0353],
          [-0.0076,  0.0061, -0.0430],
          [ 0.0113, -0.0420, -0.0119]]],


        ...,


        [[[ 0.0861, -0.1383, -0.0151],
          [ 0.0590,  0.0427, -0.0452],
          [-0.0354, -0.0184, -0.0102]],

         [[-0.0802,  0.0190, -0.0694],
          [-0.0200,  0.0200, -0.0037],
          [-0.0036, -0.0425,  0.0624]],

         [[ 0.0170, -0.1319, -0.0775],
          [-0.0682,  0.0477, -0.0491],
          [ 0.0143,  0.0589, -0.0136]],

         ...,

         [[-0.0193, -0.0383, -0.0011],
          [ 0.0100,  0.0193, -0.0397],
          [-0.0236,  0.0034,  0.0045]],

         [[-0.0322, -0.0088, -0.0347],
          [ 0.0674, -0.0283, -0.0226],
          [ 0.0378, -0.0534, -0.0082]],

         [[ 0.0187,  0.0117,  0.0374],
          [ 0.0701,  0.0509,  0.0668],
          [ 0.0517,  0.0126, -0.0616]]],


        [[[ 0.0042,  0.0188,  0.0094],
          [ 0.0749,  0.0172,  0.0081],
          [ 0.0708, -0.0357,  0.0643]],

         [[ 0.0324, -0.0757,  0.0253],
          [ 0.0675, -0.0729,  0.0580],
          [ 0.0178, -0.0355,  0.0244]],

         [[ 0.0552,  0.0229, -0.0175],
          [-0.0095,  0.0058,  0.0598],
          [-0.0175, -0.0057, -0.0530]],

         ...,

         [[-0.0725, -0.0065,  0.0112],
          [-0.0617,  0.0042, -0.0789],
          [-0.0413, -0.0441,  0.0038]],

         [[ 0.0451, -0.0483,  0.0622],
          [ 0.0028, -0.0088,  0.0352],
          [-0.0536,  0.0124, -0.0771]],

         [[-0.0239,  0.0325,  0.0027],
          [ 0.0886, -0.0406, -0.0366],
          [-0.0125,  0.0050,  0.0133]]],


        [[[ 0.0174, -0.0065, -0.0497],
          [-0.0629,  0.0332,  0.0452],
          [ 0.0679,  0.1168,  0.0504]],

         [[ 0.0011,  0.0032, -0.0538],
          [-0.0405,  0.0916, -0.0221],
          [-0.0182,  0.0485, -0.0233]],

         [[-0.0555,  0.0023, -0.0301],
          [-0.0308, -0.0352, -0.0962],
          [ 0.0022,  0.0483,  0.1411]],

         ...,

         [[-0.0133,  0.0241, -0.0834],
          [-0.0188,  0.0304, -0.0323],
          [-0.0005, -0.0553,  0.0408]],

         [[-0.0239, -0.0033, -0.0787],
          [-0.0114,  0.0779,  0.0565],
          [-0.0143, -0.0669,  0.0311]],

         [[-0.0107,  0.0648, -0.0281],
          [-0.0251, -0.0421,  0.0298],
          [ 0.0407,  0.0872,  0.0190]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 0.0849,  0.0508,  0.0914],
          [-0.0336,  0.0111,  0.0317],
          [-0.0313,  0.0481, -0.0771]],

         [[-0.0436,  0.0053,  0.0274],
          [ 0.0414, -0.0480,  0.0285],
          [-0.0211, -0.0128,  0.0325]],

         [[ 0.0379, -0.0464, -0.0296],
          [ 0.0598, -0.0247,  0.0025],
          [-0.0017, -0.0284, -0.0500]],

         ...,

         [[-0.0413, -0.0325, -0.0691],
          [-0.0703,  0.0278,  0.0509],
          [-0.0216, -0.0290, -0.0117]],

         [[-0.0823, -0.0698,  0.0127],
          [ 0.0195,  0.0438, -0.0081],
          [ 0.0180,  0.0059, -0.0185]],

         [[ 0.0165, -0.0303, -0.0719],
          [ 0.0242,  0.0058, -0.0389],
          [ 0.0053, -0.0080,  0.0508]]],


        [[[-0.0245, -0.0456, -0.0109],
          [ 0.0570,  0.0322, -0.0028],
          [ 0.0110, -0.0135, -0.0038]],

         [[-0.0037,  0.0059, -0.0508],
          [ 0.0161, -0.0278,  0.0370],
          [-0.0052,  0.0190, -0.0507]],

         [[ 0.0507, -0.0243,  0.0024],
          [-0.0399,  0.0259,  0.0299],
          [-0.0154,  0.0502, -0.0257]],

         ...,

         [[ 0.0905, -0.0193,  0.0501],
          [-0.0236,  0.0425,  0.0492],
          [-0.0968,  0.0376, -0.0383]],

         [[-0.0200, -0.0177, -0.0385],
          [-0.0366,  0.0763,  0.0565],
          [ 0.0053, -0.0228, -0.0150]],

         [[ 0.0240,  0.0010, -0.0336],
          [ 0.0560,  0.0091, -0.0088],
          [-0.0702,  0.0274, -0.0122]]],


        [[[-0.0727, -0.0269, -0.0386],
          [-0.0452,  0.0429,  0.0058],
          [ 0.0351,  0.0256, -0.0100]],

         [[-0.0326, -0.0552,  0.0840],
          [ 0.0052,  0.0361, -0.0541],
          [ 0.0323,  0.0681, -0.0417]],

         [[ 0.0092, -0.0150, -0.0171],
          [ 0.0197, -0.0386,  0.0150],
          [-0.0702,  0.0701, -0.0175]],

         ...,

         [[-0.0034,  0.0002,  0.0218],
          [ 0.0458, -0.1240, -0.0072],
          [ 0.0380,  0.0122,  0.0439]],

         [[-0.0265,  0.0138, -0.0191],
          [-0.0218, -0.0847, -0.0265],
          [ 0.0068, -0.0056,  0.0497]],

         [[ 0.0036,  0.0852,  0.0153],
          [-0.0334,  0.0017,  0.0550],
          [ 0.0784, -0.0073,  0.0504]]],


        ...,


        [[[ 0.0284, -0.0387, -0.0308],
          [ 0.0469,  0.0410,  0.0411],
          [ 0.0021, -0.0023, -0.0304]],

         [[ 0.0388,  0.0069, -0.0360],
          [ 0.0277, -0.0098, -0.1090],
          [ 0.0257,  0.0263, -0.0034]],

         [[ 0.0388, -0.0479, -0.0075],
          [-0.0435,  0.0239, -0.0079],
          [-0.0159, -0.0356, -0.0357]],

         ...,

         [[-0.0243, -0.0065, -0.0729],
          [-0.0997, -0.0052,  0.0452],
          [ 0.0291,  0.0097, -0.1162]],

         [[ 0.0257,  0.0325,  0.0226],
          [-0.0040, -0.0870,  0.0211],
          [ 0.0828,  0.0219,  0.0933]],

         [[-0.0064, -0.0681, -0.0121],
          [ 0.0211, -0.0229, -0.0400],
          [ 0.0459,  0.0517,  0.0429]]],


        [[[-0.0316,  0.0229,  0.0321],
          [-0.0415,  0.0313,  0.0301],
          [-0.0238,  0.0282, -0.0681]],

         [[-0.0450, -0.0408, -0.0298],
          [ 0.0209,  0.0183, -0.0003],
          [-0.0038, -0.0556,  0.0065]],

         [[-0.0403,  0.0115,  0.0115],
          [-0.0258, -0.0493,  0.0725],
          [-0.0145,  0.0181, -0.0014]],

         ...,

         [[-0.0687,  0.0304,  0.0608],
          [ 0.0084,  0.0276,  0.0427],
          [-0.0250,  0.0231,  0.0150]],

         [[ 0.0437,  0.0074, -0.0618],
          [ 0.0419,  0.0027, -0.0500],
          [-0.0477, -0.0060,  0.0184]],

         [[-0.0030,  0.0150, -0.0156],
          [-0.0521,  0.0381,  0.0572],
          [-0.0462,  0.0253, -0.0090]]],


        [[[-0.0327, -0.0594,  0.0093],
          [-0.0474, -0.0322, -0.0329],
          [ 0.0475,  0.0141, -0.0392]],

         [[ 0.0356, -0.0241,  0.0092],
          [ 0.0591, -0.0493, -0.0068],
          [-0.0106,  0.0034,  0.0063]],

         [[ 0.0017,  0.0469,  0.0096],
          [-0.0818,  0.0715,  0.0086],
          [ 0.0092,  0.0164, -0.0797]],

         ...,

         [[-0.0102, -0.0224,  0.0320],
          [-0.0770, -0.0210,  0.0063],
          [ 0.0084,  0.0383,  0.0150]],

         [[-0.0005, -0.0399,  0.0381],
          [ 0.0106,  0.0421,  0.0661],
          [ 0.0322, -0.0317,  0.0040]],

         [[ 0.0069, -0.0284,  0.0167],
          [-0.0294, -0.0750,  0.0151],
          [-0.0146, -0.0222, -0.0401]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 8.6305e-02, -2.8277e-02,  2.2482e-02],
          [ 3.2224e-02,  6.7970e-02, -1.2782e-01],
          [-1.5334e-02,  3.6787e-02, -2.6390e-03]],

         [[ 4.5622e-02, -1.2943e-02, -3.0129e-02],
          [ 2.4476e-02, -5.6212e-02,  5.6420e-02],
          [-1.4378e-02, -3.6514e-03, -3.8486e-04]],

         [[ 6.0383e-03, -4.0009e-03, -2.8859e-02],
          [-8.0214e-02,  2.5555e-02,  8.6469e-02],
          [ 2.7377e-02, -4.7359e-03,  4.5779e-02]],

         ...,

         [[ 3.8361e-02,  8.2568e-02, -7.0316e-02],
          [ 1.1019e-03,  9.3339e-03,  1.1540e-02],
          [-8.2069e-03, -3.7175e-02,  4.9029e-02]],

         [[ 3.1828e-02, -4.4918e-02, -1.9300e-02],
          [ 3.6734e-02,  4.0048e-02,  2.9956e-02],
          [ 5.8279e-02,  4.5588e-02, -2.9273e-02]],

         [[-4.1005e-03, -1.1627e-02, -2.0966e-02],
          [ 5.2090e-02,  2.6527e-02, -6.2407e-02],
          [ 2.1832e-03,  2.1298e-02, -3.6250e-02]]],


        [[[-4.6057e-02, -9.7685e-03,  4.2719e-02],
          [ 1.1285e-03, -4.8479e-02, -3.1976e-02],
          [ 6.9879e-02,  6.9306e-02, -1.9001e-02]],

         [[ 6.5315e-02,  2.3001e-02,  3.5207e-02],
          [ 4.2531e-02,  7.8363e-02, -1.5603e-03],
          [ 2.8915e-02,  2.9252e-02,  3.1287e-02]],

         [[-6.0015e-02,  5.0905e-02,  5.0273e-02],
          [-2.1964e-02, -3.8065e-02, -3.2695e-02],
          [ 1.4746e-02, -6.9094e-02,  2.3569e-02]],

         ...,

         [[ 5.6098e-02, -4.6878e-02, -4.8224e-02],
          [ 2.5601e-03, -2.7216e-02, -5.9746e-03],
          [ 3.0481e-02, -1.3693e-02, -1.5063e-02]],

         [[ 3.7380e-02, -9.8596e-05, -5.3964e-02],
          [ 2.8212e-02, -7.3387e-04,  8.3893e-03],
          [-1.7900e-02, -4.9754e-02,  2.2585e-02]],

         [[-5.2840e-03, -3.0198e-02,  4.6832e-02],
          [-9.1238e-02,  7.5089e-03,  3.8831e-02],
          [-2.8860e-04,  6.2727e-02, -1.7396e-02]]],


        [[[ 1.6961e-03,  6.9790e-02, -1.9447e-02],
          [ 6.9785e-04,  7.5892e-03, -1.2029e-02],
          [-5.1114e-02, -1.6087e-02,  3.7031e-02]],

         [[-3.8022e-02,  7.9816e-03,  1.4474e-02],
          [-4.0897e-02, -6.7451e-03, -4.4898e-03],
          [ 8.6317e-03, -5.8804e-03,  7.6602e-02]],

         [[ 4.1030e-02, -4.7182e-02,  4.7556e-02],
          [ 1.8870e-02,  3.0585e-02,  1.4498e-04],
          [ 7.6140e-02,  1.3154e-02,  4.4457e-02]],

         ...,

         [[ 4.8621e-02,  1.0038e-02,  3.1447e-03],
          [-1.5416e-02,  1.4499e-02, -1.0018e-02],
          [-6.5458e-02, -3.7408e-02,  1.9545e-02]],

         [[ 2.2660e-02, -5.3322e-02, -3.8402e-03],
          [-7.4503e-03, -1.6432e-02,  4.8747e-02],
          [ 5.6285e-02, -5.1149e-02, -8.9539e-03]],

         [[-1.0677e-02,  2.2856e-02, -2.5450e-02],
          [ 2.9369e-02, -6.2051e-02, -9.6387e-03],
          [ 6.5145e-02, -8.7741e-02,  1.3755e-02]]],


        ...,


        [[[ 3.2645e-03,  2.3847e-02,  2.0115e-02],
          [-1.8048e-02, -7.5002e-03, -6.5183e-02],
          [-3.7945e-02, -1.7129e-02,  3.2406e-02]],

         [[ 2.9637e-02,  5.2311e-03, -3.0899e-02],
          [-3.4949e-02, -1.4446e-02,  3.6505e-03],
          [-1.8940e-02, -1.6642e-02,  3.6285e-02]],

         [[ 6.8553e-02,  3.1217e-02, -4.6278e-02],
          [-3.8605e-02, -2.8954e-02,  3.9434e-02],
          [ 9.2880e-02,  4.5075e-02,  2.9154e-02]],

         ...,

         [[ 1.4861e-02,  7.8870e-02,  2.7887e-02],
          [-2.7833e-02, -5.0850e-02, -9.4791e-02],
          [ 4.1225e-02,  1.2926e-03,  8.2591e-03]],

         [[-9.9114e-03,  7.0006e-03,  2.9381e-02],
          [ 7.0071e-02, -6.7854e-02,  6.6267e-02],
          [-5.7047e-03, -4.9072e-03, -2.6009e-02]],

         [[ 3.0920e-02,  9.9808e-03, -6.2389e-02],
          [-5.0514e-03,  5.3866e-03, -2.5481e-02],
          [-5.7156e-03,  1.1863e-02, -3.5107e-03]]],


        [[[ 9.3210e-02,  1.6635e-02, -2.0267e-02],
          [ 7.4497e-02,  6.6557e-03, -4.3075e-02],
          [-6.7070e-03, -1.2051e-03, -3.7669e-02]],

         [[ 1.1526e-02,  3.9107e-02,  2.8627e-02],
          [-4.1728e-02,  5.6631e-02, -1.5169e-02],
          [-3.9099e-02,  4.8402e-03, -5.9157e-02]],

         [[ 5.3988e-02,  3.7557e-02, -7.9401e-03],
          [-5.1963e-02, -2.2161e-02,  3.8470e-02],
          [ 3.0353e-02,  6.9675e-02, -6.0113e-02]],

         ...,

         [[ 2.2383e-02, -6.4015e-02, -1.1627e-02],
          [-1.3406e-02, -2.8106e-03, -8.6849e-02],
          [-3.0026e-03,  3.6576e-02, -9.5764e-02]],

         [[ 1.1272e-01, -7.6908e-02,  1.4077e-02],
          [ 2.9691e-03, -7.1741e-02,  6.4055e-03],
          [-5.6539e-02, -3.3490e-02,  1.1041e-01]],

         [[-1.3539e-03,  2.3747e-02, -1.2696e-01],
          [-9.6909e-03,  5.4969e-02, -1.7889e-02],
          [-1.4909e-02,  6.9474e-02, -6.5768e-02]]],


        [[[ 2.2591e-02,  2.4274e-02,  6.0166e-03],
          [ 5.3692e-03,  1.8950e-02,  1.1361e-03],
          [-1.1127e-02,  2.0433e-02,  1.1376e-02]],

         [[-8.3279e-03,  1.9708e-03, -1.1687e-02],
          [ 6.3280e-02, -7.3780e-02,  4.9135e-02],
          [ 2.4209e-02,  1.7027e-02,  2.9099e-02]],

         [[ 4.2001e-02,  3.4770e-02, -9.3932e-04],
          [ 2.1009e-02, -8.5189e-03, -6.2359e-02],
          [-4.0892e-02, -5.5773e-02,  2.0212e-02]],

         ...,

         [[-2.7710e-02, -3.1080e-02, -1.0648e-02],
          [-4.0945e-02,  2.3711e-03,  6.5103e-02],
          [ 3.5840e-02, -5.4148e-02, -5.4402e-02]],

         [[-9.4724e-02,  2.9954e-02,  6.5416e-02],
          [-4.6357e-02, -9.2003e-04,  9.1704e-03],
          [-1.8042e-02, -3.0496e-02, -2.8429e-02]],

         [[-1.8801e-02, -3.8380e-03, -1.4178e-02],
          [-9.8536e-04,  1.2392e-02,  3.8046e-02],
          [-3.7683e-02, -6.6846e-02,  6.3386e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-4.4498e-02]],

         [[ 1.1615e-01]],

         [[ 4.3232e-03]],

         ...,

         [[-1.3098e-01]],

         [[ 7.9556e-02]],

         [[-2.2137e-02]]],


        [[[-2.7265e-01]],

         [[-9.5257e-02]],

         [[-1.7544e-02]],

         ...,

         [[-3.8963e-02]],

         [[ 1.3158e-01]],

         [[-2.1177e-02]]],


        [[[ 5.1717e-02]],

         [[ 4.2772e-02]],

         [[-7.7095e-02]],

         ...,

         [[ 1.1046e-04]],

         [[-4.8573e-02]],

         [[-7.0805e-02]]],


        ...,


        [[[ 1.7167e-01]],

         [[ 9.9485e-03]],

         [[-2.8582e-02]],

         ...,

         [[-8.6316e-02]],

         [[-1.6372e-01]],

         [[ 9.5424e-03]]],


        [[[ 5.2069e-02]],

         [[-1.6240e-01]],

         [[ 1.0921e-01]],

         ...,

         [[ 1.2006e-01]],

         [[-1.7218e-01]],

         [[-1.2621e-01]]],


        [[[-8.5050e-02]],

         [[-2.0002e-01]],

         [[-2.4780e-03]],

         ...,

         [[ 4.8746e-03]],

         [[-1.9494e-02]],

         [[ 6.6782e-02]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0703,  0.0704, -0.0569],
          [ 0.0462, -0.0383,  0.0597],
          [-0.0351, -0.0357,  0.0366]],

         [[-0.0281, -0.1048, -0.0110],
          [-0.0512,  0.0769,  0.0359],
          [ 0.0137,  0.0809,  0.0977]],

         [[-0.0260, -0.0005,  0.0045],
          [ 0.0046, -0.0008, -0.0127],
          [ 0.0300,  0.0113, -0.0312]],

         ...,

         [[ 0.0003,  0.0201,  0.0389],
          [ 0.0194,  0.0473, -0.0017],
          [-0.0036,  0.0221,  0.0296]],

         [[-0.0260,  0.0080, -0.0020],
          [-0.0154, -0.0270, -0.0032],
          [-0.0090, -0.0453, -0.0248]],

         [[ 0.0055, -0.0181, -0.0525],
          [-0.0353, -0.0767,  0.0452],
          [ 0.0203, -0.1183,  0.0253]]],


        [[[ 0.0069,  0.0144,  0.0214],
          [-0.0296,  0.0474, -0.0205],
          [ 0.0373, -0.0517,  0.0032]],

         [[ 0.0343, -0.0548, -0.0152],
          [-0.0043,  0.0073,  0.0255],
          [-0.0703, -0.0201,  0.0487]],

         [[-0.0216,  0.0383, -0.0220],
          [-0.0643,  0.0099,  0.0315],
          [ 0.0239, -0.0358,  0.0286]],

         ...,

         [[-0.0329, -0.0115, -0.0086],
          [-0.0299,  0.0474, -0.0457],
          [-0.0436,  0.0079,  0.0060]],

         [[-0.0099,  0.0484,  0.0169],
          [ 0.0027,  0.0204, -0.0999],
          [-0.0060, -0.0280, -0.0727]],

         [[-0.0158, -0.0591,  0.0235],
          [-0.0133, -0.0138, -0.0080],
          [-0.0211,  0.0835,  0.0163]]],


        [[[-0.0737,  0.0311, -0.0704],
          [-0.0124, -0.0538, -0.0843],
          [-0.0545,  0.0094, -0.0434]],

         [[-0.0307,  0.0549,  0.0102],
          [ 0.0704, -0.0029, -0.0284],
          [ 0.0279,  0.0527,  0.0109]],

         [[ 0.0085,  0.0353,  0.1040],
          [-0.0404,  0.0655,  0.0433],
          [ 0.0422, -0.0624, -0.0087]],

         ...,

         [[-0.0555, -0.0330,  0.0137],
          [ 0.0154,  0.0189, -0.0438],
          [ 0.0176,  0.0074,  0.0360]],

         [[ 0.0414, -0.0052,  0.0545],
          [ 0.0796,  0.0006,  0.0293],
          [-0.0795, -0.0037, -0.0451]],

         [[ 0.0520, -0.0225,  0.0355],
          [ 0.0129, -0.0120, -0.0869],
          [ 0.0375,  0.0692,  0.0880]]],


        ...,


        [[[ 0.0221,  0.0132, -0.0222],
          [ 0.0429, -0.0010,  0.0326],
          [-0.0453, -0.0345,  0.0257]],

         [[ 0.0509, -0.0064,  0.0153],
          [-0.0358, -0.0710, -0.0352],
          [ 0.0321, -0.0126,  0.0163]],

         [[-0.0018, -0.0090,  0.0224],
          [-0.0778,  0.0521,  0.0474],
          [-0.0365, -0.0096, -0.0411]],

         ...,

         [[-0.0126,  0.0240, -0.0135],
          [ 0.0385,  0.0223, -0.0063],
          [ 0.0334,  0.0726,  0.1045]],

         [[ 0.0433, -0.0224, -0.0009],
          [-0.0036,  0.0659, -0.0545],
          [ 0.0439,  0.0345,  0.0136]],

         [[ 0.0467,  0.0282, -0.0849],
          [ 0.0265,  0.0126,  0.0357],
          [-0.0342,  0.0329,  0.0182]]],


        [[[ 0.0128, -0.0345,  0.0321],
          [-0.0234, -0.0756,  0.0267],
          [ 0.0622, -0.0027, -0.0054]],

         [[ 0.0417, -0.0166, -0.0208],
          [ 0.0454,  0.0730, -0.0558],
          [ 0.0373, -0.0168,  0.0197]],

         [[ 0.0038, -0.0060, -0.0082],
          [-0.0019,  0.0020,  0.0741],
          [-0.0834,  0.0400,  0.0802]],

         ...,

         [[-0.0681,  0.0670, -0.0739],
          [-0.0465,  0.0671,  0.0097],
          [ 0.0116,  0.0024, -0.0271]],

         [[ 0.0142, -0.0502, -0.0379],
          [-0.0113, -0.0025,  0.0106],
          [-0.0357, -0.0358, -0.0188]],

         [[-0.0135,  0.0569, -0.0216],
          [ 0.0178,  0.0136,  0.0201],
          [ 0.0427, -0.0368, -0.0218]]],


        [[[-0.0107,  0.0412,  0.0199],
          [-0.0068, -0.0435, -0.1463],
          [ 0.0327,  0.0560,  0.0338]],

         [[-0.0386,  0.0916,  0.0679],
          [-0.0194, -0.0008,  0.0471],
          [-0.0223, -0.0046,  0.0113]],

         [[ 0.0604, -0.0135, -0.0046],
          [-0.0292,  0.0631,  0.0440],
          [-0.0141, -0.0605, -0.0025]],

         ...,

         [[-0.0644,  0.0501,  0.0114],
          [ 0.0148, -0.0006,  0.0012],
          [ 0.0169,  0.0379,  0.0009]],

         [[-0.0401,  0.0339,  0.0291],
          [ 0.0026, -0.0218,  0.0991],
          [-0.0884,  0.0168,  0.0448]],

         [[-0.0353, -0.0245, -0.0907],
          [-0.0316,  0.0156,  0.0498],
          [ 0.0415,  0.0379,  0.0667]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-1.6533e-02,  9.3438e-02,  3.4952e-02],
          [ 7.0031e-02, -4.7144e-02,  1.5928e-02],
          [-3.9876e-02,  9.9956e-03,  6.6733e-03]],

         [[-1.7186e-02,  1.4328e-02, -7.5120e-02],
          [-5.2318e-02,  9.9050e-03,  5.2945e-03],
          [-9.9412e-02,  7.1642e-02,  1.5535e-02]],

         [[-6.6529e-02,  6.9673e-02, -1.9078e-02],
          [-1.5818e-02,  5.9398e-04, -1.8021e-02],
          [ 3.3373e-02, -1.8831e-03,  1.0562e-02]],

         ...,

         [[-3.7879e-02,  4.1516e-02,  8.3020e-02],
          [-4.0837e-02,  2.3790e-03, -1.5143e-02],
          [ 5.8766e-02,  2.3649e-02, -1.6190e-02]],

         [[ 6.3024e-02, -2.2330e-03, -7.1178e-02],
          [-1.7502e-02, -3.6154e-02, -3.5098e-02],
          [ 3.6188e-03, -1.8444e-02,  2.5324e-02]],

         [[-3.9895e-02,  1.4049e-03,  6.8225e-02],
          [ 5.1586e-02,  1.0004e-02, -1.8289e-02],
          [-7.2499e-03, -4.3334e-02,  3.2590e-02]]],


        [[[ 4.1599e-02, -4.0006e-02,  5.8500e-03],
          [ 4.8066e-03, -8.8762e-02, -2.5662e-02],
          [ 5.7873e-02, -5.9045e-02, -4.3038e-02]],

         [[ 2.8580e-02, -1.1827e-02, -6.1088e-02],
          [ 7.6469e-03,  8.1766e-02,  5.1088e-02],
          [-4.8958e-02,  4.2666e-02,  3.5194e-02]],

         [[-4.5765e-02,  3.6413e-03,  3.4897e-02],
          [ 6.3882e-03,  2.6425e-02, -5.4239e-02],
          [ 5.8327e-02,  1.6082e-02, -2.3010e-02]],

         ...,

         [[ 3.7233e-02,  3.4034e-02,  4.1347e-02],
          [-5.1658e-02,  1.2925e-02,  4.2261e-03],
          [ 7.2877e-02, -1.3844e-03,  8.8574e-03]],

         [[ 5.0802e-02, -5.2618e-03,  8.7000e-02],
          [ 3.6732e-02,  4.7174e-02, -5.9760e-02],
          [-6.8144e-03, -1.4674e-02, -1.8569e-02]],

         [[ 3.0000e-02,  1.9311e-02,  1.2776e-02],
          [-2.9028e-02, -2.7201e-02,  4.6893e-03],
          [ 5.4755e-02,  4.3097e-02, -3.3475e-02]]],


        [[[ 3.2149e-02, -3.1553e-02,  3.3261e-02],
          [ 4.2299e-02,  2.7559e-02,  2.2795e-02],
          [-7.8489e-02, -2.2511e-03,  3.1999e-02]],

         [[-2.0197e-02, -2.4759e-02,  3.5925e-02],
          [-2.1992e-02, -1.9136e-02, -3.1474e-02],
          [ 3.7732e-03, -1.7130e-02, -4.8802e-02]],

         [[-8.2171e-03,  8.0443e-02,  1.0583e-02],
          [-4.5866e-02,  2.5928e-02, -2.9728e-02],
          [ 8.2138e-04,  5.1335e-02, -1.8561e-02]],

         ...,

         [[-2.8111e-02, -3.2820e-02, -7.2343e-03],
          [ 4.6568e-03,  6.2081e-02,  1.1400e-03],
          [-3.4426e-02,  4.0975e-02, -3.2664e-02]],

         [[-3.6916e-02,  6.1266e-03, -4.6326e-02],
          [-6.4189e-02,  1.9233e-02, -1.1658e-02],
          [ 1.4477e-02, -2.4226e-02,  2.7802e-03]],

         [[ 1.4657e-04,  8.3635e-03,  3.4331e-02],
          [ 4.5418e-04, -6.4372e-02, -1.5195e-02],
          [ 4.4465e-03,  7.7437e-03,  3.2243e-02]]],


        ...,


        [[[ 2.8206e-02,  4.5771e-02, -5.3754e-03],
          [-1.4262e-02, -2.7906e-02,  9.1160e-04],
          [ 2.3978e-02,  2.3540e-02, -6.0953e-03]],

         [[ 1.7213e-03,  5.9262e-02,  8.3954e-02],
          [-1.6977e-02, -3.8143e-02, -1.9959e-02],
          [ 8.4982e-03,  5.7007e-02,  7.1776e-02]],

         [[-5.2397e-03,  3.0623e-03, -4.1034e-02],
          [-4.8306e-02,  6.2572e-02, -2.9809e-02],
          [-3.8785e-02,  1.6555e-03, -3.8183e-02]],

         ...,

         [[ 3.1742e-02,  8.9595e-03,  1.4530e-02],
          [ 6.6563e-02, -5.6102e-03, -2.2292e-02],
          [ 2.3172e-02, -3.6172e-02,  1.0754e-01]],

         [[-1.5664e-02, -1.3760e-02,  4.9767e-02],
          [-4.9166e-02, -1.6755e-03,  5.8487e-02],
          [-2.7771e-02, -1.5072e-02,  2.3854e-03]],

         [[-1.4181e-03, -7.6076e-03, -9.6247e-03],
          [ 1.3719e-02,  2.2854e-02, -1.7812e-02],
          [-6.7522e-02, -3.1444e-03,  7.2815e-02]]],


        [[[ 4.0064e-03,  5.1667e-03, -1.8174e-02],
          [-1.0925e-02, -2.3768e-02, -1.4449e-02],
          [ 1.2262e-03,  6.0214e-03,  2.0155e-02]],

         [[ 1.7971e-02,  1.2784e-01,  1.7350e-02],
          [ 5.6813e-02,  4.3235e-02, -7.2892e-03],
          [ 4.4431e-02,  5.8869e-03, -4.6745e-07]],

         [[-5.0719e-02,  2.2842e-02,  2.3816e-02],
          [-9.2088e-03, -5.8133e-02,  2.3126e-02],
          [ 5.7290e-02,  1.6179e-02,  1.3755e-02]],

         ...,

         [[ 2.2877e-02, -3.7171e-03,  2.0128e-02],
          [-2.7290e-02,  8.0529e-02, -1.1421e-02],
          [ 1.1714e-01,  4.0056e-03,  2.3690e-02]],

         [[ 3.4439e-02, -3.9330e-02, -8.7191e-02],
          [-2.9718e-04, -1.0279e-02, -5.1533e-02],
          [ 4.5797e-02,  1.3812e-02, -3.3168e-02]],

         [[-4.4149e-02, -7.3409e-02,  1.6307e-02],
          [ 4.5791e-02, -3.9108e-02,  2.9796e-02],
          [-2.7876e-02, -1.3474e-02, -6.1126e-02]]],


        [[[ 7.0983e-03,  1.0195e-01,  1.6728e-02],
          [ 2.6360e-02, -3.3904e-02,  9.1259e-02],
          [-2.3399e-02,  3.3232e-02,  2.0516e-03]],

         [[-2.8031e-02,  2.7224e-03, -8.9921e-03],
          [ 7.1743e-02, -2.3802e-02, -4.3722e-02],
          [ 1.8296e-02, -2.8945e-02,  7.0912e-03]],

         [[-9.3862e-02,  1.3637e-02, -4.6368e-02],
          [-3.7199e-02,  2.8158e-02, -2.8295e-02],
          [-3.8732e-02,  3.4338e-02,  1.5804e-03]],

         ...,

         [[-1.7577e-02, -1.2397e-02,  7.5847e-02],
          [-8.3418e-04, -1.8289e-02,  3.4295e-02],
          [-1.5639e-04,  8.3662e-02, -5.1773e-02]],

         [[-6.6167e-02,  3.1752e-02,  6.0434e-02],
          [-5.6597e-03, -1.1723e-03, -4.5736e-02],
          [-2.5212e-02,  1.3554e-02, -1.6713e-02]],

         [[-1.0578e-02,  6.1840e-02,  3.6609e-02],
          [-5.5558e-02, -1.2337e-02, -6.1706e-04],
          [ 5.4111e-03,  1.2890e-02,  2.9013e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 21:40:02,474 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 4:01:22, time: 0.145, data_time: 0.017, memory: 547, loss_flow: 79.4336, loss: 79.4336, grad_norm: 3.9375
2022-10-09 21:40:07,625 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 3:26:23, time: 0.103, data_time: 0.013, memory: 547, loss_flow: 87.8649, loss: 87.8649, grad_norm: 4.5157
2022-10-09 21:40:12,664 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 3:13:25, time: 0.101, data_time: 0.010, memory: 547, loss_flow: 172.7448, loss: 172.7448, grad_norm: 6.6768
2022-10-09 21:40:17,797 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 3:07:40, time: 0.103, data_time: 0.012, memory: 547, loss_flow: 169.5344, loss: 169.5344, grad_norm: 6.5718
2022-10-09 21:40:23,006 - mmflow - INFO - Iter [250/100000]	lr: 1.097e-05, eta: 3:04:42, time: 0.104, data_time: 0.015, memory: 547, loss_flow: 118.2070, loss: 118.2070, grad_norm: 4.2616
2022-10-09 21:40:28,085 - mmflow - INFO - Iter [300/100000]	lr: 1.217e-05, eta: 3:01:58, time: 0.102, data_time: 0.011, memory: 547, loss_flow: 141.4149, loss: 141.4149, grad_norm: 6.6326
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 68, in __call__
    img1 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


