2022-10-09 21:46:25,259 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 21:46:25,261 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 21:46:25,320 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 21:46:25,321 - mmflow - INFO - Distributed training: False
2022-10-09 21:46:26,178 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dCADDY'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dKITTI'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09_h21'
auto_resume = False
gpu_ids = [0]

2022-10-09 21:46:26,180 - mmflow - INFO - Set random seed to 171117017, deterministic: False
2022-10-09 21:46:26,305 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:46:27,346 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:46:27,365 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 21:46:28,488 - mmflow - INFO - dataset size 800
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 21:46:30,885 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 21:46:30,997 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21
2022-10-09 21:46:30,998 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 21:46:30,999 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 21:46:31,000 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-3.7576e-02, -2.0632e-02,  6.1723e-02,  ..., -5.6785e-02,
           -9.8026e-03, -1.8221e-02],
          [ 6.2032e-03, -2.2130e-02,  2.2116e-03,  ..., -2.9079e-02,
           -2.4516e-02, -4.5866e-02],
          [ 1.9386e-02,  3.3930e-02, -2.2847e-02,  ...,  8.4578e-03,
            1.0131e-02, -1.7476e-02],
          ...,
          [-2.2039e-03,  8.5880e-03, -3.7514e-02,  ..., -9.2015e-03,
           -1.0038e-02, -1.4060e-04],
          [ 4.3464e-04,  5.0137e-02, -2.5792e-02,  ...,  3.1167e-02,
            2.5542e-02, -7.1309e-03],
          [-7.2843e-03, -2.6303e-02,  2.0927e-03,  ..., -8.1240e-03,
            4.3355e-02, -2.8843e-02]],

         [[ 2.6913e-03, -2.6312e-02, -3.3278e-04,  ..., -4.1981e-03,
           -2.0569e-02, -2.2546e-02],
          [ 2.4518e-02, -5.4986e-03, -2.0869e-03,  ...,  2.3670e-02,
            3.6119e-02,  4.8549e-03],
          [ 3.3592e-02,  1.1810e-02, -8.4306e-03,  ...,  3.2365e-02,
            2.2848e-02,  6.6189e-02],
          ...,
          [-5.0381e-03,  1.9452e-02, -1.4437e-02,  ...,  3.8715e-03,
            5.5056e-02,  1.6420e-02],
          [ 4.1748e-02,  1.5810e-02, -6.0008e-03,  ..., -2.4032e-02,
           -2.5747e-02, -7.2330e-03],
          [ 1.0689e-02, -2.2738e-02, -3.3202e-02,  ...,  3.5667e-02,
            1.8259e-02, -3.6733e-02]],

         [[ 2.8472e-03, -1.7663e-03,  1.5064e-02,  ..., -2.6087e-02,
           -4.8356e-03, -1.1655e-02],
          [ 3.7233e-03,  4.1847e-02, -4.3854e-02,  ...,  1.8537e-02,
            3.3885e-02, -3.1121e-02],
          [ 4.4018e-02,  8.6207e-03, -3.5215e-03,  ..., -8.8473e-03,
            1.3192e-02,  3.2079e-02],
          ...,
          [-1.6041e-02,  8.4906e-03,  1.9748e-02,  ...,  2.5565e-02,
            5.5019e-02, -2.5823e-02],
          [ 1.6977e-02,  4.1314e-02,  6.6250e-02,  ...,  5.0458e-03,
           -1.8691e-02, -2.1539e-02],
          [ 2.1940e-02, -3.4537e-02,  2.5772e-02,  ...,  1.4651e-02,
            2.5319e-02,  1.3148e-03]]],


        [[[ 1.2141e-02, -1.4674e-02,  7.8399e-03,  ...,  3.4987e-02,
           -1.1394e-02,  8.3929e-03],
          [-2.8730e-03,  1.2472e-02,  6.5470e-03,  ...,  2.8043e-03,
           -1.4340e-02,  5.4120e-03],
          [ 1.1896e-03, -1.7405e-02,  6.8800e-03,  ...,  2.7207e-02,
           -6.2859e-03,  2.7596e-02],
          ...,
          [ 2.8207e-02,  2.8210e-02,  4.1064e-03,  ..., -3.2366e-03,
            1.5286e-02,  1.5467e-02],
          [-2.3972e-02, -3.3654e-02,  4.6200e-03,  ..., -2.3328e-02,
           -4.1981e-02,  4.4215e-02],
          [-2.8583e-02,  2.1847e-03,  3.2245e-02,  ..., -1.9810e-02,
            1.9643e-02,  7.7550e-02]],

         [[-5.2273e-03,  2.2506e-02, -5.2754e-03,  ...,  6.3379e-03,
            2.6778e-02,  8.0943e-03],
          [ 2.6740e-02, -1.4201e-02, -2.2973e-04,  ..., -1.9758e-02,
           -2.4770e-02, -2.6261e-02],
          [ 9.7536e-04, -6.1856e-03,  9.4110e-03,  ...,  4.7639e-04,
            1.4309e-02, -1.8547e-02],
          ...,
          [ 2.2787e-02,  1.3842e-02,  1.8855e-02,  ..., -6.1407e-03,
            3.5724e-02, -2.6365e-02],
          [ 2.0194e-03, -2.2232e-02, -2.9404e-02,  ...,  1.8405e-02,
            2.8279e-02, -2.3692e-02],
          [ 1.3005e-02,  5.5606e-03,  2.4993e-02,  ..., -3.4741e-02,
            6.4077e-02,  9.8330e-03]],

         [[ 2.7868e-02,  2.7941e-02,  1.3347e-02,  ...,  8.5699e-03,
           -4.4870e-02,  4.9963e-03],
          [-2.9850e-02, -2.5087e-02,  2.4761e-02,  ...,  4.2442e-02,
            2.8981e-03, -2.8609e-02],
          [ 1.3770e-02, -1.3950e-02,  1.1654e-03,  ...,  8.5493e-03,
            1.5172e-03,  2.9531e-03],
          ...,
          [ 2.0942e-02,  1.4393e-02, -7.4430e-03,  ..., -2.7673e-02,
           -2.6363e-02,  2.6583e-02],
          [ 3.3899e-02, -2.2435e-03, -7.9589e-04,  ..., -2.6305e-02,
            1.5434e-02,  2.5246e-02],
          [-4.5663e-02, -4.3631e-02, -2.4450e-02,  ...,  2.3619e-02,
           -3.3971e-03, -1.9400e-02]]],


        [[[-2.3102e-02,  3.8983e-03, -6.5935e-03,  ...,  2.7424e-03,
           -2.9620e-02, -3.3800e-02],
          [-1.2849e-02,  4.1086e-02,  4.4732e-02,  ...,  2.4764e-02,
           -9.5682e-03,  3.0569e-02],
          [ 7.7896e-03, -2.9912e-02, -4.5819e-03,  ...,  2.3617e-02,
           -1.7994e-03, -1.1213e-02],
          ...,
          [ 1.8692e-02,  2.7345e-03, -4.9925e-03,  ..., -9.3153e-04,
           -2.6637e-02,  7.7167e-03],
          [-1.1864e-02, -1.6770e-02, -1.9144e-02,  ...,  2.6819e-02,
           -2.2789e-02, -1.5885e-02],
          [ 4.3952e-02, -5.1952e-03, -2.4569e-02,  ..., -2.3382e-02,
            2.1005e-03, -3.8795e-03]],

         [[-1.9351e-02,  1.7348e-02, -4.0201e-02,  ...,  8.8437e-03,
           -7.1011e-03, -2.0463e-02],
          [-2.2284e-02,  1.1360e-02, -1.7018e-02,  ..., -6.7893e-03,
           -2.2057e-03,  1.4605e-02],
          [ 1.1468e-02,  3.2160e-02,  2.1863e-02,  ..., -3.2295e-02,
            1.2140e-04,  2.8712e-02],
          ...,
          [ 6.2727e-04,  9.1255e-03, -3.1569e-02,  ..., -9.6637e-03,
            2.3593e-02, -3.9083e-02],
          [ 3.8882e-02, -3.7632e-02,  1.6906e-02,  ...,  3.4543e-02,
           -1.8087e-02, -5.6888e-03],
          [ 1.6475e-02,  2.0557e-02,  5.5244e-03,  ..., -4.5055e-02,
           -2.2870e-02, -2.1968e-02]],

         [[-5.3386e-02, -6.1129e-02,  1.9300e-02,  ..., -1.8106e-02,
           -4.0391e-03,  1.9592e-02],
          [-1.0942e-02, -2.6063e-02,  2.1131e-02,  ..., -1.9731e-02,
           -3.9138e-02, -7.1720e-03],
          [-1.1929e-02,  5.7501e-03, -2.1176e-02,  ..., -4.5995e-03,
           -2.3395e-02,  2.1396e-02],
          ...,
          [-2.1469e-02, -8.0823e-03,  3.5528e-02,  ..., -1.9131e-02,
            7.1553e-02, -6.0905e-03],
          [-9.3936e-03,  1.3525e-02, -3.6490e-02,  ..., -2.4718e-04,
           -3.5926e-02, -9.4092e-03],
          [-1.8151e-02,  3.0667e-03, -4.5409e-02,  ...,  4.8612e-02,
            1.7215e-02,  1.0697e-02]]],


        ...,


        [[[-4.6704e-03, -4.3832e-02,  2.3386e-02,  ...,  1.8752e-02,
           -5.0379e-02,  2.2292e-02],
          [ 3.2630e-02,  2.5196e-02,  4.0954e-02,  ..., -7.5893e-04,
           -2.0701e-02,  6.5360e-02],
          [ 3.6276e-02, -2.6234e-02,  1.6852e-02,  ...,  5.3782e-02,
            1.1192e-02, -1.0791e-02],
          ...,
          [-7.6924e-04,  1.1875e-03, -9.0440e-03,  ...,  8.2653e-03,
            1.1287e-02, -1.9371e-02],
          [-2.1675e-03, -2.6794e-02,  5.2393e-02,  ..., -2.2307e-03,
           -2.2530e-02,  4.6997e-02],
          [-5.7676e-02,  3.0472e-02,  3.5561e-03,  ..., -1.8611e-02,
           -6.6981e-03, -3.5711e-03]],

         [[ 3.7599e-02, -1.0420e-02, -5.1943e-03,  ..., -2.4847e-02,
            1.1008e-02, -2.9324e-03],
          [ 2.3227e-02,  2.6177e-02, -8.5168e-02,  ...,  6.0543e-03,
           -7.5715e-02, -7.6750e-04],
          [ 3.0976e-03,  4.3025e-03, -5.0029e-02,  ..., -1.6323e-02,
           -7.5465e-03, -2.0753e-02],
          ...,
          [-1.2550e-02,  1.9526e-02, -5.2505e-02,  ...,  4.3830e-02,
            1.3148e-02, -5.1726e-03],
          [-1.0071e-02, -2.1179e-03,  2.7019e-03,  ...,  8.8692e-03,
           -5.2421e-03, -6.9401e-03],
          [-1.9880e-04,  1.1052e-02,  1.6598e-02,  ...,  2.8665e-03,
            5.4176e-02, -7.8505e-03]],

         [[-4.0371e-02, -6.5065e-03,  5.8973e-03,  ..., -1.6187e-02,
            5.0175e-02, -2.6610e-02],
          [ 4.0767e-03, -3.3533e-02, -7.2393e-02,  ...,  2.1366e-02,
            1.9266e-02,  1.0821e-02],
          [ 1.8316e-02,  2.8094e-02, -2.3977e-02,  ...,  2.4647e-02,
           -1.2516e-02,  2.4747e-02],
          ...,
          [-1.7916e-02,  1.1922e-02,  1.2220e-02,  ...,  2.7732e-02,
           -2.3557e-02,  2.1609e-03],
          [-3.6240e-02, -4.1024e-02, -6.2362e-03,  ...,  3.1138e-02,
            3.7560e-02,  2.9214e-02],
          [ 2.8092e-02,  3.6812e-03,  1.7147e-03,  ...,  2.9162e-02,
           -9.4998e-03,  1.2916e-02]]],


        [[[-3.6023e-02, -2.9411e-02, -3.8810e-02,  ...,  1.7902e-02,
           -6.6927e-04, -1.3354e-02],
          [-3.0778e-02,  1.6405e-02,  2.5101e-02,  ..., -1.2679e-02,
           -2.3333e-02,  3.6354e-03],
          [-8.7683e-03, -1.4095e-02, -5.4669e-02,  ..., -1.3623e-02,
           -4.0681e-02, -2.7510e-02],
          ...,
          [ 4.4332e-03, -2.3692e-02, -6.0474e-02,  ..., -4.5190e-02,
            4.1178e-02,  3.0878e-03],
          [ 2.0271e-02, -2.7892e-02, -5.1372e-03,  ...,  5.0683e-02,
           -1.1181e-02,  7.1491e-03],
          [-2.6689e-02,  1.8383e-03, -5.0183e-02,  ..., -3.8435e-03,
            1.1284e-03, -1.9967e-03]],

         [[ 8.1374e-04, -2.4648e-04,  1.3101e-04,  ...,  1.4815e-02,
           -5.8862e-03, -6.8551e-03],
          [-2.0164e-02,  4.1880e-02,  6.9820e-03,  ...,  1.3434e-02,
           -1.9723e-03, -7.7444e-03],
          [ 3.8585e-02, -9.0248e-03, -3.0754e-03,  ..., -2.7824e-02,
           -1.1217e-02,  4.6827e-02],
          ...,
          [ 3.4489e-02, -2.6386e-02, -1.6610e-02,  ..., -2.7879e-02,
           -2.7169e-03,  2.2029e-02],
          [ 3.4547e-03,  7.8121e-03,  3.2749e-03,  ..., -2.7554e-02,
            3.9930e-02, -1.7423e-02],
          [-2.7988e-02, -1.0131e-02,  3.3067e-03,  ..., -1.3686e-02,
            2.7127e-02, -9.6108e-03]],

         [[-2.1748e-02, -1.5644e-02, -1.5121e-02,  ...,  8.2068e-03,
            2.4013e-02, -2.8769e-02],
          [ 1.7557e-02,  1.7212e-02, -2.1880e-03,  ...,  1.3609e-02,
            6.0389e-04, -3.7662e-02],
          [ 5.4806e-02, -1.4011e-02, -2.6702e-02,  ..., -7.9439e-03,
            2.3679e-02,  5.1436e-02],
          ...,
          [ 7.7958e-02, -1.5567e-02, -1.7728e-03,  ...,  1.1381e-02,
           -3.1420e-02, -1.5253e-02],
          [-7.2223e-03, -3.9586e-02,  1.3014e-02,  ..., -5.3379e-02,
            3.1266e-02,  7.7620e-03],
          [-2.2077e-02, -1.2272e-03,  1.5229e-02,  ...,  6.5755e-03,
            2.6790e-02,  1.1204e-02]]],


        [[[ 1.3893e-03, -8.9071e-03,  4.1740e-03,  ...,  2.1346e-03,
           -2.4647e-02, -1.7039e-02],
          [-2.0863e-02, -1.3191e-02,  5.1013e-02,  ..., -1.2404e-02,
            5.0387e-02,  4.6638e-02],
          [ 4.9677e-03, -1.4549e-03,  8.4641e-03,  ...,  1.1863e-02,
            4.9901e-03,  4.0472e-02],
          ...,
          [ 2.3238e-02,  2.3442e-02,  1.2350e-02,  ..., -7.7993e-04,
            8.7761e-03, -2.9498e-04],
          [ 2.4195e-02,  1.3538e-02,  3.2057e-03,  ...,  3.2430e-02,
           -3.2901e-03,  2.7906e-02],
          [ 3.0622e-03, -3.6303e-02,  7.0029e-03,  ...,  3.5346e-02,
            2.3813e-02, -1.4464e-02]],

         [[-1.7453e-02, -2.9193e-02, -1.8594e-02,  ...,  2.4789e-02,
           -7.3999e-03,  4.1077e-02],
          [-1.0609e-02, -5.1284e-03,  1.1027e-02,  ...,  2.9097e-02,
           -1.4796e-02,  1.4033e-02],
          [ 3.4208e-02,  2.2623e-02, -3.8158e-03,  ...,  3.3280e-02,
            5.2471e-02,  8.9474e-03],
          ...,
          [ 1.1533e-02, -5.5744e-02,  2.0190e-02,  ..., -3.1425e-03,
           -9.6107e-03,  1.2837e-02],
          [-3.2621e-02, -3.4465e-02, -3.3549e-02,  ...,  1.6866e-02,
            1.6935e-02,  3.0219e-03],
          [-1.4253e-02,  2.8258e-02, -5.9343e-02,  ..., -2.2003e-02,
            4.2345e-02, -1.4121e-02]],

         [[-2.1987e-02, -1.8550e-02, -1.3753e-02,  ..., -1.3248e-03,
           -4.2923e-04,  4.5935e-02],
          [-2.0599e-02,  2.0885e-02, -3.5859e-02,  ..., -1.7710e-02,
            3.1250e-02, -1.4069e-02],
          [ 4.2142e-03,  2.9198e-02, -1.7206e-02,  ...,  3.4048e-02,
           -2.8422e-02,  8.8803e-04],
          ...,
          [-1.0356e-03, -3.6747e-02,  9.6475e-03,  ...,  2.5024e-03,
            2.3722e-03, -3.0196e-02],
          [ 2.9599e-03,  1.7352e-02, -4.8213e-02,  ...,  3.7756e-02,
            7.0513e-05,  4.4463e-03],
          [-2.4944e-02, -1.5750e-02,  1.9184e-02,  ..., -2.0739e-02,
           -1.9227e-02,  3.5722e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 0.0434,  0.0384, -0.0320],
          [ 0.1288,  0.0872,  0.0189],
          [ 0.0493,  0.1080,  0.0559]],

         [[ 0.0361, -0.0161, -0.0281],
          [ 0.1327,  0.0897,  0.0845],
          [ 0.0126, -0.0013,  0.0116]],

         [[ 0.0515,  0.0005,  0.0560],
          [-0.0145,  0.0442, -0.0082],
          [ 0.0604,  0.0406, -0.0461]],

         ...,

         [[-0.0511,  0.1310, -0.0184],
          [-0.0463,  0.0664,  0.0111],
          [ 0.0588, -0.0346, -0.0459]],

         [[-0.0669,  0.0475,  0.0180],
          [-0.0185, -0.0962,  0.0621],
          [-0.0548,  0.0426, -0.0607]],

         [[-0.0751,  0.0506, -0.0417],
          [ 0.0646,  0.0232,  0.0242],
          [-0.0916,  0.0239, -0.0329]]],


        [[[-0.0831,  0.0281, -0.0200],
          [-0.0643, -0.1161,  0.0081],
          [ 0.0108,  0.0409, -0.0277]],

         [[ 0.0963, -0.1383,  0.0348],
          [ 0.0178,  0.0392,  0.0390],
          [ 0.0276, -0.0121,  0.0078]],

         [[-0.0611,  0.1309,  0.0071],
          [-0.0163, -0.0079, -0.0673],
          [ 0.0048,  0.0889, -0.0794]],

         ...,

         [[ 0.0061,  0.0076,  0.0780],
          [-0.0073, -0.0185,  0.0112],
          [-0.0095, -0.0711, -0.0401]],

         [[-0.0304, -0.0048,  0.0107],
          [ 0.0380, -0.0969, -0.0061],
          [-0.0036,  0.0249, -0.0448]],

         [[ 0.0020,  0.0156,  0.0258],
          [ 0.0323, -0.0402, -0.0176],
          [ 0.0962, -0.0133, -0.0516]]],


        [[[ 0.0699,  0.1025,  0.0737],
          [-0.0212,  0.0074,  0.0490],
          [ 0.1020,  0.0015, -0.0804]],

         [[ 0.0277,  0.0827,  0.0112],
          [ 0.0444, -0.1407, -0.0081],
          [-0.0651, -0.0349, -0.0418]],

         [[ 0.1445, -0.0294, -0.0736],
          [-0.0329,  0.0492, -0.0940],
          [-0.0947, -0.0189, -0.0378]],

         ...,

         [[-0.0936,  0.0215,  0.0416],
          [ 0.0331, -0.0312,  0.0529],
          [ 0.0648,  0.1072, -0.0827]],

         [[-0.1149, -0.0503,  0.0529],
          [ 0.0271,  0.1065,  0.0563],
          [ 0.1111,  0.1041,  0.0843]],

         [[ 0.0408, -0.0032,  0.0276],
          [ 0.0902,  0.0910,  0.0111],
          [-0.0338,  0.0258, -0.0870]]],


        ...,


        [[[ 0.0305,  0.0028,  0.0841],
          [ 0.0394,  0.0128, -0.0583],
          [-0.1070,  0.0806,  0.1881]],

         [[-0.0076, -0.0025,  0.0875],
          [ 0.0204,  0.0133,  0.0877],
          [-0.0054, -0.0836,  0.1047]],

         [[-0.0060, -0.0560, -0.0547],
          [ 0.0433, -0.0064,  0.0812],
          [-0.1019,  0.0407,  0.0696]],

         ...,

         [[ 0.0413,  0.0969, -0.0395],
          [-0.0137,  0.1004, -0.0035],
          [-0.0183,  0.0539,  0.0734]],

         [[ 0.0482, -0.0139, -0.1037],
          [-0.0249, -0.0170,  0.0561],
          [-0.0860,  0.0176, -0.0181]],

         [[-0.0331,  0.0829, -0.0027],
          [ 0.0902,  0.0975,  0.0677],
          [-0.0062,  0.0163, -0.0872]]],


        [[[-0.0763, -0.0451,  0.0408],
          [-0.0092, -0.0433, -0.0896],
          [ 0.0056,  0.0251,  0.0991]],

         [[ 0.0340, -0.1667,  0.0281],
          [-0.0578, -0.0131, -0.0639],
          [ 0.1137,  0.0973, -0.0171]],

         [[-0.0413,  0.0075, -0.1176],
          [-0.0552, -0.0169, -0.0665],
          [-0.0588, -0.0644,  0.0185]],

         ...,

         [[-0.1583,  0.0884, -0.0316],
          [-0.0215,  0.1397,  0.0443],
          [ 0.1101, -0.0390,  0.1363]],

         [[-0.0102,  0.0383, -0.0733],
          [ 0.0679,  0.0082,  0.0700],
          [-0.0111,  0.1555, -0.0423]],

         [[ 0.0037,  0.0429,  0.0616],
          [-0.0037,  0.0933, -0.0887],
          [-0.0372, -0.0020,  0.0273]]],


        [[[-0.0441,  0.0626, -0.1001],
          [ 0.0142,  0.0178, -0.0771],
          [-0.0568, -0.0019,  0.0638]],

         [[ 0.0480,  0.0958,  0.0367],
          [ 0.0512,  0.0520,  0.1136],
          [-0.0148,  0.0559, -0.0226]],

         [[ 0.0016, -0.0217, -0.0102],
          [-0.0263,  0.0343, -0.0022],
          [ 0.0770,  0.0510, -0.0178]],

         ...,

         [[-0.0752,  0.0456,  0.1015],
          [-0.0650,  0.1018,  0.0302],
          [-0.0277, -0.1340,  0.0175]],

         [[ 0.0073,  0.0048,  0.0617],
          [-0.0519, -0.0928, -0.0496],
          [ 0.0563,  0.0569, -0.0261]],

         [[ 0.0333,  0.0255, -0.0627],
          [-0.0162, -0.0013, -0.0024],
          [-0.0735,  0.0293, -0.0082]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 0.0755,  0.0344, -0.0433],
          [-0.0325, -0.0355, -0.0156],
          [-0.0155, -0.0173, -0.0029]],

         [[-0.0319,  0.0504,  0.0516],
          [-0.0223,  0.0334, -0.0040],
          [-0.0686, -0.0712,  0.0317]],

         [[-0.0420, -0.0825,  0.0137],
          [-0.0775,  0.0974, -0.0448],
          [ 0.0533, -0.0126, -0.0681]],

         ...,

         [[-0.0225,  0.0530,  0.0508],
          [-0.1058,  0.0023,  0.0828],
          [-0.0514,  0.0625,  0.0713]],

         [[-0.0178,  0.0607,  0.0702],
          [ 0.0882,  0.0496, -0.1194],
          [ 0.0899,  0.0412, -0.0639]],

         [[ 0.0789, -0.0367,  0.0514],
          [ 0.0028,  0.0606, -0.0033],
          [-0.0075,  0.0434,  0.0227]]],


        [[[ 0.0984,  0.0788,  0.0326],
          [ 0.0177, -0.0605, -0.1121],
          [ 0.0865,  0.0070, -0.0143]],

         [[ 0.0069,  0.0203,  0.0034],
          [ 0.0203, -0.0214, -0.0243],
          [ 0.0901,  0.0302,  0.0238]],

         [[-0.0794, -0.0749, -0.0493],
          [ 0.0617, -0.0057, -0.0743],
          [-0.0986, -0.0527, -0.0577]],

         ...,

         [[ 0.0250,  0.0063, -0.0210],
          [ 0.0499,  0.0240, -0.1116],
          [-0.0425,  0.0634, -0.0094]],

         [[ 0.0074, -0.0859, -0.0690],
          [ 0.0414,  0.0219,  0.0076],
          [ 0.0691, -0.0224,  0.0151]],

         [[-0.0350, -0.0068,  0.0356],
          [ 0.0061, -0.0260,  0.0154],
          [ 0.0060, -0.0812,  0.0415]]],


        [[[-0.0377,  0.0275, -0.0186],
          [-0.0125, -0.0247, -0.0385],
          [ 0.0284,  0.0135, -0.0178]],

         [[ 0.0071, -0.0479,  0.0470],
          [ 0.1044,  0.0031, -0.0571],
          [-0.0510, -0.0971,  0.0281]],

         [[-0.0075,  0.0451,  0.0962],
          [-0.0657, -0.0199,  0.0252],
          [ 0.0223, -0.0351, -0.0639]],

         ...,

         [[ 0.0087, -0.0486,  0.0158],
          [ 0.0745,  0.0150, -0.0315],
          [ 0.0942, -0.0836,  0.0104]],

         [[-0.0822, -0.0658, -0.0766],
          [-0.0451,  0.0758,  0.0693],
          [ 0.0499,  0.0492, -0.0340]],

         [[-0.0105, -0.0718, -0.0245],
          [-0.0504, -0.0108,  0.1084],
          [ 0.0040, -0.0426, -0.0172]]],


        ...,


        [[[-0.0195,  0.0270,  0.0571],
          [ 0.0540,  0.0511,  0.0355],
          [-0.0248, -0.0784, -0.0521]],

         [[ 0.0931, -0.1124,  0.0708],
          [-0.0545,  0.0196,  0.0067],
          [ 0.0798,  0.0494,  0.0517]],

         [[ 0.0199,  0.0397, -0.0333],
          [-0.0289, -0.0906,  0.0420],
          [-0.0085,  0.0275, -0.0071]],

         ...,

         [[-0.0297,  0.0315, -0.0172],
          [ 0.0809,  0.1006, -0.0222],
          [-0.0380,  0.0588,  0.0053]],

         [[ 0.0182,  0.0297, -0.1053],
          [ 0.0964,  0.0573, -0.0655],
          [ 0.0674,  0.0437,  0.0161]],

         [[ 0.0116,  0.0002,  0.0847],
          [-0.0105,  0.0096,  0.0092],
          [ 0.0275,  0.0525,  0.1070]]],


        [[[ 0.0574, -0.0859, -0.0472],
          [-0.0154, -0.0267, -0.0320],
          [-0.0619,  0.0576,  0.0030]],

         [[ 0.1521, -0.0730, -0.0574],
          [ 0.0291, -0.0781, -0.0287],
          [ 0.0269,  0.0282, -0.0373]],

         [[ 0.0276, -0.0086, -0.0547],
          [-0.0578,  0.0078,  0.1072],
          [-0.0407,  0.0877, -0.0753]],

         ...,

         [[-0.0633, -0.0151, -0.0015],
          [-0.0250,  0.0134,  0.0497],
          [ 0.0527,  0.0288,  0.0277]],

         [[-0.0405,  0.0548, -0.0701],
          [-0.0060,  0.0136, -0.0826],
          [-0.0358,  0.1160, -0.0116]],

         [[-0.0929,  0.0828, -0.0497],
          [ 0.1240,  0.0784,  0.0119],
          [-0.1022,  0.0737,  0.0208]]],


        [[[-0.0895,  0.0398, -0.0825],
          [ 0.0048, -0.0380,  0.1072],
          [ 0.0483,  0.0515, -0.0732]],

         [[-0.0214,  0.0362, -0.0881],
          [-0.0619,  0.0328,  0.0977],
          [-0.0701,  0.0373,  0.1194]],

         [[ 0.0452,  0.0671, -0.0115],
          [-0.0194,  0.0375,  0.0445],
          [ 0.0698, -0.0819, -0.0353]],

         ...,

         [[-0.0654, -0.0050, -0.0191],
          [ 0.0678,  0.0907,  0.0591],
          [-0.0578, -0.0706, -0.0161]],

         [[-0.0844,  0.0030, -0.0050],
          [ 0.1086, -0.0450,  0.0720],
          [-0.0241, -0.0208, -0.0800]],

         [[ 0.0231,  0.0159, -0.0848],
          [ 0.0178,  0.0557,  0.0563],
          [-0.0469, -0.0128, -0.0942]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 0.0082, -0.0447,  0.0035],
          [ 0.0094,  0.0567,  0.1072],
          [ 0.0132, -0.0411,  0.0298]],

         [[-0.0395,  0.0087, -0.0265],
          [ 0.0616,  0.0893,  0.0205],
          [-0.0399,  0.0478, -0.0719]],

         [[ 0.0068, -0.0943,  0.0769],
          [-0.0299,  0.1104, -0.0205],
          [-0.0530,  0.0697, -0.0942]],

         ...,

         [[ 0.0215, -0.1065,  0.0747],
          [ 0.0435,  0.0719,  0.0024],
          [-0.0914,  0.0200,  0.0683]],

         [[ 0.0714,  0.0181,  0.0393],
          [ 0.0403,  0.0538, -0.0068],
          [ 0.0357,  0.0535,  0.0254]],

         [[-0.0020,  0.0871, -0.0383],
          [ 0.0313,  0.0589,  0.0489],
          [-0.0108,  0.1005,  0.1141]]],


        [[[ 0.0301,  0.0232,  0.0367],
          [ 0.1054, -0.0929, -0.0602],
          [ 0.0542,  0.0104, -0.0481]],

         [[-0.0931, -0.1002,  0.0908],
          [ 0.0197, -0.0645,  0.0257],
          [ 0.0593, -0.0483,  0.0069]],

         [[-0.0351,  0.0832, -0.1047],
          [ 0.0645,  0.0777,  0.0006],
          [ 0.0439,  0.0983,  0.0225]],

         ...,

         [[-0.0766, -0.0451, -0.0988],
          [ 0.0252, -0.0576,  0.0255],
          [ 0.0478, -0.0225, -0.0061]],

         [[-0.0292, -0.1037, -0.1225],
          [-0.1002,  0.0259,  0.0316],
          [-0.0384, -0.0443, -0.0040]],

         [[-0.0872,  0.0652, -0.0466],
          [ 0.0367,  0.1163,  0.0522],
          [ 0.0182,  0.1098, -0.0764]]],


        [[[-0.0491,  0.0050, -0.0219],
          [-0.0721,  0.0265,  0.0108],
          [ 0.0445,  0.0855,  0.0708]],

         [[ 0.0257, -0.0836,  0.0700],
          [-0.0313,  0.1071,  0.0740],
          [ 0.0034,  0.0191, -0.0326]],

         [[-0.0302,  0.0305, -0.0728],
          [-0.0745, -0.0176,  0.0033],
          [-0.0641, -0.0478,  0.1441]],

         ...,

         [[ 0.0561,  0.0634, -0.0706],
          [ 0.0182,  0.0235, -0.0353],
          [-0.1646,  0.0323,  0.0900]],

         [[-0.0540, -0.0174,  0.0663],
          [-0.0218,  0.0272, -0.0323],
          [-0.0052, -0.0278,  0.0711]],

         [[-0.0064, -0.0002, -0.0017],
          [ 0.0696, -0.0270, -0.0380],
          [-0.0718, -0.0865, -0.0693]]],


        ...,


        [[[ 0.0118, -0.0461, -0.0644],
          [ 0.0134, -0.0105, -0.0435],
          [-0.0459, -0.0259, -0.0597]],

         [[ 0.0535, -0.0573, -0.0387],
          [ 0.0955, -0.0173, -0.0041],
          [ 0.0723, -0.0974,  0.0519]],

         [[-0.0565,  0.0253, -0.0623],
          [ 0.0699,  0.0903, -0.0122],
          [ 0.0876,  0.0693,  0.0357]],

         ...,

         [[ 0.0083,  0.0269,  0.0558],
          [ 0.0040, -0.0747, -0.0795],
          [ 0.0186,  0.0277,  0.0124]],

         [[ 0.0051,  0.0243,  0.0592],
          [-0.1007,  0.0042, -0.0447],
          [ 0.0656,  0.0330,  0.0250]],

         [[ 0.0018, -0.1213,  0.0315],
          [ 0.0572,  0.0415, -0.0014],
          [-0.0065, -0.0031, -0.0467]]],


        [[[-0.0431, -0.0220, -0.1216],
          [-0.0460,  0.0612,  0.0180],
          [ 0.0612,  0.0339,  0.0136]],

         [[ 0.0131, -0.0648,  0.1153],
          [ 0.0511, -0.0069, -0.0426],
          [ 0.0019, -0.0017,  0.0094]],

         [[-0.0185, -0.0833,  0.0153],
          [ 0.0166,  0.0535, -0.0127],
          [-0.0229, -0.0093,  0.0727]],

         ...,

         [[-0.0030,  0.1422,  0.0555],
          [ 0.0132,  0.0006,  0.0481],
          [ 0.0201,  0.0392, -0.0283]],

         [[-0.0029, -0.0180, -0.0063],
          [ 0.0264, -0.0211,  0.0800],
          [ 0.0828, -0.0254,  0.0279]],

         [[ 0.0562,  0.0370, -0.0410],
          [ 0.0883,  0.0161,  0.0282],
          [ 0.0048,  0.0494,  0.0629]]],


        [[[-0.0141,  0.0311,  0.0541],
          [-0.0463, -0.0554, -0.0188],
          [-0.0464, -0.0897, -0.0527]],

         [[ 0.0661,  0.0025,  0.0060],
          [-0.0689,  0.0839,  0.0389],
          [-0.0811, -0.1150,  0.0061]],

         [[-0.1186, -0.0503, -0.0129],
          [ 0.0784, -0.0366,  0.0347],
          [ 0.0240,  0.0647, -0.1055]],

         ...,

         [[-0.0265, -0.0187,  0.0239],
          [ 0.0699, -0.0675,  0.0578],
          [ 0.0292, -0.0164, -0.1012]],

         [[ 0.0333,  0.0351, -0.0102],
          [-0.0663, -0.0744,  0.0568],
          [-0.0316,  0.0659, -0.0108]],

         [[ 0.0071, -0.0353, -0.0204],
          [ 0.0117, -0.0314,  0.0266],
          [ 0.0110,  0.0038, -0.1740]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-6.3078e-02,  5.7565e-02,  2.2656e-02],
          [-3.1162e-02,  2.6349e-02, -5.1734e-02],
          [ 4.9597e-02, -9.6920e-03,  1.5044e-02]],

         [[-4.2265e-02,  1.6007e-02,  8.4260e-02],
          [-5.7352e-02,  4.9939e-03,  5.1933e-03],
          [-3.2830e-02, -1.0910e-02, -7.7694e-02]],

         [[-1.6303e-02, -4.1149e-03, -9.7382e-02],
          [ 4.4508e-02,  4.5440e-02, -7.0626e-02],
          [ 9.5028e-04,  1.2971e-01,  1.3384e-01]],

         ...,

         [[ 5.5005e-02,  6.0520e-02, -6.5047e-02],
          [ 4.0991e-02,  8.4839e-02,  6.5089e-03],
          [ 6.4504e-02, -4.6366e-02, -7.1305e-02]],

         [[-6.9347e-02, -5.2351e-03, -3.4812e-02],
          [ 8.7501e-02,  2.2205e-02, -6.9536e-03],
          [-6.6435e-02,  2.7571e-02, -3.2689e-04]],

         [[ 6.7787e-02,  1.0407e-01,  6.6336e-02],
          [-4.5422e-02,  3.3269e-02, -3.6093e-02],
          [ 8.8334e-02,  3.1271e-02,  1.0695e-01]]],


        [[[-7.0195e-02, -2.4267e-02,  7.9229e-02],
          [ 8.2290e-02, -6.8386e-02, -7.3427e-02],
          [-9.9317e-02, -7.2401e-02, -6.5558e-02]],

         [[-6.1705e-03, -1.0444e-01, -6.8250e-03],
          [-6.3475e-02, -2.7272e-02, -5.4959e-02],
          [ 2.8753e-02, -4.3081e-02,  2.5577e-02]],

         [[-4.5596e-02, -1.0478e-01,  1.0123e-02],
          [-4.6862e-02,  5.7770e-02,  1.0387e-01],
          [-7.5053e-02, -1.7473e-02,  2.2428e-02]],

         ...,

         [[-6.7817e-02, -8.5059e-02,  4.3383e-02],
          [ 2.9131e-02,  2.4297e-02, -1.8789e-02],
          [ 7.4020e-02, -1.1550e-01, -9.3006e-02]],

         [[ 2.3085e-03,  1.1228e-01, -1.1347e-02],
          [-7.4349e-02,  2.4813e-02,  7.0339e-02],
          [-1.3048e-02, -5.8012e-02,  3.3446e-02]],

         [[-3.1393e-02, -6.2797e-02,  6.1786e-02],
          [ 6.2566e-02, -3.9579e-02, -7.0425e-02],
          [ 4.3528e-03,  7.2977e-02, -2.6392e-02]]],


        [[[ 1.7066e-02,  5.4804e-03, -1.0512e-01],
          [ 1.9658e-02, -2.8230e-02,  2.5258e-02],
          [-3.6865e-02,  7.3908e-02, -3.8295e-02]],

         [[ 1.0354e-01,  6.3310e-03, -7.6143e-02],
          [-8.9132e-02,  2.7044e-02, -1.0820e-01],
          [-8.2968e-02,  3.4835e-02, -3.4937e-02]],

         [[-2.0640e-02,  7.4442e-03, -3.8302e-02],
          [ 2.9677e-02,  9.6114e-02, -4.7602e-02],
          [-4.5879e-02, -3.3889e-02, -3.4532e-02]],

         ...,

         [[-4.4610e-03, -1.9152e-02,  1.0979e-01],
          [-3.4746e-02, -4.1508e-02, -2.7429e-02],
          [-1.1153e-02, -1.5619e-02,  1.3730e-01]],

         [[-7.2428e-02, -1.7467e-02, -3.2968e-02],
          [-3.8232e-02,  8.8645e-02, -3.5760e-02],
          [ 5.3773e-02, -4.1181e-02,  5.1849e-02]],

         [[-2.3956e-03,  8.2941e-02,  9.8676e-02],
          [ 2.9825e-02, -6.4142e-02,  4.3684e-03],
          [ 1.0749e-01, -7.5023e-03,  3.6279e-02]]],


        ...,


        [[[ 8.7967e-02, -7.7574e-02,  4.6294e-03],
          [ 3.2486e-02,  5.0865e-02,  8.8350e-02],
          [-9.3708e-02,  8.5104e-03, -3.4439e-02]],

         [[-2.0809e-02,  3.1295e-02, -7.3899e-02],
          [-3.6335e-02,  1.5329e-02,  6.7769e-02],
          [ 2.2294e-02,  8.2875e-03, -1.5060e-02]],

         [[-6.8305e-02, -2.8215e-02, -6.8906e-02],
          [-5.3903e-02, -7.4642e-02,  9.7121e-02],
          [ 5.0177e-02, -2.4972e-02,  2.9900e-02]],

         ...,

         [[-1.5860e-01,  5.4571e-02, -1.0202e-01],
          [ 2.6704e-02,  8.0485e-02, -9.2598e-02],
          [-1.6098e-03, -6.5278e-02,  1.7295e-02]],

         [[ 1.0372e-02, -6.3087e-02,  3.7397e-02],
          [-1.5745e-02, -2.0970e-02, -4.2287e-02],
          [-1.6961e-02,  1.5427e-01, -1.9448e-02]],

         [[ 5.0190e-02,  4.7065e-02, -5.5434e-02],
          [-1.0036e-02, -1.7365e-02,  4.5317e-02],
          [-4.5622e-03, -6.4590e-02,  7.3343e-02]]],


        [[[ 8.0837e-02,  7.9123e-02, -4.7773e-02],
          [ 7.2913e-02,  6.7138e-03,  5.1619e-02],
          [ 2.4353e-02,  1.3820e-02, -2.1057e-02]],

         [[ 2.7308e-02,  1.1563e-01,  3.2754e-02],
          [ 7.0001e-04,  1.5032e-01,  1.5094e-01],
          [-6.6177e-03,  5.7954e-02,  6.9419e-02]],

         [[ 3.5284e-02,  2.1209e-03,  3.1517e-02],
          [-3.5542e-02,  5.3449e-02, -2.5963e-02],
          [ 2.6282e-02,  1.2056e-01, -4.1925e-02]],

         ...,

         [[-1.0934e-01, -4.3005e-03,  5.6127e-02],
          [-3.5509e-02, -4.7780e-02, -4.3327e-02],
          [ 4.8664e-02,  1.1152e-01,  6.6230e-02]],

         [[-2.9399e-02, -5.4769e-02,  2.2166e-02],
          [-4.5748e-02,  5.5713e-03, -1.3234e-01],
          [-4.3153e-02,  2.0155e-02,  9.7243e-03]],

         [[ 3.2833e-02, -2.4248e-02, -6.2962e-02],
          [-2.0229e-02, -4.9278e-02,  2.9376e-02],
          [-1.8383e-02, -5.0425e-02,  4.6397e-02]]],


        [[[ 6.0255e-03, -4.4716e-02, -8.9290e-03],
          [ 7.3665e-02, -4.3983e-02, -2.9765e-02],
          [-4.1790e-02, -6.3377e-02, -4.2118e-02]],

         [[ 3.9324e-03, -5.6144e-02, -8.2937e-02],
          [ 7.3571e-02,  7.0595e-02, -3.4689e-02],
          [-2.0459e-02,  8.7227e-05,  5.3356e-02]],

         [[-3.3525e-02, -4.0934e-02, -4.7061e-02],
          [-3.0061e-02, -5.1070e-02, -3.0482e-02],
          [ 5.9447e-02,  9.8028e-03,  3.8720e-02]],

         ...,

         [[-6.8353e-02,  9.8045e-03,  1.1333e-01],
          [-2.3017e-03,  8.6853e-02,  3.6524e-02],
          [-7.1313e-02, -3.1671e-03, -4.7166e-02]],

         [[ 1.5225e-01, -1.5707e-02,  4.9825e-02],
          [-4.1031e-04, -1.5110e-02, -2.6211e-02],
          [-4.5037e-02,  1.3362e-01,  1.1658e-01]],

         [[ 4.3743e-02, -9.7451e-03,  1.8767e-02],
          [-8.9070e-02, -1.2089e-02,  8.1133e-03],
          [ 4.4907e-02, -1.3472e-01,  3.4833e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[ 0.0593]],

         [[-0.1552]],

         [[ 0.0435]],

         ...,

         [[-0.1114]],

         [[-0.0601]],

         [[-0.0058]]],


        [[[-0.0009]],

         [[ 0.1406]],

         [[-0.0392]],

         ...,

         [[ 0.0080]],

         [[ 0.0826]],

         [[-0.0459]]],


        [[[-0.0558]],

         [[ 0.0805]],

         [[-0.0169]],

         ...,

         [[ 0.0028]],

         [[-0.0802]],

         [[ 0.0347]]],


        ...,


        [[[ 0.0882]],

         [[-0.0084]],

         [[-0.1235]],

         ...,

         [[ 0.2040]],

         [[ 0.1180]],

         [[ 0.1254]]],


        [[[-0.0043]],

         [[-0.0104]],

         [[-0.1052]],

         ...,

         [[-0.0681]],

         [[ 0.0501]],

         [[ 0.1324]]],


        [[[ 0.0301]],

         [[ 0.0461]],

         [[-0.0245]],

         ...,

         [[-0.0771]],

         [[-0.0077]],

         [[-0.0699]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 5.6776e-02, -8.4105e-02,  3.3534e-02],
          [ 7.0112e-02,  4.7438e-02, -4.7713e-02],
          [-2.8496e-02, -1.1720e-01,  3.0360e-03]],

         [[ 1.2630e-02, -1.0727e-01, -3.3314e-02],
          [-9.5252e-02,  6.1026e-02,  8.3476e-02],
          [ 5.1148e-02,  6.5989e-05, -2.9962e-02]],

         [[ 4.3346e-02, -2.0608e-03,  1.4466e-02],
          [ 4.7549e-03, -9.9257e-02, -1.4241e-03],
          [-1.5424e-02, -7.6207e-02,  6.1850e-02]],

         ...,

         [[-1.0922e-02,  3.3365e-02, -4.6765e-02],
          [-2.5974e-02,  4.0091e-02,  7.3058e-03],
          [-7.7883e-02,  2.0654e-02, -3.0187e-02]],

         [[ 2.9513e-02, -1.0160e-02,  1.1798e-01],
          [-2.9602e-02,  4.6570e-02,  6.8186e-02],
          [ 2.9635e-02, -8.1300e-02,  6.2238e-03]],

         [[ 1.6128e-02, -3.0640e-02,  7.0067e-02],
          [-5.0117e-03, -2.1968e-03, -1.8653e-02],
          [ 3.7930e-02, -4.4713e-02,  4.9636e-02]]],


        [[[-8.1397e-02, -1.0088e-03, -6.0000e-02],
          [-1.4915e-02,  2.0498e-02,  3.2067e-02],
          [ 6.5133e-03, -2.5700e-02,  2.4744e-02]],

         [[-6.2910e-02, -1.1585e-02, -3.4749e-02],
          [-8.8896e-02, -7.7449e-02,  2.7739e-02],
          [-1.0488e-03, -6.1728e-02,  3.8310e-04]],

         [[ 1.0115e-01, -4.8921e-02, -6.7919e-02],
          [ 1.9495e-02, -7.7444e-02,  9.1457e-02],
          [-2.0975e-02,  5.8394e-02,  7.2681e-02]],

         ...,

         [[-3.0059e-03,  2.7192e-02,  2.1909e-03],
          [-2.7033e-02, -5.0103e-02,  1.0691e-01],
          [-3.8160e-02, -6.5209e-03,  2.2874e-02]],

         [[-2.2642e-02,  5.3179e-02,  4.6307e-02],
          [ 2.9910e-02,  1.8868e-02, -6.3297e-02],
          [-1.6075e-03,  4.7387e-02, -3.3813e-03]],

         [[-2.0395e-02,  2.0458e-02,  3.4950e-02],
          [ 4.0061e-02, -4.4152e-02,  4.3839e-02],
          [ 2.8092e-02,  6.0728e-02,  4.9655e-02]]],


        [[[ 1.0581e-01,  1.7725e-02, -7.1545e-03],
          [ 4.3274e-02, -5.0017e-02,  3.8425e-03],
          [-1.1097e-02, -2.1223e-02, -3.0797e-02]],

         [[-8.3904e-02, -1.4371e-02,  3.3030e-02],
          [-5.4276e-02,  3.4472e-02,  5.2607e-02],
          [-9.9569e-05,  3.8128e-02, -2.0185e-02]],

         [[ 7.6567e-02,  8.5770e-03,  5.9420e-03],
          [ 2.6784e-02,  6.1276e-02, -6.2277e-02],
          [ 5.8578e-02,  2.3813e-02, -3.5445e-02]],

         ...,

         [[-7.0532e-02,  4.3396e-02,  7.0681e-02],
          [-4.5631e-02, -5.8891e-02,  9.7805e-02],
          [-5.7887e-03,  6.1607e-02, -4.3511e-02]],

         [[ 6.2754e-02,  2.8083e-02,  6.4689e-03],
          [-1.4707e-02,  6.5749e-02,  2.7112e-02],
          [-4.8987e-02, -2.5970e-02,  2.0918e-02]],

         [[-4.9557e-02,  1.2604e-02,  3.6061e-02],
          [-7.7605e-02,  2.9546e-02, -6.9164e-02],
          [-1.0263e-01,  9.4798e-03, -5.6595e-02]]],


        ...,


        [[[ 9.8526e-03,  1.9592e-02, -7.3888e-03],
          [-6.7609e-02,  6.6936e-02, -2.7667e-02],
          [-3.9107e-02,  2.1345e-02,  2.5840e-02]],

         [[-4.0601e-02, -1.1938e-01, -3.3691e-02],
          [-2.9107e-02,  6.3572e-02, -1.7591e-02],
          [-3.8309e-02, -4.6349e-02, -5.6502e-02]],

         [[-3.5049e-02, -1.9858e-02,  5.7553e-02],
          [-8.0966e-02, -4.3637e-02,  8.5794e-03],
          [ 2.0567e-03,  6.8282e-02,  3.2468e-02]],

         ...,

         [[-1.8973e-02, -4.9205e-02,  4.1353e-02],
          [ 1.0214e-01, -1.8268e-02, -4.6494e-03],
          [ 1.0006e-01, -3.4265e-02, -6.0300e-02]],

         [[ 3.1181e-02, -4.7086e-02,  6.7776e-03],
          [ 2.5677e-02, -1.0348e-01, -4.2852e-02],
          [ 4.9091e-02, -8.8588e-02,  1.0017e-01]],

         [[ 9.5244e-02,  1.7425e-02, -1.8522e-02],
          [-2.1925e-02, -2.7703e-02, -4.4570e-02],
          [-8.1181e-02,  3.1750e-02, -5.4417e-02]]],


        [[[-1.7982e-02,  7.1917e-04,  5.7041e-02],
          [ 5.0541e-02, -5.6340e-02, -2.0238e-02],
          [ 4.6743e-02,  2.7340e-02, -3.8834e-04]],

         [[-5.8543e-04,  1.6352e-02, -5.7047e-03],
          [-3.4325e-02, -7.9985e-03,  2.4458e-02],
          [-5.4067e-02,  1.2171e-02, -2.8629e-02]],

         [[ 4.3108e-03, -2.8986e-02,  2.0380e-02],
          [-4.0063e-02,  1.3898e-02, -3.3713e-02],
          [ 4.9963e-02,  2.1246e-02, -3.0222e-02]],

         ...,

         [[ 5.0680e-02, -2.0799e-02, -4.5463e-02],
          [-5.1803e-02, -2.9334e-02,  7.8632e-02],
          [ 4.8747e-02, -6.8149e-03,  1.3576e-02]],

         [[ 1.3829e-02,  3.6464e-02, -1.9759e-02],
          [-1.5333e-01,  8.6077e-02,  6.3768e-02],
          [ 4.4876e-02, -1.3776e-02, -5.2580e-02]],

         [[-1.7908e-02, -7.1140e-02,  4.3951e-02],
          [-6.2486e-02,  1.3417e-02,  5.8957e-03],
          [-1.0002e-01,  4.3776e-02,  2.5035e-02]]],


        [[[ 4.9253e-02,  9.4594e-02,  5.9239e-02],
          [-6.3677e-03,  3.4959e-02, -1.6022e-02],
          [ 6.7340e-02, -3.5001e-02, -7.6920e-03]],

         [[-7.6164e-02,  1.0779e-01,  1.7304e-02],
          [-9.1490e-03,  3.0541e-03, -2.2069e-02],
          [ 4.3683e-02, -1.0372e-01, -3.1384e-02]],

         [[-1.4078e-02,  7.6861e-03,  3.7144e-02],
          [-2.4670e-02,  1.0931e-02,  1.3324e-03],
          [ 1.6828e-02,  2.5506e-02,  1.0657e-02]],

         ...,

         [[-2.1427e-03,  8.5262e-02,  1.6820e-03],
          [ 5.3250e-02,  5.5024e-02, -4.2066e-02],
          [ 1.2855e-02,  6.5785e-02,  4.4738e-03]],

         [[-3.3178e-02, -2.3691e-02,  4.1151e-02],
          [-6.5292e-03, -6.6788e-02, -6.6352e-02],
          [-2.4348e-02, -1.4364e-02,  3.3048e-02]],

         [[-3.5832e-02, -3.1447e-02, -6.5508e-02],
          [ 1.6847e-02,  8.6385e-04, -3.1070e-02],
          [-7.1996e-02, -5.6907e-02, -1.4813e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-8.7707e-03, -3.5437e-02, -1.8921e-02],
          [-3.3789e-02, -2.9892e-02, -4.0800e-02],
          [ 2.7628e-02,  6.0943e-02, -1.6672e-02]],

         [[-4.1960e-02,  1.4077e-02, -2.1776e-02],
          [-2.2627e-02,  7.3599e-02,  7.9779e-02],
          [-1.2543e-02, -3.9009e-02, -7.7386e-03]],

         [[-3.6161e-02, -2.1460e-02,  1.1773e-01],
          [ 9.9543e-02, -1.1057e-01,  1.5868e-02],
          [-6.7011e-02,  2.9854e-02, -5.9393e-02]],

         ...,

         [[ 2.5074e-02, -7.1038e-02, -1.3506e-02],
          [ 5.9224e-02, -6.1873e-02, -3.5622e-02],
          [ 5.2383e-02, -5.7269e-02,  6.8967e-02]],

         [[-7.2967e-03, -2.7665e-02,  1.2468e-01],
          [-2.2952e-02, -1.2355e-03, -3.3945e-02],
          [-3.0612e-02, -1.6925e-02, -6.4903e-02]],

         [[ 5.0171e-03,  8.7948e-03, -8.6902e-02],
          [ 2.0036e-02, -4.0360e-02, -3.6062e-02],
          [-7.2764e-03,  9.0741e-02,  4.9498e-03]]],


        [[[ 2.0604e-02, -1.4797e-03,  5.5471e-02],
          [ 5.1215e-02, -1.9727e-02, -3.1344e-02],
          [-9.2223e-03,  1.2274e-02, -4.2454e-02]],

         [[-1.6509e-02, -1.0447e-01,  1.5981e-01],
          [ 2.1444e-02, -9.3664e-03,  1.0879e-02],
          [ 1.2330e-02, -3.7106e-03,  2.5892e-02]],

         [[-4.9140e-03,  2.8204e-02, -8.4458e-02],
          [-5.5221e-02, -2.6214e-02,  6.1548e-03],
          [-6.9410e-03,  9.7891e-03,  3.0319e-02]],

         ...,

         [[ 1.0786e-02,  4.2533e-02, -1.9489e-02],
          [ 2.9733e-02,  2.0997e-02, -1.5742e-02],
          [-1.5988e-02,  5.1135e-02,  3.1264e-02]],

         [[ 8.9491e-02,  5.7339e-02, -1.9893e-02],
          [-5.2129e-03,  4.3878e-02,  4.5638e-02],
          [-3.9796e-03, -2.6176e-02, -2.0963e-02]],

         [[-6.1480e-03, -1.8906e-02, -7.0296e-02],
          [ 8.8302e-02, -1.8812e-02,  6.7401e-02],
          [ 1.2017e-02, -4.3355e-02, -1.7461e-02]]],


        [[[ 2.0376e-02,  4.2845e-02,  3.8760e-02],
          [-3.4352e-02,  9.8912e-03,  7.7669e-03],
          [-8.8065e-02,  6.0832e-02, -2.3816e-02]],

         [[-6.4434e-02, -1.8989e-02,  1.7350e-02],
          [-2.7688e-03,  8.5343e-02, -2.4450e-02],
          [-1.8243e-02,  2.5648e-02, -7.4347e-02]],

         [[ 3.6596e-02,  4.5396e-02,  3.4367e-02],
          [-1.1931e-01,  5.3998e-02, -4.6501e-02],
          [-4.1974e-02,  3.2722e-02,  6.7172e-02]],

         ...,

         [[-3.8385e-02,  6.9899e-02, -1.8359e-02],
          [ 2.5271e-02,  1.3042e-02,  7.0705e-02],
          [-2.5370e-02, -5.3576e-02,  4.2307e-02]],

         [[-5.3755e-02,  6.5141e-02, -5.3686e-02],
          [-6.6090e-04,  3.7608e-02,  1.9244e-02],
          [ 2.1103e-02, -4.5033e-02, -2.3247e-02]],

         [[-5.0557e-02,  4.7545e-02,  1.6233e-02],
          [ 1.1386e-01,  4.1485e-02, -6.3657e-02],
          [ 1.9872e-02, -1.4536e-02,  3.1621e-02]]],


        ...,


        [[[-1.2746e-01,  3.3152e-02,  3.3089e-02],
          [-3.2901e-03, -3.8315e-02, -1.4160e-03],
          [ 4.9099e-02,  6.8412e-03, -4.4585e-02]],

         [[ 6.9122e-03, -1.9219e-02, -4.4858e-03],
          [ 9.6034e-03, -1.8137e-02,  1.5261e-02],
          [-1.9077e-02, -6.7854e-02, -4.8999e-02]],

         [[ 1.8453e-02, -2.4813e-02,  2.8502e-02],
          [ 5.4164e-02, -1.0275e-02, -3.8693e-02],
          [ 2.3367e-02, -6.8484e-02, -3.8179e-02]],

         ...,

         [[-1.8413e-02,  3.0012e-02,  2.1806e-02],
          [-2.6111e-02, -2.5851e-02, -2.3678e-02],
          [-2.3642e-02, -3.5041e-02, -2.7089e-02]],

         [[-4.8670e-02, -4.8764e-02,  5.6492e-02],
          [ 1.0255e-02,  2.4835e-03, -3.4135e-02],
          [-8.2663e-02, -3.2940e-02,  6.3825e-02]],

         [[ 1.1488e-01,  9.6983e-03,  2.9514e-02],
          [-4.0534e-02, -5.2929e-02,  2.3614e-04],
          [ 9.3140e-02,  1.1005e-02,  3.7044e-02]]],


        [[[-6.0232e-03, -4.7687e-02,  9.1355e-02],
          [-2.6689e-02,  7.9887e-02, -5.8156e-02],
          [-2.0875e-02, -5.4739e-03,  1.1449e-02]],

         [[ 4.8021e-02, -1.5249e-04,  2.9062e-02],
          [ 4.4815e-02, -1.0031e-01, -1.4039e-02],
          [ 2.0694e-02, -9.2111e-03,  7.3723e-02]],

         [[ 5.2602e-02,  7.5576e-02,  7.1594e-02],
          [ 3.4531e-03, -2.7592e-03,  7.9311e-02],
          [-1.9119e-02, -7.2323e-02,  4.3861e-02]],

         ...,

         [[-2.1255e-02,  8.1058e-02,  2.9370e-02],
          [-1.5017e-03, -5.5138e-02,  4.7423e-02],
          [-3.7907e-02, -3.8408e-02, -1.4962e-02]],

         [[-4.0495e-02,  9.0993e-02,  1.4278e-02],
          [ 4.4538e-02, -7.4414e-02,  7.7905e-03],
          [-3.1412e-02,  2.3376e-02, -2.2387e-02]],

         [[-1.0003e-01,  2.2123e-02,  1.1580e-02],
          [-2.3981e-02, -1.1366e-01, -8.6018e-02],
          [ 3.8121e-02, -7.8092e-03, -3.1853e-02]]],


        [[[ 2.7850e-02, -3.2924e-02,  7.9616e-03],
          [-2.8494e-02, -1.1843e-02,  6.4265e-02],
          [-3.0507e-02, -1.2368e-02, -8.0398e-02]],

         [[ 6.6807e-02, -2.8248e-02, -4.9224e-02],
          [ 5.5217e-02, -5.2725e-02, -8.6094e-02],
          [ 1.9836e-02, -4.7292e-02,  6.6383e-03]],

         [[ 1.0145e-01, -9.9519e-02,  6.6491e-02],
          [ 4.3228e-02,  4.2180e-03, -9.4640e-02],
          [ 6.5966e-02,  4.3170e-02,  2.0072e-02]],

         ...,

         [[-1.2254e-02, -5.5489e-02, -5.5884e-02],
          [ 2.6103e-02,  1.0057e-01, -4.0190e-02],
          [ 3.3341e-02, -1.3228e-02,  2.8655e-02]],

         [[-4.5564e-02,  3.6933e-03, -1.0010e-02],
          [ 1.7153e-03, -4.8721e-03, -1.0186e-02],
          [-1.6408e-02, -6.6711e-02,  5.0466e-02]],

         [[-4.0711e-02, -3.3690e-02,  9.7270e-02],
          [-3.3653e-02, -5.7713e-02,  3.0698e-02],
          [-9.1957e-03, -8.0220e-02,  2.8788e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.4677]],

         [[-0.0734]],

         [[-0.1261]],

         ...,

         [[ 0.0622]],

         [[-0.1957]],

         [[-0.0360]]],


        [[[ 0.0809]],

         [[ 0.1286]],

         [[ 0.0450]],

         ...,

         [[-0.1220]],

         [[ 0.0452]],

         [[-0.1708]]],


        [[[ 0.0339]],

         [[ 0.2017]],

         [[ 0.0307]],

         ...,

         [[-0.0105]],

         [[-0.0989]],

         [[-0.1286]]],


        ...,


        [[[-0.1146]],

         [[ 0.0915]],

         [[-0.0243]],

         ...,

         [[ 0.2111]],

         [[ 0.1400]],

         [[-0.1191]]],


        [[[-0.0664]],

         [[ 0.0881]],

         [[-0.0551]],

         ...,

         [[ 0.1088]],

         [[-0.1336]],

         [[ 0.1803]]],


        [[[-0.2802]],

         [[-0.0018]],

         [[-0.0712]],

         ...,

         [[-0.0658]],

         [[-0.1033]],

         [[ 0.1314]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0384, -0.0011, -0.0062],
          [ 0.0469, -0.0207, -0.0413],
          [ 0.0705, -0.0702, -0.0590]],

         [[ 0.0185,  0.0377,  0.0747],
          [ 0.0167, -0.0044,  0.0332],
          [ 0.0096, -0.0147,  0.0076]],

         [[ 0.0226,  0.0251, -0.0727],
          [ 0.0092, -0.0045,  0.0803],
          [ 0.0393,  0.0078,  0.0437]],

         ...,

         [[ 0.0416, -0.0076,  0.0520],
          [ 0.0561,  0.0262,  0.0176],
          [ 0.0198, -0.1142, -0.1045]],

         [[-0.0395, -0.0070,  0.0281],
          [-0.0191, -0.0459,  0.0099],
          [ 0.0679, -0.0585,  0.0010]],

         [[-0.0116,  0.0365,  0.0616],
          [ 0.0080,  0.0107, -0.0012],
          [-0.0566,  0.0388,  0.0679]]],


        [[[-0.0135, -0.0227,  0.0299],
          [ 0.0410, -0.0844, -0.0163],
          [-0.0267, -0.0339, -0.0161]],

         [[-0.0516, -0.0584,  0.0559],
          [ 0.0425,  0.0383, -0.0095],
          [-0.0052,  0.0072, -0.0187]],

         [[ 0.0541,  0.0041,  0.0494],
          [-0.0094,  0.0054,  0.0194],
          [ 0.0698, -0.0311, -0.0438]],

         ...,

         [[ 0.0411,  0.0149,  0.0047],
          [-0.0466, -0.0405, -0.0512],
          [ 0.0176,  0.0413, -0.0061]],

         [[ 0.0109,  0.0467, -0.0690],
          [-0.0449,  0.0255,  0.0014],
          [-0.0150, -0.0788,  0.0872]],

         [[ 0.0821,  0.1240,  0.0525],
          [ 0.0630,  0.0401,  0.0127],
          [-0.0219,  0.0071, -0.0324]]],


        [[[-0.0181,  0.0090, -0.0022],
          [-0.0475,  0.0194, -0.0329],
          [-0.0579,  0.0403,  0.0034]],

         [[ 0.0710, -0.0533,  0.0193],
          [ 0.0223, -0.0022,  0.0483],
          [ 0.0120, -0.0071,  0.0183]],

         [[-0.0487, -0.0343,  0.0415],
          [ 0.0396,  0.0046, -0.0349],
          [-0.0583, -0.0445, -0.0089]],

         ...,

         [[ 0.0062, -0.0317,  0.0065],
          [-0.0400,  0.0397,  0.0201],
          [-0.0446,  0.0146, -0.0265]],

         [[-0.0457,  0.0279,  0.0286],
          [ 0.0569,  0.0262, -0.0198],
          [-0.0171, -0.0181,  0.0180]],

         [[ 0.0571,  0.0163, -0.0322],
          [-0.0753, -0.0292,  0.0260],
          [ 0.1221, -0.0036,  0.0026]]],


        ...,


        [[[-0.0115,  0.0212, -0.0353],
          [ 0.0028,  0.0214, -0.0280],
          [ 0.1251,  0.0082,  0.0424]],

         [[-0.0914, -0.0043,  0.0177],
          [-0.0804, -0.1170, -0.0756],
          [-0.0302,  0.1054,  0.0049]],

         [[ 0.0499,  0.0546, -0.0955],
          [-0.0890, -0.0064,  0.0341],
          [ 0.0101,  0.0587, -0.0271]],

         ...,

         [[ 0.0237, -0.0706, -0.0480],
          [ 0.0304, -0.0260, -0.0185],
          [-0.0562, -0.0106, -0.0399]],

         [[-0.0028, -0.0097, -0.0655],
          [-0.0103,  0.0268,  0.0345],
          [-0.0299, -0.0351, -0.0742]],

         [[ 0.0683,  0.0541,  0.1006],
          [ 0.0977, -0.0128, -0.0247],
          [-0.0858, -0.0842,  0.0147]]],


        [[[-0.0154, -0.1016,  0.0800],
          [ 0.0505, -0.0028,  0.0446],
          [ 0.0395,  0.0120, -0.0013]],

         [[-0.0320,  0.0339,  0.0248],
          [-0.0597,  0.0299, -0.0206],
          [-0.1184, -0.0280,  0.0220]],

         [[ 0.0630, -0.0298, -0.0155],
          [ 0.0254,  0.0447,  0.0274],
          [ 0.0111,  0.0099, -0.0591]],

         ...,

         [[ 0.0135, -0.0268,  0.0740],
          [ 0.0370, -0.0052, -0.0193],
          [-0.0279, -0.0077,  0.0534]],

         [[ 0.0407, -0.0232, -0.0101],
          [ 0.0165, -0.0449, -0.0396],
          [-0.0006, -0.0087, -0.0179]],

         [[-0.0443, -0.0493, -0.0146],
          [-0.0933, -0.0199,  0.0011],
          [ 0.0103,  0.0012, -0.0274]]],


        [[[ 0.0304, -0.0498, -0.0280],
          [ 0.0664,  0.0914,  0.0286],
          [-0.0622, -0.0283,  0.0517]],

         [[-0.0402,  0.0696,  0.0022],
          [ 0.0042, -0.0164,  0.0044],
          [-0.0545, -0.0444, -0.0471]],

         [[-0.0491,  0.0049, -0.0485],
          [-0.0670, -0.0188, -0.0261],
          [ 0.0429, -0.0006, -0.0697]],

         ...,

         [[ 0.0861, -0.0693, -0.0514],
          [ 0.0288, -0.0133, -0.0074],
          [-0.0685, -0.0772, -0.0453]],

         [[ 0.0862, -0.0222, -0.0233],
          [-0.0782,  0.0257, -0.0851],
          [-0.0369,  0.1087,  0.0663]],

         [[-0.0090,  0.0044, -0.0247],
          [ 0.1046,  0.0254,  0.0035],
          [ 0.0074,  0.0438, -0.0216]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 8.4433e-02, -9.5541e-03, -6.3422e-02],
          [ 6.7109e-02, -1.4978e-02,  3.3471e-02],
          [ 5.0558e-02,  3.8320e-02,  3.1589e-02]],

         [[ 3.0558e-02,  4.2515e-02,  9.1772e-03],
          [ 9.1579e-02, -1.0689e-02,  9.0527e-03],
          [-4.0370e-02,  3.6187e-03, -2.9290e-02]],

         [[-4.6977e-02, -1.3475e-02, -9.9535e-02],
          [-1.7031e-03, -4.6493e-02,  9.4049e-02],
          [-1.8740e-02,  8.9195e-03, -7.2996e-02]],

         ...,

         [[-2.1894e-02,  3.9829e-02, -3.6941e-02],
          [ 1.5354e-02, -5.8147e-02,  4.7058e-03],
          [-2.6413e-03,  6.1956e-02,  9.5259e-03]],

         [[-6.9829e-02,  3.5594e-02, -1.7805e-02],
          [ 4.5260e-02,  1.9787e-02, -8.3753e-02],
          [-6.2631e-02, -5.6454e-02, -2.9734e-02]],

         [[-1.0003e-02, -1.1310e-02, -5.8908e-02],
          [-2.3083e-02,  3.1260e-02,  7.6979e-02],
          [-4.0065e-03,  5.3247e-02, -4.4470e-02]]],


        [[[ 2.3546e-02,  7.3676e-03,  2.2073e-02],
          [-2.1380e-02, -9.7007e-03, -1.0803e-02],
          [-2.1892e-02,  3.1966e-02,  7.3468e-02]],

         [[-7.3410e-02,  1.0099e-02,  1.2482e-02],
          [ 1.5335e-02, -1.1314e-01,  2.5071e-02],
          [-1.9767e-02,  9.3048e-03,  7.2103e-02]],

         [[-3.3159e-02,  1.0445e-02, -7.2002e-02],
          [ 1.0482e-01, -2.9024e-03, -1.0235e-02],
          [-3.3469e-02, -3.9447e-02,  3.9502e-03]],

         ...,

         [[-2.4525e-02,  6.0273e-02, -1.1801e-02],
          [-2.4020e-02,  5.3136e-02, -3.2547e-02],
          [-1.8767e-02, -2.2545e-02,  8.6542e-03]],

         [[ 2.5218e-02, -2.5270e-02, -1.0515e-02],
          [-6.2341e-02,  3.0700e-02, -2.2890e-02],
          [ 2.7586e-02,  8.6025e-02,  1.7349e-02]],

         [[-3.8811e-02,  3.5617e-02, -1.8908e-02],
          [-9.4149e-03, -7.7276e-02,  3.3335e-02],
          [ 4.4385e-02,  1.0679e-02, -1.2707e-01]]],


        [[[-5.4460e-02,  8.8312e-03, -3.5566e-02],
          [-9.1963e-03,  4.5801e-03,  1.3191e-02],
          [ 8.2324e-03,  1.4275e-02,  1.1472e-01]],

         [[ 1.0282e-02,  6.2643e-02, -1.0661e-01],
          [ 2.1776e-02,  7.6494e-03,  1.1405e-01],
          [-4.2913e-03, -5.3920e-02,  3.9682e-02]],

         [[-3.4242e-02, -3.7285e-03,  3.0682e-02],
          [-9.2839e-02, -9.4980e-03,  9.4450e-02],
          [ 5.5779e-02,  9.1327e-02,  7.6481e-02]],

         ...,

         [[-7.7999e-02,  5.3429e-02, -4.3018e-02],
          [-1.3647e-02, -2.2707e-02,  2.0261e-02],
          [ 1.4471e-01,  3.2006e-02, -2.3214e-02]],

         [[ 4.2779e-03,  2.9955e-02,  7.6099e-02],
          [ 4.1369e-02,  4.1947e-02,  3.4713e-02],
          [-4.9007e-02,  2.4043e-02, -6.4670e-02]],

         [[ 4.3182e-02, -4.0130e-02, -1.5044e-02],
          [-1.0900e-02, -3.6934e-02, -2.4901e-02],
          [ 4.6995e-03,  3.3591e-02,  3.8537e-02]]],


        ...,


        [[[-1.9277e-02,  3.2757e-03, -1.9382e-02],
          [-2.3246e-02,  3.1833e-02,  9.0139e-02],
          [ 3.4603e-02, -3.0791e-02, -2.4679e-02]],

         [[-1.0022e-01, -5.5615e-02,  4.4098e-02],
          [ 1.5301e-01,  6.4438e-02,  1.1068e-03],
          [ 3.2976e-02, -1.5152e-02,  3.8744e-02]],

         [[-6.6621e-03, -6.2016e-02, -6.0164e-02],
          [-2.6434e-02,  6.2876e-02,  1.8003e-02],
          [ 5.4205e-02,  8.3539e-04,  4.3130e-02]],

         ...,

         [[-7.2875e-03, -4.0732e-02, -6.1309e-02],
          [ 3.3511e-02, -7.3938e-02, -3.4447e-02],
          [-4.8771e-02,  3.8757e-02, -4.0721e-03]],

         [[ 1.5768e-02, -2.2942e-02,  2.8366e-02],
          [ 7.8820e-02, -5.7759e-03,  2.8885e-02],
          [ 6.8259e-02, -5.2413e-02, -2.4454e-02]],

         [[ 2.6697e-02,  1.2826e-03,  4.8136e-02],
          [ 1.0633e-04,  4.3525e-02,  3.1008e-02],
          [-9.1405e-03,  3.2152e-02,  3.0067e-02]]],


        [[[-7.2244e-02,  8.7595e-02, -5.0697e-02],
          [ 9.9564e-03, -8.6575e-02, -7.6163e-02],
          [-4.4603e-02,  9.9245e-02,  2.8938e-02]],

         [[ 3.4876e-02,  1.2649e-02,  3.4694e-03],
          [-3.0188e-02,  1.2525e-03,  4.7869e-02],
          [-2.4750e-02,  9.0241e-03,  2.2388e-04]],

         [[ 2.0961e-02, -4.2253e-04, -3.0900e-02],
          [ 7.9972e-02, -3.4924e-02, -7.0733e-02],
          [-3.5307e-02, -6.7317e-03, -4.1621e-02]],

         ...,

         [[-2.6728e-03,  3.5302e-02, -9.0107e-03],
          [-6.3841e-03,  1.8339e-02,  2.0079e-02],
          [ 1.1593e-02,  6.5874e-02,  7.5451e-02]],

         [[-3.5118e-02, -5.3546e-02, -2.2922e-02],
          [-5.1533e-02, -3.3923e-02, -5.3379e-02],
          [ 8.0493e-02, -2.9652e-03,  2.6106e-02]],

         [[ 3.1258e-02, -1.0039e-01, -1.4194e-02],
          [ 6.2832e-03,  8.8669e-02,  7.8217e-02],
          [-3.5678e-02, -5.4931e-02, -3.9893e-02]]],


        [[[-5.1202e-02, -9.7402e-03,  4.7168e-02],
          [ 7.7231e-02, -1.1130e-01, -2.7281e-02],
          [ 1.8012e-02, -6.6278e-02, -7.2972e-02]],

         [[ 6.2197e-02,  3.5561e-02, -6.3859e-02],
          [-2.2565e-02, -4.7433e-02, -5.4604e-02],
          [ 3.0164e-02,  1.4534e-02, -7.6565e-02]],

         [[-2.6282e-02,  1.7613e-02,  2.3349e-02],
          [ 4.9756e-02,  4.6184e-02, -8.5491e-03],
          [-3.9974e-02, -7.8027e-03, -7.6781e-02]],

         ...,

         [[-7.3175e-03,  1.3558e-02, -4.5698e-03],
          [-1.2847e-02, -1.2648e-02, -2.3291e-02],
          [ 2.9516e-03, -6.3613e-02, -4.4077e-02]],

         [[-1.1579e-02, -4.1524e-03, -8.5058e-02],
          [-3.6114e-02, -3.6974e-04, -1.9548e-02],
          [ 9.7046e-02, -2.3385e-02, -6.6732e-02]],

         [[ 2.1314e-02, -2.5189e-02,  8.7340e-03],
          [ 3.8807e-02,  6.7831e-03,  4.6939e-02],
          [ 6.2765e-02,  1.4371e-02, -9.8678e-03]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-0.0412, -0.0660,  0.0158],
          [ 0.0333, -0.0015, -0.0424],
          [-0.0113,  0.0379,  0.0340]],

         [[ 0.0751,  0.0617, -0.0114],
          [ 0.0024,  0.0329, -0.0338],
          [ 0.0760, -0.0223,  0.0069]],

         [[ 0.0156,  0.0171, -0.0242],
          [ 0.0658, -0.0518, -0.0283],
          [ 0.0316,  0.0139,  0.0060]],

         ...,

         [[ 0.0185,  0.0215, -0.0666],
          [ 0.0138,  0.0030,  0.0416],
          [-0.0424, -0.0182, -0.0110]],

         [[ 0.0267, -0.0013, -0.0416],
          [ 0.0360, -0.0542, -0.0040],
          [ 0.0505, -0.0246, -0.0713]],

         [[-0.0292,  0.0348,  0.0343],
          [-0.0543,  0.0308, -0.0146],
          [ 0.0261, -0.0057,  0.0485]]],


        [[[-0.0325, -0.0154, -0.0058],
          [ 0.0207,  0.0056, -0.0039],
          [-0.0190,  0.0242,  0.0525]],

         [[-0.0251,  0.0497, -0.0166],
          [-0.0085, -0.0120, -0.0209],
          [ 0.0082, -0.0081, -0.0525]],

         [[-0.0326,  0.0138,  0.0320],
          [ 0.0204,  0.0029,  0.0236],
          [-0.0063, -0.0634, -0.0491]],

         ...,

         [[ 0.0234, -0.0408, -0.0333],
          [-0.0364, -0.0023, -0.0385],
          [ 0.0500,  0.0153,  0.0134]],

         [[-0.0076, -0.0130, -0.0035],
          [-0.0470, -0.0696,  0.0672],
          [ 0.0009,  0.0354, -0.0218]],

         [[ 0.0237,  0.0858,  0.0793],
          [ 0.0312, -0.0666,  0.0412],
          [ 0.0165,  0.0162, -0.0561]]],


        [[[-0.0282, -0.0373,  0.0147],
          [ 0.0768,  0.0023, -0.0064],
          [-0.0723,  0.0404,  0.0409]],

         [[-0.0873,  0.0117, -0.0105],
          [ 0.0145,  0.0290,  0.0406],
          [-0.0178,  0.0228, -0.0293]],

         [[-0.0076,  0.0548,  0.0069],
          [-0.0726,  0.0745, -0.0033],
          [-0.0325,  0.0610,  0.0520]],

         ...,

         [[ 0.0473, -0.0541,  0.0790],
          [-0.0192,  0.0158,  0.0391],
          [-0.0201, -0.0283, -0.0697]],

         [[-0.0233, -0.0229,  0.0461],
          [ 0.0336, -0.0080,  0.0424],
          [-0.0243, -0.0337,  0.0388]],

         [[-0.0492, -0.0031, -0.0812],
          [ 0.0412,  0.0121, -0.0499],
          [-0.0267, -0.0374, -0.0133]]],


        ...,


        [[[-0.0674,  0.0339,  0.0126],
          [ 0.0295,  0.0087, -0.1098],
          [ 0.0352,  0.0089,  0.0268]],

         [[ 0.0696,  0.0084, -0.0050],
          [ 0.0289, -0.0073, -0.0332],
          [ 0.0040, -0.0655,  0.0534]],

         [[-0.0442,  0.0079, -0.0604],
          [ 0.0172, -0.0780, -0.0974],
          [ 0.0550,  0.0076,  0.0607]],

         ...,

         [[ 0.0003, -0.0392, -0.0092],
          [ 0.0096,  0.0716,  0.0671],
          [ 0.0637,  0.0427, -0.0353]],

         [[ 0.0552, -0.0585,  0.0351],
          [ 0.1065,  0.0422, -0.0046],
          [-0.0464,  0.0093,  0.0144]],

         [[ 0.0174, -0.0203,  0.0105],
          [-0.0312,  0.0312,  0.0198],
          [ 0.0286, -0.0147,  0.0149]]],


        [[[-0.0189, -0.0347, -0.0059],
          [-0.0106,  0.0589,  0.0278],
          [-0.0367, -0.0384, -0.0819]],

         [[-0.0640,  0.0927, -0.0163],
          [-0.0219, -0.0283,  0.0598],
          [-0.0112,  0.0050,  0.0594]],

         [[-0.0200,  0.0015, -0.0470],
          [-0.0192, -0.0302, -0.0154],
          [-0.0070, -0.0177, -0.0051]],

         ...,

         [[-0.0743, -0.0272,  0.0351],
          [-0.0293,  0.0082,  0.0131],
          [-0.0318,  0.0381,  0.0599]],

         [[-0.0527,  0.0328, -0.0404],
          [ 0.0078,  0.0430,  0.0007],
          [-0.0293,  0.0007,  0.0096]],

         [[ 0.0154, -0.0099, -0.0651],
          [-0.0586, -0.0369, -0.0065],
          [ 0.0888, -0.0063, -0.0402]]],


        [[[-0.0119,  0.0524,  0.0289],
          [ 0.0216, -0.0634,  0.0405],
          [ 0.0473, -0.0182,  0.0252]],

         [[-0.0001, -0.0625, -0.0643],
          [-0.0003,  0.0234,  0.0783],
          [-0.0023,  0.0131,  0.0292]],

         [[ 0.0338, -0.0549, -0.0140],
          [-0.0615,  0.0031, -0.0157],
          [ 0.0295,  0.0737, -0.0153]],

         ...,

         [[-0.0800,  0.0140,  0.0257],
          [-0.0387, -0.0452, -0.0288],
          [ 0.0758, -0.0620,  0.0146]],

         [[-0.0312,  0.0341,  0.0502],
          [-0.0845,  0.0100,  0.0533],
          [-0.0401, -0.0093, -0.0714]],

         [[ 0.0021,  0.0416,  0.0074],
          [-0.0184,  0.0035, -0.0526],
          [ 0.0148, -0.0521, -0.0526]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-0.0280,  0.0037, -0.0723],
          [-0.0350, -0.0069,  0.0213],
          [-0.0413, -0.0567, -0.0254]],

         [[-0.0216, -0.0031,  0.0333],
          [-0.0023,  0.0490, -0.0183],
          [-0.0585, -0.0197, -0.0206]],

         [[ 0.0083, -0.0272, -0.0051],
          [-0.0498,  0.0659,  0.0161],
          [-0.0502, -0.0876,  0.0445]],

         ...,

         [[-0.0574,  0.0165, -0.0007],
          [ 0.0548, -0.0217,  0.0014],
          [ 0.0022, -0.0400,  0.0218]],

         [[ 0.0290, -0.0584,  0.0172],
          [ 0.0173, -0.0201, -0.0576],
          [ 0.0066,  0.0444, -0.0298]],

         [[-0.0892,  0.0133, -0.0126],
          [ 0.0439,  0.0316, -0.0422],
          [ 0.0174,  0.0052,  0.0303]]],


        [[[ 0.0182,  0.0409,  0.0409],
          [-0.0124, -0.0288, -0.0535],
          [-0.0176, -0.0456,  0.0125]],

         [[ 0.0229,  0.0007, -0.0078],
          [-0.0607, -0.0037,  0.0211],
          [-0.0293, -0.0137,  0.1000]],

         [[-0.1067, -0.0085, -0.1119],
          [-0.0897, -0.0124, -0.0114],
          [ 0.0555, -0.0126,  0.0287]],

         ...,

         [[ 0.0115, -0.0359, -0.0413],
          [-0.0306, -0.0322, -0.0574],
          [-0.0170,  0.0157, -0.0808]],

         [[-0.0190,  0.0167,  0.0177],
          [ 0.0379, -0.0168,  0.0952],
          [-0.0411,  0.0432, -0.0068]],

         [[-0.0168,  0.0303, -0.0456],
          [-0.0205, -0.0247,  0.0528],
          [ 0.0189,  0.0406, -0.0690]]],


        [[[-0.0283, -0.0145, -0.0144],
          [-0.0671, -0.0766,  0.0533],
          [-0.0927,  0.0874,  0.0067]],

         [[-0.0087, -0.0535,  0.0221],
          [-0.0366,  0.0277, -0.0090],
          [-0.0081, -0.0543,  0.0250]],

         [[ 0.0035,  0.0277,  0.0287],
          [-0.0517, -0.0392,  0.0043],
          [ 0.0685, -0.0168,  0.0281]],

         ...,

         [[ 0.0023, -0.0386, -0.0367],
          [-0.0172, -0.0204, -0.0229],
          [-0.0097,  0.0086, -0.0870]],

         [[-0.0172,  0.0208, -0.0131],
          [-0.0062, -0.0228,  0.0339],
          [-0.0621, -0.0626, -0.0178]],

         [[ 0.0442, -0.0311,  0.0284],
          [-0.0180,  0.0353,  0.0272],
          [ 0.0497,  0.0009, -0.0222]]],


        ...,


        [[[-0.0643, -0.0104, -0.0278],
          [ 0.0688,  0.0631,  0.0066],
          [ 0.0678,  0.0013, -0.0407]],

         [[-0.0068, -0.0680,  0.0093],
          [-0.0252, -0.0097,  0.0092],
          [-0.0585, -0.0140,  0.0398]],

         [[-0.0298,  0.0335,  0.0771],
          [-0.0009, -0.0310,  0.0280],
          [-0.0240,  0.0526,  0.0338]],

         ...,

         [[ 0.0057,  0.0533,  0.0128],
          [ 0.0522, -0.0079, -0.0750],
          [ 0.0769, -0.0443, -0.0125]],

         [[-0.0645, -0.0216, -0.0199],
          [-0.0155,  0.0797, -0.0473],
          [ 0.0186,  0.0653,  0.0189]],

         [[-0.0618,  0.0343,  0.0201],
          [-0.0191, -0.0045, -0.0398],
          [-0.0054,  0.0461,  0.0235]]],


        [[[ 0.0262, -0.0274,  0.0914],
          [ 0.0348,  0.0167,  0.0829],
          [-0.0764, -0.0058,  0.0570]],

         [[-0.0589,  0.0127,  0.0115],
          [-0.0028, -0.0431,  0.0215],
          [-0.0005, -0.0896, -0.0647]],

         [[-0.0200, -0.0353,  0.0200],
          [ 0.0786,  0.0311, -0.0413],
          [-0.0499, -0.0101, -0.0311]],

         ...,

         [[ 0.0046,  0.0075, -0.0668],
          [-0.0152, -0.0257,  0.0482],
          [-0.0102, -0.0070, -0.0707]],

         [[ 0.0164, -0.0424, -0.0531],
          [ 0.0029, -0.0340, -0.0718],
          [ 0.0010, -0.0108, -0.0193]],

         [[-0.0190,  0.0214, -0.0166],
          [-0.0250, -0.0316,  0.0128],
          [-0.0208, -0.0050,  0.0021]]],


        [[[ 0.0071,  0.0293, -0.0226],
          [ 0.0079, -0.0173, -0.0245],
          [-0.0231,  0.0044,  0.0100]],

         [[ 0.0065, -0.0025,  0.0206],
          [-0.0710,  0.0614,  0.0393],
          [ 0.0155,  0.0932,  0.0019]],

         [[-0.0371, -0.0208,  0.0811],
          [-0.0917, -0.0280,  0.0042],
          [ 0.0427,  0.0464, -0.0008]],

         ...,

         [[ 0.0140,  0.0279,  0.0231],
          [ 0.0053,  0.0380, -0.0185],
          [-0.0187, -0.0137,  0.0600]],

         [[-0.0035, -0.0414,  0.0125],
          [ 0.0821,  0.0505, -0.0461],
          [ 0.0537, -0.0317,  0.0310]],

         [[-0.0552,  0.0588,  0.0750],
          [ 0.0027,  0.0377,  0.0060],
          [-0.0183,  0.0050, -0.0013]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0377]],

         [[ 0.0751]],

         [[-0.0699]],

         ...,

         [[ 0.1910]],

         [[-0.0246]],

         [[ 0.0937]]],


        [[[-0.0807]],

         [[-0.0971]],

         [[-0.0343]],

         ...,

         [[ 0.0124]],

         [[ 0.1143]],

         [[-0.1328]]],


        [[[-0.1587]],

         [[-0.2550]],

         [[ 0.0634]],

         ...,

         [[ 0.0132]],

         [[-0.1047]],

         [[ 0.0928]]],


        ...,


        [[[ 0.3414]],

         [[ 0.0562]],

         [[-0.2277]],

         ...,

         [[ 0.0271]],

         [[ 0.1997]],

         [[-0.1968]]],


        [[[-0.1543]],

         [[-0.0828]],

         [[ 0.1398]],

         ...,

         [[-0.0592]],

         [[ 0.0205]],

         [[ 0.0386]]],


        [[[ 0.1598]],

         [[-0.1072]],

         [[-0.0856]],

         ...,

         [[-0.0699]],

         [[ 0.0780]],

         [[-0.1512]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0375, -0.0081,  0.0021],
          [ 0.0493,  0.0942, -0.0202],
          [ 0.0419, -0.0021, -0.0040]],

         [[ 0.0040,  0.0313, -0.0563],
          [-0.0560, -0.0202,  0.0055],
          [ 0.0029,  0.0043,  0.0574]],

         [[-0.0327, -0.0841,  0.0492],
          [-0.0026,  0.0730, -0.0177],
          [-0.0147,  0.0317,  0.0185]],

         ...,

         [[ 0.0579, -0.0152, -0.0249],
          [-0.0047, -0.0401, -0.0493],
          [ 0.0498, -0.0371,  0.0039]],

         [[-0.0318,  0.0187, -0.0743],
          [ 0.0302, -0.0910, -0.0055],
          [-0.0328, -0.0036,  0.0053]],

         [[ 0.0231,  0.0080,  0.0491],
          [-0.0089, -0.0201,  0.0332],
          [-0.0301, -0.0572, -0.0059]]],


        [[[-0.0135, -0.0578, -0.0458],
          [-0.0296,  0.0429,  0.0703],
          [ 0.0037, -0.0102, -0.0193]],

         [[ 0.0147,  0.0068,  0.0173],
          [-0.0140, -0.0475, -0.0273],
          [-0.0213,  0.0382,  0.0307]],

         [[-0.0043,  0.0140, -0.0136],
          [-0.0597,  0.0475, -0.0385],
          [-0.0085,  0.0232, -0.0511]],

         ...,

         [[-0.0211,  0.0752,  0.0673],
          [-0.0404, -0.0212,  0.0436],
          [ 0.0289,  0.0210,  0.0485]],

         [[ 0.0181, -0.0462,  0.0820],
          [-0.0184,  0.0170, -0.0344],
          [ 0.0214, -0.0576, -0.0078]],

         [[-0.0150, -0.0387,  0.0093],
          [-0.0184, -0.0780,  0.0097],
          [-0.0479, -0.0075, -0.0065]]],


        [[[ 0.0126, -0.0327, -0.0178],
          [ 0.0190,  0.0091, -0.0028],
          [ 0.0249,  0.0304, -0.0396]],

         [[-0.0041,  0.0099, -0.0398],
          [ 0.0179,  0.0205, -0.0305],
          [-0.0817, -0.0662,  0.0119]],

         [[-0.0187, -0.0945,  0.0163],
          [-0.0507, -0.0223,  0.0286],
          [ 0.0179, -0.0657,  0.0018]],

         ...,

         [[ 0.0010,  0.0004, -0.0370],
          [ 0.0471, -0.0161, -0.0238],
          [ 0.0475, -0.0451, -0.0402]],

         [[-0.0125,  0.0021, -0.0210],
          [-0.0804, -0.0023, -0.0264],
          [-0.0604, -0.0564,  0.0508]],

         [[-0.0193,  0.0674,  0.0298],
          [ 0.0107, -0.0124,  0.0483],
          [ 0.0141,  0.0318, -0.0180]]],


        ...,


        [[[-0.0532,  0.0146,  0.0296],
          [-0.0854,  0.0123,  0.0408],
          [-0.0068, -0.0024,  0.0728]],

         [[-0.0083,  0.0135, -0.0457],
          [ 0.0147,  0.1006,  0.0035],
          [ 0.0249, -0.0121, -0.0410]],

         [[-0.0295, -0.0329, -0.0341],
          [ 0.0156, -0.0016, -0.0327],
          [ 0.0286,  0.0293,  0.0156]],

         ...,

         [[ 0.0304,  0.0854,  0.0008],
          [-0.0571,  0.0572, -0.0264],
          [-0.0290, -0.0068,  0.0216]],

         [[-0.0311, -0.0035, -0.0056],
          [-0.0150,  0.0149,  0.0004],
          [-0.0237, -0.0010, -0.0521]],

         [[-0.0707,  0.0509,  0.0144],
          [-0.0332,  0.0667,  0.0154],
          [ 0.0487,  0.0141,  0.0349]]],


        [[[-0.0259,  0.0058, -0.0722],
          [-0.0287,  0.0251,  0.0516],
          [ 0.0876, -0.0339,  0.0293]],

         [[-0.0359, -0.0048, -0.0144],
          [ 0.0284,  0.0103,  0.0557],
          [-0.0171, -0.0523, -0.0113]],

         [[-0.0984,  0.0074,  0.0524],
          [-0.0229, -0.0175,  0.0187],
          [ 0.0532, -0.0313,  0.0002]],

         ...,

         [[-0.0703,  0.0480,  0.0059],
          [ 0.0296, -0.0234, -0.0487],
          [ 0.0249,  0.0212, -0.0833]],

         [[ 0.0428,  0.0496,  0.0427],
          [ 0.0256, -0.0192,  0.0275],
          [ 0.0292,  0.0011,  0.0581]],

         [[ 0.0168,  0.0271,  0.0295],
          [-0.0400,  0.0482, -0.0393],
          [-0.1033, -0.0508, -0.0338]]],


        [[[ 0.0363,  0.0081,  0.0377],
          [ 0.0056,  0.0108,  0.0358],
          [ 0.0379,  0.0085,  0.0484]],

         [[-0.0050,  0.0107,  0.0718],
          [-0.0222,  0.0055, -0.0626],
          [-0.0145,  0.0025,  0.0307]],

         [[-0.0026,  0.0039, -0.0021],
          [ 0.0261,  0.0584, -0.0239],
          [-0.0137,  0.0036, -0.0424]],

         ...,

         [[ 0.0253, -0.0089,  0.0188],
          [ 0.0486, -0.0055, -0.0665],
          [ 0.0063,  0.0534, -0.0504]],

         [[-0.0155, -0.0505,  0.0518],
          [ 0.0161,  0.0462,  0.0431],
          [ 0.0144, -0.0088,  0.0096]],

         [[ 0.0059,  0.0110,  0.0278],
          [-0.0412, -0.0145, -0.0166],
          [-0.0549, -0.0130, -0.0543]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 6.8880e-03,  1.4315e-02,  8.9089e-02],
          [-9.3502e-03,  7.6420e-02,  1.9434e-02],
          [-2.1391e-02,  4.5356e-03,  8.2370e-03]],

         [[ 1.2350e-03, -4.9957e-03, -4.5921e-02],
          [ 6.8281e-02,  6.1004e-02, -4.5970e-02],
          [-1.5023e-02,  6.6960e-02,  3.1094e-02]],

         [[ 9.6224e-03, -1.4607e-03,  1.1389e-02],
          [ 2.3531e-03, -6.6837e-02,  3.9606e-03],
          [ 3.6360e-02, -7.8660e-02, -7.1903e-02]],

         ...,

         [[-1.3802e-02, -2.5006e-02, -4.0104e-02],
          [-1.9574e-02,  2.8329e-03,  1.6694e-02],
          [ 7.6984e-02, -3.7861e-02,  6.8038e-03]],

         [[-6.9334e-04, -1.4168e-01, -3.9055e-02],
          [ 5.7646e-02, -2.6134e-02, -3.8335e-02],
          [ 9.1576e-03, -4.8934e-02,  1.2273e-02]],

         [[ 8.4164e-03,  1.0162e-01,  5.4239e-02],
          [-9.5382e-03,  1.8784e-03,  4.6302e-02],
          [ 7.7416e-02,  3.9178e-02, -4.9780e-02]]],


        [[[-3.7007e-02,  7.1940e-02, -1.0022e-01],
          [ 4.6160e-02,  1.4400e-02, -9.0539e-02],
          [ 4.1268e-02,  5.1865e-02, -6.1340e-04]],

         [[ 9.4247e-02,  1.7653e-02, -1.4559e-02],
          [-1.7929e-02,  1.3543e-02,  9.9909e-02],
          [ 6.3845e-02,  2.8117e-02,  2.0834e-02]],

         [[-1.9462e-02,  3.8086e-02, -2.9700e-02],
          [ 3.3136e-02,  7.1245e-02,  8.1312e-03],
          [-3.0814e-02, -3.6791e-02,  6.7888e-02]],

         ...,

         [[-6.2030e-02, -1.4115e-02,  3.0485e-02],
          [-1.7555e-02, -5.9129e-02,  1.1602e-02],
          [-2.5339e-03,  7.6914e-02,  5.4875e-02]],

         [[ 2.4097e-02, -1.7842e-02,  5.6822e-03],
          [-4.5388e-03,  4.0047e-02,  4.5411e-02],
          [-2.6492e-02,  1.2018e-01, -1.1508e-02]],

         [[-5.0254e-02, -4.6090e-02, -1.5921e-02],
          [-4.0386e-02, -1.4363e-02,  7.1477e-02],
          [-1.5019e-02,  1.3103e-03,  2.0970e-02]]],


        [[[-2.2335e-02,  1.9521e-02, -5.1833e-03],
          [ 1.9595e-02, -3.3561e-02, -2.3395e-02],
          [-2.1580e-02, -1.4059e-02, -1.1423e-02]],

         [[-5.1571e-02,  1.6051e-03,  2.9540e-02],
          [ 5.9345e-02, -4.5614e-02,  6.4876e-02],
          [ 2.6832e-02,  2.2407e-02, -2.3699e-02]],

         [[ 6.9185e-03, -2.8287e-02, -1.8906e-02],
          [-1.0712e-02,  7.0166e-03, -3.4443e-02],
          [-4.4073e-02,  6.0703e-02, -3.8069e-02]],

         ...,

         [[ 5.6874e-03, -2.0613e-02,  6.5092e-02],
          [-5.3833e-03,  4.5582e-02, -1.9902e-02],
          [ 1.3672e-03,  1.8417e-02, -1.2378e-03]],

         [[ 1.5362e-02,  4.1028e-02, -9.3865e-03],
          [ 3.1661e-02,  3.4538e-02,  3.6551e-02],
          [ 2.0097e-02,  1.8880e-02,  5.7979e-02]],

         [[ 8.4426e-02, -2.1159e-03, -6.2827e-02],
          [-7.4921e-03, -7.8352e-04, -2.2513e-02],
          [ 6.4475e-02,  5.2814e-03,  1.4473e-02]]],


        ...,


        [[[ 3.4146e-02, -2.9483e-05, -5.4688e-02],
          [ 1.6585e-02,  2.6096e-02,  2.4671e-03],
          [ 5.9701e-02, -9.2731e-03, -4.7657e-02]],

         [[-1.1635e-02, -2.4112e-02,  3.3384e-02],
          [ 1.4921e-02, -1.9997e-02,  1.9968e-02],
          [-5.7557e-02,  1.4025e-02,  8.5101e-03]],

         [[ 4.8956e-03, -5.0504e-03, -1.0483e-01],
          [ 6.1239e-03, -2.8302e-02, -5.5398e-02],
          [ 1.8423e-02,  3.9300e-02, -5.9864e-02]],

         ...,

         [[-2.6471e-02, -3.9500e-02,  4.4208e-02],
          [ 3.3264e-03,  2.2230e-02, -4.9746e-02],
          [ 3.3853e-02, -4.9805e-02,  5.1148e-02]],

         [[-7.6330e-03,  9.1739e-03, -7.9749e-03],
          [ 2.6028e-03, -3.6602e-02,  3.2810e-04],
          [-4.6185e-02, -5.4185e-02,  1.5292e-02]],

         [[ 4.7622e-02, -7.9469e-02, -6.4805e-03],
          [-5.2479e-02, -1.0651e-02, -2.8347e-02],
          [ 3.1651e-02,  2.6953e-02,  6.3607e-02]]],


        [[[-4.6096e-02, -3.3949e-02,  1.2350e-02],
          [ 2.7205e-02, -1.0409e-02, -1.3665e-03],
          [ 2.9599e-02, -5.0513e-02,  2.7164e-02]],

         [[ 3.1311e-02,  3.2112e-02,  1.3849e-02],
          [ 1.2063e-02,  3.1744e-02, -1.9252e-02],
          [ 2.4839e-02, -3.6437e-02,  1.1592e-03]],

         [[-8.9785e-03,  3.7046e-02, -2.9385e-02],
          [ 2.1966e-02,  3.4935e-02,  2.2180e-02],
          [ 5.2751e-02, -3.5228e-02,  2.8304e-02]],

         ...,

         [[-5.1455e-02, -3.5969e-02, -2.9325e-02],
          [ 2.5581e-02,  4.8168e-02,  8.2076e-02],
          [ 4.8438e-02,  7.1986e-02, -2.5336e-03]],

         [[-8.9580e-02,  1.6674e-02,  1.8033e-02],
          [-2.5963e-02,  1.8520e-02,  4.1348e-02],
          [-7.0793e-02,  8.9480e-03,  3.2443e-02]],

         [[ 4.2262e-02, -7.1336e-02,  4.8613e-02],
          [-3.8635e-02,  7.5521e-02,  1.1362e-02],
          [ 2.5344e-02, -8.0353e-02, -5.2853e-02]]],


        [[[ 1.9803e-02,  1.0579e-02, -1.7152e-02],
          [ 3.8538e-02, -6.1251e-02, -6.3615e-02],
          [-5.9401e-02,  8.4936e-03, -1.5412e-02]],

         [[-4.2228e-02, -5.5672e-02, -2.9972e-02],
          [ 2.1173e-03,  3.7592e-02, -1.9048e-02],
          [ 7.4916e-02, -1.8674e-02,  4.9127e-02]],

         [[ 2.4772e-02, -7.3762e-02, -4.9616e-02],
          [-4.3574e-02, -5.0987e-03, -2.0501e-02],
          [-2.5840e-02, -2.7319e-02,  3.1502e-02]],

         ...,

         [[ 1.6259e-02,  4.8621e-03,  4.7465e-02],
          [-6.2123e-02,  4.9882e-03,  2.2580e-02],
          [ 1.1269e-02, -1.8545e-02,  3.6399e-02]],

         [[ 3.7498e-02,  4.3839e-02, -4.4623e-02],
          [-1.7551e-02,  1.4887e-02, -5.3825e-02],
          [ 3.1787e-02, -1.4190e-02,  7.0464e-02]],

         [[-3.7564e-02, -2.3546e-02, -1.2171e-02],
          [ 6.8763e-03,  3.1855e-02, -1.2609e-02],
          [ 4.5353e-02,  1.1959e-02, -4.3613e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 0.0769]],

         [[ 0.0223]],

         [[-0.0546]],

         ...,

         [[ 0.0523]],

         [[ 0.0928]],

         [[-0.2772]]],


        [[[-0.0795]],

         [[-0.0917]],

         [[ 0.0431]],

         ...,

         [[ 0.0180]],

         [[-0.0103]],

         [[ 0.0030]]],


        [[[-0.0185]],

         [[ 0.0656]],

         [[ 0.1346]],

         ...,

         [[ 0.0709]],

         [[ 0.0920]],

         [[-0.0127]]],


        ...,


        [[[ 0.0642]],

         [[ 0.0148]],

         [[ 0.0917]],

         ...,

         [[-0.0373]],

         [[ 0.0420]],

         [[-0.1341]]],


        [[[ 0.0820]],

         [[ 0.0749]],

         [[ 0.0269]],

         ...,

         [[ 0.0181]],

         [[-0.0239]],

         [[-0.0259]]],


        [[[-0.0156]],

         [[-0.0022]],

         [[-0.0905]],

         ...,

         [[ 0.0388]],

         [[ 0.0753]],

         [[ 0.0375]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[ 0.0386,  0.0004, -0.0019],
          [ 0.0269, -0.0040, -0.0173],
          [-0.0721, -0.0187, -0.0688]],

         [[-0.0027, -0.0176,  0.0116],
          [ 0.0027,  0.0337,  0.0350],
          [-0.0356, -0.0188,  0.0342]],

         [[ 0.0162,  0.0089,  0.0599],
          [ 0.0326,  0.0230,  0.0409],
          [ 0.0065,  0.0210,  0.0332]],

         ...,

         [[-0.0323, -0.0789, -0.0069],
          [ 0.0347,  0.0081,  0.0364],
          [-0.0324, -0.1145, -0.0260]],

         [[ 0.0271,  0.0102,  0.0081],
          [ 0.0003,  0.0233,  0.0013],
          [-0.0287,  0.0467, -0.0026]],

         [[ 0.0252, -0.0583,  0.0254],
          [-0.0190, -0.0430,  0.0052],
          [ 0.0704, -0.0116,  0.0004]]],


        [[[ 0.0223, -0.0300, -0.0047],
          [-0.0662,  0.0108, -0.0261],
          [ 0.0241, -0.0239,  0.0090]],

         [[-0.0509,  0.0396, -0.0181],
          [-0.0516,  0.0094,  0.0171],
          [-0.0214,  0.0383, -0.0043]],

         [[-0.0027, -0.0643, -0.0092],
          [-0.0337, -0.0063,  0.0383],
          [-0.0514,  0.0055, -0.0294]],

         ...,

         [[-0.0227,  0.0038, -0.0037],
          [-0.0526, -0.0347, -0.0728],
          [ 0.0106,  0.0422, -0.0124]],

         [[-0.0137, -0.0004, -0.0382],
          [ 0.0152, -0.0182, -0.0443],
          [-0.0377, -0.0177,  0.0605]],

         [[ 0.0781,  0.0174, -0.0214],
          [ 0.0555,  0.0522,  0.0351],
          [ 0.0304,  0.0224,  0.0068]]],


        [[[-0.0002, -0.0044,  0.0163],
          [-0.0310, -0.0057, -0.0333],
          [-0.0044, -0.0142, -0.0570]],

         [[-0.0759, -0.0140, -0.0565],
          [-0.0234, -0.0180, -0.0123],
          [-0.0149, -0.0465,  0.0376]],

         [[ 0.0003,  0.0216,  0.0952],
          [-0.0256, -0.0097,  0.0456],
          [-0.0118, -0.0022,  0.0213]],

         ...,

         [[ 0.0493,  0.0086, -0.0060],
          [ 0.0225,  0.0067, -0.0255],
          [-0.0058, -0.0429,  0.0213]],

         [[ 0.0022,  0.0116, -0.0307],
          [-0.0081,  0.0398, -0.0154],
          [ 0.0800, -0.0592,  0.0056]],

         [[ 0.0078,  0.0258, -0.0186],
          [-0.0164, -0.0204,  0.0084],
          [ 0.0078,  0.0668, -0.0134]]],


        ...,


        [[[ 0.0078,  0.0023, -0.0095],
          [-0.0382, -0.0186,  0.0383],
          [ 0.0007, -0.0446, -0.0137]],

         [[ 0.0520,  0.0036,  0.0292],
          [ 0.0068, -0.0026,  0.0070],
          [ 0.0095,  0.0243, -0.0403]],

         [[-0.0078,  0.0047, -0.0046],
          [ 0.0029, -0.0240,  0.0073],
          [-0.0458, -0.0165,  0.0016]],

         ...,

         [[ 0.0084,  0.0004, -0.0679],
          [-0.0095,  0.0289,  0.0032],
          [ 0.0046,  0.0186,  0.0143]],

         [[-0.0106, -0.0053, -0.0558],
          [ 0.0511,  0.0386,  0.0209],
          [ 0.0892,  0.0003,  0.0072]],

         [[ 0.0066,  0.0676,  0.0888],
          [-0.0601, -0.0319, -0.0075],
          [-0.0053, -0.0546, -0.0128]]],


        [[[ 0.0361,  0.0405,  0.0119],
          [ 0.0738,  0.0373, -0.0742],
          [ 0.0262, -0.0227,  0.0376]],

         [[ 0.0527, -0.0069,  0.0146],
          [-0.0163, -0.0231, -0.0833],
          [-0.0685,  0.0266, -0.0210]],

         [[ 0.0013,  0.0058,  0.0279],
          [-0.0158, -0.0110,  0.0764],
          [-0.0433, -0.0282, -0.0233]],

         ...,

         [[ 0.0043,  0.0378,  0.0676],
          [ 0.0079, -0.0083, -0.0156],
          [ 0.0174, -0.0079, -0.0212]],

         [[ 0.0427,  0.0958,  0.0146],
          [-0.0064, -0.0462, -0.0057],
          [-0.0331, -0.0167,  0.0118]],

         [[-0.0219,  0.0034, -0.0086],
          [-0.0228, -0.0057,  0.0285],
          [ 0.0191,  0.0059,  0.0313]]],


        [[[-0.0275,  0.0250, -0.0396],
          [ 0.0034,  0.0132,  0.0345],
          [-0.0043, -0.0134,  0.0390]],

         [[-0.0087,  0.0343,  0.0337],
          [ 0.0556,  0.0074, -0.0218],
          [ 0.0156, -0.0023, -0.0160]],

         [[-0.0388, -0.0023,  0.0110],
          [ 0.0239, -0.0145,  0.0458],
          [-0.0308, -0.0076, -0.0295]],

         ...,

         [[-0.0028,  0.0101,  0.0053],
          [ 0.0575,  0.0116, -0.0235],
          [ 0.0058,  0.0166, -0.0286]],

         [[-0.0073,  0.0014,  0.0325],
          [-0.0319,  0.0047, -0.0188],
          [ 0.0379,  0.0334,  0.0032]],

         [[ 0.0188, -0.0065,  0.0389],
          [-0.0284, -0.1079, -0.0224],
          [-0.0138,  0.0649, -0.0053]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 7.7239e-05,  9.4745e-03, -4.3524e-02,  ..., -4.0533e-02,
            4.9010e-03,  1.1779e-02],
          [ 3.6103e-03, -1.0313e-02,  1.9667e-02,  ..., -9.1261e-03,
            2.3852e-02, -6.7926e-04],
          [ 1.0299e-03, -1.8410e-02, -1.2522e-02,  ..., -4.5343e-03,
           -1.7028e-02,  1.4242e-02],
          ...,
          [ 2.5798e-03,  2.4188e-04, -1.4778e-02,  ...,  2.1359e-02,
           -4.8955e-03,  2.0860e-02],
          [ 2.5569e-03,  1.3805e-02, -1.2830e-02,  ...,  9.9247e-03,
           -7.8059e-03,  2.8217e-02],
          [-1.2910e-02, -2.2078e-02, -2.3792e-02,  ..., -1.6344e-02,
            1.2733e-02, -5.6793e-03]],

         [[ 1.6476e-02,  3.1794e-03,  2.5723e-03,  ..., -1.1231e-02,
           -2.7720e-02,  3.5208e-02],
          [ 6.5203e-03, -3.4343e-02, -4.3992e-02,  ...,  1.6789e-02,
           -3.7044e-03,  2.1016e-02],
          [ 1.2250e-02, -1.8912e-02, -1.7395e-02,  ...,  8.4475e-05,
           -1.2811e-02, -3.2174e-02],
          ...,
          [-6.9740e-03, -4.1036e-03,  1.7813e-02,  ..., -3.3752e-02,
            2.9000e-03, -1.2428e-02],
          [ 1.4253e-02, -1.3216e-02,  8.7743e-03,  ...,  2.6643e-02,
            1.0167e-02, -7.8174e-03],
          [-2.0191e-02,  1.8384e-02, -1.6951e-02,  ..., -3.4708e-03,
            3.2218e-02,  4.0979e-03]]],


        [[[ 1.2280e-02,  1.2358e-03,  3.2877e-02,  ..., -1.3487e-02,
            7.0202e-03,  1.9311e-02],
          [-3.9896e-03, -8.7818e-03,  9.9884e-03,  ...,  7.6004e-04,
           -5.6997e-03, -3.2274e-02],
          [-1.8257e-02,  2.8683e-02, -1.5577e-02,  ..., -1.0202e-02,
            3.3014e-05, -3.2337e-03],
          ...,
          [ 5.4617e-03, -1.7937e-02, -1.8433e-03,  ..., -2.2809e-02,
           -1.2007e-02, -7.9849e-03],
          [ 1.0890e-02,  2.4041e-03,  1.2908e-02,  ...,  2.6804e-02,
           -1.4413e-02, -1.2632e-03],
          [-3.5854e-02,  2.7295e-02,  1.7242e-02,  ..., -2.7657e-02,
           -4.2787e-03,  1.6199e-02]],

         [[-1.8017e-02,  1.7251e-02, -2.5879e-02,  ..., -1.8734e-02,
            9.2225e-03, -1.4943e-02],
          [ 2.3108e-02, -3.2118e-03, -7.7298e-03,  ...,  6.8156e-03,
           -2.2246e-03, -2.1507e-03],
          [-4.1262e-03, -1.0424e-02, -4.2276e-03,  ...,  1.5456e-02,
            1.9149e-02,  1.9467e-02],
          ...,
          [ 3.1288e-02,  5.3037e-03, -9.3665e-03,  ..., -2.5888e-02,
            3.2046e-02, -5.8528e-03],
          [ 8.3036e-03,  1.9145e-02, -1.7088e-02,  ..., -1.6211e-02,
            7.1809e-03,  2.5139e-02],
          [-1.6606e-02, -1.0196e-02,  3.3616e-03,  ...,  1.4388e-02,
            1.4042e-02, -3.3255e-03]]],


        [[[-1.6905e-03, -2.4773e-02, -2.5651e-02,  ..., -1.1316e-02,
            4.4965e-02,  1.2585e-02],
          [ 4.6406e-03,  1.0023e-02, -7.5448e-03,  ...,  2.1280e-02,
           -2.9276e-02, -9.3416e-03],
          [-4.4781e-03,  1.4901e-02,  1.2951e-02,  ..., -1.1961e-02,
           -3.1559e-03, -9.7032e-03],
          ...,
          [ 2.2395e-02,  3.4133e-02,  8.3850e-03,  ...,  7.2884e-03,
            1.4500e-02, -1.1320e-02],
          [-9.3020e-03, -2.0404e-02, -1.9792e-02,  ..., -2.9720e-02,
           -2.9073e-03, -2.8140e-03],
          [-1.5863e-02,  3.6773e-02,  1.5292e-02,  ..., -7.6084e-04,
           -1.5981e-02, -2.3400e-02]],

         [[-1.4953e-02, -2.1399e-02,  5.7027e-03,  ..., -2.4950e-02,
           -1.1424e-02, -1.3695e-02],
          [ 4.7767e-03, -2.3565e-02,  1.4332e-02,  ...,  2.4306e-02,
           -1.9810e-02, -2.4974e-02],
          [-1.9363e-02,  1.3361e-02,  1.8463e-02,  ..., -3.3168e-03,
           -2.2984e-02,  2.3918e-02],
          ...,
          [ 4.2878e-04, -3.4856e-03, -4.9437e-02,  ..., -2.4650e-02,
           -6.7698e-03, -1.8087e-02],
          [ 2.6977e-03,  1.1334e-02,  2.8710e-02,  ...,  1.6431e-02,
            2.5225e-03, -5.3149e-03],
          [-4.8973e-03, -2.4506e-03,  1.4972e-02,  ..., -1.5229e-02,
            1.6235e-02,  2.3317e-02]]],


        ...,


        [[[ 3.4942e-03, -4.9692e-04,  2.8098e-02,  ...,  1.8914e-02,
           -3.9943e-03, -2.0557e-03],
          [-1.3054e-03, -2.8629e-02,  3.4427e-02,  ..., -3.8722e-03,
           -1.9971e-02, -5.3374e-03],
          [-2.6782e-02,  2.4989e-02, -1.1336e-02,  ...,  1.7202e-02,
           -7.2646e-03,  2.5697e-02],
          ...,
          [-2.8343e-02, -2.3398e-02,  4.4858e-03,  ...,  1.7915e-03,
            1.0298e-02, -1.6485e-02],
          [-2.3756e-02,  3.3094e-02,  4.7377e-03,  ..., -1.9001e-03,
            6.0424e-03,  4.2253e-02],
          [ 1.9064e-02,  9.0296e-03,  3.1042e-02,  ..., -1.8262e-02,
            1.2905e-02, -2.2371e-02]],

         [[ 6.2837e-03, -7.5073e-03, -1.2494e-02,  ..., -7.8738e-04,
           -4.0285e-03,  1.3613e-02],
          [-1.7344e-02,  2.1148e-02,  3.4129e-02,  ...,  2.2310e-03,
           -5.6403e-03,  7.9731e-03],
          [ 1.0981e-02, -3.0242e-02, -4.6758e-03,  ...,  2.2310e-02,
            2.5682e-02, -1.5861e-02],
          ...,
          [ 1.0423e-02,  6.6017e-03,  5.1877e-04,  ..., -2.0254e-02,
           -3.5888e-02, -1.7365e-02],
          [-4.4600e-03, -2.1903e-02, -2.5646e-02,  ...,  2.6143e-02,
           -1.4681e-02, -2.3199e-02],
          [-2.0762e-02, -3.1381e-03, -1.1142e-02,  ..., -3.7705e-02,
            8.9313e-03, -2.2842e-02]]],


        [[[ 6.6158e-04, -1.8465e-02,  3.5234e-04,  ..., -1.5585e-02,
            1.0974e-02, -2.4693e-02],
          [ 3.9053e-03, -5.4768e-02, -2.8637e-03,  ...,  2.3401e-02,
            3.2083e-02, -1.2225e-02],
          [ 3.4951e-02,  3.5185e-03, -7.4644e-03,  ..., -1.0980e-02,
           -1.8047e-02,  1.5543e-02],
          ...,
          [-1.4119e-02,  5.5323e-03, -3.5915e-02,  ..., -1.9662e-02,
           -4.3233e-02, -5.6003e-03],
          [-2.1595e-02,  1.3456e-02, -5.4407e-03,  ..., -1.4012e-02,
            1.9995e-02, -3.3333e-02],
          [-6.3093e-03,  3.0285e-02, -1.5654e-02,  ...,  1.8786e-02,
           -4.9918e-03,  9.3908e-03]],

         [[ 8.6711e-03, -2.6893e-02,  4.6820e-04,  ..., -1.5806e-02,
           -1.1542e-02, -8.5141e-03],
          [ 1.9335e-02,  1.3563e-02,  1.3151e-02,  ...,  1.4410e-02,
            1.5401e-02,  1.0595e-02],
          [ 1.3757e-02, -1.5462e-02, -2.0337e-02,  ...,  5.1395e-02,
           -1.0488e-02,  6.8274e-03],
          ...,
          [-7.2418e-05, -2.7502e-03,  1.6819e-02,  ..., -1.6436e-02,
            2.8510e-02,  3.1666e-03],
          [-1.5318e-02,  2.8785e-02,  4.0713e-03,  ...,  7.4642e-03,
           -1.4656e-02, -2.9819e-02],
          [ 7.5096e-03,  4.3160e-03, -1.7578e-02,  ...,  2.5403e-02,
            8.2737e-03,  4.7759e-03]]],


        [[[ 1.3596e-02,  1.1031e-02,  1.5295e-03,  ...,  8.2370e-03,
           -6.8799e-03, -2.6066e-02],
          [ 3.2938e-03,  1.8596e-02,  1.7966e-02,  ..., -1.5758e-02,
           -1.5289e-02, -8.1675e-03],
          [ 1.2124e-02, -1.4102e-02,  1.5500e-02,  ...,  7.3312e-03,
            2.4256e-02, -3.2595e-03],
          ...,
          [ 2.9202e-02,  1.1616e-02, -2.8573e-02,  ..., -2.5274e-02,
           -3.4476e-04, -1.5868e-02],
          [ 1.5113e-02,  9.9730e-03, -1.1184e-02,  ..., -2.7830e-03,
            1.0369e-02, -3.3417e-03],
          [-1.8208e-04, -7.5518e-03, -3.1350e-03,  ..., -1.1907e-02,
            3.0566e-02,  8.9038e-03]],

         [[-2.0877e-02, -1.8266e-02, -8.3319e-03,  ...,  8.0769e-03,
            2.9401e-02,  8.1407e-03],
          [-9.2378e-03,  1.1653e-02,  2.0875e-02,  ...,  2.6629e-02,
           -2.4823e-02, -6.2928e-03],
          [-1.0472e-02, -1.3784e-02,  7.0068e-03,  ..., -2.0203e-04,
            1.3539e-02, -5.8049e-03],
          ...,
          [-1.4945e-02, -7.3839e-03,  1.6590e-02,  ..., -1.6650e-03,
            3.8197e-02,  5.6070e-03],
          [ 9.7938e-03,  2.1334e-02, -3.9810e-03,  ..., -2.7253e-03,
            2.3702e-02, -1.9462e-02],
          [ 1.4421e-02, -2.4904e-02, -1.0049e-02,  ..., -3.2949e-02,
            1.2333e-02, -2.6802e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[-0.0054,  0.0166,  0.0605],
          [ 0.0021,  0.0092, -0.0829],
          [ 0.0119, -0.0063, -0.0694]],

         [[-0.0630,  0.0497, -0.0032],
          [ 0.0846,  0.0225, -0.0042],
          [ 0.0325,  0.0633,  0.0214]],

         [[ 0.0906, -0.0447, -0.0210],
          [ 0.1247, -0.0208, -0.0256],
          [-0.0609,  0.0045, -0.0421]],

         ...,

         [[-0.0487,  0.0770, -0.0035],
          [-0.0158,  0.0038,  0.0307],
          [ 0.0020,  0.0243, -0.0932]],

         [[ 0.0246,  0.0353, -0.0087],
          [-0.1079,  0.0446, -0.0529],
          [ 0.0273,  0.0654, -0.0310]],

         [[ 0.0490,  0.0223, -0.0683],
          [ 0.0306,  0.0466, -0.0279],
          [-0.0100, -0.0445,  0.0174]]],


        [[[ 0.0335,  0.0803, -0.0239],
          [-0.0691,  0.0410, -0.0806],
          [ 0.0245, -0.0022,  0.0671]],

         [[-0.0088,  0.1554,  0.0611],
          [-0.0126,  0.0499,  0.0030],
          [ 0.0684,  0.0131, -0.0057]],

         [[ 0.0131, -0.0487,  0.0716],
          [ 0.0524,  0.0064,  0.0008],
          [ 0.0123, -0.0392,  0.0549]],

         ...,

         [[-0.0061, -0.0053,  0.0107],
          [-0.0900,  0.0021, -0.0729],
          [-0.0079, -0.0795,  0.1056]],

         [[ 0.0737,  0.1356, -0.0392],
          [-0.1062,  0.0418, -0.0391],
          [-0.0332, -0.0097,  0.0196]],

         [[ 0.0480, -0.0048,  0.0719],
          [-0.0677, -0.0442, -0.0204],
          [-0.0324, -0.0096, -0.0469]]],


        [[[-0.0810,  0.1273, -0.0369],
          [-0.0646,  0.0094,  0.0167],
          [-0.0817, -0.0827, -0.0072]],

         [[-0.0052, -0.0284,  0.0431],
          [ 0.0049,  0.0324,  0.0145],
          [ 0.0627,  0.0056,  0.0631]],

         [[-0.0410, -0.0563,  0.0366],
          [-0.0743, -0.0887,  0.0786],
          [ 0.0993, -0.1004,  0.0488]],

         ...,

         [[ 0.0061,  0.0685,  0.0413],
          [-0.0271,  0.0413,  0.0945],
          [-0.0713,  0.0467,  0.0031]],

         [[-0.0012,  0.0674, -0.0235],
          [-0.0141,  0.0135, -0.0166],
          [ 0.0553,  0.0865,  0.1002]],

         [[ 0.0071, -0.0379,  0.0405],
          [-0.0454, -0.0638,  0.0328],
          [-0.0481,  0.0184,  0.0353]]],


        ...,


        [[[-0.0154, -0.0552,  0.0310],
          [-0.0292, -0.0066,  0.0343],
          [-0.0666, -0.1028, -0.0344]],

         [[-0.0192, -0.0959,  0.0126],
          [-0.0613,  0.1057, -0.0218],
          [-0.0067, -0.0511,  0.0255]],

         [[ 0.0165,  0.0352,  0.0888],
          [ 0.0372,  0.0659, -0.0654],
          [ 0.0932, -0.0427,  0.0804]],

         ...,

         [[ 0.0177, -0.0337, -0.0982],
          [ 0.0236, -0.0767, -0.0202],
          [ 0.1075,  0.0373, -0.0736]],

         [[ 0.1372, -0.0095, -0.0083],
          [ 0.0954, -0.0253, -0.0228],
          [ 0.0312, -0.0148, -0.0179]],

         [[ 0.0368, -0.0293, -0.0467],
          [ 0.0130,  0.0108, -0.1015],
          [-0.0093, -0.0209, -0.0053]]],


        [[[ 0.0336, -0.0570,  0.0446],
          [-0.0019, -0.0271,  0.0752],
          [ 0.0232, -0.0084, -0.0816]],

         [[ 0.0635, -0.0619, -0.0186],
          [-0.1178,  0.0654, -0.0439],
          [-0.0175,  0.0403, -0.1467]],

         [[ 0.0088, -0.0077, -0.0448],
          [-0.0825, -0.0277, -0.0570],
          [-0.0621, -0.0187,  0.1199]],

         ...,

         [[-0.0649,  0.0126, -0.0022],
          [-0.1051,  0.0148,  0.0351],
          [ 0.0341, -0.0266,  0.0024]],

         [[ 0.0493,  0.1301, -0.0062],
          [ 0.0065,  0.0695,  0.0737],
          [ 0.0564,  0.0269,  0.0252]],

         [[ 0.1140,  0.1030, -0.0523],
          [-0.1329, -0.0643, -0.0236],
          [ 0.0286,  0.0064,  0.0187]]],


        [[[ 0.0112,  0.0920, -0.0020],
          [-0.0105,  0.0507, -0.0052],
          [-0.0539, -0.0467, -0.0121]],

         [[ 0.0426, -0.0108, -0.0341],
          [ 0.0423, -0.0989, -0.0781],
          [-0.0893,  0.2208,  0.0231]],

         [[-0.0048,  0.0215,  0.0631],
          [-0.0279,  0.0560,  0.0006],
          [-0.0191, -0.0313, -0.0796]],

         ...,

         [[-0.0251, -0.0646,  0.0562],
          [ 0.0015, -0.0087, -0.0403],
          [-0.0662, -0.0109, -0.0493]],

         [[ 0.0292,  0.0291,  0.0029],
          [-0.0407, -0.0089,  0.0912],
          [-0.0285,  0.0435,  0.0300]],

         [[-0.0514, -0.0172, -0.0566],
          [ 0.1540,  0.1137, -0.0418],
          [ 0.0338, -0.0103,  0.0535]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-8.1436e-02,  3.0544e-02,  3.6103e-02],
          [ 2.9259e-02, -3.1908e-02,  5.2024e-02],
          [-1.1527e-02,  1.4417e-02,  4.1559e-02]],

         [[ 5.8756e-02,  1.2181e-02, -5.0743e-02],
          [-3.5625e-02, -1.4367e-01,  7.3907e-03],
          [ 7.9310e-02, -7.1829e-03, -1.7300e-02]],

         [[ 2.3840e-02,  2.4794e-03,  1.4056e-03],
          [ 8.2999e-03, -1.0895e-02, -3.3333e-02],
          [-4.0377e-03, -2.6204e-02, -4.9394e-02]],

         ...,

         [[ 4.3471e-02, -5.5489e-02,  3.0680e-03],
          [ 5.6170e-02, -4.5755e-02, -3.5535e-03],
          [ 8.5518e-03, -2.3935e-02, -3.6431e-02]],

         [[-1.2855e-02, -3.7121e-02, -8.0315e-02],
          [ 6.8454e-02, -5.1229e-02,  5.2931e-02],
          [-7.8235e-02, -3.7802e-02,  3.4405e-02]],

         [[-6.1328e-02,  3.2805e-03,  3.4421e-02],
          [ 7.4465e-02, -2.4245e-02, -4.4325e-02],
          [ 3.4391e-02, -4.0715e-02, -2.9896e-02]]],


        [[[ 3.8462e-02,  6.1912e-02, -5.3268e-02],
          [ 4.1684e-02,  4.2839e-04, -6.9196e-02],
          [-1.1588e-02, -1.1658e-02,  3.7248e-02]],

         [[ 4.5578e-03, -3.4728e-02,  2.6067e-02],
          [-1.7571e-02, -2.0358e-02,  2.3114e-02],
          [-1.1830e-02,  5.0018e-02, -2.0644e-02]],

         [[ 2.5435e-02, -5.7364e-02,  2.2784e-02],
          [ 5.5528e-02, -3.5863e-02, -6.7732e-03],
          [ 7.0194e-03,  2.7354e-02,  7.3496e-02]],

         ...,

         [[ 1.6650e-02, -7.5377e-02,  5.1073e-02],
          [-8.1737e-02, -8.2408e-02,  2.5886e-02],
          [ 1.3955e-02, -1.7482e-02, -2.6508e-02]],

         [[ 8.6368e-02, -7.8167e-02, -3.0085e-02],
          [-2.4328e-02,  9.6844e-02, -3.5821e-02],
          [-7.7579e-02,  5.7952e-03, -2.3405e-02]],

         [[-1.0342e-01, -1.7367e-02,  5.9381e-02],
          [ 4.0806e-02, -1.0627e-01,  3.2308e-02],
          [-2.8002e-03,  1.3837e-03,  2.3788e-02]]],


        [[[-5.4716e-03,  3.9104e-02, -1.9707e-02],
          [-6.1745e-02, -3.5155e-02, -1.1901e-02],
          [ 3.9412e-03, -2.8718e-02, -4.3365e-03]],

         [[-1.9857e-02, -3.9619e-02, -2.2966e-03],
          [-7.7905e-02,  1.8082e-03, -2.6547e-02],
          [ 2.7175e-02, -1.5951e-02,  3.2062e-02]],

         [[-2.3889e-02,  1.8644e-02,  3.6363e-02],
          [ 7.9500e-02, -4.2417e-02,  4.1564e-02],
          [-4.7414e-02, -4.9755e-03,  2.0542e-02]],

         ...,

         [[-4.1727e-02, -2.0369e-02, -1.6763e-02],
          [-4.7167e-02, -5.7082e-02,  1.6987e-02],
          [-3.3698e-02, -1.3352e-02, -4.7211e-02]],

         [[-1.0737e-01, -4.6366e-02, -1.2251e-02],
          [-5.1430e-03, -9.3943e-03,  3.0913e-03],
          [-4.4404e-02, -2.3570e-02,  8.0001e-02]],

         [[ 4.6872e-02,  3.5453e-02, -9.8858e-02],
          [-3.0542e-02, -1.0318e-01, -5.5387e-02],
          [-5.4677e-02,  2.7313e-02,  8.0317e-03]]],


        ...,


        [[[ 2.1038e-02,  2.6702e-02, -1.8566e-02],
          [-3.7423e-02,  3.1993e-02, -5.5947e-02],
          [-1.9393e-02, -4.8990e-02,  2.0829e-02]],

         [[-1.2563e-02, -2.8311e-02, -6.0395e-02],
          [-4.7651e-02, -9.4549e-02,  2.1889e-02],
          [ 4.9942e-02,  1.7977e-03, -7.0019e-04]],

         [[ 8.1448e-02, -8.4850e-02,  3.0361e-02],
          [ 2.9535e-02,  1.7565e-02,  2.8650e-02],
          [-3.1824e-02,  1.2089e-02, -2.9173e-02]],

         ...,

         [[ 3.1761e-02, -1.3519e-02, -5.1397e-02],
          [ 1.8030e-02, -1.2757e-02, -1.3253e-02],
          [-1.3354e-02,  1.6111e-02, -2.1054e-02]],

         [[ 4.1577e-02,  3.6239e-02,  1.1609e-02],
          [ 6.7804e-02, -2.0176e-02,  6.8053e-02],
          [ 3.8093e-02,  2.5248e-02,  3.5463e-02]],

         [[ 2.2455e-02, -9.5744e-02, -6.9920e-02],
          [ 4.1014e-02,  2.5621e-02, -1.1211e-02],
          [-5.0037e-02,  4.4091e-02,  8.1221e-02]]],


        [[[-2.5713e-02, -3.1027e-02, -9.2450e-02],
          [ 2.5837e-02, -5.9464e-02,  1.7040e-02],
          [-1.5783e-02,  5.5394e-02,  4.9548e-02]],

         [[ 8.1721e-02, -1.6392e-03,  5.7904e-02],
          [ 2.4923e-02, -1.2073e-02,  1.7308e-02],
          [-4.4583e-03, -3.0840e-02,  4.3137e-02]],

         [[ 2.0925e-02, -1.9922e-02,  4.8706e-02],
          [ 1.9760e-02,  3.5903e-02, -3.5789e-03],
          [ 3.3093e-02,  3.4645e-02, -7.2463e-02]],

         ...,

         [[-6.2984e-02, -2.0083e-03, -2.5139e-03],
          [-5.1263e-03, -7.3123e-03,  4.2833e-03],
          [-1.1940e-03,  1.4786e-02, -2.9186e-02]],

         [[-8.7066e-03,  7.9364e-03, -8.4105e-02],
          [-6.3799e-03, -1.2340e-02,  1.8861e-02],
          [ 3.8689e-02, -3.3048e-02, -1.8196e-02]],

         [[ 1.5784e-02, -5.5522e-02,  7.6483e-03],
          [ 3.3537e-03, -7.4284e-02,  1.7081e-02],
          [ 4.4038e-02,  7.1282e-02,  1.0773e-01]]],


        [[[-2.2028e-02,  1.0342e-02,  9.6585e-02],
          [ 3.6478e-06,  4.5802e-02, -4.0623e-02],
          [-2.0747e-02,  1.5056e-03, -1.8219e-03]],

         [[-3.1208e-03, -5.5614e-02,  3.6228e-02],
          [-3.6743e-02, -6.4210e-02,  5.4661e-02],
          [-9.0926e-02, -4.2143e-03,  2.0766e-02]],

         [[-9.5822e-02, -1.1547e-01, -2.3113e-02],
          [-5.6648e-02, -2.9395e-02,  3.3863e-02],
          [-3.5029e-03, -1.8610e-02, -2.4251e-02]],

         ...,

         [[-3.0455e-02,  3.2959e-02, -7.9987e-03],
          [ 3.8733e-02,  3.0819e-02, -2.0221e-02],
          [ 6.3496e-02,  9.1470e-02,  1.2508e-02]],

         [[-1.3747e-02,  4.0258e-02,  1.8878e-02],
          [ 7.1784e-02,  1.8784e-02, -3.9614e-02],
          [ 2.4928e-02, -3.7106e-02, -2.2343e-02]],

         [[-4.1134e-02, -1.8633e-02,  3.7824e-02],
          [ 5.1038e-03,  4.5770e-02, -8.0142e-03],
          [ 3.7777e-02,  7.1288e-02, -4.2029e-02]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[-0.0064,  0.0027,  0.0160,  0.0217,  0.0380]],

         [[ 0.0214,  0.0368,  0.0284, -0.0021, -0.0301]],

         [[ 0.0060, -0.0232, -0.0185,  0.0442, -0.0059]],

         ...,

         [[ 0.0528,  0.0374, -0.0116,  0.0238, -0.0006]],

         [[-0.0280, -0.0204,  0.0166, -0.0113,  0.0113]],

         [[-0.0492, -0.0640, -0.0044,  0.0304, -0.0271]]],


        [[[-0.0251, -0.0672, -0.0105, -0.0058, -0.0108]],

         [[-0.0099,  0.0279,  0.0130, -0.0010,  0.0526]],

         [[-0.0183, -0.0198, -0.0065, -0.0019,  0.0011]],

         ...,

         [[ 0.0022, -0.0181, -0.0321, -0.0308, -0.0011]],

         [[-0.0279,  0.0034,  0.0039,  0.0180, -0.0302]],

         [[ 0.0404, -0.0143,  0.0071,  0.0280, -0.0153]]],


        [[[ 0.0218, -0.0012, -0.0180,  0.0011, -0.0575]],

         [[-0.0377, -0.0032, -0.0095, -0.0050, -0.0005]],

         [[-0.0439, -0.0100, -0.0185,  0.0033, -0.0406]],

         ...,

         [[-0.0116, -0.0164,  0.0176,  0.0241,  0.0469]],

         [[ 0.0241, -0.0227,  0.0008,  0.0125,  0.0014]],

         [[ 0.0146, -0.0291, -0.0394, -0.0041,  0.0044]]],


        ...,


        [[[ 0.0275,  0.0047, -0.0180,  0.0138,  0.0111]],

         [[ 0.0315,  0.0023,  0.0125,  0.0108,  0.0101]],

         [[ 0.0091, -0.0628, -0.0469, -0.0281, -0.0096]],

         ...,

         [[ 0.0102,  0.0086,  0.0306, -0.0133,  0.0162]],

         [[ 0.0142, -0.0185, -0.0133,  0.0282,  0.0171]],

         [[-0.0001,  0.0014,  0.0436, -0.0318, -0.0150]]],


        [[[-0.0107, -0.0125, -0.0302, -0.0079,  0.0027]],

         [[ 0.0024, -0.0108,  0.0099,  0.0140,  0.0196]],

         [[-0.0051, -0.0091, -0.0181,  0.0330, -0.0007]],

         ...,

         [[ 0.0211,  0.0010, -0.0323,  0.0249, -0.0175]],

         [[ 0.0111, -0.0122, -0.0026,  0.0084, -0.0338]],

         [[ 0.0051, -0.0023, -0.0343,  0.0249, -0.0132]]],


        [[[-0.0195,  0.0183, -0.0057,  0.0132, -0.0319]],

         [[-0.0241,  0.0346, -0.0142,  0.0141, -0.0027]],

         [[-0.0261, -0.0207,  0.0293,  0.0224, -0.0157]],

         ...,

         [[ 0.0110,  0.0149, -0.0148, -0.0273,  0.0421]],

         [[ 0.0012, -0.0213, -0.0189,  0.0016, -0.0228]],

         [[ 0.0165, -0.0477, -0.0029,  0.0339, -0.0366]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 0.0010],
          [ 0.0195],
          [-0.0269],
          [ 0.0266],
          [-0.0265]],

         [[ 0.0320],
          [-0.0168],
          [-0.0134],
          [ 0.0151],
          [-0.0048]],

         [[-0.0218],
          [-0.0212],
          [ 0.0352],
          [ 0.0044],
          [-0.0193]],

         ...,

         [[ 0.0044],
          [ 0.0084],
          [-0.0147],
          [-0.0317],
          [-0.0018]],

         [[ 0.0244],
          [-0.0538],
          [-0.0191],
          [-0.0163],
          [ 0.0135]],

         [[ 0.0020],
          [ 0.0142],
          [ 0.0253],
          [ 0.0235],
          [ 0.0044]]],


        [[[-0.0166],
          [ 0.0244],
          [-0.0180],
          [-0.0207],
          [ 0.0229]],

         [[ 0.0001],
          [-0.0093],
          [ 0.0326],
          [ 0.0461],
          [-0.0170]],

         [[-0.0117],
          [ 0.0142],
          [-0.0110],
          [-0.0199],
          [ 0.0179]],

         ...,

         [[ 0.0377],
          [ 0.0355],
          [ 0.0128],
          [ 0.0038],
          [ 0.0104]],

         [[-0.0135],
          [ 0.0013],
          [ 0.0038],
          [ 0.0290],
          [ 0.0237]],

         [[-0.0152],
          [ 0.0071],
          [-0.0044],
          [-0.0140],
          [ 0.0171]]],


        [[[-0.0173],
          [-0.0249],
          [-0.0397],
          [-0.0302],
          [-0.0518]],

         [[-0.0194],
          [ 0.0044],
          [-0.0136],
          [ 0.0186],
          [-0.0149]],

         [[ 0.0485],
          [ 0.0046],
          [ 0.0171],
          [-0.0090],
          [ 0.0167]],

         ...,

         [[-0.0018],
          [-0.0121],
          [-0.0334],
          [ 0.0010],
          [-0.0219]],

         [[-0.0143],
          [ 0.0339],
          [ 0.0084],
          [ 0.0236],
          [ 0.0154]],

         [[-0.0332],
          [ 0.0023],
          [ 0.0213],
          [ 0.0238],
          [ 0.0288]]],


        ...,


        [[[ 0.0154],
          [ 0.0162],
          [-0.0145],
          [ 0.0158],
          [ 0.0149]],

         [[-0.0198],
          [-0.0274],
          [ 0.0028],
          [ 0.0197],
          [-0.0078]],

         [[-0.0049],
          [ 0.0185],
          [-0.0001],
          [-0.0034],
          [-0.0008]],

         ...,

         [[ 0.0083],
          [ 0.0337],
          [ 0.0031],
          [ 0.0162],
          [-0.0257]],

         [[ 0.0213],
          [-0.0242],
          [-0.0368],
          [-0.0030],
          [ 0.0022]],

         [[-0.0021],
          [ 0.0230],
          [ 0.0157],
          [ 0.0004],
          [-0.0090]]],


        [[[ 0.0120],
          [ 0.0307],
          [-0.0284],
          [ 0.0026],
          [ 0.0163]],

         [[ 0.0205],
          [-0.0152],
          [ 0.0206],
          [ 0.0040],
          [ 0.0167]],

         [[-0.0186],
          [-0.0447],
          [ 0.0360],
          [ 0.0493],
          [ 0.0370]],

         ...,

         [[ 0.0432],
          [-0.0435],
          [ 0.0164],
          [ 0.0262],
          [-0.0232]],

         [[ 0.0123],
          [-0.0241],
          [-0.0070],
          [-0.0584],
          [-0.0159]],

         [[ 0.0183],
          [-0.0180],
          [-0.0301],
          [-0.0165],
          [ 0.0075]]],


        [[[ 0.0009],
          [ 0.0173],
          [ 0.0298],
          [-0.0015],
          [ 0.0486]],

         [[ 0.0266],
          [-0.0156],
          [-0.0262],
          [-0.0079],
          [-0.0011]],

         [[ 0.0448],
          [ 0.0137],
          [-0.0196],
          [-0.0386],
          [ 0.0013]],

         ...,

         [[ 0.0033],
          [-0.0206],
          [ 0.0115],
          [ 0.0115],
          [ 0.0227]],

         [[ 0.0269],
          [-0.0457],
          [ 0.0327],
          [-0.0079],
          [-0.0104]],

         [[-0.0370],
          [ 0.0229],
          [-0.0168],
          [ 0.0316],
          [-0.0141]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[ 1.4057e-02, -1.2625e-02,  8.8866e-03,  8.8098e-03,  3.4705e-02]],

         [[ 1.4529e-02, -4.3021e-02, -5.0147e-02,  2.5401e-02, -1.5080e-02]],

         [[ 1.9998e-02, -1.4566e-02, -2.9781e-04, -2.5827e-02, -1.4798e-02]],

         ...,

         [[ 1.7821e-02, -1.7332e-02,  8.7034e-04,  2.9781e-02, -3.0835e-02]],

         [[-1.3592e-02, -1.1203e-02, -7.9580e-04, -2.2045e-02,  2.9916e-02]],

         [[-5.9116e-02, -2.6796e-02,  2.1056e-02, -1.3872e-02, -4.2629e-02]]],


        [[[-3.8757e-02, -8.3523e-03, -4.2140e-03,  8.4813e-03,  2.4033e-02]],

         [[ 1.6158e-02, -1.1746e-02,  2.2006e-02, -3.1127e-03,  5.3315e-03]],

         [[-4.5163e-02, -3.3294e-02,  3.5205e-02,  2.5730e-02,  3.7168e-03]],

         ...,

         [[-2.2430e-02,  1.2196e-02, -6.6036e-03, -6.6534e-03,  1.2734e-03]],

         [[ 2.3174e-02, -1.0303e-02, -1.4926e-02,  6.8940e-03,  8.0363e-03]],

         [[ 1.5409e-02, -7.0161e-03,  1.7120e-02, -6.6375e-03,  1.4709e-02]]],


        [[[ 8.3535e-04, -3.3545e-02, -2.9901e-02, -3.9121e-02, -1.1766e-02]],

         [[ 2.6344e-02, -4.2055e-02,  1.0087e-02,  6.1218e-03, -1.6345e-02]],

         [[-2.2239e-02, -3.2289e-03, -1.7362e-02,  1.2485e-02, -1.6941e-02]],

         ...,

         [[-3.7033e-03, -4.0009e-03, -1.4861e-03,  2.8246e-02, -1.7569e-02]],

         [[-2.9384e-02,  3.0672e-02, -1.4018e-02, -1.2868e-02, -9.2157e-03]],

         [[ 1.9026e-02,  3.3693e-03, -8.2965e-03, -1.6101e-02,  4.7300e-03]]],


        ...,


        [[[-2.2071e-04,  1.1472e-02,  4.0430e-02,  1.0377e-02,  2.1456e-02]],

         [[ 2.3289e-02, -1.4176e-02,  3.1448e-02,  1.2250e-02,  4.7053e-03]],

         [[ 2.2131e-02, -4.9988e-03, -2.4837e-02, -2.8971e-02,  9.4420e-03]],

         ...,

         [[-2.1206e-02, -4.1863e-02, -2.0851e-02,  2.1037e-03, -3.0278e-02]],

         [[-1.1895e-02, -1.0722e-02,  8.5138e-03,  6.1957e-03, -2.5543e-02]],

         [[-5.7971e-02, -1.4720e-03,  4.1728e-02,  2.1627e-02, -3.0874e-02]]],


        [[[-1.8068e-02, -1.7618e-02,  3.1135e-02, -1.1683e-02, -1.9923e-02]],

         [[-1.2192e-02, -2.8981e-03, -3.3881e-02, -3.4757e-02,  3.7647e-02]],

         [[ 2.1710e-02,  1.6987e-02, -4.8825e-02,  2.7222e-03,  2.6853e-02]],

         ...,

         [[ 5.1622e-03, -5.5478e-03, -5.8077e-02, -7.8398e-04, -4.4787e-02]],

         [[ 1.3966e-03,  2.4143e-03, -2.5206e-02,  3.4683e-02,  2.3699e-02]],

         [[-1.0689e-02, -4.5036e-02, -3.4375e-02,  1.0921e-02, -8.1727e-03]]],


        [[[-1.2157e-02,  3.4849e-02, -1.5856e-03, -9.0759e-03, -4.1830e-03]],

         [[ 2.2739e-02,  1.2463e-02,  3.8801e-02,  1.3751e-02, -7.6931e-05]],

         [[-2.0201e-02,  2.8182e-02,  5.4306e-03,  4.0296e-02,  1.9358e-02]],

         ...,

         [[ 3.8839e-03,  8.9507e-03,  2.7564e-02,  4.3117e-02,  1.9124e-02]],

         [[ 3.4312e-02, -3.0326e-02,  2.1949e-02, -8.4068e-03,  2.8663e-02]],

         [[ 1.2720e-02,  1.1714e-02, -1.9168e-02,  1.5346e-02,  1.3713e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[-3.1619e-03],
          [-6.6248e-03],
          [ 1.3348e-02],
          [ 2.3206e-05],
          [-7.9031e-03]],

         [[ 1.3429e-03],
          [-3.6423e-02],
          [-8.9701e-03],
          [-4.5910e-02],
          [-3.7624e-03]],

         [[ 2.3830e-02],
          [ 1.8824e-02],
          [ 1.9749e-02],
          [-2.2467e-03],
          [-1.1654e-02]],

         ...,

         [[ 1.0418e-02],
          [-1.3317e-02],
          [ 2.3102e-02],
          [ 2.6009e-02],
          [ 2.0229e-02]],

         [[ 2.1702e-02],
          [ 3.5930e-03],
          [ 4.2898e-03],
          [-6.1716e-03],
          [ 6.8076e-03]],

         [[ 1.5713e-02],
          [-2.2565e-02],
          [ 8.2446e-03],
          [-5.1768e-03],
          [ 5.9881e-03]]],


        [[[ 5.5207e-03],
          [-1.0346e-02],
          [-1.3177e-02],
          [-1.6579e-02],
          [ 6.4743e-04]],

         [[ 2.8816e-02],
          [-4.4084e-03],
          [-2.0506e-02],
          [ 1.3662e-02],
          [ 1.0446e-02]],

         [[ 3.7550e-03],
          [ 3.1996e-02],
          [ 3.0889e-02],
          [ 6.2220e-02],
          [ 4.0358e-02]],

         ...,

         [[-9.3124e-03],
          [-1.3085e-02],
          [ 1.5639e-02],
          [-3.2453e-02],
          [ 2.7001e-02]],

         [[-2.5094e-02],
          [ 1.1401e-02],
          [-1.7497e-02],
          [ 3.2163e-02],
          [ 3.6934e-03]],

         [[-2.4213e-03],
          [ 1.0174e-02],
          [-9.9287e-03],
          [ 1.0489e-02],
          [-6.7190e-04]]],


        [[[-6.9586e-04],
          [-1.8820e-02],
          [-5.5416e-03],
          [-1.9456e-02],
          [ 1.8428e-03]],

         [[ 4.4278e-02],
          [ 3.1744e-02],
          [ 1.9313e-02],
          [ 3.0913e-02],
          [ 3.3946e-02]],

         [[ 5.7214e-03],
          [ 2.1660e-02],
          [ 1.4179e-02],
          [ 6.7137e-03],
          [ 3.1974e-03]],

         ...,

         [[-6.1028e-02],
          [-2.3839e-02],
          [ 5.7487e-03],
          [-5.0239e-03],
          [ 1.6970e-02]],

         [[ 6.7424e-03],
          [ 1.7413e-02],
          [-1.2580e-02],
          [ 4.5879e-02],
          [ 2.2793e-02]],

         [[-1.8949e-02],
          [ 1.5463e-02],
          [ 3.7921e-03],
          [ 3.4669e-02],
          [-1.0205e-02]]],


        ...,


        [[[ 7.2213e-03],
          [ 4.6046e-02],
          [-4.6898e-03],
          [ 2.4246e-02],
          [ 9.9196e-04]],

         [[ 2.7643e-02],
          [-1.3003e-02],
          [-2.6643e-02],
          [-2.0958e-02],
          [ 3.5641e-03]],

         [[ 3.6532e-02],
          [ 4.6310e-03],
          [ 4.3885e-03],
          [ 7.8795e-03],
          [-1.3826e-02]],

         ...,

         [[-7.9305e-03],
          [ 2.1099e-02],
          [-1.6316e-02],
          [-2.0715e-02],
          [ 1.8283e-02]],

         [[-3.3836e-02],
          [-1.9893e-02],
          [ 1.5208e-02],
          [-5.0435e-03],
          [ 7.6284e-03]],

         [[ 4.1648e-03],
          [ 2.2848e-02],
          [ 1.3301e-03],
          [-2.8457e-02],
          [-2.2200e-02]]],


        [[[-1.3906e-02],
          [ 2.5884e-02],
          [ 3.1829e-02],
          [-9.0595e-03],
          [ 2.7711e-03]],

         [[ 7.4376e-03],
          [ 1.2322e-03],
          [-1.7028e-02],
          [ 1.7852e-02],
          [-1.0317e-02]],

         [[ 1.4004e-02],
          [ 2.6985e-02],
          [ 2.2015e-02],
          [-2.6274e-02],
          [ 1.0792e-02]],

         ...,

         [[-8.4995e-03],
          [ 4.0196e-02],
          [ 2.1794e-02],
          [ 1.0131e-02],
          [-1.8866e-02]],

         [[-4.2487e-02],
          [-2.0662e-03],
          [-2.9127e-03],
          [-1.5030e-02],
          [ 1.8382e-02]],

         [[-1.8022e-02],
          [-4.6399e-02],
          [-3.2785e-03],
          [ 8.8019e-03],
          [ 1.8298e-03]]],


        [[[-3.3529e-03],
          [-1.7142e-03],
          [ 2.1730e-02],
          [-2.3831e-02],
          [-1.9477e-02]],

         [[ 1.2267e-02],
          [-1.1511e-03],
          [ 3.2597e-02],
          [-8.7397e-03],
          [-5.3117e-03]],

         [[-2.4389e-02],
          [ 1.7558e-02],
          [ 7.0396e-03],
          [ 2.7140e-02],
          [ 4.0068e-04]],

         ...,

         [[ 7.7140e-03],
          [-2.3184e-03],
          [ 4.4264e-02],
          [ 7.4879e-03],
          [ 2.4601e-02]],

         [[ 3.3603e-02],
          [ 3.6186e-02],
          [ 1.4683e-03],
          [-2.6918e-03],
          [-2.6247e-02]],

         [[-1.8060e-02],
          [ 2.0945e-03],
          [ 9.0174e-04],
          [-2.6823e-02],
          [-9.7440e-03]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-1.3604e-02,  2.2887e-02,  9.1532e-03,  3.5837e-02,  1.6413e-02]],

         [[-1.1167e-02, -2.1661e-03, -8.2703e-03, -7.6061e-03, -1.7855e-02]],

         [[ 2.8179e-02, -7.9996e-03,  3.7873e-02, -2.3246e-02, -2.5614e-03]],

         ...,

         [[ 1.5347e-02,  3.7994e-02,  9.8925e-03, -1.1346e-03, -2.3276e-02]],

         [[-1.0372e-03,  1.6799e-02,  2.7870e-02,  3.3228e-02,  3.7439e-02]],

         [[-1.8877e-02, -2.6204e-02,  1.8319e-03,  2.1455e-02,  4.4191e-02]]],


        [[[-7.3731e-03, -2.5065e-02,  1.0912e-02,  2.3427e-03,  1.2255e-03]],

         [[ 1.1877e-02, -3.5763e-02, -3.9208e-02, -2.7205e-02, -1.2282e-02]],

         [[ 1.0891e-02,  2.6959e-02,  3.6356e-03,  1.3834e-02,  1.3305e-02]],

         ...,

         [[-1.3144e-02,  3.4112e-03, -1.9830e-03, -1.7290e-02,  1.3042e-03]],

         [[-2.5810e-02,  4.5245e-02,  5.1239e-03,  2.7574e-02,  1.7089e-02]],

         [[ 7.1094e-03,  2.0394e-02,  4.2814e-02, -1.9024e-02, -1.2627e-02]]],


        [[[-1.0625e-02, -2.8399e-02, -1.8311e-04,  1.1183e-02,  1.6030e-02]],

         [[-1.1452e-02, -1.6829e-02, -1.3161e-02,  1.4979e-02,  6.5460e-03]],

         [[ 2.1790e-02,  2.8129e-02, -1.4374e-02, -9.6934e-03,  3.3855e-02]],

         ...,

         [[ 6.4004e-03, -2.4861e-03,  2.9686e-03,  4.5423e-02, -4.4331e-03]],

         [[ 4.5607e-02, -3.2111e-03,  2.3569e-03,  2.8724e-02,  4.3252e-03]],

         [[-4.3093e-02,  1.8639e-02, -1.8165e-02,  8.4297e-03, -4.4497e-03]]],


        ...,


        [[[ 2.6834e-02, -5.2596e-03,  1.3196e-02, -2.5248e-02, -1.6733e-03]],

         [[-3.5441e-03, -2.6279e-02,  2.9025e-03,  4.0822e-02,  1.9125e-03]],

         [[-7.5253e-03, -2.1270e-02, -8.1374e-03, -3.2406e-02, -3.2764e-03]],

         ...,

         [[ 1.2084e-02, -5.4711e-05,  5.2866e-03,  2.7626e-02,  1.1613e-02]],

         [[ 3.5212e-02,  3.7879e-02,  2.6201e-03,  2.9140e-02,  6.7967e-03]],

         [[-1.9347e-02,  9.4940e-03,  2.0650e-02, -3.9737e-02, -5.0731e-02]]],


        [[[ 2.2651e-02,  3.2036e-02, -2.3171e-02, -1.0300e-02,  5.9199e-03]],

         [[-4.3465e-02, -8.8413e-04, -3.8551e-02,  5.1427e-02, -1.5684e-02]],

         [[ 2.8483e-03,  1.1151e-02,  2.1528e-02,  1.4484e-02, -2.9099e-03]],

         ...,

         [[-1.7452e-02, -9.1651e-04,  2.2948e-02, -7.7097e-03, -3.6838e-04]],

         [[ 2.3972e-04, -2.0038e-02, -2.3864e-02,  2.0804e-02, -1.4744e-02]],

         [[-2.0620e-02, -4.4113e-02, -1.1270e-02,  8.2250e-03,  4.5656e-02]]],


        [[[-4.1682e-02, -2.3648e-02, -2.1676e-02, -5.4450e-03, -2.5441e-02]],

         [[-3.4524e-02,  2.2924e-02, -1.4575e-02,  1.7364e-02,  1.5451e-02]],

         [[-2.2192e-03, -3.3718e-03,  1.2748e-02,  1.9304e-02,  9.5333e-04]],

         ...,

         [[-2.0543e-02, -8.9896e-03, -1.9067e-02, -2.5100e-02,  1.1625e-02]],

         [[-2.2886e-02,  3.0622e-02, -6.2347e-03, -2.0871e-02, -1.1620e-02]],

         [[ 9.6149e-03,  2.2901e-03, -2.3412e-03,  6.4868e-03, -2.1943e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-0.0085],
          [-0.0054],
          [-0.0290],
          [-0.0397],
          [-0.0164]],

         [[ 0.0411],
          [ 0.0208],
          [ 0.0556],
          [ 0.0248],
          [-0.0588]],

         [[ 0.0214],
          [ 0.0452],
          [ 0.0027],
          [ 0.0228],
          [-0.0246]],

         ...,

         [[ 0.0246],
          [-0.0123],
          [ 0.0247],
          [ 0.0222],
          [ 0.0181]],

         [[-0.0276],
          [-0.0229],
          [-0.0180],
          [ 0.0031],
          [-0.0159]],

         [[ 0.0232],
          [ 0.0230],
          [ 0.0018],
          [-0.0366],
          [ 0.0014]]],


        [[[-0.0165],
          [-0.0096],
          [-0.0184],
          [ 0.0019],
          [-0.0193]],

         [[ 0.0262],
          [-0.0056],
          [ 0.0304],
          [ 0.0218],
          [ 0.0083]],

         [[ 0.0357],
          [-0.0104],
          [-0.0070],
          [-0.0151],
          [-0.0258]],

         ...,

         [[ 0.0105],
          [ 0.0039],
          [ 0.0161],
          [-0.0289],
          [-0.0331]],

         [[ 0.0375],
          [ 0.0218],
          [ 0.0137],
          [-0.0401],
          [-0.0017]],

         [[-0.0258],
          [-0.0027],
          [ 0.0051],
          [ 0.0040],
          [ 0.0092]]],


        [[[-0.0031],
          [-0.0243],
          [ 0.0184],
          [ 0.0198],
          [ 0.0259]],

         [[ 0.0203],
          [-0.0450],
          [-0.0456],
          [ 0.0134],
          [ 0.0027]],

         [[-0.0143],
          [-0.0228],
          [ 0.0295],
          [ 0.0015],
          [-0.0220]],

         ...,

         [[-0.0064],
          [ 0.0297],
          [-0.0217],
          [ 0.0735],
          [ 0.0358]],

         [[-0.0138],
          [ 0.0195],
          [-0.0229],
          [ 0.0219],
          [ 0.0133]],

         [[ 0.0113],
          [ 0.0077],
          [ 0.0061],
          [-0.0056],
          [ 0.0075]]],


        ...,


        [[[-0.0106],
          [ 0.0388],
          [ 0.0132],
          [ 0.0423],
          [-0.0278]],

         [[ 0.0188],
          [ 0.0022],
          [-0.0149],
          [-0.0283],
          [-0.0484]],

         [[ 0.0066],
          [-0.0274],
          [-0.0122],
          [-0.0262],
          [-0.0129]],

         ...,

         [[-0.0257],
          [-0.0004],
          [-0.0139],
          [ 0.0124],
          [-0.0172]],

         [[ 0.0236],
          [-0.0329],
          [-0.0103],
          [ 0.0010],
          [ 0.0246]],

         [[ 0.0242],
          [-0.0031],
          [-0.0151],
          [ 0.0001],
          [-0.0256]]],


        [[[ 0.0254],
          [-0.0028],
          [ 0.0058],
          [ 0.0122],
          [-0.0231]],

         [[-0.0194],
          [ 0.0051],
          [-0.0072],
          [-0.0361],
          [ 0.0233]],

         [[-0.0138],
          [ 0.0448],
          [ 0.0302],
          [-0.0205],
          [ 0.0473]],

         ...,

         [[-0.0055],
          [-0.0096],
          [-0.0221],
          [-0.0167],
          [ 0.0041]],

         [[ 0.0002],
          [-0.0177],
          [ 0.0253],
          [-0.0191],
          [-0.0611]],

         [[-0.0119],
          [ 0.0323],
          [-0.0122],
          [ 0.0138],
          [ 0.0003]]],


        [[[ 0.0347],
          [ 0.0587],
          [-0.0055],
          [-0.0159],
          [ 0.0013]],

         [[-0.0102],
          [-0.0016],
          [ 0.0130],
          [ 0.0430],
          [ 0.0131]],

         [[ 0.0222],
          [ 0.0200],
          [-0.0115],
          [ 0.0098],
          [ 0.0043]],

         ...,

         [[-0.0028],
          [-0.0122],
          [-0.0297],
          [ 0.0080],
          [ 0.0058]],

         [[-0.0151],
          [ 0.0166],
          [-0.0197],
          [ 0.0074],
          [-0.0025]],

         [[ 0.0323],
          [ 0.0092],
          [-0.0164],
          [ 0.0005],
          [-0.0399]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-0.0044,  0.0241,  0.0225],
          [-0.0293,  0.0174,  0.0325],
          [-0.0569,  0.0262,  0.0422]],

         [[ 0.0082,  0.0383,  0.0089],
          [ 0.0289, -0.0251, -0.0556],
          [ 0.0272, -0.0156, -0.0522]],

         [[ 0.0272, -0.0234, -0.0091],
          [-0.0210,  0.0218,  0.0191],
          [ 0.0178, -0.0235, -0.0629]],

         ...,

         [[-0.0137, -0.0134,  0.0145],
          [ 0.0002, -0.0051, -0.0118],
          [-0.0141,  0.0242, -0.0455]],

         [[-0.0023,  0.0505, -0.0064],
          [ 0.0241, -0.0593,  0.0091],
          [-0.0109, -0.0138, -0.0016]],

         [[ 0.0228,  0.0240,  0.0127],
          [ 0.0243,  0.0001,  0.0297],
          [ 0.0462,  0.0034,  0.0150]]],


        [[[-0.0368,  0.0315,  0.0076],
          [ 0.0302,  0.0178,  0.0361],
          [ 0.0180,  0.0014, -0.0614]],

         [[ 0.0048,  0.0143,  0.0619],
          [-0.0116,  0.0388, -0.0303],
          [ 0.0517,  0.0261,  0.0589]],

         [[ 0.0232, -0.0245,  0.0264],
          [ 0.0148, -0.0040,  0.0147],
          [-0.0041,  0.0499, -0.0339]],

         ...,

         [[-0.0448,  0.0027, -0.0249],
          [-0.0542, -0.0073, -0.0007],
          [-0.0460,  0.0472,  0.0376]],

         [[-0.0109,  0.0013,  0.0096],
          [-0.0602,  0.0306,  0.0415],
          [ 0.0536, -0.0477,  0.0343]],

         [[-0.0041, -0.0027,  0.0371],
          [-0.0286, -0.0118, -0.0094],
          [ 0.0134, -0.0219, -0.0101]]],


        [[[-0.0367,  0.0049, -0.0163],
          [ 0.0517,  0.0051, -0.0249],
          [ 0.0130,  0.0005, -0.0033]],

         [[-0.0063, -0.0098,  0.0812],
          [ 0.0323,  0.0154, -0.0224],
          [ 0.0153, -0.0506, -0.0314]],

         [[-0.0749,  0.0230,  0.0016],
          [ 0.0199,  0.0130, -0.0261],
          [-0.0458, -0.0017,  0.0520]],

         ...,

         [[ 0.0144,  0.0043, -0.0064],
          [ 0.0045, -0.0437,  0.0321],
          [ 0.0256, -0.0469, -0.0482]],

         [[ 0.0242,  0.0021,  0.0200],
          [ 0.0252,  0.0330,  0.0011],
          [ 0.0770, -0.0694, -0.0021]],

         [[-0.0548, -0.0232, -0.0521],
          [-0.0457,  0.0152, -0.0173],
          [-0.0275,  0.0222,  0.0192]]],


        ...,


        [[[ 0.0325,  0.0012, -0.0341],
          [ 0.0543, -0.0292,  0.0581],
          [ 0.0353, -0.0148, -0.0464]],

         [[-0.0221,  0.0243, -0.0522],
          [ 0.0174,  0.0184,  0.0286],
          [-0.0115,  0.0023,  0.0345]],

         [[-0.0180, -0.0057,  0.0230],
          [-0.0232,  0.0166,  0.0219],
          [ 0.0173,  0.0682,  0.0121]],

         ...,

         [[-0.0236, -0.0256, -0.0041],
          [ 0.0069, -0.0301,  0.0226],
          [ 0.0088, -0.0113, -0.0218]],

         [[ 0.0376,  0.0709,  0.0581],
          [-0.0628, -0.0292, -0.0417],
          [-0.0356,  0.0094, -0.0197]],

         [[ 0.0623,  0.0346,  0.0025],
          [ 0.0434, -0.0196,  0.0103],
          [-0.0200, -0.0133, -0.0321]]],


        [[[ 0.0018, -0.0095, -0.0289],
          [ 0.0504, -0.0103, -0.0193],
          [ 0.0605, -0.0051,  0.0051]],

         [[ 0.0134,  0.0254, -0.0012],
          [ 0.0081, -0.0223,  0.0095],
          [-0.0062,  0.0126, -0.0105]],

         [[-0.0245,  0.0154, -0.0311],
          [-0.0027,  0.0560,  0.0547],
          [ 0.0634,  0.0185,  0.0122]],

         ...,

         [[-0.0183, -0.0132, -0.0298],
          [-0.0469, -0.0015, -0.0181],
          [ 0.0017,  0.0186,  0.0760]],

         [[-0.0140,  0.0505, -0.0006],
          [ 0.0448, -0.0228,  0.0297],
          [-0.0118, -0.0388, -0.0200]],

         [[ 0.0386,  0.0347, -0.0035],
          [ 0.0231, -0.0169,  0.0100],
          [-0.0156, -0.0070,  0.0100]]],


        [[[-0.0091, -0.0050, -0.0112],
          [ 0.0022, -0.0153, -0.0086],
          [-0.0393,  0.0065,  0.0124]],

         [[ 0.0565,  0.0006, -0.0357],
          [ 0.0086, -0.0308,  0.0110],
          [ 0.0138, -0.0062,  0.0180]],

         [[-0.0030,  0.0265,  0.0196],
          [ 0.0129,  0.0123,  0.0091],
          [ 0.0482, -0.0317,  0.0724]],

         ...,

         [[-0.0179,  0.0057,  0.0013],
          [ 0.0057, -0.0692,  0.0017],
          [ 0.0067,  0.0030,  0.0431]],

         [[-0.0104,  0.0541, -0.0190],
          [ 0.0152,  0.0577, -0.0115],
          [ 0.0352, -0.0116,  0.0620]],

         [[ 0.0467, -0.0230, -0.0112],
          [-0.0110,  0.0055,  0.0058],
          [-0.0378,  0.0426,  0.0313]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[ 0.0071, -0.0035, -0.0199],
          [ 0.0185,  0.0013, -0.0160],
          [ 0.0049, -0.0061,  0.0191]],

         [[ 0.0127,  0.0022,  0.0090],
          [-0.0081,  0.0129, -0.0057],
          [-0.0022, -0.0023,  0.0061]],

         [[ 0.0095, -0.0154, -0.0171],
          [-0.0162,  0.0150,  0.0044],
          [ 0.0208, -0.0048, -0.0078]],

         ...,

         [[ 0.0168, -0.0149, -0.0145],
          [ 0.0127, -0.0035,  0.0164],
          [ 0.0142, -0.0180,  0.0204]],

         [[ 0.0194, -0.0033, -0.0144],
          [-0.0105, -0.0137,  0.0122],
          [ 0.0130,  0.0117, -0.0187]],

         [[ 0.0165, -0.0200, -0.0090],
          [-0.0068, -0.0088, -0.0021],
          [ 0.0020,  0.0080, -0.0105]]],


        [[[-0.0029,  0.0134, -0.0018],
          [ 0.0125,  0.0070,  0.0066],
          [ 0.0102, -0.0098, -0.0005]],

         [[-0.0021, -0.0194,  0.0074],
          [ 0.0172, -0.0048,  0.0093],
          [ 0.0044,  0.0004, -0.0174]],

         [[ 0.0082, -0.0114, -0.0003],
          [ 0.0148,  0.0193, -0.0145],
          [ 0.0184,  0.0143,  0.0178]],

         ...,

         [[ 0.0043,  0.0008,  0.0039],
          [-0.0062,  0.0198,  0.0110],
          [-0.0129,  0.0149,  0.0189]],

         [[ 0.0115,  0.0083,  0.0058],
          [-0.0122,  0.0079, -0.0155],
          [-0.0073, -0.0158, -0.0204]],

         [[-0.0142, -0.0033, -0.0170],
          [-0.0008, -0.0072, -0.0196],
          [-0.0183, -0.0024,  0.0114]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([-0.0134,  0.0093], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-0.0233,  0.0203,  0.0360],
          [ 0.0262,  0.0178, -0.0885],
          [ 0.0512,  0.0132, -0.0088]],

         [[-0.0237, -0.0092,  0.0011],
          [ 0.0166, -0.0285, -0.0439],
          [ 0.0012,  0.0010,  0.0067]],

         [[-0.0057, -0.0216, -0.0064],
          [ 0.0355,  0.0182,  0.0008],
          [ 0.0219,  0.0223,  0.0211]],

         ...,

         [[-0.0262,  0.0407, -0.0224],
          [-0.0107, -0.0069, -0.0008],
          [-0.0445, -0.0295,  0.0190]],

         [[ 0.0336,  0.0310,  0.0457],
          [-0.0257,  0.0216, -0.0177],
          [ 0.0801,  0.0196, -0.0348]],

         [[ 0.0170, -0.0077, -0.0223],
          [ 0.0426, -0.0007,  0.0216],
          [-0.0016,  0.0206, -0.0336]]],


        [[[-0.0084,  0.0169, -0.0216],
          [-0.0139,  0.0177,  0.0133],
          [ 0.0101, -0.0164, -0.0348]],

         [[-0.0477, -0.0537, -0.0770],
          [-0.0183,  0.0023,  0.0076],
          [ 0.0018,  0.0060, -0.0272]],

         [[-0.0088,  0.0250,  0.0332],
          [ 0.0348, -0.0111,  0.0437],
          [ 0.0307, -0.0005, -0.0013]],

         ...,

         [[ 0.0129, -0.0413, -0.0196],
          [-0.0010,  0.0084,  0.0303],
          [ 0.0135, -0.0106, -0.0592]],

         [[ 0.0078, -0.0193, -0.0334],
          [ 0.0062, -0.0315, -0.0071],
          [-0.0401,  0.0533, -0.0404]],

         [[ 0.0611,  0.0566, -0.0515],
          [ 0.0073,  0.0219,  0.0319],
          [ 0.0228,  0.0038, -0.0009]]],


        [[[ 0.0125,  0.0174,  0.0138],
          [ 0.0669,  0.0019, -0.0332],
          [-0.0301, -0.0210, -0.0077]],

         [[-0.0371, -0.0295,  0.0072],
          [ 0.0372,  0.0024, -0.0179],
          [-0.0441, -0.0165,  0.0459]],

         [[ 0.0187,  0.0244, -0.0202],
          [-0.0040, -0.0063,  0.0122],
          [ 0.0055,  0.0068,  0.0502]],

         ...,

         [[-0.0149,  0.0164, -0.0472],
          [-0.0022,  0.0079, -0.0052],
          [-0.0161, -0.0132, -0.0080]],

         [[ 0.0297, -0.0322, -0.0393],
          [ 0.0228, -0.0132,  0.0138],
          [-0.0090, -0.0166, -0.0060]],

         [[-0.0037, -0.0480, -0.0078],
          [-0.0531, -0.0014, -0.0096],
          [ 0.0493,  0.0326,  0.0009]]],


        ...,


        [[[-0.0386,  0.0005,  0.0184],
          [-0.0061, -0.0023, -0.0161],
          [-0.0203, -0.0061, -0.0014]],

         [[-0.0118,  0.0174,  0.0248],
          [ 0.0744, -0.0228,  0.0076],
          [-0.0119,  0.0380, -0.0065]],

         [[-0.0176,  0.0001, -0.0248],
          [ 0.0062, -0.0193,  0.0587],
          [ 0.0210, -0.0439, -0.0017]],

         ...,

         [[ 0.0233,  0.0641,  0.0224],
          [ 0.0039, -0.0045, -0.0342],
          [ 0.0043,  0.0217,  0.0150]],

         [[ 0.0415,  0.0420, -0.0208],
          [-0.0490, -0.0122, -0.0101],
          [ 0.0208,  0.0370, -0.0095]],

         [[ 0.0133, -0.0331, -0.0254],
          [ 0.0268, -0.0059, -0.0210],
          [ 0.0375, -0.0459,  0.0028]]],


        [[[ 0.0338,  0.0275,  0.0275],
          [ 0.0244, -0.0249,  0.0169],
          [ 0.0022,  0.0359,  0.0131]],

         [[ 0.0228,  0.0025,  0.0167],
          [ 0.0263, -0.0205,  0.0627],
          [ 0.0461, -0.0019, -0.0066]],

         [[-0.0376, -0.0270, -0.0483],
          [-0.0242,  0.0129,  0.0057],
          [-0.0190,  0.0153, -0.0451]],

         ...,

         [[ 0.0023,  0.0042,  0.0113],
          [ 0.0174, -0.0053,  0.0270],
          [ 0.0553,  0.0225,  0.0132]],

         [[ 0.0154,  0.0020, -0.0077],
          [ 0.0067,  0.0206, -0.0116],
          [ 0.0063,  0.0281, -0.0410]],

         [[-0.0391,  0.0311, -0.0260],
          [-0.0304, -0.0160,  0.0241],
          [-0.0406, -0.0124,  0.0402]]],


        [[[-0.0081,  0.0374, -0.0268],
          [ 0.0757, -0.0336, -0.0235],
          [-0.0136,  0.0016,  0.0089]],

         [[ 0.0119,  0.0452,  0.0127],
          [ 0.0504,  0.0398, -0.0387],
          [-0.0259, -0.0377, -0.0022]],

         [[ 0.0086,  0.0110, -0.0021],
          [ 0.0095, -0.0066, -0.0285],
          [-0.0151,  0.0285, -0.0126]],

         ...,

         [[-0.0168, -0.0546,  0.0048],
          [-0.0144, -0.0126,  0.0342],
          [-0.0617,  0.0200,  0.0158]],

         [[ 0.0590,  0.0420, -0.0235],
          [ 0.0231,  0.0074,  0.0400],
          [ 0.0241,  0.0485,  0.0029]],

         [[-0.0013,  0.0022,  0.0032],
          [ 0.0224, -0.0026,  0.0080],
          [ 0.0050,  0.0068,  0.0173]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0532]],

         [[-0.0230]],

         [[ 0.0115]],

         ...,

         [[-0.0039]],

         [[-0.0491]],

         [[ 0.0003]]],


        [[[-0.0466]],

         [[-0.0026]],

         [[ 0.0512]],

         ...,

         [[ 0.0315]],

         [[ 0.0319]],

         [[ 0.0243]]],


        [[[-0.0088]],

         [[-0.0189]],

         [[ 0.0077]],

         ...,

         [[-0.0340]],

         [[ 0.0178]],

         [[ 0.0250]]],


        ...,


        [[[ 0.0362]],

         [[-0.0448]],

         [[-0.0445]],

         ...,

         [[ 0.0056]],

         [[ 0.0603]],

         [[-0.0470]]],


        [[[-0.0095]],

         [[ 0.0137]],

         [[-0.0008]],

         ...,

         [[ 0.0033]],

         [[ 0.0400]],

         [[-0.0382]]],


        [[[-0.0121]],

         [[ 0.0008]],

         [[ 0.0365]],

         ...,

         [[-0.0521]],

         [[ 0.0082]],

         [[-0.0318]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([-1.4739e-02, -5.3450e-02, -3.4598e-02,  1.7243e-02, -4.2783e-02,
        -9.8341e-03,  1.0050e-02,  4.8751e-02,  4.3960e-02, -1.2157e-02,
        -1.0882e-02,  3.4266e-02,  5.0773e-04, -1.9894e-02, -6.0301e-02,
        -5.6669e-03,  2.3895e-02, -5.5167e-02, -5.8028e-02, -4.0983e-02,
         5.8899e-02, -4.4967e-02, -4.8469e-02, -4.2937e-02, -3.2801e-02,
        -4.2691e-02,  4.2822e-02, -3.2988e-02, -9.0994e-03,  3.5976e-02,
         2.2237e-02, -2.3817e-02, -5.5420e-02,  1.1925e-02,  8.1473e-03,
         5.7401e-02, -2.6381e-02, -2.0230e-02, -2.3646e-02,  1.6434e-02,
        -5.1083e-03, -5.2507e-02,  5.2170e-02, -3.6337e-03, -4.5402e-02,
         1.2035e-02, -5.6316e-02,  1.4417e-02,  6.1184e-02, -1.9682e-02,
        -2.1176e-02, -4.3175e-02, -4.5015e-02, -7.4843e-03,  4.6197e-03,
        -2.0114e-02, -1.7600e-02,  1.2231e-02, -8.2832e-03,  4.5163e-02,
        -5.9130e-02,  3.0485e-02, -9.2467e-03,  2.0895e-02,  1.3637e-02,
         5.3861e-02,  3.2835e-02,  3.3817e-02, -7.6360e-03,  8.8539e-03,
        -4.7366e-02,  1.3757e-02,  3.1222e-02,  4.5243e-02,  5.2720e-02,
        -4.5651e-02, -2.9487e-03,  3.8678e-02, -4.8994e-02,  9.8386e-04,
         5.9080e-02,  1.6535e-02,  5.2331e-02, -4.7213e-02, -4.5561e-02,
        -4.1668e-02, -3.5292e-02,  1.4898e-02,  6.4429e-03, -2.8831e-02,
         1.8430e-02,  4.0475e-02, -2.9631e-04, -2.6774e-02, -4.5365e-02,
        -6.0850e-02,  6.4810e-03,  5.0170e-02,  6.0578e-02,  4.0648e-02,
         5.4038e-02, -2.4650e-02, -3.9701e-02,  1.2539e-02, -3.6531e-02,
        -2.5336e-02, -1.9219e-02, -2.4391e-02, -2.3106e-04, -2.6406e-02,
         5.4666e-02,  2.8729e-02,  1.2157e-02, -5.1871e-02,  4.5941e-02,
         3.4988e-02,  4.8693e-02, -5.4061e-02,  6.2259e-02, -1.0485e-03,
        -1.6049e-02, -6.0616e-03,  1.7658e-02,  2.3161e-02,  3.7152e-02,
        -5.7077e-02, -2.5256e-02, -3.6214e-02, -9.4980e-03, -1.8143e-02,
         1.2196e-02,  2.5794e-02,  1.9827e-02, -3.4475e-02,  5.0681e-03,
        -4.4103e-02, -8.4020e-03,  5.2359e-02, -5.7590e-02,  5.2646e-02,
         4.6944e-02,  1.9004e-02, -2.3044e-02, -3.3791e-02, -5.8972e-02,
        -6.1207e-02, -3.8022e-02,  1.3718e-02, -9.0746e-03,  5.8780e-02,
         4.5425e-02,  4.1873e-02, -4.5373e-02, -3.9488e-02, -9.1360e-04,
        -6.4322e-03, -5.4679e-03,  6.8718e-03, -4.2779e-02, -9.1375e-03,
         1.6938e-02, -4.5039e-02, -5.5406e-02,  4.6922e-02,  5.1146e-02,
         2.4338e-02, -1.7966e-02, -8.3022e-03, -5.0160e-02,  1.3206e-02,
        -2.6561e-02,  4.5473e-02, -4.8670e-02, -2.0375e-03, -1.6696e-02,
        -1.2297e-02, -3.9641e-02,  1.7974e-03,  5.5208e-02,  4.7028e-02,
        -4.9719e-02, -5.0070e-02,  1.2072e-02,  1.8379e-02,  6.5677e-03,
         1.5878e-02, -1.2870e-03,  4.3093e-02, -3.8577e-02, -6.5487e-03,
        -1.7921e-02,  3.8983e-02, -2.8478e-02,  3.6515e-02,  2.0912e-02,
         5.7010e-02, -3.6376e-02, -4.7766e-02,  1.9546e-02,  4.0979e-02,
         7.9218e-04, -9.0384e-03, -2.8475e-02, -3.4619e-02, -2.3497e-02,
         4.9991e-02, -3.3126e-02, -3.6540e-02,  6.2148e-03,  7.8478e-03,
         4.1744e-02, -9.7839e-03,  9.9542e-03, -1.0283e-02, -6.0123e-02,
        -5.6089e-02,  4.2489e-02,  4.3282e-02,  4.7665e-02,  2.7406e-02,
         1.0149e-02, -6.0775e-02, -1.5602e-02,  1.1491e-02,  2.4593e-02,
         2.2395e-02,  5.2537e-02, -1.1374e-02, -2.8140e-02, -4.5783e-02,
         3.0990e-02, -5.9426e-02, -2.9865e-02, -1.7536e-02, -1.7549e-02,
        -5.8020e-02,  5.3744e-02,  3.5445e-02, -4.8364e-02,  4.9127e-02,
        -8.5897e-03, -1.6538e-02, -1.1356e-02, -5.1342e-02, -4.3016e-02,
        -3.8890e-02,  1.0037e-02, -3.7391e-02,  4.2735e-02, -4.2651e-02,
        -5.2215e-02, -2.7679e-02,  2.0632e-02,  5.4130e-03,  7.9851e-03,
        -1.9286e-02,  5.6360e-02,  5.2114e-02, -3.1159e-02, -4.7391e-02,
        -5.0767e-03, -1.5390e-02, -7.2901e-03, -2.2665e-02, -5.6956e-03,
         1.3093e-02,  5.7802e-02,  1.5568e-02, -6.1447e-02, -2.8327e-02,
         3.4456e-02,  4.8981e-02,  5.8242e-02,  3.5073e-02, -5.9781e-02,
         4.5044e-02,  4.2136e-02,  3.0567e-02,  2.6451e-02,  2.5891e-02,
        -4.5766e-02, -1.5909e-02,  6.6005e-03,  4.8272e-02, -1.7750e-02,
        -6.1342e-02, -1.4963e-02, -5.0319e-02,  3.9840e-02,  1.1589e-02,
        -5.6740e-02,  4.9683e-02, -3.9006e-02,  4.4455e-02, -4.4410e-02,
         4.6957e-02, -9.1270e-03,  3.1456e-02,  3.1395e-03, -4.6502e-02,
         1.8123e-02,  3.9289e-02, -8.3008e-03,  3.0851e-02, -5.8544e-02,
        -3.2286e-02,  4.7159e-02,  1.7136e-02,  4.5320e-02, -4.6214e-02,
         5.0775e-02,  4.5348e-02, -8.6761e-03, -2.2734e-02, -2.7404e-02,
        -4.1727e-02,  4.5957e-02, -9.5183e-03, -3.6606e-02,  7.6596e-03,
        -2.2652e-02, -1.1111e-02, -2.4836e-02,  2.2883e-02, -3.6589e-02,
        -3.4103e-02, -1.2608e-02,  2.0793e-02, -3.9662e-02,  1.5153e-02,
        -6.1276e-02,  2.9248e-02, -2.8738e-02, -5.6196e-03, -4.9085e-02,
         1.9563e-02,  4.6923e-02,  5.8958e-02,  5.1930e-02,  3.9808e-02,
        -3.9198e-02, -4.2917e-02, -5.9973e-03, -6.0472e-02, -2.6827e-02,
         3.3892e-02,  4.8878e-03, -5.1226e-02,  2.4593e-02,  6.9643e-03,
         3.0401e-02, -5.7891e-02,  9.7520e-03, -1.8067e-02,  5.9877e-02,
        -5.5964e-02, -4.4947e-02,  5.2226e-02, -3.1751e-02, -2.2125e-02,
         1.3273e-02,  2.7809e-02,  2.7661e-02,  4.2071e-02, -2.7478e-02,
         3.0783e-02, -4.4241e-02,  4.3550e-02, -4.6913e-02, -8.8944e-03,
         2.4715e-02, -2.2865e-02, -3.4769e-02, -5.5562e-02, -3.5617e-02,
        -3.6876e-02,  3.5156e-02,  4.6762e-02, -5.6785e-02,  3.5541e-02,
        -3.4228e-02,  5.9209e-02, -2.5530e-02, -4.6839e-03,  4.1546e-02,
        -4.3442e-02,  1.4680e-02,  5.3968e-02,  6.9074e-03,  2.7180e-05,
         4.1561e-02, -4.2918e-02, -1.8411e-02,  1.3529e-02, -4.9937e-02,
         4.7814e-02, -5.5067e-02,  5.1128e-02,  5.7131e-03,  4.8115e-03,
        -5.5178e-02, -2.8084e-02,  6.0560e-02,  6.0017e-02, -4.3075e-02,
        -6.1069e-02, -4.6246e-03,  5.5628e-02,  1.0032e-02, -5.3814e-02,
        -4.6391e-02, -4.2010e-02,  5.4117e-02,  4.9223e-02, -3.0360e-02,
         1.7330e-03,  3.6753e-02, -4.2189e-02, -1.7627e-02,  3.5687e-02,
         5.0708e-02,  2.6463e-02, -2.1180e-02, -9.3141e-03, -5.8209e-02,
         3.1325e-03, -5.1722e-02, -5.1037e-02, -2.6396e-02,  4.8464e-02,
        -3.7794e-02, -6.3267e-03,  2.8043e-02,  1.5158e-02,  9.6392e-03,
        -4.3131e-03,  3.5338e-03, -4.4545e-02, -3.0612e-02, -4.3506e-02,
        -4.2443e-02, -4.1545e-02,  4.0588e-02, -2.5629e-02, -4.4296e-02,
        -7.2771e-03, -1.2389e-02, -4.5287e-02,  1.1425e-02, -1.5528e-02,
         5.4557e-02,  2.5928e-02, -2.8040e-02,  1.1580e-02, -1.3160e-03,
        -8.8499e-03,  5.8867e-02,  2.9021e-02,  2.2602e-02, -6.0908e-02,
         3.8874e-02,  3.4629e-02, -1.5919e-02,  3.6251e-02, -8.4616e-03,
        -1.1316e-02, -4.9005e-02,  2.5081e-02,  2.3849e-02,  5.6413e-02,
        -4.2108e-03, -1.5714e-03,  1.5193e-02,  5.4838e-02,  4.6276e-02,
        -6.4381e-03,  3.8207e-03, -1.5755e-02, -4.0178e-02,  2.1478e-02,
        -4.5157e-02,  2.5104e-02,  3.3187e-02, -1.9200e-03, -1.6375e-02,
        -3.0162e-02, -3.3892e-02,  6.6245e-04,  2.5784e-02, -4.8690e-02,
         2.3146e-02,  3.3984e-02,  6.7722e-03,  3.1341e-02, -3.3633e-02,
         1.8489e-02,  5.2703e-02, -3.0620e-02, -1.6819e-02, -1.5125e-02,
         1.3562e-03, -3.5473e-04, -2.1632e-02, -2.8922e-02, -3.9134e-02,
        -2.7051e-03, -4.3734e-02,  2.0904e-02,  3.3459e-02, -1.8256e-02,
        -1.3101e-02,  4.5214e-02,  4.7737e-02, -5.0671e-02,  1.2297e-03,
         3.6004e-02,  1.0762e-03, -5.6906e-02,  1.5224e-02, -1.2258e-02,
        -4.2760e-03, -2.3590e-02, -5.8556e-02,  5.1334e-02,  3.3874e-02,
        -9.4799e-03,  4.4852e-02,  5.1809e-02, -9.2553e-03,  1.5046e-02,
        -4.0121e-02, -1.3221e-02, -1.8247e-02,  5.8471e-02,  4.0258e-04,
         1.6578e-02, -4.6221e-02, -1.2313e-02,  2.4942e-02, -5.2790e-02,
         4.9789e-02, -5.2293e-02, -7.9914e-03,  3.9320e-02,  3.3447e-02,
        -6.0890e-02, -3.2035e-02,  4.4540e-03,  2.1976e-02, -4.1757e-02,
         3.2177e-03, -2.1945e-02,  4.8355e-02, -3.8061e-02, -4.2050e-02,
         4.8844e-02, -3.4770e-02, -3.9014e-02, -1.4046e-02, -4.1297e-02,
        -4.2790e-03,  8.8665e-03, -1.6108e-02, -6.2117e-02,  5.3523e-02,
         1.2407e-02, -3.6320e-02,  3.3349e-02, -5.2932e-02,  4.3138e-03,
         6.0578e-02,  1.5574e-02,  3.0085e-02,  1.1342e-02,  4.7607e-02,
         2.4185e-02], device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[-3.7896e-02,  6.6800e-03,  2.3340e-02,  ..., -3.5531e-03,
           -1.9950e-02, -3.6289e-02],
          [-4.2684e-03,  8.4785e-03,  3.3999e-02,  ..., -9.2873e-03,
           -6.4170e-02,  4.1195e-02],
          [ 4.6226e-03,  1.0870e-02, -3.8756e-02,  ...,  2.5437e-02,
           -3.0820e-02,  2.1917e-02],
          ...,
          [-2.1309e-02,  1.3100e-02, -1.9487e-02,  ..., -1.1412e-02,
            1.7432e-02,  1.7660e-02],
          [-2.4051e-02,  3.3762e-02, -1.1139e-02,  ...,  3.4896e-02,
            1.8785e-03,  9.0337e-03],
          [ 2.0586e-03,  2.6279e-02, -7.2912e-02,  ...,  2.7548e-02,
           -2.2050e-02, -6.6979e-03]],

         [[ 3.3638e-02,  1.8529e-02, -1.9415e-02,  ..., -3.5855e-02,
            1.4709e-02,  5.1778e-02],
          [ 7.1795e-03, -2.3046e-02,  3.2157e-02,  ...,  1.4841e-02,
            4.8562e-03, -8.4557e-03],
          [-4.5735e-02,  6.0900e-03, -3.7264e-02,  ...,  4.5967e-03,
            1.6929e-02, -3.5507e-02],
          ...,
          [-5.0673e-03, -6.6669e-02, -4.0276e-02,  ..., -1.5125e-02,
            2.7933e-03,  4.3248e-02],
          [ 1.2882e-02,  9.5608e-03,  2.8436e-03,  ...,  4.7290e-02,
           -3.7351e-02, -7.7367e-03],
          [ 1.3149e-02, -5.5815e-03, -7.1204e-03,  ...,  5.1015e-03,
           -1.4259e-02,  1.2241e-02]],

         [[-1.6491e-02,  8.1772e-03, -4.7222e-02,  ...,  4.3540e-03,
           -2.4121e-02, -2.8582e-02],
          [-4.3072e-02,  3.0742e-02,  3.4616e-02,  ...,  2.7822e-02,
           -1.3239e-02, -2.1981e-02],
          [ 1.2581e-02, -3.4864e-02, -3.5257e-02,  ..., -2.6027e-02,
            1.4824e-02,  3.7514e-02],
          ...,
          [ 2.2755e-02,  1.3133e-02, -2.7109e-02,  ..., -1.8554e-02,
            1.9954e-02, -1.7880e-02],
          [ 1.4324e-02, -1.8066e-02,  1.2547e-03,  ...,  3.2619e-02,
            3.3315e-02, -1.8094e-02],
          [ 2.0628e-02,  7.6697e-03,  3.0222e-02,  ..., -2.4586e-02,
            4.4144e-02,  1.4710e-04]]],


        [[[ 1.0546e-02, -6.7572e-03,  1.9072e-02,  ..., -2.4574e-02,
            1.2173e-03, -9.2110e-03],
          [ 4.6758e-03,  1.3468e-02, -1.9649e-03,  ..., -5.3120e-02,
           -3.2117e-02,  1.0723e-02],
          [ 3.7881e-02, -3.2269e-02,  2.3427e-02,  ..., -3.2734e-02,
            4.6125e-02, -1.6153e-02],
          ...,
          [ 1.7361e-02,  5.3621e-03, -2.2346e-02,  ...,  1.6714e-03,
           -1.7981e-02, -6.7848e-03],
          [-3.2689e-02, -6.3555e-03, -1.7822e-03,  ...,  6.0451e-03,
           -7.9256e-03,  4.4244e-03],
          [-2.0100e-02, -2.2551e-02,  1.4302e-02,  ...,  2.1689e-02,
            1.7100e-02, -2.1705e-02]],

         [[-2.3020e-03,  3.2753e-02,  3.8612e-03,  ...,  1.0612e-02,
            1.2636e-02,  1.2871e-02],
          [ 4.5188e-03,  5.0560e-03, -2.2171e-02,  ...,  5.9328e-03,
            1.1322e-03,  3.0348e-03],
          [-4.7680e-02,  2.3667e-03,  5.1522e-02,  ...,  2.2526e-02,
           -3.1751e-02,  5.4571e-02],
          ...,
          [-3.3321e-02, -1.7649e-02, -3.3842e-02,  ..., -4.3572e-02,
            1.0503e-02, -1.5711e-02],
          [ 7.4061e-02, -2.8494e-02,  2.6318e-02,  ..., -1.3184e-02,
            5.3079e-03,  2.0868e-02],
          [-7.3854e-03,  4.3427e-02, -4.2091e-03,  ...,  1.3221e-03,
           -3.4539e-02, -6.9791e-03]],

         [[ 1.9570e-02, -4.3820e-03, -4.3197e-02,  ...,  5.1407e-03,
           -1.0163e-03,  2.6517e-02],
          [ 5.9643e-05, -7.3697e-03,  2.2851e-02,  ..., -9.1552e-03,
            1.3736e-03, -1.1170e-02],
          [-1.4266e-02,  1.8494e-02, -4.1247e-02,  ..., -1.2686e-03,
           -2.0337e-02, -2.7829e-02],
          ...,
          [ 5.5270e-02, -2.1163e-02, -2.1286e-02,  ..., -1.0430e-03,
           -2.0441e-02, -1.6161e-02],
          [ 1.3481e-02, -2.1695e-03, -3.8597e-02,  ...,  8.6923e-03,
           -4.5284e-02, -2.9753e-02],
          [-1.6117e-03,  2.8848e-02,  1.4749e-02,  ..., -2.5530e-03,
           -3.7381e-02, -5.2941e-02]]],


        [[[-2.7327e-02,  1.5843e-02,  1.3478e-02,  ..., -1.7832e-02,
            1.8814e-02, -2.9464e-02],
          [ 3.6889e-02, -1.8649e-02, -1.1157e-02,  ..., -3.0620e-02,
            7.6608e-03, -2.2383e-02],
          [ 1.3681e-02, -9.8473e-03,  6.3855e-03,  ..., -1.7076e-02,
           -5.7828e-02, -4.0131e-03],
          ...,
          [ 2.0202e-02,  5.5588e-02, -1.8610e-02,  ..., -6.8003e-03,
           -3.3294e-02,  2.4401e-02],
          [-2.1657e-02, -3.2388e-02,  8.5588e-03,  ...,  3.6738e-02,
            3.4598e-02, -6.2840e-03],
          [-1.0387e-02, -4.3651e-03, -3.1852e-02,  ..., -1.5568e-02,
           -2.0275e-02,  8.1266e-04]],

         [[ 3.2502e-03,  3.5198e-02, -6.3268e-04,  ..., -3.6838e-02,
            2.2175e-02, -1.7837e-02],
          [ 1.7594e-02, -5.6565e-02, -1.2220e-02,  ..., -1.6124e-03,
            1.2017e-02, -1.5015e-02],
          [ 2.2562e-02,  3.2293e-02,  8.2341e-03,  ..., -1.9347e-02,
           -1.2060e-02, -1.3253e-02],
          ...,
          [ 8.6332e-03, -1.7915e-02, -1.0965e-02,  ..., -9.6885e-03,
           -2.7017e-02,  3.3587e-02],
          [ 2.4276e-02,  1.7158e-02,  1.0019e-02,  ...,  2.9656e-02,
            2.8405e-02, -5.6011e-02],
          [ 2.4862e-02, -3.4441e-02, -2.9633e-02,  ...,  2.2225e-02,
            4.4540e-02, -2.4001e-02]],

         [[ 3.4381e-02,  3.0485e-03,  1.2598e-02,  ...,  2.5187e-02,
            1.7626e-02, -2.0886e-02],
          [-1.5722e-02,  1.5344e-02,  4.4482e-02,  ..., -3.2451e-02,
           -1.0614e-02,  4.3073e-04],
          [-1.0063e-02,  1.5951e-02,  2.2616e-02,  ..., -1.7414e-02,
            7.4298e-03,  3.2708e-02],
          ...,
          [ 1.0827e-02, -1.9594e-03, -3.5989e-03,  ..., -1.0754e-02,
            5.5871e-04, -9.8616e-04],
          [-9.7165e-03,  2.8777e-02,  1.2252e-02,  ..., -2.4881e-02,
            1.0698e-02, -4.4084e-02],
          [ 1.0226e-02,  2.8918e-02,  5.2842e-03,  ...,  2.1435e-02,
            3.4800e-02,  2.5154e-02]]],


        ...,


        [[[-4.4982e-02,  8.3971e-03, -4.5162e-02,  ...,  5.3646e-03,
           -1.1165e-02, -1.3364e-02],
          [-3.1381e-02,  1.2597e-02, -6.5107e-03,  ...,  8.2861e-03,
            5.7782e-03,  1.9125e-02],
          [-7.0484e-03,  3.7333e-03,  2.5236e-02,  ..., -3.7681e-02,
            2.1113e-02, -1.0100e-02],
          ...,
          [-4.1152e-02, -4.7653e-02, -2.7194e-02,  ...,  2.2031e-02,
           -8.3252e-03,  8.5167e-02],
          [ 3.1198e-02,  2.8693e-02, -2.7195e-02,  ...,  1.7703e-02,
           -1.0960e-02,  4.5930e-02],
          [ 2.7226e-02,  1.6200e-02,  1.4132e-02,  ..., -1.1450e-02,
           -1.1541e-02,  1.1550e-02]],

         [[ 2.8513e-02, -4.8494e-02, -6.9289e-03,  ..., -7.3540e-03,
           -7.4908e-02, -2.4277e-02],
          [-9.6509e-03,  1.8318e-02,  2.3468e-02,  ..., -2.6461e-03,
           -3.9497e-03, -4.0808e-02],
          [ 1.3596e-02,  3.9377e-03, -2.5508e-02,  ..., -1.8526e-02,
            1.1337e-02, -8.4218e-03],
          ...,
          [ 3.1010e-02, -5.2800e-04, -7.0702e-03,  ...,  1.5123e-02,
           -1.2064e-02, -2.3484e-03],
          [-2.5602e-03,  3.0310e-02, -1.4675e-03,  ...,  3.2696e-03,
           -1.6735e-02,  4.5240e-03],
          [ 3.3797e-02, -1.1012e-02,  2.6679e-02,  ..., -1.2304e-02,
            1.9514e-02, -1.9303e-02]],

         [[ 2.7292e-02,  2.0663e-02, -4.2597e-03,  ..., -5.8807e-03,
           -4.5484e-02, -3.7195e-02],
          [ 7.5458e-03, -1.2198e-02, -2.4186e-03,  ..., -2.1865e-02,
           -1.5879e-02,  4.1446e-02],
          [-3.9893e-03, -4.7811e-02, -6.6500e-03,  ...,  3.3219e-02,
           -1.7247e-02,  3.1392e-02],
          ...,
          [-3.3115e-02, -2.0737e-02,  2.7487e-02,  ...,  2.1740e-02,
           -4.4877e-03,  1.6041e-02],
          [ 2.1325e-02, -2.8457e-02, -1.4867e-02,  ...,  1.7082e-02,
           -2.8814e-02, -3.9869e-02],
          [-5.0311e-02, -3.9333e-02,  1.1603e-02,  ...,  3.5461e-03,
           -1.7632e-02, -1.4096e-02]]],


        [[[ 5.9797e-02,  4.6273e-03, -3.9899e-03,  ...,  2.1744e-02,
           -1.1157e-03, -2.7717e-02],
          [-3.8398e-02,  1.1773e-04,  7.8006e-03,  ...,  3.3229e-02,
            7.9279e-03, -2.8479e-02],
          [ 2.8617e-02,  2.5228e-02, -1.6724e-02,  ..., -2.1531e-02,
           -2.9176e-02, -1.3639e-02],
          ...,
          [-5.4879e-03,  1.0866e-02, -7.5213e-04,  ...,  4.6010e-02,
           -1.0425e-02,  5.7442e-02],
          [ 4.1994e-03,  4.5688e-02, -1.5158e-02,  ...,  1.7257e-02,
            2.2987e-02,  1.3562e-02],
          [ 6.3704e-02, -3.2526e-03,  3.7872e-03,  ..., -5.3485e-03,
            4.1073e-03,  2.3980e-02]],

         [[-4.8831e-04, -1.2315e-02,  1.4157e-03,  ..., -3.5674e-02,
            4.6078e-02,  9.5397e-03],
          [-3.9519e-02,  7.1683e-03, -4.9250e-03,  ..., -9.6047e-03,
            3.0219e-02, -2.2871e-03],
          [-3.9253e-03,  2.8442e-05, -3.1027e-02,  ...,  2.5541e-02,
            1.2870e-03,  1.7228e-02],
          ...,
          [-5.0809e-03,  3.6587e-03,  1.2595e-02,  ..., -5.8196e-03,
           -1.2210e-02,  3.4588e-02],
          [ 1.1205e-02, -2.6756e-02, -2.6063e-02,  ...,  1.5084e-02,
            6.6018e-02,  3.4509e-03],
          [-3.1080e-02,  1.5389e-02,  2.0903e-02,  ..., -2.6732e-02,
            2.0008e-02,  2.4337e-02]],

         [[ 1.2119e-02,  7.9097e-02,  1.6856e-02,  ...,  4.0887e-03,
           -3.4677e-03, -2.4461e-02],
          [-1.9645e-02,  6.7103e-03,  6.8724e-03,  ...,  2.6817e-02,
            2.1134e-02,  5.5639e-03],
          [ 1.0444e-02,  9.8062e-03,  2.5159e-02,  ...,  2.5711e-03,
            7.6841e-03,  1.1204e-02],
          ...,
          [-3.6080e-02, -7.0567e-03,  7.5795e-02,  ..., -3.9135e-02,
           -6.2184e-03, -2.1947e-04],
          [ 3.0046e-02, -2.0214e-02, -1.5265e-02,  ...,  9.7084e-03,
            1.0986e-02, -4.7611e-03],
          [-6.2266e-03, -6.0648e-03, -1.4311e-02,  ..., -3.0397e-02,
            2.9094e-02,  1.2650e-02]]],


        [[[-5.4364e-03,  1.7360e-02, -1.3558e-02,  ...,  1.4662e-03,
           -1.5137e-02,  1.5773e-02],
          [ 7.4781e-03,  1.3361e-02, -7.1666e-04,  ..., -3.5062e-03,
           -2.9252e-02, -2.6630e-02],
          [-2.4106e-02, -3.8829e-03,  2.4582e-03,  ...,  1.5193e-02,
           -2.6271e-03, -2.0411e-02],
          ...,
          [ 3.0418e-02, -1.7713e-02, -1.2010e-02,  ...,  2.0240e-02,
            2.1562e-02, -2.2553e-02],
          [ 1.8871e-02,  6.2095e-02,  5.7672e-03,  ...,  2.3926e-02,
            3.3060e-02, -1.9122e-03],
          [-6.2556e-03,  2.3846e-02, -3.0135e-03,  ..., -4.5838e-03,
           -3.8294e-02,  2.2774e-02]],

         [[ 3.1420e-02, -2.4760e-02,  2.9067e-02,  ..., -1.1716e-04,
            4.0018e-02,  2.8056e-02],
          [ 3.9891e-02, -5.7014e-03, -2.0964e-02,  ...,  2.0570e-02,
           -3.0962e-03,  3.1477e-02],
          [-4.9666e-03,  3.6704e-02, -4.7568e-02,  ..., -1.5121e-02,
           -1.3832e-02,  1.9989e-02],
          ...,
          [ 4.7089e-02, -3.6356e-02,  2.1242e-02,  ...,  1.9072e-02,
            4.3194e-03, -1.6999e-02],
          [-4.3298e-02,  2.4268e-02, -2.9332e-03,  ...,  1.0549e-02,
           -2.8461e-02, -2.1364e-02],
          [-2.8305e-03,  1.3144e-02, -2.8061e-02,  ..., -3.4240e-02,
           -2.1576e-03,  4.7843e-02]],

         [[-7.6087e-03, -1.7855e-02, -2.9499e-03,  ..., -2.8828e-02,
           -1.1094e-02, -4.4568e-02],
          [ 1.4506e-02, -4.3858e-03, -1.1174e-02,  ..., -2.0008e-02,
           -1.3682e-02,  1.9037e-02],
          [-1.3908e-02,  1.7452e-03, -2.4456e-03,  ..., -1.3914e-02,
           -6.1971e-02, -8.7593e-03],
          ...,
          [ 1.9249e-02, -2.0904e-02, -8.8462e-03,  ..., -1.3807e-02,
            8.0203e-03, -2.5154e-03],
          [ 3.7401e-02,  1.3324e-02, -2.8813e-03,  ...,  6.5011e-03,
            6.4970e-03, -2.7163e-02],
          [-3.8998e-02,  5.7572e-02, -4.4857e-03,  ..., -2.1511e-02,
           -1.6101e-02,  1.9716e-03]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 0.0141,  0.0608,  0.0789],
          [-0.0657,  0.0451,  0.0910],
          [ 0.1051,  0.1661, -0.0170]],

         [[-0.0634, -0.0387, -0.0282],
          [ 0.1143, -0.0484,  0.0073],
          [ 0.0144,  0.0630,  0.0197]],

         [[ 0.0683, -0.0003,  0.0885],
          [-0.0187, -0.0672,  0.0664],
          [ 0.1035, -0.0278,  0.0662]],

         ...,

         [[ 0.0718, -0.0219,  0.0123],
          [-0.0617, -0.0143, -0.0089],
          [ 0.0257, -0.0441, -0.0900]],

         [[ 0.0509, -0.0154,  0.0371],
          [-0.0352, -0.0101, -0.0428],
          [-0.0559,  0.0359, -0.0294]],

         [[ 0.0538,  0.0067,  0.1380],
          [ 0.0727,  0.0204, -0.0514],
          [ 0.0306,  0.0259, -0.0790]]],


        [[[-0.0459,  0.0579, -0.1167],
          [-0.0907,  0.0765,  0.0790],
          [ 0.0676, -0.0556, -0.0206]],

         [[-0.0480, -0.0831, -0.0352],
          [ 0.0312, -0.0479,  0.1367],
          [ 0.0044, -0.0028,  0.0640]],

         [[ 0.0084,  0.0247, -0.0209],
          [ 0.0622,  0.0388, -0.0635],
          [ 0.0636,  0.0656, -0.0830]],

         ...,

         [[-0.0456, -0.0265, -0.0501],
          [ 0.0990,  0.0205, -0.0139],
          [-0.0135, -0.0849,  0.0297]],

         [[ 0.1258,  0.1071, -0.0171],
          [ 0.0460, -0.0938,  0.0028],
          [ 0.0029, -0.1145,  0.0222]],

         [[ 0.0181, -0.0086,  0.0310],
          [-0.0715,  0.1673, -0.0625],
          [ 0.0434,  0.0233,  0.1091]]],


        [[[ 0.0151,  0.1121, -0.0653],
          [-0.0128,  0.0521, -0.0715],
          [ 0.0325, -0.0299, -0.0280]],

         [[ 0.0369,  0.0294, -0.0306],
          [-0.0528, -0.0314,  0.0316],
          [-0.0689,  0.0103,  0.1383]],

         [[-0.1029, -0.0104,  0.0057],
          [-0.0370,  0.0304, -0.0507],
          [ 0.0765, -0.1195, -0.1174]],

         ...,

         [[ 0.0475,  0.1418, -0.0522],
          [ 0.0034,  0.0228, -0.0687],
          [ 0.0408, -0.0256, -0.0818]],

         [[ 0.0091, -0.0558, -0.0073],
          [-0.1120,  0.1811, -0.0367],
          [-0.1823,  0.0246,  0.1031]],

         [[-0.0237,  0.0196,  0.0170],
          [-0.0792, -0.0391,  0.0422],
          [-0.1239,  0.0883, -0.0737]]],


        ...,


        [[[ 0.0005, -0.0423,  0.0853],
          [-0.0378,  0.0325, -0.0634],
          [-0.0137,  0.0504,  0.0140]],

         [[ 0.0271,  0.0379, -0.0877],
          [-0.0990,  0.0232,  0.0520],
          [ 0.0131,  0.0132,  0.0249]],

         [[-0.0829,  0.0100,  0.0757],
          [-0.0670,  0.0816,  0.0879],
          [-0.0261, -0.0367,  0.1044]],

         ...,

         [[-0.1850,  0.0953,  0.1079],
          [-0.0261, -0.0516, -0.0345],
          [-0.0064,  0.0154,  0.0111]],

         [[ 0.0016,  0.0269, -0.0684],
          [ 0.0486,  0.0318, -0.0052],
          [ 0.0481,  0.1307,  0.0285]],

         [[ 0.0652,  0.0164, -0.1082],
          [ 0.0048,  0.0411,  0.0391],
          [-0.0474,  0.0304, -0.0021]]],


        [[[-0.0187,  0.0733, -0.0072],
          [-0.0351,  0.0250, -0.0715],
          [-0.0030,  0.0564, -0.0270]],

         [[-0.0151,  0.0094,  0.0798],
          [-0.1285,  0.0601, -0.0365],
          [ 0.1055,  0.0596, -0.0005]],

         [[-0.0086, -0.1475,  0.0155],
          [ 0.0179,  0.0665,  0.0270],
          [-0.0174,  0.0583, -0.0702]],

         ...,

         [[-0.0592,  0.0591,  0.0691],
          [ 0.0667,  0.0826,  0.0885],
          [ 0.0959, -0.0216,  0.0413]],

         [[-0.0009,  0.0257,  0.0092],
          [-0.0475,  0.0097, -0.0305],
          [ 0.0610,  0.0453,  0.0611]],

         [[ 0.0088, -0.0137,  0.0369],
          [ 0.0167, -0.0150,  0.0808],
          [-0.0101, -0.0331, -0.0898]]],


        [[[-0.0451,  0.0348, -0.0131],
          [ 0.0292,  0.0335, -0.0636],
          [-0.0692,  0.0031,  0.0170]],

         [[ 0.0322, -0.0846, -0.0029],
          [ 0.0169, -0.0502, -0.0525],
          [ 0.0141, -0.0558, -0.0290]],

         [[-0.0336, -0.0764, -0.0005],
          [-0.0480, -0.0151,  0.0034],
          [ 0.0583, -0.1324, -0.0667]],

         ...,

         [[-0.0731, -0.0021, -0.0140],
          [ 0.0023, -0.0833, -0.0139],
          [ 0.0618, -0.0469, -0.0318]],

         [[-0.0578,  0.0446,  0.0484],
          [-0.0750, -0.0766, -0.0896],
          [-0.0378,  0.0428, -0.1168]],

         [[-0.0731,  0.0556, -0.1055],
          [-0.0535,  0.0690, -0.0590],
          [ 0.0627,  0.0366, -0.1189]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-1.0455e-01,  6.3919e-02,  3.9893e-02],
          [ 1.1217e-01, -6.2338e-02, -6.0295e-02],
          [-9.8963e-03, -7.1185e-02,  9.6238e-04]],

         [[-6.8917e-03, -2.9595e-03,  4.3132e-02],
          [-1.5467e-03,  3.3983e-02,  1.4617e-02],
          [ 6.8568e-02, -2.2577e-02,  2.1272e-02]],

         [[ 6.2598e-02, -6.0995e-03, -2.5510e-02],
          [-6.3662e-02,  2.4783e-02, -9.3910e-03],
          [-2.9824e-02,  7.2638e-03,  3.7205e-02]],

         ...,

         [[-6.8174e-04,  3.4463e-02,  6.8916e-02],
          [ 3.6792e-03,  2.6546e-02,  6.9954e-02],
          [-1.1798e-03, -1.0530e-01, -3.8392e-02]],

         [[-2.4863e-02,  2.4213e-02, -8.9758e-02],
          [-2.4263e-02, -2.6049e-02,  5.6631e-02],
          [ 1.7312e-02, -6.1174e-02, -4.4937e-02]],

         [[-5.8772e-02,  4.9900e-03, -4.2055e-02],
          [-1.1571e-01,  1.1137e-01,  1.9603e-02],
          [-1.5045e-02, -5.0142e-02, -1.8167e-02]]],


        [[[-9.3810e-03,  2.1355e-02, -1.2502e-02],
          [-9.1698e-03, -4.1204e-02,  6.5559e-02],
          [ 4.2021e-02,  4.8292e-02,  4.1751e-03]],

         [[ 1.9916e-03,  6.7136e-03, -1.4993e-02],
          [-7.9432e-02,  8.7511e-02, -3.7738e-02],
          [ 6.1027e-03,  2.1936e-02, -1.4788e-02]],

         [[-3.8027e-03,  4.1219e-02,  4.4354e-02],
          [ 4.5573e-02,  8.6078e-02, -2.6535e-02],
          [ 3.1045e-03,  1.8889e-02,  5.4742e-02]],

         ...,

         [[ 3.4199e-02, -3.5899e-02,  7.8435e-03],
          [ 3.1815e-02, -5.4009e-02, -1.8245e-02],
          [ 1.8109e-02, -5.2731e-02,  4.5841e-02]],

         [[-1.3911e-02,  2.7292e-02, -6.6851e-02],
          [-3.0075e-02, -9.6209e-02,  2.3767e-02],
          [-1.4723e-02, -6.1663e-02, -1.9356e-03]],

         [[-3.8739e-02, -4.1793e-02, -9.9990e-02],
          [-1.2228e-01,  2.4885e-02,  1.1746e-02],
          [ 7.2713e-02,  1.7126e-02, -8.3539e-02]]],


        [[[-7.7934e-02, -9.7917e-02,  4.5689e-02],
          [-7.3240e-02, -1.9586e-02,  4.6145e-02],
          [ 8.1659e-02, -3.2341e-02,  6.1674e-02]],

         [[-5.8965e-02, -9.2020e-02,  3.2783e-02],
          [ 9.0753e-02, -5.2011e-02,  5.0554e-02],
          [ 5.2806e-02,  6.1384e-02,  1.7797e-02]],

         [[ 3.3238e-02, -8.8256e-02, -2.8332e-04],
          [ 1.0602e-01, -8.7114e-02,  6.0738e-03],
          [-5.7557e-02, -3.6339e-02,  4.6922e-02]],

         ...,

         [[ 5.4417e-02,  1.4353e-01,  3.8843e-03],
          [-6.1515e-02,  2.1928e-02, -5.3735e-02],
          [-3.2799e-02,  6.4367e-02,  9.2661e-02]],

         [[ 2.6998e-02,  1.2110e-01, -3.9591e-02],
          [ 3.3517e-02, -9.0088e-02, -7.3737e-02],
          [-9.7467e-02, -1.2761e-02, -7.2144e-02]],

         [[ 2.0818e-02, -3.1525e-02,  2.3771e-04],
          [ 1.2103e-02,  1.8046e-02,  6.6341e-02],
          [ 1.6807e-02,  4.1766e-02, -6.1458e-02]]],


        ...,


        [[[-1.1141e-02, -2.4379e-02,  5.7452e-02],
          [ 1.8461e-03, -3.8441e-02,  1.6115e-02],
          [ 5.5038e-02,  1.6036e-01,  3.7747e-02]],

         [[ 1.7519e-02, -7.7288e-02,  6.9559e-02],
          [-8.1229e-02, -4.4056e-02,  6.3583e-02],
          [ 9.7100e-02, -5.2456e-02, -6.0423e-02]],

         [[-1.4799e-02,  2.4591e-02, -3.8702e-02],
          [ 3.6395e-02, -2.6728e-02, -4.4490e-04],
          [ 7.4364e-02, -5.1270e-02,  3.3281e-03]],

         ...,

         [[-9.8025e-02, -2.3403e-02,  4.1026e-02],
          [ 4.2259e-02, -3.6045e-02, -4.7383e-03],
          [-2.0730e-02,  2.6911e-02, -4.5654e-02]],

         [[-5.8372e-02,  9.0584e-02, -1.9887e-02],
          [ 1.5100e-02,  9.7112e-03,  2.5953e-03],
          [-1.1912e-02,  3.5571e-02, -9.6317e-02]],

         [[-1.9611e-02,  1.4289e-02, -4.1969e-03],
          [ 5.2597e-02,  3.6987e-02, -1.6510e-02],
          [ 2.1817e-02, -5.8204e-02, -5.3624e-02]]],


        [[[ 2.4473e-02,  1.2832e-01, -6.5431e-02],
          [ 1.0779e-02,  6.6466e-02, -4.4783e-02],
          [ 4.3406e-04,  5.6605e-03, -3.7198e-02]],

         [[ 3.5374e-02,  2.9206e-02, -3.8744e-03],
          [ 9.6905e-05,  1.6278e-02,  1.1670e-01],
          [ 1.3506e-01,  1.0682e-01,  6.6562e-02]],

         [[ 9.2854e-02, -6.6208e-02,  1.1739e-02],
          [ 5.5382e-02,  1.5579e-02, -5.4939e-03],
          [-1.9116e-02,  6.1957e-02,  5.8160e-02]],

         ...,

         [[ 7.0749e-02, -2.3075e-02,  1.3936e-01],
          [ 1.8538e-02,  6.6388e-02, -2.1397e-02],
          [ 8.5724e-02,  6.9916e-02, -3.6950e-02]],

         [[-8.7000e-02,  2.6085e-02, -4.1386e-02],
          [ 1.1150e-02, -5.4139e-02, -9.1111e-02],
          [-7.1486e-03,  1.9942e-02,  1.0537e-01]],

         [[ 3.3232e-02, -9.7158e-03, -1.6696e-02],
          [ 6.4743e-02,  2.5100e-02,  6.5091e-02],
          [-5.1093e-02,  6.5270e-02,  1.5975e-02]]],


        [[[-1.8383e-02,  8.3287e-03,  3.4793e-02],
          [-2.3397e-02,  1.5628e-03, -6.3575e-02],
          [-2.2324e-02,  4.6832e-02, -1.0045e-01]],

         [[-3.5547e-02,  5.9413e-02,  3.2813e-02],
          [-5.9849e-02, -2.0044e-03, -1.0704e-01],
          [-1.1625e-01,  3.6347e-02,  6.4039e-02]],

         [[-1.3002e-01, -5.3012e-02, -6.4175e-03],
          [ 1.9014e-03, -5.4666e-02,  9.9864e-03],
          [-1.8355e-02,  6.2823e-03, -4.0185e-02]],

         ...,

         [[-2.8487e-02,  8.7679e-02,  2.9302e-02],
          [-6.8647e-02, -7.6288e-02, -5.0304e-03],
          [ 1.5795e-02, -3.0606e-02, -1.3106e-01]],

         [[-1.1340e-02, -5.5549e-02, -8.5010e-02],
          [ 4.8259e-02,  5.7360e-02, -5.0774e-02],
          [-4.0438e-02, -4.8974e-02, -1.0565e-02]],

         [[-2.7149e-02,  7.6119e-05, -1.0851e-01],
          [-3.4118e-02, -4.2734e-02, -2.0352e-02],
          [ 2.1614e-02, -5.5783e-02,  2.3556e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 9.4313e-03, -3.7747e-03,  6.4284e-02],
          [-4.8018e-02,  8.6266e-03, -8.1259e-02],
          [-3.0032e-02,  3.8486e-02,  2.1296e-02]],

         [[-2.1445e-03,  7.4359e-02,  5.7076e-02],
          [ 1.4716e-02, -3.4187e-02,  3.3494e-02],
          [-2.1702e-02,  5.6827e-02, -5.5409e-02]],

         [[ 1.2641e-02, -1.7754e-02,  2.6931e-02],
          [ 1.9831e-03, -2.0355e-02,  5.3502e-02],
          [-6.9615e-02, -3.1324e-02, -1.1074e-02]],

         ...,

         [[-3.7236e-02,  4.1581e-02,  2.6567e-02],
          [ 2.0041e-02, -5.2122e-02,  6.1174e-02],
          [ 7.8950e-02, -6.2780e-02,  3.2181e-03]],

         [[-1.0398e-01,  5.7037e-02, -5.0137e-02],
          [-4.6306e-02, -4.6095e-02, -1.2237e-02],
          [ 1.4646e-01,  2.6020e-02,  2.5639e-02]],

         [[-7.5961e-02,  1.9506e-02,  1.1426e-02],
          [ 3.0949e-02, -2.6112e-02,  2.1175e-02],
          [ 5.9930e-03, -1.5199e-03,  1.9622e-02]]],


        [[[-3.0319e-02, -6.1368e-02,  2.9380e-02],
          [ 2.2755e-02, -1.5083e-01,  5.6349e-02],
          [-8.2311e-02,  4.9578e-02, -7.6280e-02]],

         [[-7.3710e-03, -3.0527e-02, -5.5789e-02],
          [-7.6576e-02, -1.1151e-02,  1.1105e-01],
          [-7.1408e-04,  2.8517e-02,  1.7589e-03]],

         [[-6.9197e-02, -2.6028e-02, -1.2047e-01],
          [-7.7323e-02, -6.6001e-02,  4.7794e-02],
          [ 5.4338e-02,  6.8251e-02,  4.7933e-03]],

         ...,

         [[-2.4608e-02,  2.8390e-02,  1.2338e-01],
          [ 1.6276e-01, -7.1214e-02, -6.3901e-02],
          [ 9.6522e-02,  6.6564e-02, -1.0422e-01]],

         [[ 4.5373e-03, -3.0843e-02, -8.2132e-02],
          [ 7.7796e-02,  3.2170e-02,  6.0394e-02],
          [ 5.5946e-02,  7.2314e-03,  2.7183e-02]],

         [[ 5.2143e-02, -4.1565e-02, -4.8633e-02],
          [ 6.3001e-03,  1.0837e-01, -1.9320e-02],
          [-1.3189e-02, -7.5952e-03,  3.0078e-02]]],


        [[[-1.8383e-01, -3.3539e-02,  1.6868e-02],
          [-6.9213e-03,  7.7987e-02, -1.7737e-02],
          [ 2.5417e-02,  8.9344e-02,  1.1912e-02]],

         [[ 2.9314e-02,  1.5008e-02, -4.5841e-02],
          [ 1.1903e-02,  7.0866e-02, -9.4425e-02],
          [ 4.7229e-03, -3.3631e-02, -9.0633e-03]],

         [[-2.7092e-02, -1.1166e-01,  1.5063e-01],
          [-1.6957e-02, -4.5717e-02,  3.4089e-02],
          [-8.5198e-03,  3.8189e-02,  1.6042e-01]],

         ...,

         [[-4.3668e-02,  2.2285e-02, -3.5644e-02],
          [-3.7601e-02, -8.8286e-02, -3.2203e-02],
          [ 4.2455e-02, -8.1130e-03, -2.8192e-02]],

         [[ 3.5907e-02,  1.7434e-02,  2.9100e-02],
          [-7.6107e-02, -7.9803e-02,  9.9446e-02],
          [-5.3350e-02, -2.5881e-02, -2.7637e-02]],

         [[-1.0485e-01,  5.0930e-02,  5.3779e-02],
          [ 9.0602e-03, -1.1712e-02,  4.2832e-02],
          [ 5.2249e-03,  8.1324e-02, -2.8309e-03]]],


        ...,


        [[[ 2.2354e-02,  2.0555e-02, -1.3170e-02],
          [-1.1015e-01,  2.8984e-02,  1.8112e-02],
          [ 1.3146e-01, -4.9671e-02,  2.2146e-02]],

         [[-2.9590e-02, -9.1819e-02, -7.2608e-02],
          [-1.7594e-02,  5.5367e-03,  3.3023e-02],
          [-4.5117e-02, -7.7014e-02, -1.6051e-02]],

         [[ 3.8761e-02, -1.1252e-02,  1.7873e-02],
          [-7.6524e-02,  2.1546e-02, -2.1049e-02],
          [-1.4697e-01,  5.2579e-02,  7.7988e-02]],

         ...,

         [[ 1.6133e-02,  9.4850e-02,  4.4157e-02],
          [-5.2787e-02, -4.9492e-02, -1.7592e-02],
          [ 8.0074e-02,  6.7360e-02,  6.2412e-02]],

         [[ 3.8442e-02, -3.0605e-03, -4.9776e-02],
          [-7.0283e-03, -1.6934e-02, -8.1729e-02],
          [-4.3124e-02,  1.0543e-01, -9.4622e-04]],

         [[-2.9388e-02, -1.0050e-02, -2.0629e-02],
          [ 7.6058e-02,  6.2627e-02,  8.0352e-02],
          [-2.3897e-02,  2.6548e-02, -6.2401e-02]]],


        [[[ 5.8887e-02, -7.1704e-02, -2.6947e-02],
          [ 1.1763e-02,  1.5264e-02,  1.0586e-01],
          [ 1.5611e-01,  5.1584e-02,  8.8836e-03]],

         [[ 2.1419e-03,  6.0503e-02,  9.7617e-02],
          [-5.1618e-04,  4.0557e-02, -5.9983e-02],
          [ 1.2495e-01, -4.2764e-02, -2.1138e-02]],

         [[ 7.8840e-02,  1.7956e-02, -4.0649e-02],
          [-7.7238e-02,  5.8405e-02,  4.5791e-02],
          [-2.4573e-02,  1.0130e-02, -5.9344e-02]],

         ...,

         [[-6.6381e-02,  5.2055e-02,  1.4695e-01],
          [-8.5420e-02,  2.5980e-02,  4.0612e-03],
          [-4.5818e-02,  9.3442e-03,  1.8660e-02]],

         [[ 5.0291e-02,  1.6154e-02,  2.0101e-03],
          [-8.1461e-02,  6.5505e-02,  1.3444e-01],
          [-5.1425e-02,  5.7105e-02,  4.7726e-02]],

         [[ 8.3574e-02,  1.0346e-01,  8.1059e-02],
          [ 4.7723e-02, -4.0464e-02, -5.6330e-02],
          [-5.8078e-02, -1.8022e-02, -7.8608e-02]]],


        [[[ 4.4379e-03,  4.8613e-02, -9.7241e-03],
          [ 7.5838e-02, -3.8075e-02,  3.8751e-02],
          [ 3.3695e-02, -1.4606e-01, -7.6507e-03]],

         [[-1.1302e-02, -2.6826e-02, -4.8125e-02],
          [ 7.4698e-02,  1.5916e-02, -7.0461e-02],
          [ 1.4309e-01,  4.2859e-02, -7.5880e-02]],

         [[ 3.6264e-02, -1.2892e-01,  7.2668e-02],
          [ 7.3690e-02,  7.3075e-02,  2.5854e-02],
          [ 1.1470e-01, -4.4740e-02, -2.0219e-03]],

         ...,

         [[ 2.0328e-02, -1.1119e-02, -5.4780e-02],
          [-2.9885e-02, -4.0424e-02,  7.5469e-02],
          [ 3.9178e-02,  5.5734e-02,  3.9121e-02]],

         [[-2.7859e-02, -3.8573e-02,  5.3439e-02],
          [-1.0290e-02, -4.3017e-02, -4.4424e-02],
          [ 4.7225e-02, -2.5183e-02, -2.2339e-02]],

         [[ 7.4309e-02,  7.4296e-02, -1.4161e-01],
          [ 2.7112e-02,  1.3420e-01, -4.6193e-02],
          [ 5.0019e-02, -4.5413e-05, -1.5837e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-0.1051,  0.0507,  0.0003],
          [ 0.0752, -0.0307, -0.0352],
          [ 0.0281, -0.0242,  0.0556]],

         [[-0.0746,  0.0441,  0.0208],
          [-0.0215, -0.1162, -0.0700],
          [ 0.0732,  0.0647, -0.0140]],

         [[-0.0638, -0.0083,  0.0867],
          [ 0.0666,  0.0005, -0.0647],
          [-0.0403, -0.0353,  0.0716]],

         ...,

         [[ 0.0560, -0.0140,  0.0811],
          [ 0.0553, -0.0016, -0.0308],
          [ 0.0954,  0.0094,  0.0662]],

         [[-0.0138, -0.0763, -0.0115],
          [-0.0339,  0.0270,  0.0404],
          [-0.1079, -0.1655,  0.0413]],

         [[-0.0150, -0.0104,  0.0927],
          [-0.1794, -0.0941, -0.0370],
          [ 0.0284,  0.1051, -0.0752]]],


        [[[-0.0535, -0.0853, -0.0602],
          [ 0.0626, -0.0282,  0.0890],
          [-0.0034,  0.0533,  0.0611]],

         [[-0.0144, -0.0667, -0.0198],
          [-0.0113,  0.0047, -0.0283],
          [ 0.0007,  0.0172,  0.1062]],

         [[ 0.0158,  0.0149, -0.0423],
          [-0.0417, -0.0595,  0.0185],
          [ 0.0828,  0.0498,  0.0470]],

         ...,

         [[-0.0182,  0.0425, -0.0320],
          [ 0.1090, -0.0243, -0.0396],
          [-0.0283, -0.0262, -0.0380]],

         [[ 0.0533,  0.0444,  0.1072],
          [-0.0077, -0.0091, -0.0121],
          [-0.0352,  0.0693, -0.0541]],

         [[ 0.0056,  0.0521, -0.0372],
          [-0.0085,  0.0040,  0.0446],
          [ 0.0426, -0.0185,  0.0512]]],


        [[[ 0.0154,  0.1229, -0.0368],
          [ 0.1008, -0.0718, -0.0477],
          [ 0.1184,  0.0085,  0.0231]],

         [[ 0.0377,  0.1454, -0.0489],
          [-0.0983,  0.1170,  0.0343],
          [ 0.0243, -0.0565,  0.0304]],

         [[ 0.0386,  0.0006, -0.0040],
          [-0.0384, -0.0587,  0.0050],
          [-0.0878,  0.0469,  0.0208]],

         ...,

         [[ 0.1153, -0.0158,  0.0128],
          [-0.0044, -0.0890,  0.0369],
          [-0.0798, -0.0249,  0.0039]],

         [[-0.0184,  0.0317, -0.0059],
          [-0.0019,  0.0515,  0.0343],
          [ 0.0630,  0.0621, -0.0420]],

         [[-0.0379, -0.0528, -0.1119],
          [-0.1197,  0.0921, -0.0107],
          [-0.0163, -0.0134,  0.0376]]],


        ...,


        [[[-0.0202, -0.0583, -0.0004],
          [-0.0046, -0.0365, -0.0788],
          [ 0.0049,  0.0347,  0.0383]],

         [[-0.0551, -0.0033, -0.0119],
          [ 0.0255, -0.0175, -0.0081],
          [ 0.0711,  0.0833, -0.0149]],

         [[ 0.0559,  0.0210,  0.0503],
          [ 0.0206,  0.0248,  0.0720],
          [ 0.0940,  0.0439,  0.0255]],

         ...,

         [[-0.0219, -0.0061,  0.0377],
          [ 0.0257, -0.0505,  0.0729],
          [-0.0017,  0.1102, -0.0052]],

         [[-0.0943, -0.0031,  0.0742],
          [ 0.0877,  0.0530,  0.0355],
          [ 0.0930,  0.0234, -0.0383]],

         [[-0.0066,  0.0387, -0.1253],
          [-0.0639, -0.0560,  0.0539],
          [-0.0381, -0.0116,  0.0516]]],


        [[[ 0.0128,  0.1310,  0.0319],
          [-0.0429, -0.0952, -0.0024],
          [ 0.0667, -0.1005,  0.0388]],

         [[ 0.0596, -0.0196, -0.0190],
          [-0.0755, -0.0142,  0.0315],
          [ 0.0392,  0.0495, -0.0816]],

         [[-0.0778,  0.0618,  0.0182],
          [-0.0131,  0.0055, -0.1105],
          [ 0.0146,  0.0127,  0.1149]],

         ...,

         [[ 0.0046, -0.0105,  0.0420],
          [-0.0961, -0.0610, -0.0280],
          [-0.0405, -0.0596,  0.0051]],

         [[-0.0562, -0.0414, -0.0512],
          [-0.1421, -0.0141, -0.0017],
          [-0.1084, -0.0565,  0.0505]],

         [[-0.0172, -0.0043,  0.0276],
          [ 0.0247, -0.0088, -0.0250],
          [ 0.0324,  0.0032,  0.0803]]],


        [[[-0.0165,  0.0331, -0.0501],
          [ 0.0465, -0.0465,  0.0657],
          [ 0.0181, -0.0624, -0.0398]],

         [[ 0.0818, -0.0089, -0.0302],
          [ 0.0756, -0.0096,  0.0863],
          [ 0.0236,  0.0114, -0.0413]],

         [[-0.0804, -0.0003, -0.0186],
          [ 0.0451,  0.0349,  0.0253],
          [-0.0667,  0.0064, -0.0425]],

         ...,

         [[ 0.0265, -0.0075,  0.0911],
          [-0.0095,  0.0142, -0.0440],
          [-0.0040, -0.0206,  0.0100]],

         [[-0.1555, -0.0431, -0.0493],
          [-0.0397, -0.0807,  0.0214],
          [-0.0627,  0.0194, -0.0863]],

         [[-0.0557, -0.0947,  0.0030],
          [ 0.0133, -0.0221, -0.0131],
          [ 0.0466,  0.0561,  0.0135]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[ 0.1114]],

         [[ 0.1073]],

         [[ 0.1201]],

         ...,

         [[-0.0736]],

         [[-0.0997]],

         [[ 0.0176]]],


        [[[-0.2154]],

         [[ 0.0222]],

         [[ 0.1326]],

         ...,

         [[ 0.0461]],

         [[ 0.0478]],

         [[ 0.0610]]],


        [[[ 0.1360]],

         [[-0.1059]],

         [[ 0.1176]],

         ...,

         [[ 0.0193]],

         [[ 0.0101]],

         [[-0.0174]]],


        ...,


        [[[ 0.0751]],

         [[ 0.1208]],

         [[-0.1391]],

         ...,

         [[-0.0694]],

         [[-0.0933]],

         [[-0.0861]]],


        [[[ 0.1143]],

         [[-0.0858]],

         [[ 0.0375]],

         ...,

         [[-0.1477]],

         [[ 0.0862]],

         [[-0.0356]]],


        [[[-0.1319]],

         [[-0.0099]],

         [[-0.0755]],

         ...,

         [[-0.0895]],

         [[ 0.0321]],

         [[ 0.0653]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-0.0300,  0.0042,  0.0468],
          [ 0.0257,  0.0076,  0.0366],
          [ 0.0163,  0.0174,  0.0099]],

         [[ 0.0867,  0.0786,  0.0752],
          [ 0.0303, -0.0293,  0.0194],
          [ 0.0267,  0.0347,  0.0352]],

         [[-0.0737,  0.0606, -0.0382],
          [-0.0132,  0.0568, -0.0707],
          [-0.0165,  0.0573, -0.0520]],

         ...,

         [[-0.0232, -0.0207, -0.0379],
          [-0.0205,  0.0237, -0.0329],
          [ 0.0199,  0.0028, -0.0102]],

         [[ 0.0062, -0.0580,  0.0359],
          [-0.0620, -0.0512, -0.0216],
          [-0.0400, -0.0570,  0.0386]],

         [[-0.1046,  0.0546, -0.0369],
          [ 0.0159,  0.0820,  0.0554],
          [ 0.0228, -0.0908, -0.0122]]],


        [[[ 0.0617,  0.0033, -0.0041],
          [-0.0686,  0.0270, -0.0319],
          [-0.0487, -0.0612, -0.0081]],

         [[ 0.0522,  0.0208, -0.0403],
          [-0.0196, -0.0823,  0.0128],
          [ 0.0131, -0.0450, -0.0347]],

         [[ 0.0221, -0.0770,  0.0105],
          [-0.0052, -0.0305,  0.0806],
          [-0.0015, -0.0717, -0.0321]],

         ...,

         [[-0.0791, -0.0824, -0.0524],
          [ 0.0230,  0.0120, -0.0133],
          [-0.0272,  0.0314, -0.0280]],

         [[ 0.0068, -0.0428,  0.0789],
          [ 0.0083,  0.0132,  0.0763],
          [ 0.0050, -0.0168, -0.0814]],

         [[ 0.0596, -0.0224,  0.0518],
          [-0.0071,  0.0264, -0.0997],
          [-0.0546, -0.0304,  0.0148]]],


        [[[ 0.0034,  0.0052, -0.0828],
          [ 0.0241, -0.1120,  0.0306],
          [-0.0405, -0.0005,  0.0438]],

         [[ 0.0668,  0.0535,  0.0233],
          [ 0.0041, -0.0431,  0.0349],
          [ 0.0522,  0.0294, -0.0269]],

         [[ 0.0174, -0.0072,  0.0064],
          [ 0.0006, -0.0628,  0.0446],
          [-0.0131, -0.0067,  0.0359]],

         ...,

         [[ 0.0633,  0.0632, -0.0366],
          [ 0.0078, -0.0339, -0.0773],
          [ 0.0227,  0.0288,  0.0039]],

         [[ 0.0254,  0.0155, -0.0894],
          [-0.0141,  0.0074,  0.0376],
          [-0.0450, -0.0733,  0.0282]],

         [[-0.0876, -0.0323, -0.0683],
          [-0.0239, -0.0004,  0.0619],
          [ 0.0272, -0.0041, -0.1249]]],


        ...,


        [[[-0.0597,  0.0133, -0.0458],
          [-0.0606,  0.0009,  0.0671],
          [-0.0098,  0.0154, -0.0410]],

         [[-0.0685, -0.0120,  0.0350],
          [ 0.0888, -0.1195,  0.0124],
          [-0.0207,  0.1017, -0.0565]],

         [[-0.0187,  0.1095, -0.0676],
          [-0.0213,  0.0554, -0.0008],
          [-0.0735, -0.0290, -0.0224]],

         ...,

         [[-0.0481, -0.0092, -0.0075],
          [-0.0252,  0.0237,  0.0192],
          [-0.0233, -0.0289, -0.0139]],

         [[-0.0318,  0.0498,  0.0506],
          [ 0.0821,  0.0357,  0.0462],
          [-0.0323, -0.0300, -0.0327]],

         [[-0.0279, -0.0560,  0.0733],
          [-0.0868, -0.0098, -0.0279],
          [ 0.0067, -0.0175,  0.0619]]],


        [[[-0.0351, -0.0340,  0.0232],
          [ 0.0276,  0.0069, -0.0594],
          [-0.0022,  0.0360, -0.0084]],

         [[ 0.0472,  0.0460,  0.0595],
          [-0.1509,  0.0199, -0.0394],
          [ 0.0203, -0.0025,  0.0501]],

         [[ 0.0189,  0.0035, -0.0323],
          [ 0.0286,  0.0159, -0.0340],
          [ 0.0046, -0.0025, -0.0241]],

         ...,

         [[-0.0143, -0.0172,  0.0458],
          [-0.0085,  0.0235,  0.0339],
          [-0.0228, -0.0061,  0.0316]],

         [[-0.0610, -0.0289, -0.0061],
          [-0.0167, -0.0342,  0.0221],
          [-0.0527,  0.0582,  0.0561]],

         [[-0.1006,  0.0010, -0.0006],
          [-0.0204,  0.1161, -0.0094],
          [-0.0123,  0.0087,  0.0288]]],


        [[[ 0.0207,  0.0485, -0.0442],
          [ 0.0195, -0.1093,  0.0646],
          [ 0.0081,  0.0031, -0.0377]],

         [[ 0.0554,  0.0606, -0.0194],
          [-0.0045, -0.0154, -0.0351],
          [-0.0112, -0.0705,  0.0585]],

         [[-0.0420, -0.0469,  0.0047],
          [-0.0673,  0.0685, -0.0011],
          [-0.0650, -0.0215,  0.0116]],

         ...,

         [[-0.0236,  0.0500, -0.0582],
          [ 0.0691,  0.0572,  0.0364],
          [ 0.0240, -0.0106,  0.0139]],

         [[-0.0750,  0.0312, -0.0574],
          [-0.0356, -0.0419, -0.0169],
          [-0.0760, -0.0093, -0.0680]],

         [[-0.0073, -0.0165, -0.0149],
          [-0.0357,  0.0344,  0.0393],
          [-0.0513, -0.0491,  0.0371]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 0.0103, -0.0272, -0.0475],
          [ 0.0226,  0.0887, -0.0926],
          [-0.0039, -0.0244, -0.0054]],

         [[ 0.0582,  0.0800,  0.0810],
          [ 0.0547, -0.0126, -0.0164],
          [-0.0755, -0.0288, -0.0269]],

         [[-0.0172,  0.0771,  0.0366],
          [ 0.0147, -0.0610, -0.0260],
          [-0.1122, -0.0322,  0.0605]],

         ...,

         [[ 0.0726,  0.0335, -0.0532],
          [ 0.0685,  0.0173,  0.1036],
          [-0.0497, -0.0734,  0.0235]],

         [[ 0.0398,  0.0597,  0.0706],
          [ 0.0894, -0.0197, -0.0156],
          [ 0.0806, -0.0190,  0.0534]],

         [[ 0.0219, -0.0719,  0.0569],
          [ 0.1343, -0.0027, -0.0015],
          [-0.0591,  0.0465, -0.0394]]],


        [[[ 0.0125,  0.0555,  0.0374],
          [-0.0929,  0.0301, -0.0415],
          [-0.1512,  0.0632, -0.0294]],

         [[ 0.0423,  0.0313, -0.0489],
          [-0.0763,  0.0337, -0.0087],
          [ 0.0098, -0.0164,  0.0611]],

         [[-0.1043, -0.0502, -0.0572],
          [-0.0215, -0.0541,  0.0402],
          [ 0.0240, -0.0262, -0.0121]],

         ...,

         [[-0.0809,  0.0437,  0.0353],
          [ 0.0957,  0.0489, -0.0080],
          [ 0.0153, -0.0246,  0.0427]],

         [[ 0.0613, -0.0558, -0.0414],
          [-0.1081, -0.0248, -0.0432],
          [-0.0507,  0.0365, -0.0196]],

         [[-0.0215,  0.0560, -0.0151],
          [-0.0084,  0.0723,  0.0597],
          [ 0.0419, -0.0176, -0.0240]]],


        [[[-0.0557,  0.0040,  0.0029],
          [ 0.0907, -0.1175, -0.0162],
          [-0.0249,  0.0377,  0.0198]],

         [[ 0.0363,  0.0003, -0.0184],
          [ 0.0401,  0.0120, -0.0174],
          [ 0.0081,  0.0102,  0.0365]],

         [[ 0.0141,  0.0458,  0.0425],
          [ 0.0627, -0.0388, -0.0780],
          [-0.0232, -0.0011,  0.0222]],

         ...,

         [[-0.0018, -0.0416,  0.0511],
          [-0.0093, -0.0417, -0.0278],
          [-0.0599,  0.0117,  0.0130]],

         [[ 0.0448,  0.0623,  0.0095],
          [-0.0529, -0.0252, -0.0066],
          [ 0.0382,  0.0829,  0.0821]],

         [[-0.0013, -0.0181, -0.0356],
          [ 0.0290,  0.0319, -0.0359],
          [-0.0196,  0.0607, -0.0125]]],


        ...,


        [[[-0.0421,  0.0095, -0.0115],
          [-0.0152,  0.0146,  0.0135],
          [ 0.0639, -0.0085,  0.0138]],

         [[ 0.0573, -0.0132, -0.0547],
          [ 0.0032,  0.0160, -0.0310],
          [-0.0465,  0.0285,  0.0042]],

         [[-0.0673,  0.0388, -0.0384],
          [ 0.0683, -0.0416, -0.0668],
          [ 0.0284,  0.0134,  0.0357]],

         ...,

         [[-0.0231, -0.0555,  0.0059],
          [-0.0523,  0.0016,  0.0011],
          [-0.0821, -0.0726,  0.0107]],

         [[ 0.0253, -0.0870,  0.0391],
          [ 0.0497,  0.0279,  0.0010],
          [-0.1320, -0.0402,  0.0271]],

         [[-0.0469, -0.0098, -0.0162],
          [-0.0339,  0.0247, -0.0352],
          [-0.0526, -0.0037, -0.0018]]],


        [[[-0.0946,  0.1104, -0.0052],
          [ 0.0091,  0.0119,  0.0601],
          [ 0.0034, -0.0299, -0.0098]],

         [[ 0.0502, -0.0723,  0.0093],
          [-0.0102, -0.0227, -0.0062],
          [ 0.0108, -0.0314,  0.0703]],

         [[-0.0201, -0.0411, -0.0288],
          [ 0.0050, -0.0613, -0.0718],
          [-0.0441,  0.0006, -0.0288]],

         ...,

         [[ 0.0859, -0.0447,  0.0568],
          [ 0.0402, -0.0572, -0.0275],
          [-0.0378,  0.0340,  0.0393]],

         [[ 0.0290,  0.1066,  0.0468],
          [ 0.0103, -0.0399, -0.0230],
          [ 0.0161,  0.0111,  0.0013]],

         [[ 0.0707,  0.0165,  0.0257],
          [-0.0343, -0.0441, -0.0154],
          [-0.0457,  0.0173, -0.0616]]],


        [[[-0.0544,  0.0346,  0.0489],
          [-0.0014, -0.0033,  0.0108],
          [-0.0132, -0.0458, -0.0292]],

         [[-0.0229,  0.0079,  0.0162],
          [ 0.0437,  0.0191,  0.0003],
          [-0.0932,  0.0464,  0.0489]],

         [[ 0.0219,  0.0364,  0.0195],
          [ 0.0210,  0.0403,  0.0443],
          [-0.0926, -0.0211,  0.0875]],

         ...,

         [[-0.0573,  0.0611,  0.0191],
          [ 0.0144, -0.0177,  0.0106],
          [ 0.0291, -0.0160, -0.0054]],

         [[-0.0626, -0.0478,  0.0124],
          [ 0.0042,  0.0365,  0.0279],
          [ 0.0209,  0.1077,  0.0492]],

         [[ 0.0530,  0.0598,  0.0157],
          [ 0.0377,  0.0368, -0.0843],
          [-0.1022, -0.0163,  0.0154]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0349]],

         [[-0.1098]],

         [[-0.1011]],

         ...,

         [[ 0.0101]],

         [[ 0.1608]],

         [[ 0.0293]]],


        [[[-0.0530]],

         [[-0.1933]],

         [[ 0.0448]],

         ...,

         [[ 0.1173]],

         [[-0.0616]],

         [[-0.0175]]],


        [[[-0.0166]],

         [[ 0.4236]],

         [[-0.0189]],

         ...,

         [[-0.1419]],

         [[-0.1826]],

         [[ 0.0978]]],


        ...,


        [[[ 0.0347]],

         [[-0.1186]],

         [[ 0.0645]],

         ...,

         [[-0.1822]],

         [[-0.3036]],

         [[ 0.1188]]],


        [[[ 0.1797]],

         [[ 0.0813]],

         [[ 0.1606]],

         ...,

         [[ 0.0107]],

         [[ 0.0734]],

         [[ 0.0719]]],


        [[[-0.1446]],

         [[-0.0536]],

         [[ 0.0656]],

         ...,

         [[ 0.2476]],

         [[ 0.1042]],

         [[-0.0631]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 8.0836e-03, -1.8959e-02,  4.0206e-05],
          [-3.1110e-02, -4.2769e-02,  2.4377e-02],
          [ 1.6078e-02, -1.8412e-02, -5.2484e-03]],

         [[ 7.1562e-02, -8.4100e-03, -6.9090e-02],
          [-1.5397e-02,  2.9388e-03,  5.3736e-02],
          [-6.8506e-03, -4.9661e-02, -3.7939e-02]],

         [[-1.8117e-02,  2.0688e-03,  1.3876e-02],
          [ 2.0126e-02, -4.8074e-02, -1.0293e-01],
          [-1.0372e-02,  2.9703e-02, -2.2414e-03]],

         ...,

         [[ 8.3667e-03,  6.5814e-02,  2.4358e-02],
          [ 1.0439e-03,  2.2883e-02,  3.9607e-02],
          [ 4.6794e-02, -4.3391e-02,  2.0462e-02]],

         [[-3.7335e-02, -2.3624e-02, -3.0770e-02],
          [ 3.2650e-02, -7.1097e-04,  9.4159e-03],
          [-6.3613e-02,  1.0562e-02, -2.3711e-02]],

         [[-2.2687e-02,  7.1857e-02,  3.1668e-02],
          [-1.3227e-02,  8.9053e-02,  6.2930e-02],
          [ 1.2242e-01,  1.1066e-01,  3.4752e-03]]],


        [[[-6.2157e-02,  5.0559e-02, -2.3767e-02],
          [-1.3424e-02, -1.5443e-02, -6.5779e-04],
          [ 7.5810e-02,  6.1855e-02, -5.6768e-02]],

         [[-3.3480e-02, -4.3389e-02,  6.0070e-02],
          [ 7.9679e-02, -5.8742e-02,  2.2891e-02],
          [-1.6978e-02, -6.0394e-02, -1.5181e-02]],

         [[ 4.0038e-02,  2.6884e-03, -9.9991e-03],
          [ 5.2837e-02,  4.9863e-05, -4.7990e-02],
          [-8.7893e-02, -1.9189e-02,  2.9017e-02]],

         ...,

         [[ 7.1494e-03,  2.4124e-03, -9.2975e-02],
          [ 1.2244e-02, -9.3578e-03,  5.7244e-02],
          [-3.2184e-02, -4.9305e-02, -5.6852e-02]],

         [[-4.6440e-02,  2.9380e-02, -3.3593e-02],
          [-4.4686e-02, -6.2492e-02, -3.5799e-02],
          [-2.7637e-02, -1.6592e-02, -1.7574e-02]],

         [[-7.2184e-02,  6.4624e-02, -8.4461e-02],
          [ 8.0654e-02,  2.0168e-02, -1.0358e-01],
          [-8.1307e-03,  4.7023e-02,  2.4819e-02]]],


        [[[-3.9488e-02, -1.5668e-02, -9.1490e-03],
          [-1.7085e-02, -7.9208e-02,  2.5926e-02],
          [ 2.6442e-02,  1.3628e-02, -1.2938e-01]],

         [[ 1.7038e-02, -1.4921e-02,  7.9004e-02],
          [-4.8856e-02,  1.9630e-02, -3.7369e-02],
          [ 3.1902e-02,  7.9903e-03, -3.8237e-02]],

         [[ 6.9535e-02,  5.1448e-02,  6.8080e-02],
          [-3.5879e-02,  1.8259e-02, -5.1563e-02],
          [-4.2659e-02,  3.3585e-02,  2.9739e-02]],

         ...,

         [[-7.8829e-02,  3.0950e-02, -4.6305e-02],
          [ 1.4666e-02,  2.2279e-02,  8.2431e-02],
          [-4.2687e-03,  6.7941e-03,  3.8245e-02]],

         [[ 5.8570e-03, -3.0858e-02, -3.0146e-03],
          [ 2.6890e-02,  2.0494e-02,  1.6392e-03],
          [ 4.5331e-02, -2.6426e-02,  2.4190e-02]],

         [[ 2.3861e-02,  2.0314e-02,  5.9435e-02],
          [-3.9257e-02, -5.0559e-03, -1.4541e-02],
          [-2.0182e-02,  7.7200e-02, -1.0107e-01]]],


        ...,


        [[[-5.5222e-02, -2.8543e-02, -7.4863e-03],
          [ 3.9599e-02, -5.5775e-02, -8.0455e-02],
          [ 5.2804e-02, -3.0652e-02, -3.4393e-02]],

         [[ 6.8832e-02,  5.5733e-02, -1.3236e-02],
          [-2.1641e-02, -4.7958e-02,  1.1470e-02],
          [ 2.4055e-02, -4.6708e-04,  5.0013e-03]],

         [[-6.2540e-02, -8.3733e-02, -5.4329e-02],
          [ 5.1021e-02,  2.5092e-02, -3.9888e-02],
          [ 1.9516e-02,  2.2378e-02,  1.4511e-02]],

         ...,

         [[ 4.6063e-03, -4.0816e-02,  7.5734e-02],
          [ 8.6020e-02,  5.8597e-02, -7.0512e-03],
          [ 4.0261e-02,  3.2118e-02, -2.8812e-02]],

         [[ 3.4440e-02,  2.9262e-02, -1.2328e-01],
          [-1.5002e-02,  2.3969e-04, -1.5746e-03],
          [-4.5245e-02,  2.4716e-02, -3.5953e-03]],

         [[ 6.6470e-02, -7.3817e-02, -5.4493e-02],
          [ 2.9372e-02,  9.7696e-02,  1.0818e-02],
          [-3.1173e-02, -2.4913e-02, -5.0538e-02]]],


        [[[-1.1710e-02, -5.1775e-03,  3.6142e-02],
          [-1.8811e-02,  7.5866e-02, -4.5220e-04],
          [ 1.5608e-02, -8.5710e-02,  1.8176e-02]],

         [[ 3.6334e-02, -3.9042e-02,  2.0692e-02],
          [-2.7083e-03, -1.3113e-01, -2.3661e-02],
          [ 6.6327e-02,  7.7054e-03,  2.3965e-02]],

         [[-3.5899e-02,  6.6736e-03,  4.1436e-03],
          [-2.6161e-02, -4.9878e-03, -6.4186e-04],
          [ 2.7944e-02,  2.8340e-03, -7.0292e-02]],

         ...,

         [[-4.3447e-03, -5.8717e-02, -1.5660e-02],
          [ 7.4961e-02,  3.2934e-02, -3.4563e-02],
          [-1.8780e-02, -1.6626e-02, -7.0568e-02]],

         [[-4.0256e-03, -6.1591e-03,  8.6283e-02],
          [-1.1038e-02,  1.8024e-02, -3.8641e-02],
          [-6.7348e-02, -3.0969e-02,  4.0333e-02]],

         [[-7.8729e-02,  1.0555e-01, -4.3343e-02],
          [-1.3993e-02,  2.2461e-02,  4.0465e-02],
          [-9.6454e-03,  1.0600e-02,  1.7871e-02]]],


        [[[ 5.1675e-03,  9.7934e-02, -3.6698e-02],
          [-6.0951e-02,  1.3871e-02,  5.8886e-02],
          [ 8.2704e-02,  3.4503e-02,  3.9428e-02]],

         [[ 9.7015e-02,  4.3062e-02,  2.9770e-02],
          [-4.4956e-02,  7.0302e-04,  9.4028e-03],
          [ 1.8258e-02,  9.4729e-02, -7.6810e-03]],

         [[ 8.1664e-02,  4.3460e-02,  2.2256e-02],
          [ 5.2682e-02,  1.0328e-02,  1.7870e-02],
          [ 1.3761e-02, -4.5734e-02, -9.0223e-03]],

         ...,

         [[ 4.9956e-03,  5.9573e-02,  6.1217e-02],
          [ 2.2379e-02,  7.0102e-03,  1.4268e-03],
          [-6.1054e-02,  3.9059e-02, -6.6828e-02]],

         [[ 8.0664e-02,  1.0594e-02,  7.0196e-02],
          [ 6.7721e-02,  1.0217e-02,  4.4231e-02],
          [ 4.1610e-03,  1.0458e-01, -2.2005e-02]],

         [[-7.1859e-02, -5.2093e-02,  7.9942e-03],
          [ 4.1851e-02,  9.1529e-02, -2.2883e-03],
          [ 7.9798e-02,  3.4175e-02,  6.4684e-02]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0686,  0.0394,  0.0150],
          [ 0.0244, -0.0345, -0.0676],
          [ 0.0836,  0.0254, -0.0666]],

         [[ 0.0484, -0.0005,  0.0803],
          [ 0.0674, -0.0112, -0.0179],
          [-0.0874, -0.0398, -0.0160]],

         [[ 0.0201, -0.0222, -0.0079],
          [ 0.0042,  0.0201, -0.0384],
          [-0.0274,  0.0602, -0.0222]],

         ...,

         [[-0.0038, -0.0623, -0.0102],
          [ 0.0326, -0.0357, -0.0234],
          [ 0.0090,  0.0014,  0.0229]],

         [[ 0.0276, -0.0914, -0.0728],
          [ 0.0372, -0.0591, -0.0174],
          [-0.0503,  0.0486, -0.0420]],

         [[ 0.0080,  0.0588,  0.0133],
          [ 0.0106, -0.0679,  0.0020],
          [-0.0232, -0.0038, -0.0051]]],


        [[[-0.0601,  0.0098, -0.0230],
          [ 0.0066, -0.0482,  0.0216],
          [-0.1079, -0.0806,  0.0206]],

         [[ 0.0176,  0.0231, -0.0182],
          [ 0.0210,  0.0621, -0.0507],
          [-0.0074, -0.0559,  0.0106]],

         [[ 0.0295,  0.0625, -0.0428],
          [ 0.0696,  0.0198, -0.0904],
          [-0.0693,  0.0479, -0.0890]],

         ...,

         [[ 0.0003, -0.0620,  0.0267],
          [ 0.0651,  0.0511, -0.0502],
          [ 0.0125,  0.0158, -0.0119]],

         [[-0.0601,  0.0256,  0.0312],
          [ 0.0912, -0.0331,  0.0199],
          [ 0.0619, -0.0830, -0.0130]],

         [[-0.0232, -0.0091, -0.0436],
          [-0.0504, -0.0443,  0.0108],
          [-0.0028,  0.0475,  0.0373]]],


        [[[ 0.0841, -0.0104, -0.0085],
          [-0.0264,  0.0982, -0.0184],
          [-0.0104, -0.0037, -0.0363]],

         [[ 0.0325,  0.0362,  0.0431],
          [ 0.0162, -0.0198,  0.0339],
          [ 0.0222,  0.0354, -0.0449]],

         [[ 0.0833, -0.0178, -0.0095],
          [ 0.0351, -0.0610, -0.0572],
          [ 0.0889, -0.0179, -0.0453]],

         ...,

         [[-0.0950, -0.0363,  0.0381],
          [-0.0311,  0.0168, -0.0455],
          [ 0.0476,  0.0406,  0.0190]],

         [[ 0.0350, -0.0059, -0.0235],
          [ 0.0180,  0.1063, -0.0115],
          [-0.0418,  0.0362,  0.0564]],

         [[ 0.0404,  0.0676,  0.0097],
          [ 0.0091,  0.0802,  0.0325],
          [-0.0376,  0.0547, -0.0586]]],


        ...,


        [[[-0.0029,  0.0239,  0.0552],
          [-0.0695, -0.0305,  0.0183],
          [-0.0186, -0.0375,  0.0161]],

         [[-0.0730, -0.0640,  0.0252],
          [ 0.0668,  0.0352,  0.0637],
          [-0.0126,  0.0262,  0.0067]],

         [[-0.0497, -0.0155, -0.0567],
          [-0.0232, -0.0442, -0.0156],
          [-0.0676,  0.0214, -0.0196]],

         ...,

         [[-0.0606,  0.0424, -0.0844],
          [ 0.0021,  0.0705,  0.0220],
          [ 0.0193, -0.0928, -0.0119]],

         [[-0.0270, -0.0880,  0.0790],
          [-0.0966, -0.0436,  0.0265],
          [ 0.0110, -0.0265,  0.0310]],

         [[-0.0054,  0.0330,  0.1201],
          [-0.0401,  0.0079,  0.0008],
          [-0.0847,  0.0137,  0.0275]]],


        [[[-0.0543, -0.0685, -0.0782],
          [ 0.0832, -0.0388, -0.0335],
          [-0.0544,  0.0379,  0.0080]],

         [[-0.0453, -0.0553, -0.0758],
          [ 0.0820,  0.0185,  0.0767],
          [-0.0552,  0.0211,  0.0336]],

         [[ 0.0104, -0.0006,  0.0205],
          [ 0.0790,  0.0325,  0.0431],
          [ 0.0210,  0.0397, -0.0139]],

         ...,

         [[-0.0201, -0.0240,  0.0252],
          [ 0.0100,  0.0434, -0.0700],
          [-0.0324, -0.0376, -0.0922]],

         [[-0.0429, -0.0126,  0.0245],
          [ 0.0277, -0.0190,  0.0089],
          [ 0.0069, -0.0567, -0.0641]],

         [[-0.0709,  0.0297, -0.0213],
          [-0.1079, -0.1129,  0.0251],
          [ 0.0167,  0.0332, -0.0022]]],


        [[[ 0.0046,  0.0283,  0.0226],
          [-0.1627,  0.0351,  0.0387],
          [-0.0381,  0.0020,  0.0754]],

         [[ 0.1058,  0.0662, -0.0247],
          [-0.0550, -0.0348,  0.0618],
          [-0.0312,  0.0198,  0.0427]],

         [[-0.0016, -0.0045,  0.0102],
          [-0.0025, -0.0847, -0.0191],
          [ 0.0468,  0.0102,  0.0335]],

         ...,

         [[ 0.0200,  0.1060, -0.0297],
          [-0.0709,  0.0024, -0.0833],
          [-0.0206, -0.0787, -0.0262]],

         [[ 0.0175,  0.0335,  0.0743],
          [-0.0035, -0.0360, -0.0252],
          [-0.0270,  0.0018, -0.0169]],

         [[ 0.0185,  0.0562,  0.0352],
          [ 0.0346, -0.0246,  0.0115],
          [ 0.0519, -0.0515, -0.0218]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-2.3503e-02, -1.9026e-02,  2.3931e-02],
          [-1.3753e-02, -3.1320e-03,  1.3775e-03],
          [ 1.3539e-04, -6.4917e-03,  2.5138e-02]],

         [[ 2.2054e-02, -3.7643e-02, -2.9148e-02],
          [ 9.2637e-02,  3.9452e-02, -6.5093e-02],
          [-3.9433e-02,  3.8137e-02,  1.7222e-02]],

         [[ 3.3818e-03, -1.2521e-02, -1.5014e-02],
          [ 3.0768e-02,  3.8706e-02,  8.1080e-02],
          [ 8.0183e-02, -2.4358e-02, -3.0440e-02]],

         ...,

         [[ 3.1025e-02,  5.5504e-02, -1.8785e-02],
          [-1.1095e-01, -1.6339e-03,  1.5981e-02],
          [-9.3494e-03,  4.8239e-04, -3.6284e-02]],

         [[ 4.8698e-02, -1.8712e-02,  1.4051e-02],
          [-9.9092e-03, -1.5772e-02, -4.5383e-02],
          [ 3.6722e-02, -3.1329e-02, -5.4255e-02]],

         [[ 3.6879e-02, -1.6610e-02, -2.3216e-02],
          [ 4.6704e-02,  3.9212e-02, -3.4181e-02],
          [ 6.2115e-02,  2.2830e-02,  7.8768e-02]]],


        [[[-1.1960e-02, -1.3304e-03, -7.2820e-02],
          [-5.8678e-02,  1.0489e-01,  4.2185e-02],
          [-4.2639e-04, -2.2561e-02,  1.8247e-02]],

         [[ 4.2546e-02,  1.9811e-02,  5.5294e-02],
          [ 3.0577e-02, -1.9854e-02, -1.2515e-02],
          [-7.4259e-02,  6.6574e-03,  2.4414e-02]],

         [[ 4.8540e-03,  4.2708e-02,  2.5434e-02],
          [ 8.4007e-03, -3.5141e-02,  1.0067e-01],
          [ 4.8191e-02, -8.8105e-02, -5.2515e-02]],

         ...,

         [[ 1.2902e-03,  4.3736e-03,  3.7697e-02],
          [ 2.5915e-02,  8.9326e-02, -3.0066e-02],
          [ 2.9711e-02, -2.4414e-02, -4.0884e-02]],

         [[-2.5677e-02,  6.0172e-02, -3.6088e-02],
          [-6.5953e-02,  3.6236e-02,  4.1624e-02],
          [ 2.9536e-02, -6.3685e-02,  4.4500e-02]],

         [[-1.0581e-02,  7.6212e-02, -7.1971e-02],
          [-4.8696e-02,  3.2715e-02, -2.5377e-02],
          [-6.9479e-02,  3.7881e-02,  6.4655e-02]]],


        [[[-4.9830e-02,  3.6285e-04,  3.8525e-02],
          [ 7.6062e-03,  4.6375e-02,  1.9364e-02],
          [ 4.8156e-03,  2.3274e-03,  3.3642e-02]],

         [[-1.2401e-02, -5.8219e-02, -6.3071e-03],
          [-4.6236e-02,  1.5881e-02, -1.1370e-02],
          [ 4.8322e-03,  2.8433e-02,  1.4819e-02]],

         [[-5.6721e-02, -5.6782e-02,  9.5955e-04],
          [-7.8242e-02,  4.1864e-02,  6.5091e-02],
          [-6.7246e-02,  8.9937e-03, -3.6026e-02]],

         ...,

         [[ 2.6934e-02, -9.9558e-03,  3.7938e-02],
          [ 3.0370e-02, -4.4776e-03, -3.9041e-02],
          [-3.4425e-03,  6.4326e-02,  1.0201e-01]],

         [[ 6.3777e-02,  1.5467e-03,  4.5837e-02],
          [ 9.0340e-02,  2.1421e-02,  4.3786e-03],
          [-4.7711e-02,  1.0367e-03,  6.0259e-02]],

         [[-1.0490e-02, -2.9456e-02, -3.8615e-02],
          [ 3.4402e-02,  4.8297e-02,  4.1795e-02],
          [ 6.7759e-02, -7.2772e-02, -6.9780e-02]]],


        ...,


        [[[ 3.4102e-02,  2.0550e-02, -5.5890e-02],
          [ 5.3907e-02,  6.3597e-02,  9.2305e-03],
          [ 4.5020e-03,  1.5214e-02,  4.1596e-02]],

         [[-2.0108e-02,  4.1889e-02,  9.1705e-03],
          [-3.6062e-02, -7.5511e-02, -2.5697e-02],
          [ 2.2760e-02,  7.9290e-02, -1.2959e-02]],

         [[-4.0644e-02,  5.1432e-02,  8.0258e-03],
          [ 6.6321e-02, -4.1807e-02,  1.5946e-02],
          [-3.3637e-02, -3.9953e-02, -2.3306e-02]],

         ...,

         [[-2.7264e-02, -2.9525e-02,  6.3748e-02],
          [-7.9670e-02, -5.5778e-02,  5.6451e-02],
          [ 8.1829e-02,  4.9229e-02, -9.1840e-03]],

         [[-2.5960e-02, -2.5766e-02,  3.6620e-02],
          [ 1.5762e-02, -8.4781e-02, -2.7177e-02],
          [ 2.1191e-03, -4.3849e-02,  3.2846e-02]],

         [[ 3.1357e-04, -1.8847e-03,  1.5520e-02],
          [ 1.2596e-02, -6.9152e-03,  3.7681e-02],
          [ 4.8098e-03,  3.5927e-02, -3.1068e-02]]],


        [[[ 6.3562e-02,  4.5118e-02, -1.2409e-02],
          [-2.6587e-02,  5.4612e-03, -2.1636e-02],
          [ 6.8020e-03,  2.9445e-02, -4.7213e-02]],

         [[ 8.6566e-02,  2.6815e-02,  7.8504e-02],
          [ 2.7031e-02,  2.4885e-02, -7.4136e-02],
          [-1.5391e-02, -5.0134e-03, -2.9269e-02]],

         [[ 8.9792e-02,  4.6465e-02, -3.1330e-02],
          [-1.1474e-02, -3.2383e-02, -1.2463e-02],
          [-1.1422e-02, -3.6662e-02, -1.0308e-01]],

         ...,

         [[ 2.0474e-03,  4.8575e-02,  8.7291e-02],
          [-2.2702e-03, -1.6571e-02, -6.3134e-02],
          [ 5.2296e-02, -1.5979e-02,  4.5526e-02]],

         [[-4.9758e-02,  2.5795e-02, -2.6321e-02],
          [-2.4884e-02, -5.2401e-03,  4.6888e-02],
          [-5.4528e-02,  4.3519e-02,  1.0297e-02]],

         [[-3.0956e-03,  2.5106e-02, -6.2839e-03],
          [ 3.3336e-02,  9.4716e-03,  1.8655e-03],
          [ 1.2078e-01, -6.0150e-02,  2.1142e-02]]],


        [[[-3.6082e-02, -4.5693e-02,  2.0555e-03],
          [ 5.6805e-02,  9.6528e-03,  1.7119e-03],
          [ 1.2242e-02,  5.8985e-03,  7.7048e-03]],

         [[-2.0799e-02, -2.8155e-02, -1.1398e-03],
          [ 7.2432e-02,  1.7710e-01,  5.4735e-04],
          [-2.8689e-02,  1.3955e-02, -5.8830e-02]],

         [[ 4.5910e-02, -5.2680e-02, -8.0352e-02],
          [ 8.5188e-02,  4.7561e-04,  2.3923e-02],
          [ 1.0805e-01,  1.8198e-02,  4.9365e-02]],

         ...,

         [[ 3.9840e-02,  2.1315e-02, -3.6907e-02],
          [-5.2157e-02,  3.4319e-02, -5.9070e-03],
          [-1.9870e-03,  1.0077e-01, -5.0089e-02]],

         [[-6.0026e-02, -8.1020e-02, -8.6442e-03],
          [-8.5248e-03, -6.4401e-02, -5.0715e-02],
          [ 3.1150e-03, -2.4076e-02,  3.9179e-02]],

         [[-1.0705e-02,  1.0408e-03,  7.0845e-02],
          [ 1.7338e-02,  2.2730e-02, -6.2022e-03],
          [ 2.7930e-02,  7.4510e-02,  1.3741e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-0.0128,  0.0463,  0.0850],
          [-0.0985,  0.0866, -0.0467],
          [-0.0278,  0.0120,  0.0428]],

         [[ 0.0107, -0.0637,  0.0439],
          [ 0.0263, -0.0119,  0.0240],
          [ 0.0148, -0.0227, -0.0360]],

         [[-0.0143, -0.0947,  0.0059],
          [-0.0220,  0.0879,  0.0196],
          [-0.0518, -0.0022,  0.0012]],

         ...,

         [[-0.0801,  0.0501,  0.0185],
          [-0.0041, -0.0492, -0.0202],
          [-0.0295, -0.0411, -0.0255]],

         [[-0.0307, -0.0455, -0.0397],
          [ 0.1224, -0.0017,  0.0561],
          [ 0.0068,  0.0239,  0.0557]],

         [[-0.0379,  0.0727, -0.0566],
          [ 0.0213,  0.0096,  0.0874],
          [-0.0597, -0.0205, -0.0113]]],


        [[[ 0.0281, -0.0083,  0.0145],
          [-0.0209,  0.0097,  0.0531],
          [ 0.0503,  0.0224,  0.0619]],

         [[-0.0254,  0.0426, -0.0195],
          [ 0.0237, -0.0223,  0.0316],
          [ 0.0040, -0.0313, -0.0020]],

         [[ 0.0173, -0.0218,  0.0298],
          [ 0.0371,  0.0849,  0.0343],
          [ 0.0293,  0.0082, -0.0015]],

         ...,

         [[ 0.0479, -0.0796, -0.0228],
          [ 0.0667,  0.0232, -0.0054],
          [ 0.0460, -0.0162,  0.0383]],

         [[ 0.0327,  0.0070,  0.1141],
          [-0.0082,  0.0169,  0.0506],
          [ 0.0387,  0.0695, -0.0340]],

         [[-0.0351, -0.0107,  0.0168],
          [ 0.0908, -0.0577, -0.0187],
          [ 0.0186,  0.0006,  0.0104]]],


        [[[ 0.0350, -0.0584, -0.0831],
          [ 0.0230,  0.0141, -0.0044],
          [ 0.0506, -0.0132, -0.0569]],

         [[-0.0412, -0.0085,  0.0678],
          [ 0.0328, -0.0228,  0.1282],
          [-0.0509,  0.0412, -0.0279]],

         [[ 0.0372,  0.0731, -0.0053],
          [ 0.0638, -0.0612, -0.0592],
          [-0.0093, -0.0744,  0.0394]],

         ...,

         [[-0.0226,  0.0043, -0.0179],
          [-0.0075, -0.0506, -0.0002],
          [ 0.0254,  0.0102, -0.0410]],

         [[ 0.0154,  0.0123, -0.0366],
          [ 0.0504,  0.0265,  0.0105],
          [-0.0232,  0.0050, -0.0033]],

         [[-0.0520, -0.0204,  0.0856],
          [ 0.0022, -0.0014,  0.0083],
          [ 0.0002,  0.0244, -0.0178]]],


        ...,


        [[[ 0.0163,  0.0252,  0.0348],
          [-0.0140, -0.0388,  0.0094],
          [-0.0228,  0.0188, -0.0136]],

         [[ 0.0088,  0.0688,  0.0475],
          [-0.0457, -0.0993, -0.0551],
          [-0.0425,  0.0276,  0.0764]],

         [[ 0.0481, -0.0674,  0.0148],
          [-0.0293, -0.0065,  0.0276],
          [-0.0623,  0.0225, -0.0446]],

         ...,

         [[-0.0166, -0.0233,  0.0459],
          [ 0.0350,  0.0616,  0.0112],
          [-0.0111, -0.1068, -0.0613]],

         [[ 0.0371,  0.0186, -0.0024],
          [ 0.0370,  0.0003,  0.0473],
          [ 0.0015, -0.0473,  0.0550]],

         [[ 0.0292, -0.0150, -0.0645],
          [ 0.0491,  0.0047,  0.0504],
          [ 0.0192, -0.0049,  0.0104]]],


        [[[ 0.0119,  0.0260,  0.0229],
          [-0.0154, -0.0066, -0.0356],
          [ 0.0120,  0.0569, -0.0115]],

         [[-0.1057,  0.0404,  0.1257],
          [-0.0008,  0.0334,  0.0248],
          [-0.0011, -0.0262,  0.0121]],

         [[-0.0484, -0.0270,  0.0072],
          [ 0.0155,  0.0249, -0.0003],
          [-0.0127,  0.0561,  0.0613]],

         ...,

         [[-0.0607,  0.0333, -0.0626],
          [-0.0309, -0.0317, -0.0692],
          [-0.0334, -0.0572, -0.0353]],

         [[ 0.0470,  0.0502,  0.0721],
          [ 0.0814, -0.0021, -0.0278],
          [ 0.0024, -0.0164, -0.0153]],

         [[ 0.0005, -0.0240, -0.0487],
          [-0.0610,  0.0231, -0.0446],
          [-0.0169, -0.0355,  0.0035]]],


        [[[ 0.0360,  0.0466, -0.0078],
          [-0.0295,  0.0308,  0.0275],
          [ 0.0181, -0.0898, -0.0449]],

         [[ 0.0253,  0.0031,  0.0032],
          [ 0.0112,  0.0350, -0.0210],
          [-0.0706, -0.0307,  0.0219]],

         [[-0.0389,  0.0495, -0.0427],
          [ 0.0002,  0.0752,  0.0580],
          [ 0.0827, -0.0618, -0.0338]],

         ...,

         [[-0.0728,  0.0569,  0.0224],
          [ 0.0666,  0.0195, -0.0819],
          [-0.0379, -0.0130, -0.0161]],

         [[ 0.0216,  0.0725, -0.0493],
          [-0.0483,  0.0298, -0.0003],
          [-0.0043, -0.0371,  0.0999]],

         [[ 0.0122, -0.0084,  0.0678],
          [ 0.0452,  0.0467, -0.0206],
          [-0.0038, -0.0095,  0.0246]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-2.0435e-01]],

         [[-8.6408e-04]],

         [[-4.4087e-02]],

         ...,

         [[ 2.5623e-01]],

         [[-9.4485e-02]],

         [[-2.1080e-02]]],


        [[[-1.4363e-01]],

         [[-1.4536e-01]],

         [[ 3.6388e-02]],

         ...,

         [[ 2.4761e-01]],

         [[-1.5983e-01]],

         [[ 3.1749e-02]]],


        [[[ 7.2644e-03]],

         [[-1.5944e-01]],

         [[ 3.1497e-01]],

         ...,

         [[-2.2282e-03]],

         [[ 7.8035e-02]],

         [[ 2.3989e-02]]],


        ...,


        [[[-6.0984e-02]],

         [[ 1.0035e-02]],

         [[ 1.5115e-01]],

         ...,

         [[-2.5403e-01]],

         [[ 1.4760e-04]],

         [[ 7.5979e-02]]],


        [[[-8.7193e-02]],

         [[ 6.9009e-02]],

         [[ 3.1928e-02]],

         ...,

         [[-8.3643e-03]],

         [[-4.0379e-02]],

         [[ 1.1644e-01]]],


        [[[-1.5100e-01]],

         [[ 1.8382e-01]],

         [[-1.7060e-02]],

         ...,

         [[-8.9335e-02]],

         [[-7.2670e-02]],

         [[ 1.1341e-01]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 2.1478e-04, -1.1899e-02,  8.9227e-02],
          [-1.6681e-02,  7.7963e-03, -1.6673e-02],
          [-2.7252e-02, -2.3156e-02,  5.0510e-02]],

         [[ 6.2552e-02,  1.2742e-02,  7.4536e-02],
          [ 1.3533e-02, -7.9007e-02,  1.1888e-02],
          [ 6.6962e-02, -4.2661e-03, -1.6948e-02]],

         [[-5.8032e-02,  2.0676e-02,  2.8999e-02],
          [-1.1657e-02, -2.4319e-02, -6.1591e-04],
          [-5.0433e-02, -1.9611e-02, -6.6568e-03]],

         ...,

         [[-4.4713e-02, -1.5462e-03,  3.8174e-02],
          [ 1.4884e-02,  1.8471e-02,  3.6813e-02],
          [-2.4575e-02, -3.4590e-02,  2.8349e-02]],

         [[ 5.1560e-03, -1.2608e-03,  2.5638e-02],
          [-7.9575e-03, -1.4853e-02, -6.3589e-02],
          [ 1.5643e-02, -6.4441e-02,  2.7361e-02]],

         [[ 1.9381e-02,  8.9312e-02,  2.5584e-03],
          [ 4.7559e-02,  1.5021e-02,  7.2741e-02],
          [ 1.7352e-03, -3.1790e-02,  7.0927e-02]]],


        [[[ 4.9001e-03,  2.9872e-03, -7.0371e-02],
          [-1.5361e-02,  6.3401e-03, -1.8641e-02],
          [ 2.0742e-02,  2.2519e-02, -4.5227e-04]],

         [[-9.4680e-03, -3.6837e-02, -5.0051e-02],
          [-5.4857e-02,  2.7305e-02, -4.0700e-02],
          [ 6.2858e-02,  4.9839e-02, -1.9464e-02]],

         [[-6.1287e-02,  4.0206e-02,  3.0205e-02],
          [-3.9600e-02, -7.0306e-02,  4.7059e-02],
          [-2.0960e-02,  3.8069e-03,  4.6226e-02]],

         ...,

         [[-3.2380e-02,  1.6447e-03, -9.4566e-05],
          [-9.0772e-02,  5.2016e-02, -4.7231e-02],
          [-2.8101e-02, -9.7879e-02,  1.5527e-02]],

         [[ 1.8745e-02, -6.1802e-02, -3.0969e-02],
          [ 1.2853e-02, -1.1229e-02,  3.2194e-02],
          [-1.0421e-01,  1.9977e-02,  3.7346e-02]],

         [[ 1.0567e-02, -6.3686e-02, -7.1811e-03],
          [ 2.1994e-02, -2.3734e-02,  6.2438e-02],
          [ 4.3752e-02,  8.7711e-03, -7.0356e-02]]],


        [[[ 8.6692e-03, -1.4251e-02, -2.4913e-02],
          [-4.5872e-02,  1.7939e-02, -3.3237e-02],
          [-9.2131e-03, -7.9505e-02,  6.5524e-03]],

         [[ 6.3372e-03, -1.9231e-03, -2.1494e-02],
          [-5.2454e-02,  1.5601e-03, -4.4203e-02],
          [-2.0228e-02,  1.5255e-02, -2.6610e-02]],

         [[-4.4507e-02, -4.1648e-03, -3.6547e-02],
          [ 7.5019e-03, -5.0016e-02,  8.5472e-03],
          [-8.4496e-02, -4.4071e-03, -7.9786e-02]],

         ...,

         [[-3.4833e-03,  1.4984e-02, -3.2432e-02],
          [-2.8580e-02,  4.5600e-02, -1.6896e-02],
          [ 1.8077e-02, -7.4961e-02, -4.8121e-02]],

         [[-2.0479e-04,  1.7259e-02,  5.4693e-02],
          [-1.5718e-03,  5.1201e-02, -3.2481e-02],
          [ 2.0844e-02,  5.3596e-02,  6.9952e-02]],

         [[-5.9818e-02,  5.6864e-02,  8.7760e-02],
          [-4.1563e-02, -8.4158e-05, -8.8878e-02],
          [-6.3881e-02, -2.5361e-02,  5.8415e-02]]],


        ...,


        [[[-2.2625e-02, -1.1998e-02,  7.4583e-02],
          [ 2.0014e-02, -1.5966e-02, -9.6039e-03],
          [ 4.5378e-03, -7.9441e-02, -5.8463e-02]],

         [[ 2.2887e-02,  4.7063e-02, -2.6860e-02],
          [ 5.5613e-02,  5.8846e-02,  4.4380e-04],
          [ 1.8174e-02, -3.7515e-03, -3.8592e-02]],

         [[ 1.7131e-02,  3.6878e-02, -2.1345e-02],
          [ 2.3184e-02,  2.6227e-03,  2.5486e-02],
          [-2.6567e-02,  1.7108e-02, -3.0995e-02]],

         ...,

         [[-3.6214e-02,  3.0956e-02,  2.5503e-02],
          [ 9.4761e-02,  6.1584e-02, -3.3777e-02],
          [ 6.5757e-02, -7.3147e-02, -2.2965e-02]],

         [[-4.5162e-02,  2.7765e-02, -4.0095e-02],
          [ 2.5890e-02, -8.5394e-02, -4.9014e-02],
          [ 3.1150e-02, -1.2058e-02,  2.7178e-02]],

         [[ 2.0741e-02, -2.4254e-02, -2.8162e-03],
          [-1.9294e-02,  2.7026e-02,  1.2912e-02],
          [-1.3559e-02,  1.0573e-01, -2.4901e-02]]],


        [[[ 4.7978e-03, -4.9944e-02, -1.2096e-02],
          [-4.0287e-02,  2.5424e-02,  3.3453e-02],
          [-5.4984e-02, -4.5344e-02, -3.5561e-02]],

         [[ 1.3657e-02,  6.8164e-03, -4.2317e-03],
          [ 1.8158e-02,  3.9888e-02,  2.1604e-02],
          [ 4.3180e-03,  1.5144e-02, -4.4045e-02]],

         [[-8.4908e-02, -2.4931e-03,  2.6541e-02],
          [-6.5199e-02,  6.0570e-02,  1.9226e-02],
          [ 2.2562e-02, -4.3628e-02, -1.6957e-02]],

         ...,

         [[-5.0902e-02, -1.0653e-02,  1.8100e-02],
          [-2.1350e-02,  4.5748e-02,  6.1309e-02],
          [-7.7019e-02, -6.9014e-02,  9.4065e-03]],

         [[-3.1657e-02, -6.8341e-03,  5.8425e-02],
          [-2.6698e-02, -4.1604e-02, -1.6068e-02],
          [-1.0679e-02,  1.8356e-02, -7.1105e-02]],

         [[-2.1647e-03, -3.5549e-02, -5.9367e-02],
          [ 3.7435e-02, -2.5828e-03,  4.1069e-02],
          [ 1.3980e-02,  2.0005e-02, -3.6696e-02]]],


        [[[ 7.0218e-02,  1.4254e-02, -8.3525e-03],
          [-1.8880e-02, -2.6057e-02, -1.6092e-02],
          [ 2.9492e-02, -1.1103e-01, -4.8299e-02]],

         [[-3.3987e-02,  1.3491e-01,  4.2847e-05],
          [-2.0774e-02,  2.0536e-02,  5.0503e-02],
          [ 2.0029e-02,  5.3153e-02,  5.3580e-02]],

         [[-5.1755e-03, -4.8215e-02,  7.3858e-02],
          [-4.5005e-02,  4.4439e-02,  2.8540e-02],
          [ 4.8000e-02,  2.3913e-02, -5.4700e-02]],

         ...,

         [[ 9.8179e-02,  2.4518e-02, -4.2450e-02],
          [ 7.0468e-02, -4.3762e-04, -2.6952e-02],
          [ 9.3055e-02, -3.7120e-02,  1.4221e-02]],

         [[ 5.2999e-03,  2.1459e-02,  4.3552e-02],
          [ 3.2506e-02,  5.5289e-02, -3.3962e-02],
          [-2.1867e-02,  1.1119e-01, -1.6530e-02]],

         [[-4.6974e-02, -1.2639e-02, -6.3360e-02],
          [-2.1379e-02,  5.4737e-02,  3.7480e-02],
          [ 5.8496e-02, -2.2605e-02, -2.0280e-03]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-8.5561e-02,  1.3614e-02,  1.0124e-01],
          [-2.6979e-02,  2.2738e-02,  4.6261e-02],
          [-7.8432e-03,  4.0437e-02, -4.1677e-02]],

         [[ 4.0237e-02, -6.1061e-02,  9.5844e-02],
          [-4.0501e-02,  8.0071e-02,  7.0489e-02],
          [ 2.1175e-02,  2.7284e-02,  4.9876e-02]],

         [[ 2.0385e-02, -5.7193e-02, -2.1717e-03],
          [-1.1608e-02, -2.8372e-02,  3.9766e-03],
          [-3.8133e-02,  5.7092e-03,  5.0663e-02]],

         ...,

         [[-6.7523e-02, -4.2768e-02,  8.8835e-03],
          [-6.4028e-02,  7.3024e-02, -2.7947e-02],
          [-4.1627e-02,  3.9670e-02, -3.2266e-02]],

         [[ 4.9686e-02, -7.9337e-02,  3.3115e-03],
          [-2.8698e-02,  4.4587e-02,  2.9448e-02],
          [ 1.2588e-02, -4.1764e-02, -4.3171e-02]],

         [[ 3.9475e-02, -1.0286e-02, -2.8750e-02],
          [-1.4476e-02,  1.1373e-02,  3.5533e-02],
          [ 4.9795e-02,  1.0275e-02, -2.9510e-02]]],


        [[[-3.5665e-02,  8.8350e-03,  8.9938e-02],
          [ 2.1678e-02, -4.4451e-02, -3.0877e-02],
          [ 5.1916e-02,  3.2571e-02, -1.9008e-02]],

         [[-2.8044e-02,  5.8802e-02, -2.8450e-02],
          [ 1.5717e-02,  2.8387e-02, -1.4879e-02],
          [-1.9061e-02, -7.1431e-03, -2.2060e-02]],

         [[-2.0191e-02, -9.9422e-06,  3.9062e-02],
          [ 7.5389e-02, -2.2874e-02, -1.2974e-03],
          [-5.9708e-02, -2.4943e-02,  6.0130e-02]],

         ...,

         [[-9.5506e-02, -8.6046e-02,  2.0690e-02],
          [-3.6036e-02, -6.7885e-03, -6.3224e-02],
          [ 6.5621e-03, -5.6374e-02, -4.1063e-02]],

         [[ 6.7867e-02, -8.9426e-03,  7.2890e-02],
          [ 7.5126e-02,  7.1398e-02,  3.0867e-02],
          [-1.9109e-02, -3.5887e-02, -4.3581e-02]],

         [[-5.8275e-02,  2.4568e-02,  1.8047e-02],
          [ 1.2379e-03,  1.1747e-02,  9.6294e-03],
          [-1.1959e-02, -5.8202e-02,  5.0369e-02]]],


        [[[-4.8685e-02, -7.3972e-02, -2.2259e-02],
          [-3.5377e-03, -5.7959e-02,  7.7628e-02],
          [ 2.4860e-02,  3.4963e-02,  3.1789e-02]],

         [[ 1.5138e-02,  2.0488e-02, -3.3341e-02],
          [ 8.9918e-04,  4.6460e-02,  4.4515e-02],
          [ 8.3788e-02,  3.7949e-02, -2.1676e-02]],

         [[ 3.2516e-04,  1.0400e-02, -3.8180e-03],
          [ 1.0308e-02, -6.1824e-02, -3.4829e-02],
          [ 5.3814e-02, -1.1400e-01,  2.3341e-03]],

         ...,

         [[-1.4845e-02,  1.4507e-02, -2.3790e-02],
          [-4.7059e-02,  6.1385e-02, -4.8316e-02],
          [-2.8375e-02,  2.3078e-02,  5.7846e-02]],

         [[-8.6832e-03, -1.7887e-02,  8.2758e-02],
          [ 3.1927e-02,  2.1819e-02, -7.4093e-02],
          [ 9.7375e-03, -4.3399e-02,  6.4625e-03]],

         [[-4.4445e-02, -1.4718e-02,  5.8141e-02],
          [-4.5470e-02,  2.9192e-03,  7.2585e-02],
          [ 5.8987e-02, -5.6110e-02, -5.8325e-03]]],


        ...,


        [[[-1.5358e-02,  6.4524e-02,  3.4371e-02],
          [ 3.1028e-02, -9.8741e-02,  1.3488e-02],
          [ 6.7057e-02,  2.5475e-02, -4.5399e-02]],

         [[ 4.4654e-02,  3.9366e-02,  2.6453e-02],
          [-2.2568e-02,  4.8620e-02, -1.7061e-02],
          [ 6.1659e-02, -1.0643e-02, -1.7052e-02]],

         [[-3.2308e-02,  5.0272e-02,  2.5026e-03],
          [-6.4197e-02,  7.6110e-02,  2.0143e-02],
          [-8.8926e-02,  3.9056e-02,  2.5811e-02]],

         ...,

         [[ 1.3885e-02,  3.5010e-02,  1.3604e-02],
          [-5.2736e-02,  4.5901e-02,  1.1456e-01],
          [-1.0553e-02, -2.2421e-02, -3.6344e-02]],

         [[ 1.1027e-02, -9.5025e-03, -4.5528e-03],
          [ 3.5236e-02,  2.9018e-03,  2.7399e-02],
          [ 3.5996e-03, -4.1339e-03,  3.3018e-02]],

         [[-5.8673e-02,  2.1407e-02, -3.5059e-02],
          [ 1.4163e-03,  3.4881e-02, -4.7887e-02],
          [ 3.3254e-02, -2.5596e-02, -3.0529e-02]]],


        [[[-4.1053e-02,  3.7007e-02, -1.2383e-02],
          [-2.7127e-03, -7.4704e-02, -2.2207e-02],
          [ 5.0602e-02, -6.4823e-02, -3.0672e-02]],

         [[ 2.3651e-02, -5.7869e-03, -2.8513e-02],
          [-1.8460e-02, -4.6019e-02,  2.4394e-02],
          [-1.8265e-02,  8.7785e-02, -5.1596e-02]],

         [[-9.4237e-03,  3.3401e-02, -4.0054e-03],
          [ 1.9446e-02,  1.5135e-02, -3.0964e-02],
          [ 4.6770e-02,  5.0616e-02, -3.1694e-02]],

         ...,

         [[-2.0662e-03,  2.9333e-03,  6.9372e-02],
          [ 1.6297e-02, -4.7033e-02,  5.1772e-02],
          [ 2.8985e-03,  1.8289e-02,  1.1237e-02]],

         [[ 2.6650e-02,  2.9412e-02, -1.6577e-02],
          [-8.2790e-02,  7.0187e-03,  4.5813e-02],
          [ 2.1488e-02,  1.1220e-02,  7.6877e-02]],

         [[ 6.0688e-03, -1.0497e-02,  2.2092e-02],
          [ 1.1616e-02, -2.6460e-02,  4.2678e-02],
          [ 3.2680e-03,  5.5432e-02,  3.1117e-03]]],


        [[[ 6.0545e-03, -7.0540e-02,  3.1295e-02],
          [ 5.1855e-03, -8.2280e-02,  5.3830e-02],
          [ 2.0506e-02,  4.8689e-02, -9.5555e-03]],

         [[-3.7180e-02,  3.5899e-02, -1.5381e-02],
          [ 2.4925e-02, -1.7549e-01,  7.5390e-02],
          [ 2.7584e-02, -1.2972e-01,  4.4742e-02]],

         [[-3.7126e-02, -2.4864e-02, -2.3764e-02],
          [ 2.8298e-02, -1.4374e-02,  3.8052e-02],
          [-3.4204e-02, -1.2508e-02, -8.9388e-02]],

         ...,

         [[ 4.1115e-02,  3.4819e-02,  3.6429e-02],
          [ 4.5515e-02,  1.0005e-03, -2.7913e-03],
          [-5.5728e-02,  9.9779e-03,  5.4727e-02]],

         [[ 8.8634e-02, -1.3849e-02, -2.9095e-03],
          [ 3.5755e-03, -4.6925e-03,  6.8923e-03],
          [ 3.1575e-03,  7.3326e-02, -1.9236e-02]],

         [[-4.8920e-02,  5.8046e-04,  2.2450e-02],
          [ 3.0268e-02,  1.9498e-02,  6.3087e-02],
          [ 2.3533e-02, -4.2681e-02,  2.7766e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 21:46:39,490 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 4:33:01, time: 0.164, data_time: 0.018, memory: 547, loss_flow: 131.6905, loss: 131.6905, grad_norm: 4.8181
2022-10-09 21:46:45,166 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 3:50:55, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 119.8439, loss: 119.8439, grad_norm: 4.1427
2022-10-09 21:46:51,050 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 3:39:10, time: 0.118, data_time: 0.005, memory: 547, loss_flow: 130.7445, loss: 130.7445, grad_norm: 4.9534
2022-10-09 21:46:56,788 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 3:32:00, time: 0.115, data_time: 0.005, memory: 547, loss_flow: 127.6109, loss: 127.6109, grad_norm: 5.6337
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 3.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 70, in __call__
    img2 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


