2022-10-09 22:04:20,881 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 22:04:20,882 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 22:04:20,999 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 22:04:21,000 - mmflow - INFO - Distributed training: False
2022-10-09 22:04:21,752 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dCADDY'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dKITTI'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=10000, metric='EPE, Fl')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09_h21'
auto_resume = False
gpu_ids = [0]

2022-10-09 22:04:21,754 - mmflow - INFO - Set random seed to 995378063, deterministic: False
2022-10-09 22:04:21,832 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 22:04:22,253 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 22:04:22,279 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 22:04:23,248 - mmflow - INFO - dataset size 400
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 22:04:25,710 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 22:04:25,814 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21
2022-10-09 22:04:25,816 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 22:04:25,817 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 22:04:25,817 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[ 5.1748e-02,  1.6232e-02, -7.0264e-03,  ..., -1.3413e-02,
           -3.0692e-03, -1.8451e-02],
          [-1.1290e-03,  6.5497e-03,  7.7357e-04,  ..., -2.8179e-02,
           -6.5133e-03,  1.8917e-02],
          [-1.9292e-02,  4.9681e-04, -1.6878e-03,  ...,  1.5991e-02,
           -2.6942e-02, -3.9407e-02],
          ...,
          [-4.1750e-02, -4.2443e-02, -5.5324e-03,  ..., -1.3495e-02,
            1.4955e-02,  5.0336e-02],
          [ 1.7241e-02,  6.7079e-03, -9.1170e-03,  ...,  6.5040e-03,
            4.0270e-03, -3.0591e-02],
          [-1.5082e-02, -2.0860e-02, -1.2523e-02,  ..., -1.8758e-02,
            3.0625e-02, -2.3793e-04]],

         [[-9.1105e-03, -4.5721e-02,  4.1183e-03,  ...,  1.0133e-02,
           -8.4014e-03, -3.0610e-03],
          [-4.0123e-03, -1.8615e-02,  2.1511e-02,  ..., -2.3435e-02,
            1.8706e-02,  2.6076e-02],
          [ 4.3938e-02,  1.4250e-02, -8.4434e-03,  ...,  8.4877e-03,
           -2.8014e-02, -1.1581e-02],
          ...,
          [-3.8256e-04, -1.6607e-02, -1.9048e-02,  ..., -3.6644e-02,
            3.1763e-02, -1.3340e-02],
          [ 3.8049e-02, -2.2169e-02,  1.9246e-02,  ..., -2.0756e-02,
            1.8943e-03, -1.0726e-02],
          [-2.1325e-02, -1.4953e-02,  1.2027e-02,  ..., -4.2968e-03,
           -2.8929e-02, -2.6603e-02]],

         [[-3.0957e-03, -3.5415e-02,  2.9651e-03,  ..., -2.0209e-03,
           -1.4546e-02,  1.5004e-03],
          [-7.6643e-03,  2.1231e-02, -5.1740e-02,  ...,  2.2866e-02,
            2.7227e-03,  5.9020e-03],
          [ 3.3104e-02, -2.2396e-02,  7.1597e-03,  ...,  1.9085e-02,
            1.6777e-02,  5.4450e-02],
          ...,
          [-2.3575e-02,  2.6577e-02,  7.8371e-03,  ...,  3.7058e-02,
           -3.6031e-02,  1.0997e-02],
          [-1.2195e-02, -1.1574e-02, -4.3379e-03,  ..., -4.8223e-02,
            1.9102e-02,  5.5759e-03],
          [ 9.5473e-03,  2.8606e-02,  8.0180e-03,  ...,  1.3951e-02,
           -5.3500e-02, -4.8031e-03]]],


        [[[-4.3068e-04,  1.7533e-02,  4.7915e-02,  ..., -4.4025e-02,
            1.7370e-02,  1.6591e-02],
          [ 9.3244e-04,  8.1545e-03,  1.0927e-02,  ..., -9.3808e-03,
            4.4935e-02,  4.0843e-02],
          [-2.2741e-02, -6.2004e-02,  8.2329e-03,  ..., -1.1336e-02,
           -3.7973e-02, -9.2995e-03],
          ...,
          [ 3.6207e-02,  2.7942e-02,  2.6653e-02,  ..., -1.2044e-02,
            1.0916e-02,  2.3402e-02],
          [ 2.0247e-02, -4.0632e-03,  3.8061e-02,  ...,  1.0379e-02,
           -2.4450e-03,  2.5907e-02],
          [ 1.0477e-02,  1.8462e-02, -2.0498e-02,  ...,  1.8384e-02,
            1.0820e-02, -4.1899e-02]],

         [[-4.2202e-02, -1.8666e-02,  1.1381e-02,  ...,  1.6280e-02,
           -1.8264e-02, -5.9503e-03],
          [-2.0549e-02, -1.9911e-02, -3.8548e-02,  ...,  7.4415e-03,
           -1.0984e-02, -4.4713e-04],
          [-1.9923e-02, -2.3437e-02, -5.4377e-03,  ...,  9.6102e-04,
            4.2912e-02, -4.4954e-04],
          ...,
          [-2.6454e-04,  4.8536e-03, -3.7176e-02,  ..., -6.9037e-03,
            3.3871e-02, -1.0232e-02],
          [-9.9073e-05,  2.7517e-03, -1.7863e-02,  ..., -3.3642e-02,
            6.0099e-03,  1.7260e-02],
          [ 4.8926e-02,  2.5951e-02, -2.9028e-02,  ..., -7.9547e-03,
            2.5223e-03, -2.6322e-02]],

         [[-2.0164e-02,  6.3252e-03,  2.7282e-02,  ..., -6.8138e-03,
           -1.8190e-02, -3.3555e-02],
          [-5.5977e-03,  6.8222e-03, -1.5119e-02,  ...,  2.7664e-02,
            1.1365e-03,  2.0347e-02],
          [ 2.9581e-02, -4.2126e-03, -5.6690e-02,  ...,  1.4143e-02,
           -2.0960e-02,  3.1775e-02],
          ...,
          [-4.2888e-02,  1.6379e-02,  2.8211e-02,  ..., -1.9540e-02,
           -1.6076e-02, -3.6813e-02],
          [-1.7022e-02,  2.5586e-02,  1.8671e-03,  ..., -1.3476e-02,
           -6.3824e-03,  1.3456e-02],
          [-1.9492e-02,  1.6449e-04,  6.9594e-02,  ...,  3.8603e-02,
           -1.5558e-02,  3.8660e-02]]],


        [[[ 1.7086e-02,  1.9054e-02,  4.1775e-02,  ..., -2.0076e-02,
           -8.7048e-03, -1.7172e-02],
          [-3.4362e-02,  3.7339e-02,  3.8302e-02,  ...,  2.4106e-02,
           -1.3807e-02,  2.5050e-02],
          [ 3.0965e-02,  2.3845e-02,  1.8060e-02,  ...,  3.0720e-02,
            9.2994e-03, -1.2424e-02],
          ...,
          [-1.2217e-02, -1.9768e-02,  8.6618e-03,  ...,  2.1452e-02,
            7.3945e-03,  5.2080e-02],
          [ 2.9187e-02,  1.5085e-02,  1.4789e-02,  ...,  3.9777e-02,
            6.4892e-03, -6.3701e-04],
          [-2.7718e-02, -3.8009e-02,  1.9772e-02,  ...,  5.0256e-03,
            3.0234e-02,  3.5755e-02]],

         [[-5.4969e-02,  2.6663e-02, -4.4008e-02,  ..., -1.6429e-02,
           -3.2691e-03,  2.0301e-02],
          [-1.4573e-03, -1.1172e-02,  6.9908e-03,  ...,  7.6301e-03,
           -6.8824e-03,  1.9950e-02],
          [-2.7803e-02, -2.1740e-03, -1.9532e-02,  ..., -3.7280e-02,
            1.6367e-02,  1.2726e-02],
          ...,
          [ 1.9819e-02,  5.7275e-02,  4.9554e-03,  ..., -3.3903e-03,
           -6.6327e-03, -8.5677e-03],
          [-2.2642e-02,  2.4566e-02,  1.3072e-02,  ...,  3.1551e-02,
           -3.2611e-02, -5.4872e-02],
          [ 8.3655e-04,  1.1130e-04, -2.1376e-02,  ..., -2.0039e-02,
            3.1804e-02,  1.2065e-02]],

         [[ 3.2561e-02, -9.2800e-03, -2.5407e-02,  ..., -1.2766e-02,
            1.0902e-02, -2.7337e-02],
          [-4.2815e-02, -3.1179e-02, -8.9022e-03,  ..., -3.9479e-03,
           -8.6047e-03, -2.1365e-02],
          [-1.3337e-02, -1.8894e-02, -3.5780e-02,  ...,  5.3122e-02,
            2.1510e-02, -2.5995e-02],
          ...,
          [-9.1791e-03,  1.9067e-02,  2.5535e-02,  ..., -5.4769e-03,
           -3.4630e-04,  3.3328e-03],
          [-1.1506e-02,  7.1716e-03, -1.2216e-02,  ..., -3.8149e-02,
            4.6119e-03, -2.0651e-02],
          [ 2.1877e-02, -2.0260e-02, -1.5720e-02,  ...,  4.3277e-03,
           -1.7702e-03,  2.6927e-02]]],


        ...,


        [[[-5.0077e-03, -3.0492e-03,  2.5334e-02,  ...,  2.4523e-02,
            5.0915e-02, -3.7838e-03],
          [-1.3744e-02, -3.2948e-03,  3.5407e-02,  ...,  1.9362e-02,
            1.6116e-02,  1.4195e-02],
          [-5.3065e-03,  2.4403e-02, -2.4192e-02,  ...,  2.2307e-02,
            1.6546e-02,  5.7196e-03],
          ...,
          [-6.4943e-04, -3.7068e-04, -1.1171e-02,  ...,  1.5024e-02,
            1.4185e-02,  3.5099e-02],
          [ 2.6282e-02,  3.5660e-02,  3.8355e-02,  ..., -1.0506e-02,
           -3.5106e-03,  1.9071e-02],
          [-3.2813e-03,  2.4948e-04,  2.1923e-02,  ..., -4.3965e-04,
            1.7140e-02, -1.8366e-02]],

         [[ 2.2823e-02,  2.2354e-02,  3.3702e-02,  ..., -2.1490e-02,
           -6.3025e-02, -2.7292e-02],
          [ 6.4074e-03, -2.3762e-02, -2.8536e-02,  ..., -1.4493e-03,
            8.8782e-03, -2.3461e-02],
          [-1.2467e-02,  2.4524e-02,  8.1468e-03,  ...,  2.3021e-02,
            1.3670e-02, -2.3537e-02],
          ...,
          [-5.2870e-02,  2.4425e-02, -2.5491e-02,  ..., -2.2570e-02,
            1.2109e-02, -1.7866e-02],
          [-5.4819e-02, -5.0450e-02, -3.7947e-03,  ...,  4.1536e-02,
            2.3718e-02,  1.5612e-02],
          [-4.6869e-03, -2.3108e-03,  1.0528e-02,  ..., -2.1811e-02,
           -3.3280e-03, -7.3068e-03]],

         [[ 2.3306e-02,  9.3720e-03,  7.6950e-03,  ...,  3.6072e-02,
            6.4047e-03,  1.1180e-02],
          [ 4.9732e-02,  4.2404e-02, -4.9978e-02,  ..., -3.8370e-02,
            1.3988e-02, -3.4094e-02],
          [ 2.4749e-02,  1.3399e-02, -4.1613e-03,  ...,  1.0822e-03,
            2.0264e-02,  2.3811e-02],
          ...,
          [-6.3459e-03, -6.6143e-03,  1.7723e-02,  ..., -3.5609e-02,
           -4.2992e-02, -2.2101e-02],
          [-1.0420e-02,  2.7346e-03, -7.4144e-03,  ...,  2.9372e-02,
           -3.4849e-02,  2.5609e-02],
          [ 4.0289e-02,  3.4607e-02, -2.0912e-02,  ...,  2.5191e-02,
           -7.4866e-04, -1.4259e-02]]],


        [[[-2.1472e-02,  4.1536e-02,  7.8883e-03,  ..., -3.8146e-02,
            2.0150e-03,  3.1627e-02],
          [ 9.2980e-03, -7.3580e-03, -5.5613e-03,  ..., -1.4226e-02,
           -1.4657e-03,  1.9538e-03],
          [-2.6409e-02, -5.7103e-03,  2.3584e-02,  ...,  6.0002e-02,
            6.6820e-03, -1.9117e-02],
          ...,
          [ 1.3308e-02,  2.6541e-02,  2.3684e-02,  ..., -4.6742e-02,
            2.6816e-03,  1.0708e-02],
          [-2.3957e-02, -2.9049e-02, -6.2506e-03,  ..., -1.3611e-03,
            2.3840e-02, -6.7348e-02],
          [-2.9147e-02, -2.1201e-02, -3.0127e-02,  ...,  1.5399e-02,
           -7.1754e-03, -1.2405e-02]],

         [[-2.5201e-02,  2.7594e-02, -1.8201e-02,  ..., -2.7361e-02,
            1.2902e-02,  1.2133e-02],
          [-2.7598e-02, -5.0827e-02,  2.8776e-02,  ...,  7.9131e-03,
           -2.9501e-02, -4.0223e-02],
          [-2.4214e-03,  1.3113e-03,  4.6684e-03,  ...,  2.5929e-02,
           -6.9192e-03,  2.2042e-02],
          ...,
          [ 1.0717e-02, -3.9077e-03, -1.6617e-02,  ..., -3.3198e-02,
            1.1802e-02, -4.9303e-02],
          [-4.1021e-03,  9.0562e-03,  3.1659e-02,  ..., -2.8488e-02,
            2.1678e-02, -1.3901e-02],
          [ 4.1823e-04,  1.2994e-02,  1.2141e-02,  ..., -9.4036e-04,
            3.6579e-03,  2.3485e-02]],

         [[ 1.1803e-02,  1.1563e-02, -5.6009e-03,  ...,  2.6224e-02,
            1.2244e-02, -7.3382e-03],
          [ 1.9375e-02,  3.8739e-02, -1.3241e-02,  ...,  3.9552e-02,
            1.6541e-02, -2.7373e-02],
          [-2.3641e-02, -2.3465e-02, -3.3772e-02,  ...,  1.4184e-02,
            1.3857e-02,  2.6626e-02],
          ...,
          [-7.8168e-03, -3.5710e-02, -1.7475e-02,  ..., -4.7962e-02,
           -8.4079e-03, -7.3411e-03],
          [-1.0702e-02,  1.2168e-02,  1.0999e-02,  ..., -1.4511e-02,
           -2.1852e-02, -7.9412e-03],
          [-8.2985e-03, -5.5453e-03,  9.2801e-04,  ..., -6.6149e-03,
           -2.6733e-02, -2.9069e-03]]],


        [[[ 3.0349e-03, -4.4888e-02, -1.8966e-02,  ..., -3.1548e-02,
            6.5680e-03,  1.8702e-02],
          [ 2.0660e-02,  1.3999e-02, -2.4502e-02,  ...,  1.3214e-02,
            2.4506e-02,  3.9886e-03],
          [ 3.0155e-03, -3.8436e-04, -6.7537e-02,  ..., -7.7311e-03,
            1.3069e-02, -2.5316e-02],
          ...,
          [ 3.7772e-02, -4.9948e-04,  9.9599e-03,  ...,  9.3671e-03,
            4.3112e-02, -2.6649e-02],
          [-2.7538e-02, -4.8002e-03,  2.3979e-02,  ...,  1.5078e-02,
            1.5510e-02,  4.9982e-03],
          [-4.2601e-03, -4.4639e-02,  3.0142e-02,  ...,  3.0534e-02,
           -1.7166e-02,  4.4455e-02]],

         [[ 3.1225e-02,  4.9344e-03, -5.3966e-04,  ...,  9.8676e-03,
           -4.2929e-02,  5.2399e-03],
          [ 5.1593e-03,  2.6561e-03,  1.4418e-02,  ..., -3.4456e-02,
           -1.9675e-02, -3.7939e-02],
          [-8.7724e-03, -4.7022e-02, -1.3670e-03,  ..., -6.3581e-03,
           -3.2767e-02,  4.3390e-03],
          ...,
          [-2.9278e-02,  2.2632e-02,  3.4521e-02,  ...,  1.5086e-02,
           -2.3977e-02, -2.5838e-02],
          [ 3.3995e-02, -1.7101e-02, -1.6910e-02,  ..., -1.4998e-02,
            2.0182e-02, -4.6685e-02],
          [-8.2571e-04,  9.4631e-03,  1.3034e-02,  ..., -5.3596e-03,
           -2.3583e-02,  1.3741e-02]],

         [[ 2.2179e-02,  1.0000e-02,  3.3255e-02,  ..., -2.8587e-02,
           -5.0052e-02, -1.4138e-02],
          [ 4.9440e-03, -3.0781e-02, -1.5420e-02,  ...,  1.5032e-02,
            4.3922e-03, -5.0291e-03],
          [-4.4043e-03,  9.0634e-03,  1.4747e-03,  ...,  1.6652e-02,
            1.9265e-02,  3.0586e-02],
          ...,
          [-4.7421e-02,  2.7875e-04,  5.0989e-02,  ..., -5.4328e-02,
            5.3317e-02,  1.1185e-02],
          [ 1.0533e-02,  2.1035e-02, -1.8463e-02,  ..., -1.3399e-02,
           -1.8583e-02,  1.5312e-02],
          [-3.9211e-02, -3.0857e-03,  5.0185e-02,  ...,  1.5792e-03,
           -1.4138e-02,  1.0624e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 2.2267e-02,  1.6022e-02,  3.7596e-02],
          [-1.8171e-02, -1.7201e-02,  9.7302e-02],
          [-1.7865e-02, -9.9731e-02,  1.3499e-03]],

         [[ 8.4887e-02,  7.6436e-03, -6.1679e-02],
          [ 4.0057e-02,  5.4322e-02, -4.8828e-02],
          [-1.4803e-02, -1.6994e-02,  1.0059e-01]],

         [[ 2.4790e-02, -2.3259e-02,  9.2569e-02],
          [-4.0280e-02, -4.3402e-02, -2.8661e-02],
          [ 5.5731e-02, -1.3256e-02,  5.2040e-02]],

         ...,

         [[ 6.1518e-04,  2.4789e-02, -1.8976e-02],
          [ 1.0680e-02, -6.9105e-02, -6.9282e-02],
          [ 9.3740e-02,  1.4518e-02,  4.9909e-03]],

         [[-5.1778e-02, -6.9354e-03,  1.9994e-02],
          [-5.7132e-02,  6.4458e-03, -1.7806e-03],
          [ 4.3467e-02,  4.0835e-02, -6.6170e-02]],

         [[-1.5869e-02, -9.5796e-02, -1.4965e-02],
          [ 2.5446e-02,  3.4190e-02,  6.7585e-03],
          [ 6.3591e-02,  2.2441e-02, -5.9769e-03]]],


        [[[-7.2053e-02, -2.1061e-02, -1.5608e-02],
          [ 8.0147e-02,  1.6379e-03,  3.0072e-02],
          [-1.8913e-04,  2.0414e-03,  1.0137e-03]],

         [[-3.3239e-02,  5.0373e-02, -4.0725e-02],
          [ 8.1677e-02, -1.4521e-02, -1.4742e-02],
          [-5.1712e-05,  3.3078e-02,  3.7887e-02]],

         [[ 6.2010e-02, -3.9428e-02,  2.0577e-02],
          [ 6.0527e-02,  3.9646e-03,  2.1955e-02],
          [ 1.6042e-02,  1.1892e-01,  2.6372e-02]],

         ...,

         [[ 1.8698e-02,  8.1311e-02,  2.6352e-02],
          [ 4.5794e-02, -6.4185e-02, -6.3737e-02],
          [ 6.6598e-02,  2.7397e-02, -4.0510e-02]],

         [[-5.7699e-02,  9.7495e-02,  1.0557e-01],
          [ 1.2940e-01, -2.8526e-02, -1.4799e-02],
          [-2.9015e-02, -7.8435e-02,  1.7985e-02]],

         [[ 7.2445e-02, -2.0223e-02,  2.9175e-02],
          [-1.1319e-02, -1.2840e-01,  4.1250e-02],
          [ 3.1759e-02, -3.0338e-02, -1.0337e-01]]],


        [[[-7.5132e-02, -6.5995e-02,  2.5253e-02],
          [ 1.8896e-02, -9.9237e-03,  1.8195e-02],
          [-1.9624e-02,  5.5647e-03,  1.0011e-02]],

         [[ 8.3637e-02, -2.5712e-02, -4.4047e-02],
          [ 2.7868e-03,  1.3159e-02, -2.2904e-02],
          [-9.5443e-02, -1.8919e-02, -7.2666e-02]],

         [[ 4.2415e-02,  6.2975e-02, -9.9055e-02],
          [-2.8450e-02,  5.7500e-02,  6.1782e-02],
          [ 1.7118e-01,  6.7355e-02,  4.7808e-02]],

         ...,

         [[ 5.8565e-02,  6.4183e-02, -8.7091e-02],
          [-8.3200e-02, -8.5741e-02,  7.3808e-02],
          [-2.1017e-02, -9.9250e-03,  3.1826e-03]],

         [[ 3.1844e-02, -5.1898e-02,  5.0704e-02],
          [-3.6500e-03,  1.4929e-03,  8.3932e-02],
          [-2.7940e-02, -5.1809e-02, -5.2850e-02]],

         [[-7.2739e-02, -3.3355e-02,  2.3591e-02],
          [ 5.4987e-02, -9.7601e-03, -5.5999e-02],
          [-2.0324e-02,  9.5557e-03,  4.5806e-02]]],


        ...,


        [[[ 5.8957e-02,  3.7166e-02, -4.3092e-02],
          [-1.0547e-02,  2.3859e-02, -7.4570e-02],
          [ 2.7835e-02,  1.8418e-02, -2.3887e-03]],

         [[-7.0697e-02,  4.9761e-02,  2.6370e-02],
          [-5.9770e-02,  4.0840e-02,  3.1637e-02],
          [ 3.2921e-02,  1.6171e-02, -1.3629e-02]],

         [[ 1.0886e-02, -3.6330e-02,  1.4386e-04],
          [ 3.0475e-02,  4.2626e-02,  4.1799e-02],
          [-7.7691e-02,  9.6398e-02,  2.2228e-02]],

         ...,

         [[-1.7415e-02, -8.3164e-02, -2.0596e-02],
          [-7.7373e-02, -3.9335e-03,  1.0361e-01],
          [-1.3556e-02,  1.2181e-01,  7.5923e-02]],

         [[-7.3869e-02, -2.0885e-02,  5.1467e-02],
          [-7.4922e-02,  6.7131e-02, -6.4159e-02],
          [ 3.9113e-02, -3.5106e-02,  2.9504e-02]],

         [[-6.7795e-03,  1.9694e-01,  8.3321e-03],
          [-9.6457e-02,  2.8058e-02,  9.0040e-03],
          [-8.8838e-03, -1.3786e-02,  2.8574e-02]]],


        [[[-6.0136e-03,  2.8696e-02, -3.2883e-03],
          [-8.9379e-02, -3.7643e-02,  2.3012e-02],
          [-6.4121e-02,  7.1148e-02,  5.9382e-03]],

         [[ 1.6961e-02, -5.0001e-02, -3.0467e-04],
          [ 8.5180e-02,  6.1086e-02,  3.5833e-02],
          [ 4.4738e-02,  1.0356e-02, -5.0958e-02]],

         [[ 4.1731e-02, -4.0892e-02, -2.1982e-02],
          [ 2.9584e-02,  3.3221e-02,  2.1380e-02],
          [ 9.7194e-03,  3.3928e-02,  6.9619e-02]],

         ...,

         [[-1.3604e-02,  3.2526e-02,  3.2014e-02],
          [ 4.6489e-02, -1.9142e-02,  2.7687e-02],
          [ 1.3676e-02, -4.3386e-02, -1.0973e-02]],

         [[ 3.8698e-02, -3.7228e-02,  8.0217e-02],
          [-4.7183e-02, -7.5826e-02, -9.9750e-02],
          [ 1.6542e-02,  3.7015e-03, -2.3849e-02]],

         [[-6.7484e-02,  5.5109e-02,  3.3570e-02],
          [-5.9968e-02, -8.6080e-03,  5.2237e-03],
          [ 1.4288e-03,  2.1601e-03, -7.6651e-02]]],


        [[[ 6.7953e-02, -4.9378e-02,  1.6017e-02],
          [ 1.2078e-01, -9.5843e-03, -1.7366e-01],
          [-1.2135e-01,  3.7009e-02,  3.3929e-02]],

         [[ 2.3576e-02, -1.2159e-01, -9.7425e-02],
          [-4.2572e-02,  3.7941e-02, -1.3221e-02],
          [-1.4173e-02,  8.0766e-02, -6.0273e-02]],

         [[-5.2716e-03, -2.3438e-02,  9.7556e-04],
          [-7.9940e-02, -1.8571e-02, -3.5051e-02],
          [ 2.7840e-02,  7.4652e-03,  1.6475e-02]],

         ...,

         [[-1.3122e-01,  1.6446e-01,  3.9710e-03],
          [-1.4540e-01,  1.0103e-02, -1.1749e-01],
          [-4.7654e-02,  2.6700e-03,  2.6753e-02]],

         [[ 2.0452e-02, -7.5829e-02, -6.5724e-02],
          [ 1.3723e-02, -3.3116e-02, -1.3239e-01],
          [-2.9218e-02, -4.2919e-02, -2.4029e-02]],

         [[-9.4185e-02,  3.9936e-02,  9.9099e-02],
          [ 4.8156e-02,  1.9390e-02, -1.0578e-01],
          [ 2.2672e-02,  2.4565e-02,  2.6526e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 5.3261e-02, -5.5840e-02, -1.4397e-02],
          [ 1.8990e-02, -5.6801e-02,  6.4709e-02],
          [-1.1059e-02, -1.1913e-02,  2.1772e-02]],

         [[ 5.3117e-02, -1.7092e-03,  9.0807e-02],
          [-1.0141e-02, -4.4230e-02,  7.2004e-03],
          [ 9.8922e-02,  6.5405e-02,  8.9877e-02]],

         [[-6.3485e-02, -1.1719e-02, -1.7359e-03],
          [ 6.4791e-02, -7.2383e-02, -6.8349e-02],
          [ 1.6407e-01, -2.7032e-02,  1.0799e-02]],

         ...,

         [[ 6.7594e-03, -4.7952e-02, -6.2351e-02],
          [-5.1410e-02,  1.5524e-01, -6.1334e-03],
          [-1.1598e-02, -9.0765e-02, -2.0851e-02]],

         [[ 5.9484e-03,  2.9270e-02,  3.9264e-02],
          [ 2.3683e-02, -4.9588e-02, -4.2698e-02],
          [ 3.0282e-02,  1.4717e-01,  4.1402e-03]],

         [[-2.3246e-02,  6.3121e-02, -4.3921e-03],
          [ 2.3106e-03,  6.6705e-03,  1.0307e-01],
          [ 2.1048e-02,  1.6616e-01,  5.0071e-03]]],


        [[[-9.5848e-02, -1.1546e-01, -6.1842e-02],
          [-6.0777e-03, -4.0314e-03, -8.2763e-03],
          [-6.8494e-02, -1.3977e-02, -7.1901e-03]],

         [[-3.2651e-02,  7.3084e-02,  4.5536e-03],
          [-4.9028e-02,  1.3269e-02,  8.5423e-02],
          [ 8.1105e-02,  4.0831e-02,  1.1550e-01]],

         [[ 9.8215e-02, -4.0155e-02,  4.3145e-03],
          [ 1.1764e-02,  9.3121e-02,  1.0707e-01],
          [-3.6305e-02,  1.1830e-02,  2.2079e-02]],

         ...,

         [[-1.2651e-02,  5.9390e-02, -1.1275e-01],
          [-9.1945e-02, -9.1931e-02, -5.4119e-02],
          [-6.8974e-03, -1.9614e-03, -1.6676e-01]],

         [[ 1.3171e-02,  3.8853e-02, -1.0811e-02],
          [-7.2451e-02,  2.0440e-02, -1.2291e-04],
          [-1.4070e-02, -7.0352e-02,  1.9683e-02]],

         [[ 4.3860e-02,  7.6815e-03, -1.5212e-01],
          [ 5.4163e-02,  3.9476e-02,  1.7432e-02],
          [ 3.2115e-02,  4.7158e-02, -1.4189e-02]]],


        [[[ 4.5560e-02, -3.8558e-02, -1.8067e-02],
          [-7.5167e-03, -2.4170e-02,  3.6342e-02],
          [ 8.2252e-02, -7.2880e-02,  4.8276e-02]],

         [[ 1.9658e-02, -2.9244e-03, -5.6603e-02],
          [ 7.3424e-02, -6.3270e-02, -4.4457e-02],
          [ 2.0578e-02,  4.4008e-02, -7.4289e-02]],

         [[-4.7933e-02, -7.8119e-02,  7.5607e-02],
          [-2.8269e-02,  9.4032e-03, -9.0636e-02],
          [ 2.3696e-02,  9.8364e-02, -4.6710e-02]],

         ...,

         [[-3.3550e-02,  3.4874e-02,  7.6225e-02],
          [ 1.1699e-01,  2.3059e-02, -1.0156e-01],
          [-1.5371e-02,  2.7020e-02, -3.7808e-02]],

         [[ 9.4575e-02,  6.8890e-02, -2.3632e-02],
          [-2.1170e-02, -6.1903e-02,  5.8508e-02],
          [-1.6593e-01,  4.7726e-02, -1.6454e-03]],

         [[-1.1644e-01, -7.9024e-03, -7.7816e-02],
          [-8.7046e-03,  3.5780e-02,  1.0720e-01],
          [-2.5531e-02,  7.0006e-02,  2.4418e-02]]],


        ...,


        [[[-6.0972e-02,  1.5928e-02,  4.2469e-02],
          [-1.1942e-03,  2.2043e-02,  7.1873e-02],
          [-1.5640e-02, -1.0954e-02,  3.0763e-02]],

         [[-1.4915e-02, -5.4651e-02,  2.2128e-02],
          [-4.4260e-02, -2.6895e-02, -4.6660e-03],
          [ 3.8367e-02,  7.2209e-02, -2.9331e-02]],

         [[-7.3401e-02, -8.8708e-02, -9.9875e-02],
          [-6.1613e-03, -1.2682e-01, -7.3562e-02],
          [ 5.2281e-02, -5.4633e-02,  4.1311e-02]],

         ...,

         [[ 3.6007e-02, -6.7826e-02,  2.4157e-02],
          [-2.7085e-02, -4.0131e-02,  4.9334e-02],
          [ 3.8912e-02, -5.2950e-02,  5.6990e-02]],

         [[ 1.1281e-01, -2.5717e-05,  1.9723e-02],
          [ 6.8407e-03, -4.9560e-02,  1.4063e-01],
          [-2.9684e-02, -1.1830e-02,  9.7344e-04]],

         [[ 4.7522e-02, -1.7085e-02,  3.5409e-02],
          [ 2.7353e-02, -7.0569e-02, -1.1529e-01],
          [ 8.1167e-02, -3.7354e-02,  1.3956e-01]]],


        [[[-6.2274e-02,  6.2478e-02,  7.4916e-03],
          [ 2.0517e-02,  4.2185e-02,  9.3099e-02],
          [-5.2129e-02,  5.3963e-02,  2.9959e-02]],

         [[ 4.2407e-02, -4.4159e-02, -6.1140e-02],
          [-4.1117e-02, -5.0563e-02, -1.9320e-02],
          [ 4.6466e-02,  7.4392e-02,  3.1849e-02]],

         [[ 9.7234e-02,  2.0236e-02, -2.4258e-02],
          [-2.6556e-02,  1.1262e-01, -1.9141e-02],
          [ 1.4771e-02, -4.0815e-02, -2.7593e-02]],

         ...,

         [[ 4.7864e-02, -7.9821e-02, -5.9824e-03],
          [ 2.0937e-03, -4.0509e-02,  8.8051e-03],
          [-2.0915e-02, -2.9848e-02, -5.8531e-02]],

         [[ 6.2458e-02,  6.4803e-02,  1.6688e-02],
          [-6.4109e-02, -9.9038e-03,  7.9301e-02],
          [-1.6097e-02,  1.2229e-01,  1.6031e-02]],

         [[ 1.7324e-02, -2.4410e-02,  9.2814e-03],
          [ 2.0948e-02,  5.6968e-02,  1.2388e-01],
          [-1.8274e-02,  1.2532e-02,  4.0663e-02]]],


        [[[ 4.8693e-03, -4.6048e-02, -4.0602e-02],
          [ 4.2877e-03,  1.8027e-02, -9.7285e-03],
          [ 1.2962e-02,  1.1817e-02,  2.5768e-02]],

         [[ 8.3518e-02,  3.4540e-02, -2.5741e-02],
          [ 4.5850e-02, -5.3289e-02,  1.1719e-01],
          [ 2.7103e-02, -3.2881e-02, -1.5356e-03]],

         [[-6.4193e-02, -4.3863e-02,  9.1256e-02],
          [ 5.5372e-02,  3.0992e-02,  7.4991e-02],
          [-1.1547e-02, -1.0657e-02,  4.6893e-02]],

         ...,

         [[-7.6346e-02, -3.3453e-02, -1.1327e-02],
          [-5.6319e-02,  1.4917e-02,  9.9257e-02],
          [-7.4850e-02, -7.3098e-02,  8.6895e-03]],

         [[-5.5208e-02,  7.8272e-02,  1.0021e-02],
          [ 2.6385e-02,  1.3224e-02, -3.8009e-02],
          [-2.0654e-03,  7.9004e-02,  9.8132e-02]],

         [[ 1.7722e-02,  1.2052e-02, -9.0432e-02],
          [ 4.8856e-02,  7.3691e-02,  4.9769e-03],
          [ 1.2273e-02,  6.0611e-02,  2.5446e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 1.0739e-02, -1.1059e-02, -2.6664e-02],
          [-4.7003e-02,  6.7523e-02, -1.4281e-02],
          [ 8.3539e-02,  2.9057e-02, -8.3332e-03]],

         [[-1.8124e-03, -5.1036e-02,  9.1655e-02],
          [-7.2778e-02, -1.2247e-01,  5.3216e-02],
          [-1.9147e-02, -4.7387e-02,  3.1548e-02]],

         [[-2.3091e-02,  7.1012e-02,  1.8414e-01],
          [-4.7691e-02,  7.4395e-02, -2.5722e-03],
          [ 3.2226e-03, -6.3629e-03,  1.1814e-04]],

         ...,

         [[-1.9573e-02,  2.5095e-02,  1.4828e-02],
          [ 4.8507e-02,  5.0192e-03,  2.9537e-02],
          [-4.2263e-02, -5.3485e-02, -3.5284e-02]],

         [[ 1.9425e-02, -1.8249e-03,  7.2053e-02],
          [-8.1547e-02,  6.7389e-02,  5.8953e-03],
          [-6.2518e-03,  1.8096e-02, -1.6946e-03]],

         [[-7.8038e-02,  3.6313e-02, -3.4710e-02],
          [ 7.1134e-02, -1.9058e-02, -5.6436e-02],
          [ 7.8584e-03, -6.6349e-03, -2.3269e-02]]],


        [[[ 6.3368e-02,  1.6967e-02, -3.6410e-02],
          [ 1.1995e-02, -1.7533e-01, -7.5326e-03],
          [ 1.0330e-02, -1.8989e-02, -3.6740e-02]],

         [[ 2.9089e-02, -4.7053e-02, -5.3325e-02],
          [-4.1493e-02,  3.6834e-03,  1.6015e-01],
          [-1.3666e-02, -3.1761e-02,  6.7741e-02]],

         [[-4.3596e-03,  6.5557e-03, -6.8254e-02],
          [ 3.8495e-02, -3.5064e-02, -4.2541e-03],
          [-4.5593e-02,  7.9984e-02,  7.4573e-02]],

         ...,

         [[ 4.5233e-02,  5.9190e-02,  2.3005e-02],
          [-1.1731e-02,  9.1790e-02,  5.4542e-02],
          [-7.6436e-02, -4.1796e-02, -7.1673e-02]],

         [[ 3.7769e-03,  1.5352e-02,  3.4685e-03],
          [ 5.1970e-03,  1.5361e-02,  7.7940e-02],
          [-5.8195e-02, -2.1566e-02,  9.5116e-02]],

         [[-3.8131e-02, -4.4415e-02, -5.6234e-03],
          [ 5.1420e-02, -3.1986e-02, -8.2926e-02],
          [ 6.4380e-02,  5.1204e-02, -4.1394e-02]]],


        [[[-9.1632e-02,  1.0496e-03, -1.5307e-02],
          [ 8.0306e-02,  9.4310e-03,  1.6998e-03],
          [ 1.0255e-02, -6.7109e-04,  3.8882e-02]],

         [[-7.3060e-02, -1.5815e-02,  2.8180e-02],
          [ 4.8711e-02,  5.9151e-03, -7.4684e-03],
          [-8.9624e-02, -5.2015e-02,  1.0228e-02]],

         [[-4.7625e-02, -1.2740e-01,  1.0203e-03],
          [ 3.1890e-02,  1.3543e-02, -5.0776e-03],
          [-3.6032e-02, -9.7441e-02,  8.6697e-03]],

         ...,

         [[ 8.6033e-03,  5.1256e-02,  2.2612e-02],
          [-4.6009e-02,  1.9553e-03, -5.3456e-02],
          [-8.0700e-02,  5.1644e-03,  9.6939e-02]],

         [[-7.1774e-02,  7.4349e-02, -9.9491e-02],
          [ 1.1752e-02,  2.7333e-02,  6.9245e-02],
          [-9.8812e-02,  2.0939e-02, -1.2870e-02]],

         [[ 7.3580e-02,  1.6710e-02,  2.6078e-02],
          [ 1.1496e-03,  1.2665e-01,  2.4430e-02],
          [-3.4859e-02,  5.0933e-03,  4.5631e-02]]],


        ...,


        [[[ 3.5010e-02, -5.6641e-02, -1.1966e-02],
          [ 9.1189e-02, -3.3286e-02,  3.8930e-02],
          [ 3.9770e-02,  3.8928e-02,  4.7075e-02]],

         [[-1.2837e-02,  7.8894e-02, -7.4882e-02],
          [-6.9271e-02,  4.0517e-02,  3.4548e-02],
          [ 1.4036e-02,  5.8888e-02, -1.0898e-01]],

         [[ 6.3082e-02, -3.0160e-02, -7.4722e-02],
          [ 1.9290e-02,  4.5192e-02, -1.5310e-01],
          [ 4.9279e-02, -1.0902e-02, -7.4735e-02]],

         ...,

         [[-5.0562e-02, -1.5787e-03,  6.9187e-02],
          [ 1.9117e-02,  6.9613e-03, -8.1330e-03],
          [ 1.4834e-02, -1.9052e-02,  6.5581e-02]],

         [[-9.5788e-02, -4.2818e-02, -4.6761e-02],
          [ 1.0002e-01, -1.8836e-02, -6.0070e-02],
          [ 9.9365e-02, -2.3006e-02, -1.0239e-01]],

         [[ 2.2014e-02,  2.2027e-02,  8.3228e-02],
          [-1.5929e-02,  7.4658e-02, -1.3573e-01],
          [ 1.3868e-01, -4.7716e-02,  4.3489e-02]]],


        [[[ 5.5085e-02, -3.4496e-02, -8.9455e-04],
          [ 9.2751e-03,  3.7264e-02, -1.3566e-02],
          [-1.5422e-01,  5.1914e-03,  1.0663e-03]],

         [[-2.1470e-02,  5.5346e-02, -4.4320e-03],
          [ 2.4321e-02,  5.4580e-02, -3.7110e-02],
          [-4.1474e-02,  1.1254e-01, -2.5708e-02]],

         [[ 2.4937e-02,  1.2574e-01, -6.7214e-02],
          [-6.6552e-02, -9.1519e-04, -7.2306e-02],
          [ 1.2465e-02, -7.6527e-02, -4.3277e-02]],

         ...,

         [[ 7.9133e-02, -5.6392e-03, -4.5755e-02],
          [-1.0777e-01,  9.8751e-03,  1.9489e-01],
          [ 1.0557e-01,  6.6232e-02,  1.5854e-02]],

         [[-2.5642e-02, -1.5640e-02,  5.2440e-02],
          [ 8.5762e-02, -6.6657e-02,  1.0297e-02],
          [-2.5883e-02,  3.6661e-02,  2.8245e-02]],

         [[ 1.7751e-02,  1.4604e-02,  1.7591e-02],
          [ 2.8814e-02, -1.9793e-02, -2.7617e-02],
          [-7.7611e-02,  5.2086e-02,  1.0748e-01]]],


        [[[-3.7451e-03, -6.4110e-02,  1.5584e-02],
          [-4.6719e-02,  2.2164e-02, -2.7589e-02],
          [ 4.0620e-03, -1.4201e-02,  7.1227e-02]],

         [[-6.3138e-02, -2.1087e-02, -7.4391e-02],
          [-9.6204e-02,  6.8482e-02,  2.4368e-02],
          [-8.9205e-02, -6.8953e-02,  1.0416e-01]],

         [[ 1.2478e-02, -3.0812e-02, -9.4927e-04],
          [ 7.9713e-03,  1.0396e-02, -8.3145e-02],
          [ 3.8792e-02, -6.8244e-02, -3.2155e-02]],

         ...,

         [[ 2.5651e-02, -2.9806e-02, -1.2077e-02],
          [-1.9700e-02, -1.0623e-03, -1.6681e-01],
          [-3.7124e-02, -2.1263e-02, -1.6720e-01]],

         [[ 8.3854e-03, -6.3268e-03, -1.1800e-02],
          [ 5.9858e-02, -5.3141e-02, -6.7169e-02],
          [ 3.0662e-02,  6.1287e-02, -1.8715e-02]],

         [[ 6.2196e-02,  6.5331e-02,  9.6094e-02],
          [-3.1454e-02, -1.0097e-01, -6.7121e-02],
          [-3.4822e-02,  1.1619e-02,  4.2822e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 0.0725, -0.0537,  0.0988],
          [-0.0452, -0.0504,  0.0121],
          [ 0.1201,  0.0397, -0.1309]],

         [[ 0.0531,  0.1265, -0.0294],
          [ 0.1188,  0.1094, -0.0043],
          [ 0.0741, -0.0049,  0.0468]],

         [[-0.0260, -0.0281,  0.0513],
          [-0.0455,  0.0014,  0.0421],
          [-0.0029,  0.0295,  0.0882]],

         ...,

         [[ 0.0211, -0.0014,  0.0491],
          [ 0.0234,  0.0337,  0.0341],
          [ 0.0024,  0.0467,  0.0351]],

         [[-0.0233, -0.0680,  0.1020],
          [-0.0011,  0.0437, -0.0380],
          [ 0.0396, -0.0851,  0.0399]],

         [[ 0.0552,  0.0038,  0.0546],
          [-0.0375,  0.0498, -0.0594],
          [ 0.0567, -0.1003, -0.0603]]],


        [[[-0.0349,  0.0550, -0.0064],
          [-0.0040,  0.1045,  0.0151],
          [ 0.0374,  0.0060,  0.0690]],

         [[-0.0502, -0.0828, -0.0552],
          [ 0.0200,  0.1384, -0.1191],
          [-0.0320, -0.0611,  0.0326]],

         [[ 0.0121,  0.0332, -0.0305],
          [-0.0190,  0.0077,  0.0166],
          [ 0.0938,  0.0717,  0.0641]],

         ...,

         [[-0.0645,  0.0327, -0.0010],
          [-0.0244,  0.0800,  0.0573],
          [-0.0150,  0.1040, -0.0510]],

         [[ 0.0733, -0.0177, -0.0047],
          [ 0.0307, -0.0688,  0.0074],
          [-0.0304,  0.0091, -0.0545]],

         [[ 0.0855, -0.0313, -0.0218],
          [-0.0356,  0.0541, -0.0678],
          [ 0.0540, -0.0355, -0.0125]]],


        [[[ 0.0752,  0.0201,  0.0161],
          [-0.0147, -0.0320, -0.0242],
          [-0.0184,  0.0712, -0.0158]],

         [[-0.0394, -0.1060,  0.0663],
          [ 0.0591,  0.0370,  0.0111],
          [ 0.0439, -0.0104, -0.0114]],

         [[ 0.0415,  0.0008,  0.0011],
          [-0.0425, -0.0314,  0.0455],
          [ 0.0493,  0.1057,  0.0504]],

         ...,

         [[-0.1588, -0.0691,  0.0028],
          [-0.0220, -0.0525,  0.0178],
          [ 0.1195,  0.0785,  0.0178]],

         [[ 0.0196,  0.0331, -0.0817],
          [-0.0849,  0.0681, -0.0131],
          [-0.0133, -0.0360, -0.0830]],

         [[ 0.0379, -0.0691,  0.0491],
          [ 0.0717, -0.0074, -0.0042],
          [-0.0298, -0.0239, -0.0376]]],


        ...,


        [[[ 0.0191,  0.0613, -0.0380],
          [ 0.0282,  0.0052, -0.0013],
          [ 0.1722,  0.0025, -0.0719]],

         [[-0.0497,  0.0049, -0.0959],
          [ 0.0816, -0.0614, -0.0429],
          [ 0.0674,  0.0027, -0.0836]],

         [[ 0.1195,  0.0144, -0.0521],
          [ 0.0072,  0.0163, -0.0932],
          [ 0.0034, -0.0467,  0.0366]],

         ...,

         [[ 0.1297,  0.0887, -0.1160],
          [ 0.1616, -0.0528,  0.0646],
          [-0.0959, -0.0105, -0.0401]],

         [[ 0.0447,  0.0123, -0.0403],
          [ 0.0181, -0.0316,  0.0388],
          [ 0.0359, -0.0373,  0.0775]],

         [[-0.0747, -0.1309,  0.0065],
          [ 0.0348, -0.0510,  0.0684],
          [-0.0167, -0.0621, -0.0983]]],


        [[[ 0.0161, -0.0869, -0.0893],
          [-0.0749,  0.0123, -0.0245],
          [-0.0239,  0.0182, -0.0118]],

         [[ 0.0402, -0.0634, -0.0254],
          [-0.0603,  0.0487, -0.0942],
          [ 0.0534,  0.0518,  0.0519]],

         [[-0.0392, -0.0490,  0.0184],
          [ 0.0409, -0.0538, -0.0719],
          [ 0.0874,  0.0053,  0.0832]],

         ...,

         [[ 0.0007,  0.0030, -0.0674],
          [-0.0198,  0.0741, -0.0753],
          [-0.0195, -0.0544, -0.0047]],

         [[-0.0055, -0.0196,  0.0054],
          [-0.0034,  0.0142, -0.0192],
          [ 0.0083,  0.0140,  0.0151]],

         [[-0.0339, -0.0299,  0.0272],
          [-0.0686,  0.0268, -0.0250],
          [ 0.0049,  0.0178,  0.0460]]],


        [[[-0.0025, -0.0269,  0.0064],
          [-0.0676, -0.1255, -0.0319],
          [ 0.0293, -0.0576,  0.0832]],

         [[-0.0514, -0.0169,  0.0762],
          [-0.0136,  0.0426,  0.0676],
          [ 0.1469, -0.0431, -0.0526]],

         [[ 0.1140, -0.0302,  0.0019],
          [-0.0678,  0.0223, -0.0190],
          [ 0.1371, -0.0776,  0.0618]],

         ...,

         [[-0.0021,  0.0373, -0.0096],
          [-0.0263, -0.0761,  0.0033],
          [ 0.0796, -0.0619,  0.0656]],

         [[-0.0621,  0.0434, -0.0122],
          [ 0.0324, -0.0061, -0.0877],
          [ 0.0997,  0.0338, -0.0275]],

         [[-0.0442, -0.0388, -0.0570],
          [-0.0090, -0.0510, -0.0695],
          [ 0.1010, -0.0913,  0.0037]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[ 0.0509]],

         [[-0.0542]],

         [[ 0.0663]],

         ...,

         [[-0.0379]],

         [[ 0.0963]],

         [[ 0.1454]]],


        [[[-0.0976]],

         [[ 0.0211]],

         [[-0.0321]],

         ...,

         [[ 0.0252]],

         [[-0.1103]],

         [[-0.1444]]],


        [[[-0.0483]],

         [[-0.0437]],

         [[-0.1180]],

         ...,

         [[ 0.0062]],

         [[ 0.0190]],

         [[ 0.0615]]],


        ...,


        [[[ 0.1158]],

         [[ 0.0303]],

         [[ 0.0849]],

         ...,

         [[-0.1121]],

         [[ 0.0305]],

         [[ 0.0090]]],


        [[[ 0.0112]],

         [[-0.0170]],

         [[ 0.0367]],

         ...,

         [[ 0.0612]],

         [[-0.2285]],

         [[ 0.0895]]],


        [[[-0.0479]],

         [[-0.0525]],

         [[ 0.0124]],

         ...,

         [[-0.0183]],

         [[-0.0410]],

         [[-0.1269]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-2.6306e-02, -1.5751e-02, -2.9747e-02],
          [ 6.8525e-02,  2.6047e-02,  2.2622e-02],
          [ 5.8140e-02,  2.5975e-03, -1.2615e-02]],

         [[-8.5478e-02, -2.9949e-02,  4.2202e-02],
          [-6.7684e-02, -1.7782e-02, -7.4244e-02],
          [-1.7346e-02,  4.8654e-02, -4.4178e-02]],

         [[ 1.0123e-02, -1.3067e-02,  2.8342e-02],
          [-4.4283e-02, -8.1006e-02,  1.7543e-03],
          [ 1.1206e-02,  5.5379e-02, -7.1094e-02]],

         ...,

         [[ 7.4451e-02,  4.2336e-02,  2.5869e-02],
          [-2.8044e-02, -1.0483e-01, -6.5510e-02],
          [-6.5928e-02, -2.2992e-02,  7.0405e-03]],

         [[ 3.4049e-02, -7.3878e-03, -4.6552e-02],
          [ 1.0522e-02, -3.0281e-02,  4.8483e-03],
          [-4.7001e-02,  4.5419e-02, -8.2889e-02]],

         [[-6.3332e-03, -8.3891e-02,  3.2152e-02],
          [ 6.1989e-06,  4.6391e-02, -1.6596e-02],
          [ 7.8538e-02, -8.1792e-02,  3.0770e-02]]],


        [[[-4.3477e-02,  5.9935e-02, -4.4394e-02],
          [-1.2128e-01,  8.0776e-02, -5.4441e-02],
          [ 6.7856e-03,  1.6152e-02,  4.5898e-02]],

         [[-4.3063e-02, -1.0998e-02,  3.9888e-02],
          [ 7.4596e-02, -4.6687e-02,  3.1929e-02],
          [ 6.7445e-02,  2.9150e-03,  2.7739e-02]],

         [[ 8.6328e-02, -4.0176e-02,  3.7427e-02],
          [-2.1106e-02,  1.4766e-02, -3.6680e-02],
          [ 5.8911e-02,  8.7034e-03,  2.4528e-02]],

         ...,

         [[-4.9770e-02, -4.8736e-02, -2.7747e-02],
          [ 3.6804e-02,  5.2191e-04, -1.3369e-02],
          [ 2.8566e-02,  7.8552e-02, -2.8346e-02]],

         [[ 6.5751e-02,  1.3066e-01, -4.5489e-02],
          [ 1.3827e-02, -1.0195e-01, -1.8634e-02],
          [ 5.3316e-02, -6.6757e-02, -4.0633e-02]],

         [[ 4.1932e-02, -2.7902e-02,  1.7776e-02],
          [-1.7290e-02, -5.4275e-02,  2.7924e-02],
          [-3.5915e-02,  1.8119e-02, -2.1842e-02]]],


        [[[-6.3673e-03, -1.3049e-01,  8.7424e-02],
          [-7.2316e-02, -5.8164e-02,  3.9186e-02],
          [ 4.8778e-02,  4.3160e-02, -3.2634e-02]],

         [[-2.3471e-03,  7.2717e-02, -5.1411e-02],
          [ 1.1071e-04, -9.6859e-03, -4.5849e-02],
          [ 5.1128e-02,  2.1480e-02,  6.6672e-02]],

         [[-1.4669e-02,  2.9914e-02, -9.5836e-04],
          [ 1.1820e-02, -7.2153e-02,  1.1091e-01],
          [-1.0558e-02, -1.1273e-01,  4.2876e-02]],

         ...,

         [[-1.1797e-02, -7.5027e-04,  3.9706e-02],
          [ 2.5843e-02,  1.4704e-02, -1.2184e-02],
          [ 4.7724e-02, -3.9169e-02, -6.4945e-03]],

         [[ 3.1035e-02,  7.7058e-03,  2.6932e-02],
          [-6.3376e-02, -1.0679e-01,  5.0725e-02],
          [-3.5197e-02,  2.5819e-03, -2.4872e-03]],

         [[ 2.7608e-02,  3.3781e-02, -8.4505e-02],
          [-3.0116e-02,  2.3004e-02,  8.3099e-03],
          [ 1.4971e-02, -9.8250e-02,  1.2329e-02]]],


        ...,


        [[[-3.6554e-02, -3.7734e-02, -8.2246e-03],
          [-6.5803e-02,  2.1680e-02, -6.3885e-02],
          [ 5.0025e-02, -3.6270e-02,  2.2713e-02]],

         [[-2.3786e-02, -6.9192e-02, -3.8244e-02],
          [ 6.4268e-03, -9.9154e-02, -1.0476e-01],
          [ 3.3403e-02,  3.8446e-02,  2.9134e-02]],

         [[ 9.2392e-02, -3.5984e-03, -8.5556e-02],
          [ 6.7544e-02,  6.8297e-03, -3.5246e-02],
          [-2.1351e-02,  9.0233e-02,  4.9528e-02]],

         ...,

         [[-8.0688e-02,  8.5328e-02,  5.2030e-02],
          [ 1.5373e-02,  2.9389e-02,  2.2633e-02],
          [ 6.2073e-02,  1.6826e-02,  5.4007e-02]],

         [[-1.4581e-02, -8.2165e-03, -3.7742e-02],
          [ 4.1838e-02,  8.1180e-02, -9.7747e-03],
          [ 1.5800e-02,  1.6899e-02,  5.8661e-03]],

         [[ 5.0756e-02, -2.5830e-02,  3.1732e-02],
          [-1.2805e-02, -2.0715e-02, -2.3654e-02],
          [-2.7911e-02, -5.9735e-02,  8.5422e-03]]],


        [[[-2.1771e-02, -2.3100e-02,  2.2110e-02],
          [-7.3446e-02,  1.5087e-02, -2.8951e-02],
          [ 7.4231e-02,  2.4566e-02, -4.0741e-02]],

         [[-2.6453e-02,  5.0475e-03,  3.7775e-02],
          [-5.9438e-02,  3.1988e-02,  6.7238e-02],
          [ 3.8245e-02,  1.0588e-02, -1.0750e-02]],

         [[ 2.6897e-02, -6.2001e-02, -8.9194e-03],
          [ 5.9543e-02,  3.3893e-03,  1.5765e-02],
          [-4.8389e-02,  1.1374e-02, -7.2100e-02]],

         ...,

         [[ 1.1669e-01, -1.2544e-01, -5.2096e-02],
          [ 3.1057e-03,  7.9579e-03, -3.8762e-02],
          [-2.5703e-02,  6.3369e-02, -5.6677e-02]],

         [[ 1.9377e-03, -1.3803e-02,  2.9310e-02],
          [ 5.1730e-02, -2.2306e-02, -7.8378e-03],
          [-7.4537e-02, -3.8666e-02, -3.2757e-02]],

         [[-3.7131e-02,  2.9413e-02, -1.4085e-02],
          [ 3.8068e-02,  1.1526e-02, -3.2778e-02],
          [ 2.3275e-02, -3.7951e-02,  6.3792e-02]]],


        [[[ 1.5111e-02, -2.2319e-02,  3.9535e-03],
          [ 4.0332e-02,  3.6598e-02,  5.9896e-02],
          [-5.3719e-02,  3.2289e-02, -4.1831e-02]],

         [[-5.1265e-02, -1.9062e-02, -6.2854e-02],
          [ 6.9017e-02, -7.0158e-03,  4.7013e-02],
          [ 4.4403e-02, -6.2147e-04,  8.3089e-03]],

         [[-1.1859e-01, -1.9679e-02, -2.5889e-02],
          [-1.5993e-02,  3.9743e-02,  3.2096e-02],
          [ 7.3090e-02,  2.7977e-02,  2.7497e-03]],

         ...,

         [[ 1.4751e-02, -1.2797e-01,  1.0445e-02],
          [-4.0656e-02, -8.3655e-02, -2.0565e-04],
          [ 2.4513e-03,  2.1216e-02,  8.3448e-03]],

         [[-1.0589e-02,  1.9354e-02, -4.7474e-02],
          [-4.9343e-02, -8.2067e-03,  5.9808e-03],
          [-8.1579e-02, -5.9697e-02,  8.8411e-02]],

         [[ 3.0276e-02, -1.1317e-02, -2.2380e-02],
          [ 5.5876e-02, -9.2645e-02, -1.3997e-02],
          [ 2.9741e-03,  8.1710e-02,  2.5285e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-0.0039, -0.0003, -0.0431],
          [ 0.0075,  0.0764,  0.0516],
          [ 0.0309,  0.0456,  0.0165]],

         [[ 0.0187,  0.0093,  0.0040],
          [-0.0066,  0.0362,  0.0699],
          [ 0.0326, -0.1401,  0.0322]],

         [[ 0.0143, -0.0080, -0.0536],
          [ 0.0141,  0.0370, -0.0031],
          [ 0.0273, -0.0931, -0.0126]],

         ...,

         [[-0.0394,  0.0171, -0.0018],
          [ 0.0425, -0.0381, -0.0671],
          [ 0.0439,  0.0603, -0.0462]],

         [[-0.0393, -0.0238,  0.0118],
          [ 0.0676,  0.0018,  0.0635],
          [-0.0043,  0.0254, -0.0075]],

         [[ 0.0491,  0.0236,  0.0652],
          [-0.0572, -0.0139, -0.1196],
          [-0.1002, -0.0107,  0.0115]]],


        [[[-0.0579, -0.0977, -0.0498],
          [-0.0500,  0.0124, -0.0315],
          [-0.0465, -0.1064,  0.0116]],

         [[ 0.0159,  0.0112, -0.0597],
          [-0.0233,  0.0020,  0.0158],
          [-0.0416,  0.0023, -0.0017]],

         [[-0.0217,  0.0516, -0.0039],
          [-0.0319,  0.0052, -0.0222],
          [-0.0335, -0.0429, -0.0225]],

         ...,

         [[ 0.0064, -0.0910,  0.0360],
          [-0.1157, -0.0642, -0.0387],
          [-0.0235,  0.0168, -0.0098]],

         [[ 0.0071, -0.0053,  0.0150],
          [ 0.0358,  0.1135, -0.0240],
          [ 0.0216, -0.0033, -0.0505]],

         [[-0.0288,  0.0392, -0.0199],
          [ 0.0033, -0.0321,  0.0334],
          [-0.0044,  0.0377,  0.0489]]],


        [[[ 0.0977,  0.0643,  0.0077],
          [-0.0506, -0.0157,  0.0082],
          [ 0.0576,  0.0636,  0.0658]],

         [[-0.0400, -0.0238, -0.0509],
          [-0.0357,  0.0866, -0.0088],
          [ 0.0939, -0.0515,  0.0009]],

         [[ 0.0371,  0.0237, -0.0183],
          [-0.0341, -0.0268, -0.0121],
          [-0.0163, -0.0683,  0.1227]],

         ...,

         [[ 0.0653, -0.0090,  0.0179],
          [ 0.0977,  0.0512,  0.0322],
          [-0.0121,  0.0315,  0.0593]],

         [[-0.0619, -0.0893,  0.0321],
          [ 0.0158,  0.0805, -0.0048],
          [-0.0592, -0.0815,  0.0557]],

         [[ 0.0768, -0.0262, -0.0264],
          [-0.0656,  0.0328,  0.0293],
          [-0.0070,  0.0486, -0.0120]]],


        ...,


        [[[-0.0268, -0.0306, -0.0262],
          [ 0.0654,  0.0865, -0.0018],
          [-0.0184, -0.0107,  0.0541]],

         [[-0.0157,  0.0014, -0.0469],
          [-0.0417, -0.0450, -0.0087],
          [-0.0365,  0.0186, -0.0683]],

         [[ 0.1137,  0.0294,  0.0480],
          [-0.0417,  0.0090,  0.0471],
          [-0.0028,  0.0263,  0.0453]],

         ...,

         [[-0.0334, -0.0642,  0.0289],
          [ 0.0311, -0.0152,  0.0091],
          [ 0.0534, -0.0372,  0.0233]],

         [[-0.0348,  0.0652, -0.0554],
          [ 0.0094, -0.0744, -0.0019],
          [ 0.0183,  0.0584,  0.0768]],

         [[ 0.0011, -0.0344, -0.0271],
          [-0.0056,  0.0665,  0.0129],
          [-0.0428, -0.0615,  0.0709]]],


        [[[-0.0700, -0.0397, -0.0849],
          [ 0.0336,  0.0679, -0.0701],
          [-0.0434, -0.0500, -0.0099]],

         [[ 0.0259,  0.0377,  0.0579],
          [-0.0238,  0.0464, -0.0031],
          [-0.1023, -0.0045, -0.0526]],

         [[ 0.0187, -0.0603, -0.0080],
          [ 0.0298, -0.0537,  0.0244],
          [ 0.0361,  0.0114, -0.0186]],

         ...,

         [[ 0.0510, -0.0016, -0.0196],
          [ 0.0591, -0.0452,  0.0154],
          [-0.0321,  0.0296,  0.0571]],

         [[-0.0068,  0.0469, -0.0207],
          [-0.0239, -0.0255,  0.0837],
          [-0.0101,  0.0207, -0.0622]],

         [[-0.0935, -0.1210, -0.0718],
          [-0.0409, -0.0094, -0.0765],
          [ 0.0238,  0.0595, -0.0553]]],


        [[[ 0.0478, -0.0061, -0.0399],
          [ 0.0468, -0.0056,  0.0181],
          [ 0.0266,  0.0087,  0.1322]],

         [[ 0.0625,  0.0904, -0.0024],
          [-0.0508, -0.0168, -0.0104],
          [-0.0165, -0.0056,  0.0193]],

         [[ 0.0293,  0.0977,  0.0670],
          [-0.0310, -0.0189,  0.0471],
          [-0.0325, -0.0247,  0.0577]],

         ...,

         [[ 0.0811, -0.0942, -0.0104],
          [-0.0745,  0.0390, -0.0232],
          [ 0.0193,  0.0080, -0.0258]],

         [[ 0.0383,  0.1167,  0.0390],
          [ 0.0388, -0.0692, -0.0082],
          [-0.0858,  0.0296,  0.0072]],

         [[ 0.0040, -0.0229, -0.0015],
          [-0.0279, -0.0454,  0.0713],
          [ 0.0278, -0.0969, -0.0068]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.2127]],

         [[ 0.0889]],

         [[ 0.2549]],

         ...,

         [[ 0.1502]],

         [[-0.1236]],

         [[ 0.0854]]],


        [[[ 0.1428]],

         [[ 0.0667]],

         [[-0.1174]],

         ...,

         [[ 0.1656]],

         [[-0.2494]],

         [[-0.0522]]],


        [[[-0.3629]],

         [[-0.3330]],

         [[-0.0116]],

         ...,

         [[ 0.0465]],

         [[-0.0717]],

         [[-0.1214]]],


        ...,


        [[[-0.0099]],

         [[ 0.1707]],

         [[-0.0621]],

         ...,

         [[ 0.0583]],

         [[ 0.0264]],

         [[ 0.0563]]],


        [[[-0.0298]],

         [[ 0.1440]],

         [[-0.0765]],

         ...,

         [[-0.0894]],

         [[ 0.0268]],

         [[ 0.1023]]],


        [[[-0.1489]],

         [[-0.1375]],

         [[-0.0597]],

         ...,

         [[-0.1375]],

         [[-0.0042]],

         [[ 0.0159]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 2.2668e-02,  5.2282e-02, -4.7342e-02],
          [-3.8359e-03, -1.7675e-02,  6.3176e-02],
          [ 5.4995e-03,  2.8751e-02, -4.4679e-02]],

         [[-3.2944e-02, -9.6119e-03,  3.4072e-02],
          [ 1.4270e-02, -1.2021e-02,  1.1636e-01],
          [ 5.6425e-03,  5.6667e-02,  8.6657e-02]],

         [[-7.0062e-02, -1.0356e-02, -1.5533e-02],
          [ 5.9668e-02, -2.7173e-02,  1.4396e-03],
          [ 9.9743e-03, -3.1680e-02, -3.6546e-02]],

         ...,

         [[-3.5725e-02, -1.3973e-03,  2.2614e-02],
          [-3.5767e-02,  4.3320e-03,  1.3129e-01],
          [-6.5070e-02,  2.1138e-02,  9.9918e-02]],

         [[ 3.9781e-02,  4.8826e-02,  2.1726e-02],
          [ 2.2885e-03, -3.0064e-02,  5.4897e-02],
          [-2.9801e-02,  2.3409e-02,  3.2863e-02]],

         [[-1.1039e-01,  9.9437e-03,  1.1508e-02],
          [-3.1586e-02,  1.0511e-02,  1.0035e-01],
          [ 8.2617e-02, -1.6496e-02, -2.0718e-02]]],


        [[[ 4.2941e-02,  2.6453e-02,  2.0085e-02],
          [ 9.3417e-02, -8.0519e-02,  1.6687e-03],
          [ 2.3048e-02,  5.9208e-02, -7.0392e-03]],

         [[-2.6091e-02, -4.3117e-03, -3.1312e-02],
          [ 2.3998e-02, -4.6873e-02, -5.8375e-02],
          [ 2.7593e-02,  6.0186e-03,  4.0758e-02]],

         [[-3.8687e-03, -2.4113e-02, -5.1948e-02],
          [ 2.9523e-02,  9.7664e-03,  3.1080e-02],
          [ 6.4987e-02,  6.6936e-03,  2.7484e-02]],

         ...,

         [[ 1.4089e-02, -3.6073e-02,  7.1519e-03],
          [-2.3640e-02,  7.6680e-02, -2.2016e-02],
          [-5.5101e-03, -7.5151e-02,  5.3798e-02]],

         [[ 4.8609e-02, -2.9764e-02,  4.2540e-02],
          [ 6.6479e-02, -4.0070e-02, -5.9576e-02],
          [-6.0229e-02,  1.4172e-02,  3.9516e-02]],

         [[-5.8074e-02,  1.9875e-02,  6.1044e-02],
          [ 4.7465e-03,  3.5175e-02, -3.8786e-02],
          [ 2.4746e-03, -2.2664e-02, -4.5346e-02]]],


        [[[-1.6080e-01,  1.3538e-01,  3.1029e-02],
          [-2.5136e-02,  1.3202e-02,  1.3777e-02],
          [ 4.5467e-02,  2.3995e-02,  3.3365e-02]],

         [[-3.6557e-02, -8.7276e-03, -9.2844e-02],
          [ 8.7731e-03, -1.4579e-02, -4.1435e-02],
          [-5.3920e-02, -8.8833e-03, -1.0091e-01]],

         [[-9.0787e-03, -5.3027e-02,  4.5525e-02],
          [ 3.7941e-02, -5.0670e-03,  2.0911e-02],
          [ 4.3757e-02,  2.0627e-02,  9.9705e-02]],

         ...,

         [[-6.3280e-03, -8.5151e-02,  6.6468e-02],
          [-1.6330e-02, -5.0432e-02,  3.5929e-03],
          [-3.7244e-02,  7.6389e-02,  2.9533e-02]],

         [[-3.0418e-03,  6.9995e-02, -9.6714e-03],
          [ 4.3379e-02, -2.9032e-02, -2.0297e-02],
          [-4.8522e-02,  5.4918e-02,  2.8394e-02]],

         [[ 5.2841e-02, -5.9974e-02, -1.1432e-02],
          [-2.8939e-02, -5.6017e-02, -5.5155e-02],
          [ 3.4642e-02,  8.9638e-02, -5.1724e-02]]],


        ...,


        [[[ 6.9179e-03,  6.1466e-03,  5.9843e-03],
          [ 3.8732e-02, -6.0366e-03, -4.5638e-02],
          [-3.4025e-02,  6.6825e-02,  6.6390e-02]],

         [[-5.8097e-02, -2.6513e-02,  4.2214e-02],
          [-6.9606e-02, -1.4001e-02,  6.0844e-02],
          [-1.4113e-02, -4.9591e-02, -1.7778e-02]],

         [[ 3.9327e-03,  7.4307e-02,  6.8646e-02],
          [-5.4809e-02, -5.0202e-02,  3.0804e-03],
          [ 7.6524e-02,  8.5286e-03, -1.1573e-03]],

         ...,

         [[ 3.5333e-02,  1.4848e-02, -4.6774e-02],
          [ 6.2908e-03, -2.4507e-02, -4.2463e-02],
          [-7.7972e-02,  5.1397e-03,  7.2124e-02]],

         [[ 1.9069e-02, -1.2799e-02, -1.5010e-02],
          [ 2.2193e-02, -1.9831e-02,  9.8731e-03],
          [ 1.4452e-02, -7.1686e-02,  9.6242e-02]],

         [[-6.9299e-02,  2.3995e-02,  6.4176e-03],
          [ 1.9769e-02, -3.4355e-02,  3.3241e-02],
          [-8.4022e-04,  4.3082e-02,  1.4117e-02]]],


        [[[ 1.2637e-02,  5.2747e-02,  4.2316e-02],
          [ 8.3274e-03, -6.4815e-02, -2.3517e-02],
          [-2.1064e-02, -8.8580e-02, -2.5984e-02]],

         [[-3.9710e-02, -1.0082e-01, -9.5927e-02],
          [-5.1310e-02,  4.7840e-02, -1.3513e-02],
          [ 4.4721e-03,  3.3575e-02,  6.4903e-02]],

         [[-2.0113e-02, -3.9758e-02, -1.4138e-02],
          [ 5.7983e-02, -1.4743e-02, -4.0437e-02],
          [-4.3722e-02,  6.0613e-03, -6.0609e-02]],

         ...,

         [[ 2.8132e-02,  5.7616e-02, -1.0251e-02],
          [-6.3710e-02,  4.4345e-02, -7.3044e-03],
          [-9.2969e-03, -5.6410e-02,  6.0958e-02]],

         [[ 4.4637e-02,  5.8147e-02, -4.2538e-02],
          [ 5.9401e-02, -3.0666e-02,  3.0909e-03],
          [-1.2642e-02, -2.2349e-02,  4.2149e-02]],

         [[ 2.9264e-02,  4.1244e-02, -1.6683e-02],
          [ 1.2824e-01,  1.5176e-02, -1.3271e-02],
          [-5.7647e-02, -9.6494e-02,  1.8290e-02]]],


        [[[ 1.0699e-01, -5.7701e-02, -7.7685e-03],
          [ 9.1087e-03, -3.4171e-03, -3.7540e-02],
          [ 3.1366e-02,  8.9892e-03, -1.7723e-03]],

         [[-1.5306e-02,  2.8529e-02, -3.8026e-03],
          [ 6.6725e-02, -3.3505e-02, -4.5195e-02],
          [ 7.4327e-02, -7.3527e-03,  3.5945e-02]],

         [[ 6.0325e-02,  2.1379e-02, -5.3927e-02],
          [ 6.2255e-02, -2.6433e-02,  7.3501e-03],
          [ 7.9159e-02,  9.6832e-03,  1.6607e-01]],

         ...,

         [[-4.0794e-02, -7.2345e-02, -7.3017e-02],
          [ 4.0861e-02,  1.7231e-01,  2.6729e-02],
          [ 3.2802e-02,  1.5486e-02,  2.6830e-02]],

         [[ 2.0274e-03, -2.5230e-02, -2.5829e-02],
          [-3.3434e-02,  3.0376e-02,  4.1213e-02],
          [-2.7124e-02, -6.5275e-02, -9.8831e-05]],

         [[-5.6466e-02,  1.0911e-01, -2.0246e-02],
          [ 1.3834e-02,  3.3307e-02,  4.3211e-02],
          [ 5.0438e-02,  1.4073e-02, -2.7085e-02]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0011, -0.0542,  0.0359],
          [-0.0233, -0.0102, -0.0312],
          [ 0.0843, -0.0736, -0.0367]],

         [[-0.0131, -0.0616, -0.0607],
          [-0.0394, -0.0479,  0.0075],
          [ 0.0320, -0.0176,  0.0395]],

         [[-0.0126,  0.0942,  0.0385],
          [-0.0075,  0.0464, -0.0497],
          [-0.0478,  0.0126,  0.0481]],

         ...,

         [[ 0.0502,  0.0155,  0.0530],
          [-0.0669, -0.0752, -0.0118],
          [ 0.0133, -0.0574, -0.0161]],

         [[ 0.0094, -0.0122,  0.0214],
          [ 0.0204,  0.1264, -0.0406],
          [ 0.0368, -0.0419,  0.0620]],

         [[-0.1103, -0.0267, -0.0429],
          [ 0.0039, -0.0076,  0.0285],
          [ 0.0159,  0.0104, -0.0100]]],


        [[[ 0.0207, -0.0549,  0.0495],
          [ 0.0513,  0.0707, -0.0073],
          [ 0.0217, -0.0120, -0.0066]],

         [[-0.0343, -0.0175, -0.0679],
          [ 0.0186, -0.0070,  0.0083],
          [-0.0985, -0.0220,  0.0316]],

         [[ 0.0056,  0.0424, -0.0868],
          [-0.0166, -0.0342,  0.0209],
          [-0.0017, -0.0288,  0.0152]],

         ...,

         [[ 0.0511,  0.0575,  0.0015],
          [ 0.0085,  0.0413,  0.0476],
          [ 0.0481, -0.0582,  0.0006]],

         [[ 0.1514,  0.0079, -0.0591],
          [ 0.1061,  0.0210, -0.0735],
          [ 0.0455, -0.0407,  0.0181]],

         [[ 0.0081, -0.0212, -0.0512],
          [ 0.0429, -0.0199,  0.0048],
          [-0.0748, -0.0402, -0.0436]]],


        [[[ 0.0307, -0.0115, -0.0157],
          [ 0.0237, -0.0524,  0.0757],
          [ 0.0457, -0.0575, -0.1147]],

         [[ 0.0426,  0.0085, -0.0155],
          [ 0.0012,  0.0143,  0.0014],
          [-0.0144, -0.0401, -0.0287]],

         [[ 0.0209,  0.0345,  0.0259],
          [-0.0016, -0.0108,  0.0350],
          [-0.0949,  0.0281,  0.0475]],

         ...,

         [[ 0.0481, -0.0064, -0.0533],
          [-0.0122, -0.0253,  0.0145],
          [ 0.0631,  0.0650,  0.0350]],

         [[-0.0092,  0.0395,  0.0553],
          [ 0.0148, -0.0505, -0.0114],
          [ 0.0533, -0.0324, -0.0503]],

         [[-0.0110, -0.0906, -0.0402],
          [-0.0613,  0.0887, -0.1484],
          [-0.0179, -0.0542, -0.0159]]],


        ...,


        [[[-0.0196, -0.0527,  0.0019],
          [-0.0260, -0.0481, -0.0243],
          [ 0.0061, -0.0342,  0.0607]],

         [[ 0.0019,  0.0116, -0.0607],
          [-0.0087,  0.0418, -0.0041],
          [-0.0092,  0.0457, -0.0247]],

         [[ 0.0836, -0.0423, -0.0605],
          [ 0.0416,  0.0196, -0.0811],
          [-0.0166,  0.0299,  0.0361]],

         ...,

         [[-0.0410, -0.0239, -0.1179],
          [-0.0496, -0.0535, -0.0128],
          [ 0.1038, -0.0290, -0.0122]],

         [[ 0.0165,  0.0119,  0.0194],
          [-0.0502, -0.0470,  0.0408],
          [-0.0012, -0.0058,  0.0105]],

         [[-0.0883,  0.0293, -0.0136],
          [-0.0153, -0.0453, -0.0005],
          [-0.0491,  0.0554, -0.0639]]],


        [[[-0.0168,  0.0093,  0.0646],
          [-0.0255,  0.0682, -0.0009],
          [-0.0561, -0.0582, -0.0732]],

         [[-0.0584,  0.0211, -0.0161],
          [ 0.0497,  0.0065, -0.0158],
          [-0.0463, -0.0517, -0.0064]],

         [[ 0.0305, -0.0031, -0.0812],
          [ 0.0033, -0.0032, -0.0282],
          [ 0.0804,  0.0474,  0.0705]],

         ...,

         [[-0.0107, -0.0130, -0.0071],
          [ 0.0541, -0.0266,  0.0544],
          [ 0.0168, -0.0077,  0.0287]],

         [[ 0.0428,  0.0342, -0.0149],
          [ 0.0394, -0.0570, -0.0640],
          [ 0.0557,  0.0035,  0.0251]],

         [[ 0.0310,  0.0497, -0.0237],
          [-0.0326,  0.0371,  0.0936],
          [-0.0290,  0.0131, -0.0390]]],


        [[[ 0.0350, -0.0602,  0.0099],
          [-0.0246, -0.0497,  0.0309],
          [ 0.0148, -0.0378, -0.1219]],

         [[ 0.0414, -0.0769,  0.0523],
          [ 0.0357, -0.0839,  0.0484],
          [ 0.0651,  0.0115,  0.0113]],

         [[-0.0138,  0.0256,  0.0048],
          [-0.0365, -0.0218, -0.0062],
          [ 0.0058,  0.0192,  0.0127]],

         ...,

         [[ 0.0242, -0.0273, -0.0182],
          [ 0.0212, -0.0008, -0.0238],
          [-0.0413, -0.1183, -0.0743]],

         [[-0.0049,  0.0144, -0.0028],
          [ 0.0018,  0.0186, -0.0964],
          [-0.0755, -0.0083,  0.0950]],

         [[ 0.0355, -0.0073, -0.0314],
          [-0.0249,  0.0648, -0.0080],
          [-0.0573, -0.0887, -0.1298]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 3.8579e-02, -2.7529e-02, -1.5804e-02],
          [ 2.1092e-02,  2.1610e-02, -2.2346e-02],
          [ 3.3413e-02, -4.4116e-02, -4.2274e-02]],

         [[-3.3349e-02, -7.9042e-02, -3.1194e-03],
          [ 4.0175e-02, -4.3504e-02,  1.3797e-02],
          [-3.5766e-02, -3.8434e-02, -5.0666e-02]],

         [[ 2.9655e-02, -1.2718e-02, -7.6090e-02],
          [-2.7485e-02, -9.5106e-02,  4.3858e-02],
          [ 1.0841e-04, -3.4375e-02, -6.9316e-04]],

         ...,

         [[ 8.2360e-03, -7.3811e-03,  1.6771e-02],
          [-2.6722e-02, -4.1194e-02,  1.4753e-03],
          [ 6.7682e-03,  2.0920e-02,  4.8867e-02]],

         [[ 2.6879e-02, -2.1844e-02,  3.9397e-02],
          [ 1.8348e-02, -6.2572e-02, -6.5957e-02],
          [ 1.0376e-03,  6.8047e-02,  3.1947e-02]],

         [[ 8.6296e-03,  5.5075e-03,  3.1945e-02],
          [ 8.4102e-03, -4.3327e-02, -2.6273e-02],
          [-3.3840e-02,  4.1496e-02,  4.3814e-02]]],


        [[[ 1.4548e-02,  4.9985e-02,  3.6630e-02],
          [ 2.3811e-02,  7.0588e-02,  2.9043e-02],
          [-4.1489e-03,  4.9840e-02, -4.4530e-02]],

         [[ 1.0853e-02,  6.6814e-02, -2.1675e-03],
          [-1.9370e-02,  2.2774e-02, -3.0967e-02],
          [ 1.0753e-01,  2.2933e-02, -8.1365e-02]],

         [[ 4.6868e-02, -5.5245e-02, -5.3660e-02],
          [ 7.2701e-03, -6.3718e-02,  1.4783e-02],
          [-5.6678e-02, -1.0160e-01,  3.4982e-02]],

         ...,

         [[ 2.2262e-03, -4.5108e-02,  7.3399e-02],
          [-3.4034e-02,  2.4148e-02,  4.9716e-02],
          [ 9.5984e-03,  5.5084e-02, -2.2436e-02]],

         [[ 2.3638e-03, -5.9727e-03,  3.9761e-02],
          [-3.3049e-02, -1.7025e-02,  3.6558e-02],
          [-6.6962e-02,  3.3160e-02, -2.0886e-02]],

         [[-5.8613e-02, -7.7867e-02, -1.9786e-02],
          [-1.2669e-02,  6.5007e-03,  2.9988e-02],
          [-1.0349e-01, -6.7781e-02,  3.8995e-02]]],


        [[[ 1.4859e-02, -1.2243e-02,  6.8820e-02],
          [-2.7883e-02, -3.1220e-02,  4.5633e-02],
          [-2.0396e-02, -4.6122e-03, -2.3218e-02]],

         [[-3.0816e-02,  5.6305e-02, -1.9816e-02],
          [-7.1757e-02,  3.6207e-02,  2.1908e-02],
          [-5.9063e-03, -3.1662e-03,  2.0222e-02]],

         [[-1.3807e-02,  5.2147e-02, -6.8227e-03],
          [-1.7245e-02, -9.1129e-02, -4.1581e-02],
          [-1.9437e-02, -7.4900e-02,  4.4406e-02]],

         ...,

         [[-7.9753e-02, -7.3515e-03,  5.8692e-02],
          [ 1.0874e-02, -6.8462e-02,  4.2779e-02],
          [-2.3308e-02, -5.4659e-02, -5.2755e-02]],

         [[-3.5541e-02,  4.2530e-02, -3.9515e-02],
          [ 1.3869e-02, -2.6312e-02, -5.3078e-02],
          [-2.6970e-02, -1.3428e-03, -5.3874e-02]],

         [[-3.5583e-02,  5.5278e-02, -7.1824e-02],
          [ 2.1662e-02,  5.9193e-02,  3.0900e-02],
          [ 7.3979e-02,  2.1554e-02,  2.2583e-02]]],


        ...,


        [[[-3.7848e-02,  1.7162e-02,  2.0826e-02],
          [ 3.0101e-02,  2.6301e-02,  2.9720e-02],
          [ 9.9993e-04,  2.0793e-03,  5.3163e-02]],

         [[-2.0028e-03, -5.0688e-02,  1.9785e-02],
          [ 3.4137e-02, -1.0933e-02,  2.8565e-02],
          [ 3.5170e-02, -2.3430e-02,  7.4106e-02]],

         [[ 2.1707e-04,  2.3623e-02,  4.4847e-02],
          [ 5.4893e-02, -3.9353e-02, -4.7176e-02],
          [-1.5312e-02, -5.2564e-02, -2.4333e-02]],

         ...,

         [[ 2.3611e-03, -1.4798e-02,  1.3351e-02],
          [-2.4654e-02,  1.0472e-02,  1.9773e-02],
          [ 4.2024e-03,  6.5705e-02, -3.8230e-04]],

         [[-8.8003e-03, -9.3563e-02, -4.0764e-02],
          [ 4.4088e-02, -9.4931e-04,  3.8254e-02],
          [-8.8481e-02,  7.7829e-02,  4.7154e-02]],

         [[ 1.4463e-02,  3.1828e-02, -9.5157e-03],
          [-1.0735e-01,  4.0683e-03,  2.5818e-02],
          [ 4.1171e-02, -2.9786e-02,  8.0949e-02]]],


        [[[ 3.9342e-02, -2.0990e-03, -2.1700e-03],
          [ 3.1464e-02, -7.8274e-03,  8.0002e-04],
          [-1.6919e-02, -8.3681e-02, -3.4065e-02]],

         [[-4.5761e-02, -9.9418e-04, -9.0794e-03],
          [ 9.2460e-03, -3.8908e-02,  2.6025e-02],
          [-3.3155e-02, -1.0517e-02, -5.6156e-02]],

         [[-5.3532e-02, -1.4135e-02,  4.0648e-02],
          [-9.3836e-02, -1.1098e-03, -1.3506e-02],
          [ 7.6535e-02, -5.2529e-02, -4.0720e-02]],

         ...,

         [[-5.2574e-02, -5.3684e-02,  7.5339e-02],
          [-1.9631e-02,  1.8432e-03, -1.0413e-01],
          [ 5.9099e-02, -4.1059e-02, -1.1334e-02]],

         [[-7.8846e-02,  1.9004e-03,  1.7344e-02],
          [-1.1897e-02, -3.0423e-02, -1.1347e-01],
          [ 3.7086e-02,  1.1108e-02, -4.0116e-02]],

         [[-3.5436e-02, -2.8837e-02,  2.0793e-02],
          [ 3.8321e-03,  1.9720e-02,  6.8062e-02],
          [ 3.7221e-03,  8.0393e-02,  1.9547e-02]]],


        [[[-3.6036e-03,  4.1584e-03, -6.4599e-02],
          [ 5.7284e-02,  1.4655e-02,  5.2418e-02],
          [ 2.8240e-02, -4.2584e-02, -4.3386e-02]],

         [[ 5.0206e-03,  7.9558e-03, -4.1710e-04],
          [ 2.9096e-02, -7.9135e-02, -1.2968e-02],
          [ 4.4403e-02, -2.9224e-02, -1.1925e-02]],

         [[-4.5870e-02, -1.4351e-02,  2.1493e-02],
          [ 7.5645e-03,  3.0633e-02, -1.2764e-02],
          [-2.8074e-02,  1.3739e-02,  1.2061e-01]],

         ...,

         [[ 1.9586e-03, -4.4221e-02,  1.5296e-02],
          [ 5.2542e-02, -2.6427e-04,  7.8461e-02],
          [-3.7541e-02, -8.1769e-02, -4.5452e-02]],

         [[-1.1145e-02, -2.8802e-02,  6.3104e-03],
          [-5.6531e-02, -2.7034e-02, -1.3640e-02],
          [ 9.9111e-03, -2.7399e-02, -4.6294e-02]],

         [[-3.3958e-02,  2.5791e-02, -9.6081e-03],
          [-3.8778e-02, -1.0583e-02, -1.1148e-01],
          [ 4.3117e-02,  3.9924e-02,  4.4207e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 1.0292e-02, -3.3688e-02,  9.3048e-04],
          [-8.7416e-04, -3.2666e-02, -2.4444e-02],
          [ 5.7118e-02, -6.8404e-02,  1.9928e-02]],

         [[ 1.1181e-02,  6.8401e-02,  6.5431e-02],
          [-4.9225e-02,  8.3840e-02,  2.1532e-03],
          [-1.9308e-02,  6.8495e-03,  3.4129e-02]],

         [[ 3.7954e-02,  3.6002e-02, -8.0387e-02],
          [ 3.0416e-02,  1.4294e-02,  2.4980e-02],
          [-6.3357e-02,  3.3986e-05,  3.5361e-02]],

         ...,

         [[-4.7374e-02, -5.8762e-02,  1.0965e-02],
          [-6.4299e-02, -1.6034e-02, -6.0317e-02],
          [-1.2140e-02,  2.0709e-02, -5.0687e-02]],

         [[ 5.8467e-02, -1.0618e-01,  2.8683e-02],
          [ 3.2750e-02, -8.9422e-02, -2.8949e-02],
          [ 4.7644e-02, -1.0304e-01,  3.7958e-02]],

         [[ 1.0608e-03, -4.7596e-02, -3.3182e-04],
          [ 2.2075e-02, -6.3465e-02,  5.5757e-02],
          [ 5.0909e-02,  3.2309e-02, -6.6258e-02]]],


        [[[-5.5839e-02,  2.8466e-02, -5.2130e-02],
          [-5.5300e-02, -8.0422e-03, -1.7611e-02],
          [ 6.9235e-03, -8.3641e-03,  1.6846e-02]],

         [[-5.4321e-02,  2.1400e-02, -2.8716e-02],
          [ 3.1113e-02,  7.4769e-02,  6.1812e-03],
          [-3.7264e-02, -1.8310e-02, -5.0645e-02]],

         [[-3.8428e-02, -1.3545e-02, -4.8703e-02],
          [ 3.6790e-02,  8.7341e-03, -1.1251e-02],
          [ 3.2305e-02,  1.1472e-01,  5.6165e-02]],

         ...,

         [[-2.4248e-02, -1.7071e-02,  1.8099e-03],
          [-4.4031e-02, -1.6618e-02,  7.2166e-03],
          [ 6.5203e-02, -1.3549e-02,  3.6174e-02]],

         [[ 1.0838e-02,  1.9724e-02, -1.4876e-04],
          [-4.0543e-02,  8.3576e-02, -7.5391e-02],
          [-1.8178e-03,  2.2767e-02,  3.4540e-02]],

         [[ 2.7929e-02, -2.2857e-02,  4.0762e-02],
          [-4.7280e-03,  1.4304e-02,  2.5489e-03],
          [-2.0575e-02, -2.4230e-02,  4.3728e-02]]],


        [[[-1.8216e-02, -2.9166e-02,  4.2839e-02],
          [ 5.3746e-02, -4.1691e-02,  6.0543e-04],
          [ 5.3254e-02, -6.9159e-02, -9.3463e-02]],

         [[-5.5208e-02, -3.2511e-02, -4.4765e-02],
          [ 5.1160e-03,  3.8723e-02, -7.4378e-03],
          [-9.7107e-03,  8.8580e-03, -1.1465e-02]],

         [[ 9.7313e-02, -7.8315e-02, -6.2054e-03],
          [-2.7297e-02,  2.2351e-03,  1.8562e-02],
          [ 1.3674e-02, -2.5515e-03, -4.8269e-02]],

         ...,

         [[ 4.5161e-02, -3.5282e-02,  3.5661e-02],
          [-5.2157e-02,  6.1666e-02,  5.5896e-02],
          [-1.9983e-02,  3.9916e-03,  5.3490e-03]],

         [[-1.8988e-02, -1.2379e-03,  3.6000e-02],
          [ 7.3699e-02,  2.3600e-02, -6.1050e-02],
          [ 5.0352e-02, -6.3003e-02,  3.8856e-02]],

         [[-5.6850e-02, -3.2762e-02, -2.5924e-02],
          [ 1.1989e-02, -1.1531e-02,  8.4670e-02],
          [-2.4250e-02,  1.2167e-02,  5.8620e-02]]],


        ...,


        [[[ 5.2604e-02,  7.0110e-02, -4.5487e-02],
          [ 1.7318e-01,  6.6015e-03, -6.6069e-02],
          [ 4.1774e-02, -9.7841e-02, -1.6882e-02]],

         [[-2.8061e-02,  9.0967e-02,  1.3242e-02],
          [-3.4734e-02,  3.8089e-02,  3.2702e-02],
          [ 1.7959e-02, -1.6880e-02,  3.6684e-02]],

         [[-4.9549e-02, -9.4502e-03,  7.1876e-03],
          [-1.6465e-02, -3.1285e-02, -7.1428e-02],
          [-5.4911e-02,  6.1170e-02,  3.5124e-02]],

         ...,

         [[ 5.9924e-02,  6.8114e-02,  5.8135e-03],
          [ 3.2220e-02, -2.7743e-02, -8.7114e-02],
          [ 2.4452e-02,  2.1083e-02, -4.5652e-02]],

         [[ 3.0879e-02,  3.2694e-02, -4.1942e-02],
          [-1.0425e-01,  2.1597e-02,  1.4271e-02],
          [-5.2956e-03, -3.5377e-02, -3.9783e-02]],

         [[-5.2974e-02,  1.0897e-01, -1.4049e-01],
          [-3.1115e-02, -4.4703e-02,  1.0695e-02],
          [-3.9635e-02,  1.5346e-02, -2.0172e-02]]],


        [[[ 4.5179e-02, -3.6321e-02, -6.4972e-03],
          [-1.8733e-02,  9.6486e-03, -2.4324e-02],
          [ 3.9419e-03, -2.0317e-02,  3.7465e-02]],

         [[-1.6831e-02, -6.3976e-02,  4.8537e-02],
          [ 5.7714e-02,  2.1905e-02,  1.2279e-02],
          [-6.6665e-02, -1.9556e-02, -2.0898e-02]],

         [[ 3.1843e-02, -1.7252e-02,  7.4219e-03],
          [ 1.0379e-01,  6.0184e-02, -4.5007e-02],
          [-8.2942e-03,  1.9619e-02, -9.2739e-03]],

         ...,

         [[ 1.2377e-01, -4.3174e-02,  5.8951e-03],
          [-3.5167e-02,  4.1490e-02, -4.8401e-02],
          [ 1.6738e-02,  6.5694e-02,  7.2068e-03]],

         [[-4.2990e-02,  6.8632e-02,  2.7436e-02],
          [ 4.0007e-03,  6.7497e-02,  4.6314e-03],
          [-1.4759e-02,  1.7845e-02,  2.7793e-02]],

         [[ 2.9306e-02, -1.2020e-02,  4.1570e-03],
          [-8.9126e-03, -7.1730e-02, -5.0701e-03],
          [ 2.2614e-02, -1.8278e-02, -1.4521e-02]]],


        [[[ 5.5575e-02,  2.5923e-02,  3.9020e-02],
          [-2.8076e-02,  8.7786e-03,  4.7078e-03],
          [-8.8693e-03,  3.7355e-02, -6.7576e-03]],

         [[-4.3754e-02, -3.7489e-03, -1.5260e-01],
          [-7.7169e-03, -4.4621e-02,  3.7512e-02],
          [ 2.6885e-02, -1.4714e-02, -7.9234e-02]],

         [[ 7.4333e-03,  1.2766e-02,  4.2405e-02],
          [-1.4523e-02, -7.3883e-02, -6.9957e-02],
          [ 2.2319e-02, -3.0563e-02,  1.8020e-02]],

         ...,

         [[ 3.9755e-04, -3.7973e-03, -8.3702e-03],
          [-1.7749e-02, -4.4245e-02, -2.8824e-02],
          [ 1.9635e-02, -4.5471e-03,  1.5831e-02]],

         [[-3.6217e-02,  7.3105e-02,  1.6512e-03],
          [-2.6954e-02,  1.3889e-02,  1.5334e-02],
          [ 1.8150e-02,  4.8755e-02,  2.0895e-02]],

         [[ 6.2401e-02,  3.2238e-02, -9.5288e-02],
          [-9.6820e-02, -2.4489e-02, -3.1281e-02],
          [-5.4756e-02,  1.0213e-02,  5.2936e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.2153]],

         [[ 0.0329]],

         [[ 0.2486]],

         ...,

         [[-0.1145]],

         [[ 0.2018]],

         [[-0.0452]]],


        [[[ 0.0556]],

         [[-0.0241]],

         [[ 0.0104]],

         ...,

         [[ 0.0180]],

         [[-0.0144]],

         [[ 0.0684]]],


        [[[-0.1034]],

         [[ 0.0389]],

         [[-0.0012]],

         ...,

         [[ 0.0123]],

         [[ 0.0010]],

         [[-0.0925]]],


        ...,


        [[[ 0.1274]],

         [[ 0.0080]],

         [[ 0.0004]],

         ...,

         [[ 0.0630]],

         [[ 0.0645]],

         [[-0.0656]]],


        [[[-0.0617]],

         [[ 0.1943]],

         [[-0.1001]],

         ...,

         [[-0.1921]],

         [[ 0.0740]],

         [[ 0.1240]]],


        [[[-0.0571]],

         [[ 0.0290]],

         [[ 0.0399]],

         ...,

         [[ 0.1936]],

         [[-0.0353]],

         [[ 0.1472]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-0.0049, -0.0639,  0.0704],
          [-0.0308, -0.0392, -0.0323],
          [ 0.0018,  0.0109,  0.0363]],

         [[-0.0854,  0.0351,  0.0050],
          [-0.0325, -0.0478, -0.0101],
          [ 0.0361,  0.0138,  0.0187]],

         [[-0.0461, -0.0575, -0.0072],
          [-0.0057, -0.0140,  0.0413],
          [ 0.0104, -0.0253,  0.0382]],

         ...,

         [[ 0.0487, -0.0496, -0.0039],
          [ 0.0399, -0.0972, -0.0140],
          [ 0.0290,  0.0313, -0.0418]],

         [[-0.0273, -0.0258,  0.0466],
          [ 0.0109, -0.0222, -0.0245],
          [-0.0249,  0.0145,  0.0440]],

         [[ 0.0450,  0.0136, -0.0414],
          [ 0.0484,  0.0105,  0.0213],
          [-0.0012, -0.0054, -0.0218]]],


        [[[ 0.0074,  0.0056, -0.0347],
          [-0.0250,  0.0517,  0.0232],
          [ 0.0431, -0.0094, -0.0582]],

         [[ 0.0080, -0.0048, -0.0317],
          [-0.0076, -0.0125, -0.0609],
          [-0.0160, -0.0246, -0.0149]],

         [[-0.0174,  0.0194,  0.0612],
          [ 0.0485,  0.0830, -0.0101],
          [ 0.0084,  0.0565, -0.0173]],

         ...,

         [[ 0.0104, -0.0216, -0.0028],
          [-0.0251,  0.0792,  0.0471],
          [-0.0205, -0.0190,  0.0366]],

         [[ 0.0261,  0.0643,  0.0785],
          [-0.0631,  0.0058,  0.0156],
          [-0.0519, -0.0045, -0.0212]],

         [[ 0.0648, -0.0341,  0.0166],
          [-0.0444,  0.0920, -0.0746],
          [ 0.0286, -0.0305, -0.0909]]],


        [[[ 0.0641, -0.0653,  0.0850],
          [ 0.0446,  0.0111,  0.0659],
          [ 0.1370, -0.0094, -0.0077]],

         [[ 0.0589,  0.0459,  0.0250],
          [ 0.0190, -0.0301, -0.0254],
          [ 0.0004, -0.0142, -0.0576]],

         [[-0.0151, -0.0091,  0.0151],
          [ 0.0016,  0.0099, -0.0243],
          [ 0.0130,  0.0064,  0.0716]],

         ...,

         [[-0.0329, -0.0694, -0.0141],
          [ 0.0218, -0.0481,  0.0435],
          [ 0.0228, -0.0133,  0.0135]],

         [[ 0.0478,  0.0482,  0.0175],
          [-0.0376, -0.0361,  0.0120],
          [ 0.0383,  0.0273,  0.0202]],

         [[-0.0191,  0.0133,  0.0894],
          [ 0.0669,  0.0158, -0.0007],
          [ 0.0507, -0.0207,  0.0051]]],


        ...,


        [[[ 0.0455, -0.0554,  0.0030],
          [ 0.0208, -0.0303,  0.0106],
          [ 0.0340,  0.0185,  0.0468]],

         [[-0.0015,  0.0009,  0.0611],
          [ 0.0269,  0.0642,  0.0455],
          [ 0.0498,  0.0468,  0.0486]],

         [[ 0.0085, -0.0098, -0.0251],
          [ 0.0647,  0.0272, -0.0006],
          [ 0.0318,  0.0160, -0.0179]],

         ...,

         [[ 0.0885, -0.0293, -0.0453],
          [-0.0177, -0.0463,  0.0668],
          [ 0.0095, -0.0938, -0.0089]],

         [[ 0.0286,  0.0070,  0.0383],
          [-0.0546, -0.0462,  0.0526],
          [-0.0272,  0.0424, -0.0236]],

         [[ 0.0118,  0.0782, -0.0046],
          [-0.0084, -0.0053,  0.0082],
          [-0.0536, -0.0150,  0.0043]]],


        [[[ 0.0644,  0.0429, -0.0284],
          [ 0.0148,  0.0838, -0.0378],
          [ 0.0017, -0.0241, -0.0194]],

         [[-0.0223, -0.0104, -0.0044],
          [-0.0007,  0.0116, -0.0571],
          [ 0.0581,  0.0101,  0.0131]],

         [[-0.0477,  0.0754, -0.0008],
          [ 0.0340,  0.0356,  0.0580],
          [ 0.0159, -0.0253, -0.0637]],

         ...,

         [[-0.0805,  0.0301,  0.0820],
          [ 0.0139,  0.0121,  0.0123],
          [ 0.0012, -0.0068, -0.0635]],

         [[-0.0122,  0.0028,  0.0371],
          [-0.0258, -0.0160,  0.0548],
          [ 0.0139,  0.0035, -0.0194]],

         [[-0.0181,  0.0141, -0.1238],
          [ 0.0678,  0.0311, -0.0129],
          [ 0.0308,  0.0074,  0.0030]]],


        [[[ 0.0590,  0.0294, -0.0440],
          [-0.0084, -0.0045,  0.0215],
          [ 0.1169, -0.0031, -0.0046]],

         [[ 0.0752, -0.0117,  0.0405],
          [-0.0456,  0.0245,  0.0015],
          [-0.0159, -0.0199, -0.0092]],

         [[-0.0387, -0.0892, -0.0114],
          [ 0.0084,  0.0145,  0.0671],
          [-0.0155,  0.0286, -0.0292]],

         ...,

         [[-0.0210,  0.1130, -0.0438],
          [-0.0301, -0.0541,  0.0232],
          [-0.0677, -0.0355, -0.0618]],

         [[-0.0003, -0.0095,  0.0974],
          [-0.0040, -0.0221,  0.0404],
          [ 0.0220, -0.0194,  0.0808]],

         [[ 0.0047, -0.0018,  0.1074],
          [-0.0846, -0.0151,  0.0314],
          [-0.0746,  0.0333,  0.0310]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 1.2681e-03,  1.6694e-03, -7.1362e-02],
          [-3.1111e-02, -4.8294e-02, -7.7050e-02],
          [ 1.0242e-02,  5.6706e-02, -2.0499e-02]],

         [[-5.1789e-02,  1.3576e-02, -1.3916e-02],
          [ 4.1417e-02, -6.6628e-02, -7.2757e-02],
          [ 4.9604e-03, -8.2026e-02,  1.3436e-02]],

         [[-3.9463e-02, -4.9455e-02,  1.8488e-02],
          [ 9.0014e-02,  2.4669e-02,  3.8630e-03],
          [ 3.7769e-02, -3.6908e-02, -5.0216e-02]],

         ...,

         [[-8.5216e-03, -4.5271e-02,  9.5996e-02],
          [-1.3170e-02,  1.8490e-02,  4.9768e-02],
          [-6.0455e-02, -1.2928e-02,  9.1021e-02]],

         [[-1.3826e-02,  5.6412e-03, -4.4187e-02],
          [ 7.3620e-02, -1.7551e-02, -1.8594e-02],
          [ 4.1667e-02, -7.1708e-02,  7.6444e-04]],

         [[-5.1323e-02,  3.2052e-03, -6.1078e-02],
          [ 1.7189e-02,  4.0087e-02, -6.9115e-02],
          [ 6.0256e-02,  1.3755e-02,  4.5810e-02]]],


        [[[-7.1944e-02,  1.8922e-02,  2.1801e-02],
          [ 3.5831e-02, -4.6647e-02, -5.6290e-02],
          [ 2.3567e-02,  1.2513e-02,  2.1760e-02]],

         [[ 1.8883e-02,  5.8682e-02,  1.7095e-02],
          [-6.9161e-02, -8.0344e-02,  3.4658e-02],
          [-1.3638e-02, -6.6006e-02,  3.5838e-02]],

         [[ 1.8103e-03,  3.4037e-02, -1.9211e-02],
          [ 7.0171e-02, -5.2930e-02, -1.3534e-02],
          [-8.6266e-03, -1.3112e-02, -2.4179e-05]],

         ...,

         [[ 6.4600e-02, -5.5710e-03, -7.8608e-03],
          [-4.0246e-02, -4.5669e-02, -1.9265e-02],
          [ 8.4170e-02, -5.4696e-02,  1.2198e-02]],

         [[-8.9769e-02, -2.0611e-02, -4.2210e-02],
          [-5.1007e-03,  2.5014e-03,  2.2975e-02],
          [-4.9468e-02,  1.0531e-02,  3.4687e-02]],

         [[-2.2681e-02, -4.3283e-03, -3.7828e-02],
          [-1.5020e-02, -2.3812e-02,  6.6174e-03],
          [-2.3669e-02, -7.0950e-03, -4.6481e-02]]],


        [[[-1.9856e-03,  3.2771e-02, -4.7138e-02],
          [-1.3266e-02, -6.0076e-03,  2.2273e-02],
          [ 1.5388e-02, -6.9107e-02, -1.1235e-02]],

         [[ 3.4859e-02, -2.2408e-02, -9.8048e-03],
          [-2.3102e-02,  8.6978e-03,  1.9009e-02],
          [-8.4805e-02, -5.9831e-02,  1.6615e-02]],

         [[-2.3426e-02, -2.5195e-02,  3.3718e-02],
          [ 2.2555e-03,  5.5012e-02, -1.0541e-01],
          [-3.6276e-02, -4.8309e-04, -4.5831e-02]],

         ...,

         [[-3.2669e-02,  6.4809e-02, -3.1884e-02],
          [ 1.5382e-03,  8.3071e-02, -3.3131e-02],
          [ 5.2094e-02, -3.7697e-03, -6.5006e-03]],

         [[-3.9565e-03,  8.6405e-02,  8.6564e-03],
          [-3.5433e-02, -1.4349e-02,  2.2149e-02],
          [-2.4568e-02, -2.0557e-02,  1.0322e-01]],

         [[-7.2933e-03,  3.7163e-02,  7.8763e-02],
          [-2.2269e-02, -6.5472e-03, -4.3489e-02],
          [-1.0247e-03, -1.5863e-02, -3.3643e-02]]],


        ...,


        [[[ 2.9308e-03,  6.6578e-02, -2.0250e-02],
          [ 1.8919e-03, -1.5425e-02, -7.7966e-02],
          [-4.1015e-02, -4.6460e-02,  1.8959e-02]],

         [[-9.6122e-03, -2.1533e-02, -5.2277e-02],
          [ 3.1953e-02,  2.1641e-02, -2.5311e-03],
          [-1.7085e-02,  4.2288e-02,  4.2200e-02]],

         [[-3.0530e-02,  2.4889e-02,  7.0913e-02],
          [ 2.6949e-02, -4.0343e-02,  1.5730e-02],
          [ 5.0675e-02,  3.0662e-02, -1.4443e-02]],

         ...,

         [[ 1.8977e-02, -2.6613e-02, -1.7111e-03],
          [ 6.7082e-02, -5.6068e-03, -1.0001e-02],
          [ 7.0247e-03, -3.0075e-02,  4.2058e-02]],

         [[ 7.1140e-03,  2.1002e-02,  3.8247e-02],
          [ 1.6992e-02, -3.7436e-02, -1.9249e-02],
          [-2.1711e-03,  6.6743e-02, -4.9560e-02]],

         [[ 4.6757e-02, -5.3384e-02,  8.1602e-02],
          [ 4.2715e-02,  2.2242e-02, -2.8659e-02],
          [-2.9508e-02, -3.7984e-02, -9.0096e-03]]],


        [[[-3.2303e-02,  9.1762e-03,  5.8051e-02],
          [-1.0907e-02,  4.3886e-03,  7.8442e-03],
          [-1.4290e-02,  2.1278e-02,  3.0189e-02]],

         [[-3.0001e-03, -1.6686e-02,  9.7041e-03],
          [ 2.1789e-02, -2.8555e-02, -3.0361e-03],
          [ 4.6778e-02,  3.4102e-02,  1.2187e-02]],

         [[-6.3498e-02,  1.9498e-03, -5.5641e-02],
          [ 5.2385e-02,  2.4384e-02,  2.4523e-04],
          [-3.7305e-02, -5.0102e-02,  6.8307e-03]],

         ...,

         [[ 3.4350e-02,  4.1410e-02,  4.8506e-02],
          [ 6.4037e-03, -1.3235e-02, -1.8344e-03],
          [-1.0921e-03,  4.2330e-02,  2.8140e-02]],

         [[-3.1391e-02, -6.3526e-02, -2.4760e-02],
          [-9.3363e-03,  3.8222e-02, -9.8855e-02],
          [ 8.6383e-03,  4.0983e-02,  1.6093e-02]],

         [[-5.4314e-02, -1.1263e-02,  3.3139e-02],
          [ 3.6673e-02, -1.3863e-03, -6.8423e-02],
          [ 5.6959e-02,  9.8132e-02, -5.4168e-03]]],


        [[[ 5.1988e-02,  6.2998e-03, -4.0868e-02],
          [ 6.1205e-02, -1.2602e-02, -2.2389e-02],
          [ 3.0876e-02,  1.0981e-02,  8.8895e-02]],

         [[-4.1000e-02,  3.7703e-02, -4.3555e-03],
          [ 3.6998e-02,  4.7880e-02, -1.1053e-03],
          [ 1.4035e-01,  9.7974e-03, -4.4690e-02]],

         [[-1.0842e-02, -4.0534e-02, -5.4602e-03],
          [ 3.1014e-02, -1.4529e-02, -4.2684e-03],
          [-3.6968e-02,  8.7283e-03,  6.4592e-02]],

         ...,

         [[-3.1957e-02,  4.8976e-03, -1.5667e-02],
          [-1.5016e-02,  4.9392e-02, -6.7796e-02],
          [ 1.9054e-02, -1.9800e-02,  3.5467e-02]],

         [[-1.0521e-02,  8.2761e-02, -1.3667e-02],
          [ 4.7754e-02, -2.7517e-02,  2.7869e-02],
          [ 9.1416e-02,  5.7757e-02, -7.2962e-02]],

         [[ 7.4064e-02,  1.1125e-02,  3.9973e-02],
          [-8.2690e-02,  4.0164e-03, -5.0627e-02],
          [ 4.8193e-03, -3.2565e-02, -5.6871e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[-0.1220]],

         [[ 0.0587]],

         [[ 0.0243]],

         ...,

         [[ 0.0022]],

         [[-0.0447]],

         [[-0.1412]]],


        [[[ 0.0067]],

         [[ 0.0576]],

         [[-0.0050]],

         ...,

         [[ 0.0013]],

         [[-0.0118]],

         [[-0.0483]]],


        [[[ 0.0171]],

         [[-0.0507]],

         [[ 0.1779]],

         ...,

         [[-0.0084]],

         [[-0.0382]],

         [[ 0.0062]]],


        ...,


        [[[ 0.0043]],

         [[-0.1166]],

         [[-0.1195]],

         ...,

         [[-0.0216]],

         [[-0.0582]],

         [[ 0.2162]]],


        [[[ 0.0866]],

         [[ 0.0028]],

         [[-0.0887]],

         ...,

         [[-0.0602]],

         [[-0.1532]],

         [[-0.0036]]],


        [[[-0.1197]],

         [[-0.0644]],

         [[ 0.1035]],

         ...,

         [[-0.0744]],

         [[ 0.0452]],

         [[ 0.0209]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[ 0.0216,  0.0214, -0.0164],
          [ 0.0160,  0.0809, -0.0866],
          [-0.0221, -0.0483,  0.0514]],

         [[ 0.0055, -0.0341, -0.0153],
          [ 0.0040,  0.0037, -0.0056],
          [ 0.0131,  0.0194, -0.0347]],

         [[ 0.0021,  0.0244,  0.0134],
          [ 0.0604, -0.0405, -0.0567],
          [-0.0774,  0.0062,  0.0071]],

         ...,

         [[ 0.0575,  0.0004,  0.0360],
          [ 0.0193,  0.0131,  0.0532],
          [ 0.0029,  0.0167, -0.0048]],

         [[ 0.0008,  0.0024,  0.0349],
          [-0.0321, -0.0622, -0.0480],
          [-0.0617,  0.0525, -0.0745]],

         [[ 0.0371, -0.0244, -0.0074],
          [-0.0091,  0.0206, -0.0359],
          [ 0.0309,  0.0461,  0.0140]]],


        [[[-0.0458, -0.0140, -0.0253],
          [ 0.0166, -0.0336,  0.0616],
          [-0.0007,  0.0397,  0.0206]],

         [[ 0.0094, -0.0068,  0.0031],
          [-0.0031,  0.0193, -0.0147],
          [-0.0061, -0.0598, -0.0341]],

         [[-0.0115, -0.0078, -0.0157],
          [ 0.0711,  0.0720, -0.0229],
          [-0.0059, -0.0220,  0.0094]],

         ...,

         [[ 0.0049,  0.0247,  0.0017],
          [-0.0144,  0.0119,  0.0208],
          [ 0.0038,  0.0097, -0.0337]],

         [[-0.0060, -0.0277,  0.0391],
          [-0.0069,  0.0510, -0.0180],
          [-0.0020,  0.0001, -0.0510]],

         [[-0.0190, -0.0194,  0.0464],
          [-0.0531,  0.0854, -0.0527],
          [ 0.0267,  0.0036, -0.0037]]],


        [[[-0.0080, -0.0325,  0.0128],
          [-0.0100,  0.0147,  0.0025],
          [-0.0207, -0.0339,  0.0187]],

         [[ 0.0213,  0.0395, -0.0549],
          [-0.0436,  0.0241,  0.0031],
          [-0.0352,  0.0369, -0.0123]],

         [[ 0.0599, -0.0375, -0.0417],
          [-0.0442, -0.0339, -0.0560],
          [-0.0212, -0.0400, -0.0255]],

         ...,

         [[ 0.0728, -0.0651,  0.0665],
          [ 0.0235, -0.0345,  0.0327],
          [ 0.0309, -0.0090,  0.0573]],

         [[ 0.0270,  0.0038, -0.0179],
          [ 0.0047, -0.0493, -0.0058],
          [-0.0562,  0.0102,  0.0223]],

         [[ 0.0557,  0.0212,  0.0174],
          [ 0.0136, -0.0077, -0.0196],
          [ 0.0325, -0.0416,  0.0069]]],


        ...,


        [[[ 0.0491, -0.0097,  0.0476],
          [-0.0066, -0.0397,  0.0060],
          [-0.0351, -0.0042, -0.0047]],

         [[ 0.0266,  0.0773, -0.0101],
          [ 0.0070,  0.0510,  0.0311],
          [-0.0124, -0.0426,  0.0128]],

         [[ 0.0443, -0.0253, -0.0379],
          [-0.0288,  0.0489,  0.0015],
          [-0.0015,  0.0483, -0.0159]],

         ...,

         [[ 0.0198, -0.0429, -0.0432],
          [-0.0064, -0.0077, -0.0187],
          [-0.0131, -0.0508,  0.0462]],

         [[ 0.0649, -0.0314,  0.0373],
          [-0.0288,  0.0399, -0.0221],
          [-0.0350, -0.0160,  0.0247]],

         [[-0.0250,  0.0483,  0.0538],
          [ 0.0177, -0.0339, -0.0127],
          [-0.0124,  0.0094,  0.0252]]],


        [[[-0.0307,  0.0296,  0.0678],
          [ 0.0425, -0.0142,  0.0373],
          [ 0.0362,  0.0776,  0.0181]],

         [[ 0.0213,  0.0117, -0.0160],
          [-0.0229,  0.0081, -0.0042],
          [ 0.0077,  0.0218, -0.0148]],

         [[-0.0322,  0.0122, -0.0146],
          [-0.0160, -0.0230,  0.0249],
          [ 0.0137, -0.0346, -0.0268]],

         ...,

         [[-0.0614, -0.0492, -0.0214],
          [-0.0216,  0.0117,  0.0046],
          [ 0.0544,  0.0027,  0.0124]],

         [[ 0.0515,  0.0101, -0.0006],
          [ 0.0569,  0.0170, -0.0469],
          [-0.0149, -0.0082, -0.0017]],

         [[ 0.0204, -0.0004, -0.0460],
          [-0.0269,  0.0036, -0.0563],
          [-0.0261, -0.0029,  0.0301]]],


        [[[-0.0092, -0.0081,  0.0125],
          [ 0.0179,  0.0364, -0.0380],
          [ 0.0375, -0.0048,  0.0542]],

         [[-0.0011, -0.0329, -0.0293],
          [-0.0681, -0.0503, -0.0918],
          [-0.0111,  0.0081,  0.0138]],

         [[-0.0091,  0.0066,  0.0255],
          [-0.0126, -0.0565, -0.0035],
          [ 0.0027,  0.0321, -0.0246]],

         ...,

         [[-0.0320,  0.0260, -0.0096],
          [ 0.0415,  0.0129,  0.0031],
          [-0.0216, -0.0064,  0.0297]],

         [[-0.0716,  0.0340,  0.0558],
          [ 0.0174, -0.0432,  0.0116],
          [-0.0387, -0.0755,  0.0244]],

         [[-0.0649, -0.0619,  0.0198],
          [-0.0545, -0.0419,  0.0089],
          [-0.0185,  0.0690, -0.0001]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[-9.8804e-03, -6.3902e-03,  3.1884e-03,  ...,  8.7609e-03,
            1.5163e-02, -6.7841e-03],
          [-2.3882e-02,  3.2304e-02, -5.9061e-03,  ...,  6.9026e-03,
           -1.7498e-02, -3.6255e-02],
          [ 4.0072e-03, -1.1281e-02, -3.1482e-03,  ...,  1.9302e-02,
           -2.1886e-02, -5.0942e-02],
          ...,
          [-2.1169e-02,  4.3617e-04, -1.2818e-03,  ..., -1.3142e-02,
            6.1947e-03, -1.4393e-02],
          [ 3.4456e-02,  2.3490e-02, -2.7474e-02,  ...,  5.1687e-03,
            1.7755e-02, -5.2875e-03],
          [ 9.9861e-03, -1.6641e-03,  8.5932e-03,  ...,  1.7167e-03,
            2.0718e-02, -2.8848e-03]],

         [[-2.9372e-02,  1.6230e-02, -1.6300e-03,  ..., -1.6503e-02,
            1.4014e-03,  1.3435e-02],
          [-3.3681e-02,  4.0179e-03, -1.9512e-02,  ...,  1.1800e-02,
           -1.0988e-03, -7.2150e-03],
          [-2.6306e-02, -1.6041e-02, -3.1120e-02,  ..., -1.4951e-02,
            3.8345e-02, -2.1395e-03],
          ...,
          [-2.7072e-02,  3.6682e-02,  1.1382e-02,  ...,  1.2819e-02,
            9.8150e-04, -2.6539e-02],
          [-7.4942e-03, -9.3991e-03,  2.5916e-02,  ...,  2.2897e-02,
            1.0544e-02,  3.4914e-02],
          [-1.2693e-03, -3.3118e-03, -2.4762e-02,  ..., -2.4015e-02,
            5.8983e-03, -1.5354e-02]]],


        [[[ 1.8634e-02, -2.7084e-02, -2.8154e-03,  ...,  2.3055e-02,
            2.1999e-02, -3.6609e-04],
          [-2.4266e-02,  5.8928e-03,  1.4845e-02,  ..., -4.1764e-02,
           -9.3320e-03, -1.5029e-02],
          [-2.6653e-02,  1.3854e-02, -3.3216e-02,  ..., -2.5458e-02,
            5.0110e-02, -4.2248e-03],
          ...,
          [ 3.4749e-03,  2.6545e-02,  5.0840e-02,  ..., -1.2972e-03,
            8.2245e-03, -2.2132e-02],
          [-4.5146e-03, -4.1037e-02, -2.0771e-02,  ..., -1.3666e-02,
           -5.1944e-03, -1.7398e-02],
          [ 2.7246e-02,  1.4469e-02, -1.9980e-02,  ...,  1.5295e-02,
           -4.9045e-03,  9.0393e-03]],

         [[-3.9609e-03,  5.1931e-03, -9.0478e-03,  ..., -1.5848e-02,
           -1.5591e-02, -1.5839e-02],
          [-6.1283e-03,  4.4819e-03,  2.8943e-02,  ...,  4.4002e-04,
           -2.1990e-03, -2.0470e-02],
          [-1.2723e-02,  5.2669e-03, -1.1435e-02,  ..., -2.1634e-02,
            2.2572e-02, -2.6974e-02],
          ...,
          [-1.4559e-02, -1.9184e-02,  4.3387e-03,  ..., -2.7314e-02,
           -9.7991e-03,  2.2819e-02],
          [-1.0778e-02,  5.3727e-03, -1.6598e-03,  ..., -1.0900e-02,
            4.2480e-03, -3.7622e-02],
          [-7.9181e-03, -3.9873e-03,  1.3265e-02,  ..., -2.6889e-02,
           -2.3437e-02, -2.7672e-02]]],


        [[[ 2.7954e-02,  3.0666e-02, -8.8629e-03,  ...,  1.9499e-02,
            1.8434e-02, -1.7422e-02],
          [-5.1360e-03,  1.7543e-02, -2.2268e-02,  ...,  1.8670e-02,
           -1.2327e-02,  5.2894e-03],
          [-6.1599e-03,  1.3590e-02, -1.9734e-02,  ...,  3.3110e-02,
           -3.8932e-02, -2.0205e-02],
          ...,
          [ 6.1504e-03, -1.0392e-02,  4.5468e-03,  ..., -3.7188e-02,
            5.2993e-03,  2.2874e-02],
          [-1.1419e-02, -4.2646e-03,  1.6841e-02,  ..., -3.5005e-02,
           -1.8728e-02,  2.4151e-02],
          [ 4.0091e-02, -1.2569e-02,  1.6991e-02,  ..., -1.2572e-02,
           -9.0781e-03, -1.5326e-02]],

         [[-9.9009e-03, -2.1209e-02,  2.0540e-02,  ...,  1.5351e-02,
            2.6861e-02,  1.0797e-02],
          [ 9.0346e-03,  7.2268e-03,  1.7918e-02,  ..., -7.2830e-03,
            1.3635e-03, -1.3961e-02],
          [ 3.1962e-02, -1.4575e-02, -1.5176e-02,  ...,  1.0976e-02,
           -1.6692e-03,  2.2396e-02],
          ...,
          [ 1.6468e-02, -1.9914e-02,  1.1811e-02,  ...,  8.5691e-03,
           -7.9700e-03,  6.5537e-04],
          [ 1.5417e-03, -1.1323e-02, -2.2875e-02,  ..., -1.9759e-02,
           -6.0143e-03,  2.1321e-02],
          [-1.8052e-02,  9.1754e-03, -1.3527e-03,  ...,  1.0834e-03,
           -9.9378e-03,  2.8593e-02]]],


        ...,


        [[[-3.6681e-02, -1.5546e-02, -1.7758e-02,  ..., -2.1718e-03,
           -1.5750e-02, -1.2368e-02],
          [-2.6860e-02, -3.5897e-03, -3.1501e-02,  ..., -1.7662e-02,
           -1.6369e-02, -1.5498e-02],
          [-1.3517e-02,  1.3919e-02, -1.9408e-02,  ..., -9.9561e-03,
            1.7537e-02, -1.6696e-02],
          ...,
          [-8.1169e-04,  2.6130e-02, -2.4676e-03,  ..., -2.4971e-02,
            9.1847e-03,  1.3941e-02],
          [ 1.2131e-02, -1.3943e-03, -2.0150e-02,  ...,  2.5242e-02,
           -1.7644e-03,  5.3496e-02],
          [ 2.1966e-02, -4.2234e-03,  7.7317e-03,  ...,  1.5228e-02,
           -5.9576e-03,  1.2265e-02]],

         [[-6.1300e-03, -6.0269e-03, -1.8316e-02,  ..., -1.6930e-02,
           -1.0992e-02, -6.6981e-03],
          [ 3.8415e-02, -6.3741e-04,  4.5283e-04,  ...,  3.3957e-03,
            2.7267e-02,  1.7620e-02],
          [ 5.0393e-02,  3.5474e-02, -9.6254e-03,  ...,  5.4245e-04,
           -1.0734e-02, -1.6481e-02],
          ...,
          [ 9.6468e-03, -1.8174e-02,  7.1844e-03,  ...,  4.7324e-02,
           -1.8504e-02, -2.7663e-02],
          [ 2.9499e-03,  8.7077e-03, -1.0121e-02,  ..., -1.6064e-02,
            1.4029e-04, -5.6761e-03],
          [-8.9535e-03, -2.0435e-02, -2.0483e-02,  ..., -2.9815e-03,
           -3.0876e-02,  2.1298e-03]]],


        [[[ 1.2586e-03, -4.8429e-03,  1.3683e-02,  ...,  1.5452e-02,
            4.5046e-02,  1.8871e-02],
          [ 9.3276e-04, -3.1542e-02,  3.8439e-02,  ...,  3.0357e-02,
            2.8943e-02,  3.4061e-02],
          [ 8.8302e-03, -8.0739e-03,  3.6706e-02,  ..., -1.2737e-02,
            3.2226e-02,  1.6549e-03],
          ...,
          [-1.5872e-02,  3.8498e-02,  9.1224e-03,  ...,  1.4699e-03,
           -1.7440e-03,  2.3495e-02],
          [ 1.8643e-02,  3.2758e-02,  2.2792e-02,  ...,  8.7512e-03,
           -4.6940e-03, -3.7488e-04],
          [ 9.9402e-03,  1.0316e-02, -1.1276e-02,  ...,  5.7937e-03,
           -8.6866e-03, -2.3690e-03]],

         [[ 8.0411e-03,  2.6576e-02,  2.6311e-02,  ...,  1.9798e-02,
            4.6059e-02, -1.0752e-02],
          [-3.6137e-03, -1.3945e-03, -5.2833e-03,  ...,  4.1870e-03,
           -1.8141e-02,  1.8987e-02],
          [ 6.8580e-04, -1.7252e-02,  1.5164e-02,  ...,  1.4115e-02,
            1.4513e-02,  1.3305e-03],
          ...,
          [-2.1462e-02, -1.6171e-02,  3.0007e-02,  ...,  8.8606e-03,
            5.5935e-03,  5.6390e-03],
          [-2.2115e-02, -1.8539e-02,  3.8423e-03,  ..., -1.1365e-02,
           -7.8222e-03,  2.1420e-02],
          [-3.1841e-02,  1.8123e-02,  2.6733e-02,  ...,  6.3366e-03,
           -1.4407e-02,  3.7529e-03]]],


        [[[ 2.6593e-02, -9.2517e-03,  3.4636e-02,  ..., -2.3635e-02,
            1.9724e-02,  5.6896e-03],
          [-1.9370e-02, -1.7867e-02,  7.5730e-03,  ..., -5.3210e-03,
           -1.3610e-03,  1.3324e-03],
          [-2.2485e-05, -1.8807e-02,  2.5011e-02,  ...,  4.6118e-02,
           -7.6885e-03, -1.1654e-02],
          ...,
          [ 1.9937e-02, -2.2418e-02, -1.1828e-02,  ..., -3.7607e-02,
           -6.3567e-03,  6.8241e-03],
          [-1.1765e-02,  1.8177e-02,  6.3703e-03,  ...,  3.5572e-02,
           -8.7118e-03, -1.6040e-02],
          [ 7.2779e-03, -3.0394e-02,  1.2636e-02,  ...,  5.0769e-03,
            1.6161e-02,  1.9672e-02]],

         [[ 2.3589e-02, -1.8512e-02, -1.2132e-02,  ...,  1.1713e-02,
            2.2561e-02,  3.6960e-03],
          [ 1.0135e-02, -1.5381e-02, -3.5337e-02,  ...,  6.8320e-03,
           -2.5059e-02,  3.4235e-03],
          [ 1.0009e-02,  3.7534e-03, -6.6295e-03,  ...,  1.9549e-02,
            3.5570e-03,  1.8219e-02],
          ...,
          [-2.1234e-02, -2.8797e-02, -1.8809e-02,  ..., -2.6944e-02,
           -9.8557e-03,  1.9799e-02],
          [ 1.7877e-02,  9.0338e-03, -2.1998e-02,  ..., -2.2007e-02,
           -9.2836e-03, -5.0098e-03],
          [ 9.1167e-03,  3.7273e-03, -5.5285e-03,  ..., -3.5215e-02,
            2.7055e-02, -2.0267e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[ 1.5664e-01, -1.7587e-03, -2.4274e-02],
          [ 1.7386e-02, -1.8769e-02,  1.5019e-02],
          [ 8.7909e-02, -2.6717e-02,  5.1610e-02]],

         [[-8.6948e-02,  4.0039e-03, -8.7171e-02],
          [ 1.5877e-01, -6.9075e-02,  8.3267e-03],
          [ 6.7176e-02,  1.7891e-02, -6.9300e-02]],

         [[ 4.0063e-03, -7.0344e-02,  3.3184e-02],
          [ 2.1194e-02, -3.3936e-02,  5.8124e-03],
          [-4.3207e-02,  4.5423e-02, -4.5529e-02]],

         ...,

         [[ 3.7510e-02, -7.5077e-02, -1.1196e-01],
          [-1.7313e-02, -1.8075e-02, -5.4824e-02],
          [ 1.1772e-01, -4.2177e-02,  6.5339e-02]],

         [[-2.1949e-02, -3.4658e-02, -1.6305e-02],
          [-7.8895e-03,  7.9063e-02,  1.7789e-02],
          [ 1.0530e-01, -1.0816e-01, -1.0205e-04]],

         [[-5.2548e-02, -9.2991e-02,  2.1423e-02],
          [ 6.0108e-02, -3.8402e-02,  1.5475e-01],
          [ 3.6544e-02, -3.4619e-02, -5.6400e-02]]],


        [[[-3.5331e-02,  2.8646e-02, -1.1977e-01],
          [-7.1880e-02, -5.2894e-02, -1.1339e-02],
          [ 3.8412e-02, -5.9399e-03,  3.3329e-02]],

         [[ 5.2266e-02, -2.9157e-02,  3.8259e-02],
          [-8.5771e-03, -1.3240e-02, -5.2315e-02],
          [ 3.5331e-02,  1.3037e-01,  8.4286e-02]],

         [[ 5.2650e-02, -3.9689e-02, -9.0209e-03],
          [ 9.1001e-02,  7.5288e-02, -5.3505e-02],
          [-2.2290e-02,  8.2693e-03,  5.1987e-02]],

         ...,

         [[ 6.5573e-02,  8.0969e-03, -9.2102e-03],
          [ 1.2766e-02,  7.9394e-02, -9.0241e-02],
          [ 7.7389e-02, -1.0268e-01,  6.2759e-04]],

         [[-9.6745e-02,  2.9252e-02, -1.2533e-02],
          [ 4.3251e-03,  6.0885e-03,  5.6602e-02],
          [ 6.1348e-02, -8.6604e-02,  4.5203e-02]],

         [[-1.6810e-02, -2.0325e-02, -2.8382e-02],
          [-1.3099e-01,  1.1017e-01, -3.6472e-02],
          [ 2.7758e-02, -2.9949e-03, -4.3805e-02]]],


        [[[ 8.7110e-03, -9.4766e-03, -5.6589e-02],
          [ 5.6002e-02, -3.7542e-02,  8.5594e-03],
          [-5.5120e-02,  7.2172e-02,  1.1781e-01]],

         [[-3.0594e-02,  3.8241e-02, -4.6733e-02],
          [-1.4765e-02,  9.7338e-02, -9.7487e-02],
          [ 7.4029e-02, -1.5159e-03, -1.0957e-01]],

         [[ 5.7951e-02, -3.1064e-02, -3.9943e-02],
          [-6.8088e-02,  1.7948e-02, -1.2588e-01],
          [-6.5729e-02, -1.0509e-01, -3.5542e-02]],

         ...,

         [[-3.6522e-03,  1.9153e-03, -4.0165e-02],
          [ 2.5602e-02, -1.0857e-01,  1.8954e-02],
          [-2.5669e-02, -1.2487e-02,  1.3461e-01]],

         [[ 9.1507e-02, -4.8150e-02, -3.6038e-02],
          [ 2.3613e-02,  4.6588e-02, -9.1705e-02],
          [-1.3048e-02, -3.0135e-02, -1.8590e-02]],

         [[-4.2524e-02,  4.4379e-02, -4.1244e-02],
          [-3.4394e-02,  5.8499e-02,  4.2778e-02],
          [-2.1301e-02, -3.6790e-04, -2.6072e-02]]],


        ...,


        [[[-1.4678e-01, -6.6182e-03, -8.6265e-02],
          [ 4.1204e-02, -1.4608e-03, -2.6096e-02],
          [-7.5932e-02,  9.4115e-02,  3.6251e-02]],

         [[ 2.2178e-02,  1.6881e-02, -3.0285e-04],
          [-3.6558e-02, -7.3257e-02,  3.5808e-02],
          [-2.9093e-02, -6.2401e-02,  7.5695e-02]],

         [[-7.1412e-02, -1.0516e-02,  6.0065e-02],
          [ 6.2904e-02, -6.6588e-03, -2.9927e-02],
          [ 4.6208e-02,  1.3762e-02,  3.0513e-02]],

         ...,

         [[-1.4961e-02, -3.1183e-02, -5.5146e-02],
          [ 1.6017e-02,  4.3443e-02,  6.9240e-02],
          [ 3.2323e-02, -8.7536e-03,  3.9194e-02]],

         [[ 6.3490e-03,  6.9418e-02, -2.8987e-02],
          [ 3.0564e-02,  5.7572e-02, -4.6710e-02],
          [-2.5234e-02, -1.8067e-02, -5.7625e-02]],

         [[-1.5497e-02, -8.1962e-02, -2.7989e-04],
          [ 1.4466e-01, -2.7546e-02, -2.1742e-02],
          [-3.8330e-02,  2.4769e-02, -8.5342e-02]]],


        [[[-8.8835e-03,  2.4126e-02,  2.4087e-02],
          [-1.0737e-02, -1.0537e-02, -1.2983e-01],
          [-2.8614e-02, -1.1434e-02,  9.4266e-02]],

         [[-1.5886e-02,  8.1995e-02, -5.1169e-02],
          [-4.5619e-02, -1.6690e-03,  1.6545e-02],
          [-7.9273e-03, -3.1051e-02, -1.3264e-01]],

         [[-4.7209e-02,  3.2535e-02, -8.4587e-02],
          [-1.5901e-03,  1.9213e-03,  5.9037e-02],
          [ 9.9096e-02, -5.6099e-04,  3.9432e-02]],

         ...,

         [[-7.9556e-02,  2.0019e-02,  4.4575e-02],
          [ 4.3821e-02, -1.2463e-01, -1.7995e-02],
          [-1.2941e-02,  9.4347e-02,  4.3586e-02]],

         [[-4.1828e-02, -6.6713e-04,  1.1527e-01],
          [ 1.9778e-02,  1.2962e-01, -3.0652e-02],
          [-1.1814e-02, -2.8886e-02, -4.0728e-02]],

         [[ 9.1559e-02, -1.3435e-02,  1.9281e-02],
          [ 2.2852e-03,  9.2573e-03, -8.0787e-02],
          [-7.6334e-02, -6.3613e-02, -5.6410e-02]]],


        [[[ 1.1640e-01,  3.1695e-03, -2.8303e-02],
          [-1.0042e-01, -5.2587e-02, -1.8944e-02],
          [-3.3883e-02, -2.6286e-03, -1.0682e-02]],

         [[-6.1362e-02,  4.5841e-02, -6.4534e-02],
          [ 3.6057e-02, -4.4661e-02,  5.8191e-02],
          [ 4.5715e-02, -6.3819e-02,  9.6379e-02]],

         [[ 4.0864e-02, -4.5114e-02,  1.2832e-01],
          [-3.9687e-02, -5.7211e-02,  1.8735e-03],
          [ 5.7605e-02,  8.2788e-02,  1.3111e-02]],

         ...,

         [[-1.5044e-01,  1.1821e-02,  4.3954e-02],
          [ 4.1486e-02,  6.6019e-02, -4.6434e-03],
          [-5.7821e-02, -1.4988e-02,  1.4185e-01]],

         [[ 7.3896e-02,  8.5893e-02,  3.9575e-03],
          [-3.7651e-02,  5.3578e-02, -9.5933e-02],
          [ 7.8798e-02,  2.0323e-02, -7.8200e-02]],

         [[ 3.8115e-02,  6.8730e-02,  3.3285e-02],
          [ 2.4248e-03, -5.9892e-02, -5.6214e-02],
          [-4.7752e-02,  3.5649e-02,  2.9228e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-6.9096e-02,  3.6266e-02, -6.1363e-02],
          [ 8.7290e-02, -5.8077e-02,  2.5916e-02],
          [ 2.0335e-02, -3.6750e-02, -8.0859e-02]],

         [[-5.9883e-03,  3.0120e-02, -2.1214e-02],
          [ 4.1024e-02, -3.2532e-03, -5.0120e-02],
          [-4.9610e-02,  1.6753e-02,  9.8208e-02]],

         [[-1.2707e-02,  1.6834e-03,  4.8918e-02],
          [ 8.5225e-02,  1.5407e-02,  3.9372e-02],
          [ 4.1876e-03,  4.1436e-02,  2.1479e-02]],

         ...,

         [[ 4.1685e-02, -2.7536e-03,  5.6980e-03],
          [-1.3203e-02, -2.5838e-02, -4.9288e-02],
          [ 2.3767e-02, -5.6809e-02,  8.2390e-02]],

         [[-3.7144e-02,  1.0378e-01, -3.1350e-02],
          [ 9.8243e-03, -2.3797e-02,  4.5215e-03],
          [-3.7694e-02, -6.0178e-02, -4.6778e-02]],

         [[ 6.9774e-03, -8.5719e-03,  8.9041e-03],
          [-1.0095e-01, -7.5330e-02, -7.4952e-02],
          [-4.8255e-02,  5.1236e-02, -5.5424e-02]]],


        [[[ 3.9828e-02,  6.1698e-02, -4.5717e-02],
          [ 5.4684e-02,  5.0126e-03,  6.8630e-02],
          [ 7.9592e-03, -2.3151e-02, -1.7306e-02]],

         [[-4.4557e-02, -3.6789e-02,  1.5779e-02],
          [ 2.3394e-02, -5.1734e-02,  5.4835e-02],
          [-3.4306e-03, -3.4422e-03, -6.6756e-02]],

         [[-2.3268e-02,  1.7627e-03,  7.3091e-02],
          [ 1.2398e-02,  1.2647e-02,  1.2252e-03],
          [ 5.1600e-02, -4.1608e-02, -4.8322e-02]],

         ...,

         [[ 3.1764e-02,  4.1996e-02,  2.8045e-02],
          [ 1.9884e-02, -7.4531e-03, -2.2483e-03],
          [-5.4686e-03,  2.2041e-05,  2.5268e-02]],

         [[-7.7960e-02, -6.5283e-02, -4.0260e-02],
          [-3.1364e-02,  1.5332e-04, -1.7465e-02],
          [ 2.3453e-03,  3.0687e-02, -1.6554e-02]],

         [[ 1.2909e-01,  1.7383e-02, -1.7509e-02],
          [-3.6767e-02,  5.1091e-03, -7.0463e-02],
          [ 3.1458e-02,  4.7334e-02,  1.0430e-02]]],


        [[[ 4.0187e-02, -5.2777e-02, -1.1642e-01],
          [ 9.3068e-03,  2.3356e-03, -1.2897e-03],
          [-3.5181e-02, -2.2096e-02,  8.1150e-03]],

         [[-7.1731e-02,  8.8068e-02, -3.3379e-02],
          [ 8.1177e-02,  7.8343e-03, -3.3153e-02],
          [ 6.4679e-02,  4.1128e-02, -1.7160e-02]],

         [[-4.4479e-02,  5.5676e-02, -3.5368e-02],
          [-2.2618e-02, -6.2601e-03,  1.3276e-02],
          [ 2.9749e-02, -6.5490e-02, -7.4708e-03]],

         ...,

         [[ 4.9819e-02, -2.3232e-03, -5.5372e-03],
          [-4.1932e-02,  4.9837e-02, -5.3985e-03],
          [ 3.9326e-02, -2.9516e-02, -6.1194e-02]],

         [[-5.2899e-03, -4.5101e-02, -1.0019e-02],
          [ 5.8641e-03, -3.9311e-02,  9.0844e-02],
          [-5.6115e-02, -6.3734e-02, -3.2860e-02]],

         [[ 1.5549e-02, -4.5112e-02,  1.1688e-02],
          [-3.8070e-03,  2.1246e-02, -8.6115e-03],
          [ 2.0138e-02, -8.1432e-03, -1.6028e-03]]],


        ...,


        [[[-7.7192e-02,  2.6340e-02,  2.7137e-02],
          [-6.8989e-02, -3.2115e-02,  8.0544e-03],
          [ 5.0120e-02,  2.9942e-02,  1.2845e-03]],

         [[ 2.8372e-02,  1.2127e-03, -1.1728e-02],
          [-2.3252e-02,  2.8528e-02,  7.7934e-03],
          [-2.6055e-03,  2.4924e-02, -5.2438e-02]],

         [[ 4.3346e-02,  1.4703e-02,  4.9052e-02],
          [-1.3329e-02, -1.9479e-02, -3.7647e-02],
          [ 7.2264e-02,  4.9712e-02,  2.5001e-02]],

         ...,

         [[-6.0862e-02,  4.9683e-03,  2.2030e-02],
          [ 1.2118e-02,  7.4432e-03, -1.7212e-02],
          [ 4.5881e-02,  2.1358e-02, -6.6776e-03]],

         [[ 5.1790e-03, -2.9361e-02,  1.5551e-02],
          [-3.4800e-02, -5.9969e-02,  3.6144e-02],
          [ 1.8319e-03,  1.0494e-01, -9.3334e-02]],

         [[ 3.9306e-03, -1.8884e-02, -3.1111e-02],
          [ 5.9314e-02, -1.3942e-02,  2.3411e-02],
          [-3.3643e-03, -2.2685e-03,  3.0231e-02]]],


        [[[ 9.1539e-03,  5.8795e-03, -2.8825e-02],
          [ 7.2498e-03, -1.8243e-02, -4.9390e-02],
          [ 2.5846e-02,  1.0088e-01,  2.3963e-02]],

         [[-4.0056e-03, -9.9016e-03,  3.3772e-02],
          [ 1.0317e-02,  6.5486e-02,  2.6438e-04],
          [-2.1762e-02,  7.3886e-03,  3.7683e-02]],

         [[-6.6382e-03,  6.4909e-02,  9.3531e-02],
          [-4.2728e-02,  7.3121e-02, -7.9237e-04],
          [-3.5012e-02, -2.5436e-02,  2.5336e-02]],

         ...,

         [[-5.4197e-02, -2.7379e-02, -5.6512e-02],
          [ 5.3457e-02, -4.3417e-03,  3.2646e-02],
          [ 1.0631e-02, -5.6097e-02, -1.0531e-02]],

         [[-7.0007e-02,  6.0424e-03, -1.3030e-02],
          [ 9.5472e-03,  1.8147e-02, -2.9800e-02],
          [ 2.7599e-02, -3.3561e-02,  3.8943e-02]],

         [[ 5.6004e-02,  1.5852e-02, -1.0601e-02],
          [-4.8841e-02,  9.3144e-03,  1.0273e-02],
          [-1.9905e-02,  4.5315e-02, -3.3885e-02]]],


        [[[-8.7048e-02, -4.9348e-02,  3.0740e-02],
          [ 6.0142e-02, -5.9744e-03, -1.5473e-02],
          [-5.6442e-03,  2.5556e-03,  6.5108e-03]],

         [[ 1.2733e-02,  6.6085e-02, -5.1337e-02],
          [-4.2375e-03,  2.2946e-02,  4.6011e-02],
          [ 1.6624e-02,  1.7443e-02,  2.7833e-02]],

         [[-4.9507e-02,  4.3594e-02, -9.7629e-03],
          [-5.0736e-02,  6.0731e-02,  6.0902e-02],
          [-4.8392e-02,  5.4208e-02,  6.7990e-02]],

         ...,

         [[-4.7238e-02, -2.2184e-02, -3.3220e-03],
          [-4.9560e-02,  4.3932e-03,  1.7866e-02],
          [ 3.2086e-02,  4.7451e-02,  7.5032e-02]],

         [[ 3.7490e-02,  7.7058e-03,  1.8096e-02],
          [ 1.5932e-03, -2.4341e-02,  8.3076e-02],
          [-1.6313e-02, -3.4554e-02,  4.2187e-02]],

         [[ 1.3378e-03,  4.4446e-02, -6.6853e-02],
          [-3.1772e-02, -3.6716e-02,  3.1881e-02],
          [ 1.2187e-01, -7.8775e-02,  1.5656e-02]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[ 1.0907e-02,  1.1302e-02,  3.9235e-02,  1.9828e-02,  5.7761e-03]],

         [[-8.2793e-03, -2.4270e-02, -1.4996e-02,  1.6943e-02, -1.0415e-02]],

         [[ 6.9654e-03, -3.5635e-03, -1.3647e-02, -2.2577e-02, -2.1132e-02]],

         ...,

         [[ 2.5073e-04, -1.3234e-02,  1.2909e-02,  1.1772e-02, -3.5919e-02]],

         [[-1.8882e-02,  2.1892e-02, -8.3109e-03,  2.9858e-02, -2.9114e-02]],

         [[ 2.3040e-02,  3.4163e-02,  5.5114e-03, -5.0418e-03, -2.8970e-02]]],


        [[[ 4.5400e-03,  1.0451e-02,  1.5438e-02,  4.7067e-03,  4.2220e-02]],

         [[ 5.8366e-03,  2.1118e-03, -1.8117e-02,  3.4286e-03, -2.1765e-02]],

         [[-9.6702e-04, -8.0700e-03,  8.6545e-03, -3.0640e-02,  5.8266e-03]],

         ...,

         [[-2.3489e-02, -3.7568e-03, -4.3956e-03,  3.3257e-02,  2.5845e-02]],

         [[ 4.1191e-03,  2.6178e-02,  3.4714e-02,  3.9904e-02,  2.5310e-03]],

         [[ 2.2986e-02, -2.0352e-02, -2.7430e-02,  8.0699e-03,  3.1640e-02]]],


        [[[ 1.1604e-02,  1.1719e-02, -3.9414e-02, -8.0336e-03, -4.7114e-02]],

         [[ 1.0362e-02, -2.0412e-02,  2.1922e-02, -7.6008e-03, -1.7202e-02]],

         [[ 3.6820e-02,  1.3596e-02,  1.0926e-02,  1.4401e-02, -2.7594e-02]],

         ...,

         [[ 2.1449e-02, -3.5783e-03, -3.0114e-02,  8.4961e-03, -1.8341e-02]],

         [[-8.9467e-04,  2.0139e-02, -3.2350e-03, -1.8424e-02, -1.4420e-02]],

         [[-7.3370e-03, -2.0416e-02, -1.4362e-02,  2.1001e-02, -3.9322e-04]]],


        ...,


        [[[-6.0401e-05,  6.4003e-03,  2.5109e-02, -1.6584e-02, -1.6454e-02]],

         [[-8.7520e-03, -3.8617e-02, -1.1820e-02,  1.6371e-02,  9.1458e-03]],

         [[ 2.2203e-02, -1.2376e-02, -5.8223e-03, -2.3610e-02, -1.8344e-02]],

         ...,

         [[ 2.9289e-02,  3.1794e-03, -7.9454e-03,  7.6624e-03,  6.0831e-02]],

         [[ 3.2635e-02,  5.5421e-02,  1.2396e-02,  3.6605e-03, -1.4492e-02]],

         [[-1.9173e-02,  3.5993e-02,  5.8545e-03,  1.6921e-02,  2.4555e-02]]],


        [[[-2.7245e-02,  1.5395e-02,  2.2642e-03,  1.6968e-02,  2.1598e-03]],

         [[ 1.2263e-02, -3.0511e-02, -3.3767e-02, -2.6307e-02,  2.5460e-02]],

         [[ 1.5402e-02,  1.7002e-02, -3.2116e-02, -2.0710e-02,  5.6583e-03]],

         ...,

         [[-2.7811e-03, -7.8157e-03,  3.9227e-02,  7.3735e-02,  7.3290e-03]],

         [[ 1.0649e-02, -1.1601e-02,  1.9999e-02, -2.2959e-02, -3.4308e-03]],

         [[ 3.4796e-03, -1.5762e-02, -9.4186e-03, -4.4803e-02,  2.8885e-02]]],


        [[[ 1.2892e-02,  1.8666e-02,  3.4310e-02, -2.5714e-02,  3.6988e-02]],

         [[ 6.9117e-03, -3.5197e-02, -9.3498e-04, -3.3315e-04, -1.4212e-02]],

         [[ 3.0482e-02,  2.5877e-02, -7.9404e-03,  1.5536e-02,  5.5592e-04]],

         ...,

         [[-3.6864e-02, -2.2830e-02,  9.9139e-03, -3.9397e-02,  2.7794e-02]],

         [[ 1.5465e-02, -4.2350e-03,  4.3297e-03, -4.0559e-03,  1.9272e-02]],

         [[-2.2423e-02, -5.8601e-03,  2.7563e-02, -4.5627e-02,  1.3693e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 0.0136],
          [-0.0486],
          [ 0.0043],
          [ 0.0293],
          [-0.0112]],

         [[-0.0257],
          [ 0.0008],
          [-0.0092],
          [-0.0182],
          [-0.0329]],

         [[-0.0272],
          [-0.0292],
          [-0.0032],
          [ 0.0077],
          [ 0.0057]],

         ...,

         [[ 0.0449],
          [ 0.0062],
          [-0.0401],
          [-0.0283],
          [ 0.0744]],

         [[ 0.0662],
          [-0.0111],
          [ 0.0127],
          [ 0.0417],
          [-0.0426]],

         [[-0.0170],
          [ 0.0111],
          [ 0.0154],
          [-0.0365],
          [-0.0322]]],


        [[[ 0.0083],
          [-0.0009],
          [-0.0055],
          [ 0.0297],
          [ 0.0266]],

         [[ 0.0411],
          [-0.0144],
          [ 0.0253],
          [ 0.0090],
          [ 0.0031]],

         [[ 0.0184],
          [ 0.0206],
          [ 0.0340],
          [-0.0212],
          [ 0.0166]],

         ...,

         [[ 0.0207],
          [-0.0357],
          [-0.0287],
          [ 0.0203],
          [ 0.0300]],

         [[-0.0239],
          [ 0.0253],
          [ 0.0046],
          [ 0.0266],
          [-0.0123]],

         [[-0.0049],
          [-0.0187],
          [ 0.0165],
          [ 0.0326],
          [-0.0034]]],


        [[[ 0.0048],
          [-0.0049],
          [ 0.0280],
          [ 0.0103],
          [ 0.0111]],

         [[-0.0182],
          [-0.0002],
          [ 0.0187],
          [ 0.0294],
          [ 0.0234]],

         [[-0.0170],
          [ 0.0468],
          [ 0.0440],
          [ 0.0065],
          [ 0.0220]],

         ...,

         [[ 0.0276],
          [ 0.0231],
          [-0.0008],
          [ 0.0190],
          [ 0.0335]],

         [[-0.0113],
          [ 0.0421],
          [ 0.0306],
          [ 0.0169],
          [-0.0129]],

         [[-0.0342],
          [-0.0039],
          [-0.0103],
          [-0.0142],
          [-0.0399]]],


        ...,


        [[[-0.0083],
          [ 0.0009],
          [ 0.0197],
          [-0.0344],
          [-0.0349]],

         [[-0.0351],
          [-0.0044],
          [-0.0118],
          [ 0.0078],
          [-0.0200]],

         [[-0.0020],
          [-0.0087],
          [-0.0139],
          [ 0.0073],
          [ 0.0560]],

         ...,

         [[-0.0044],
          [ 0.0130],
          [-0.0061],
          [ 0.0079],
          [ 0.0060]],

         [[-0.0036],
          [-0.0061],
          [-0.0047],
          [-0.0282],
          [-0.0171]],

         [[ 0.0004],
          [ 0.0077],
          [ 0.0248],
          [-0.0307],
          [-0.0064]]],


        [[[ 0.0202],
          [-0.0233],
          [ 0.0165],
          [-0.0047],
          [-0.0012]],

         [[-0.0043],
          [ 0.0159],
          [-0.0529],
          [-0.0126],
          [ 0.0389]],

         [[-0.0004],
          [ 0.0344],
          [-0.0084],
          [ 0.0333],
          [-0.0363]],

         ...,

         [[ 0.0170],
          [ 0.0567],
          [ 0.0117],
          [ 0.0169],
          [ 0.0172]],

         [[ 0.0405],
          [ 0.0181],
          [ 0.0111],
          [-0.0318],
          [ 0.0354]],

         [[ 0.0105],
          [-0.0125],
          [ 0.0421],
          [-0.0196],
          [-0.0075]]],


        [[[-0.0407],
          [ 0.0128],
          [-0.0213],
          [ 0.0020],
          [ 0.0128]],

         [[ 0.0065],
          [-0.0355],
          [ 0.0009],
          [ 0.0137],
          [ 0.0072]],

         [[-0.0209],
          [-0.0208],
          [-0.0025],
          [-0.0260],
          [-0.0091]],

         ...,

         [[ 0.0211],
          [ 0.0184],
          [ 0.0035],
          [ 0.0201],
          [-0.0138]],

         [[-0.0247],
          [ 0.0034],
          [ 0.0066],
          [ 0.0106],
          [-0.0324]],

         [[ 0.0191],
          [ 0.0271],
          [-0.0525],
          [-0.0139],
          [-0.0037]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-0.0087, -0.0195, -0.0079, -0.0160, -0.0113]],

         [[-0.0423,  0.0010,  0.0307, -0.0054, -0.0042]],

         [[-0.0513,  0.0171, -0.0592,  0.0102,  0.0433]],

         ...,

         [[ 0.0084,  0.0168, -0.0177, -0.0139,  0.0042]],

         [[-0.0409, -0.0172,  0.0041,  0.0034,  0.0486]],

         [[ 0.0043,  0.0014, -0.0016, -0.0210, -0.0046]]],


        [[[-0.0178,  0.0349, -0.0288,  0.0115,  0.0269]],

         [[-0.0144, -0.0115,  0.0024,  0.0003, -0.0002]],

         [[-0.0109, -0.0303,  0.0056, -0.0053, -0.0039]],

         ...,

         [[ 0.0243, -0.0353,  0.0007, -0.0013,  0.0072]],

         [[-0.0022,  0.0355, -0.0123, -0.0029, -0.0134]],

         [[-0.0132,  0.0366, -0.0035, -0.0012,  0.0097]]],


        [[[-0.0064,  0.0222, -0.0193,  0.0102, -0.0225]],

         [[ 0.0430,  0.0178,  0.0496,  0.0131, -0.0113]],

         [[-0.0036, -0.0518, -0.0014, -0.0377,  0.0264]],

         ...,

         [[ 0.0567, -0.0670, -0.0399,  0.0248,  0.0082]],

         [[-0.0419,  0.0137, -0.0080, -0.0313, -0.0288]],

         [[-0.0064, -0.0053,  0.0070, -0.0461,  0.0048]]],


        ...,


        [[[ 0.0108,  0.0139, -0.0385, -0.0192,  0.0053]],

         [[-0.0214, -0.0147,  0.0052,  0.0046,  0.0260]],

         [[ 0.0195, -0.0364,  0.0228,  0.0203, -0.0239]],

         ...,

         [[-0.0108, -0.0424,  0.0188,  0.0166,  0.0433]],

         [[ 0.0194,  0.0017, -0.0137, -0.0357, -0.0349]],

         [[ 0.0092,  0.0026, -0.0357, -0.0084,  0.0286]]],


        [[[-0.0456,  0.0103, -0.0173, -0.0293, -0.0009]],

         [[-0.0180, -0.0341,  0.0017, -0.0248, -0.0077]],

         [[-0.0030, -0.0342, -0.0094, -0.0201,  0.0006]],

         ...,

         [[ 0.0136, -0.0071,  0.0070, -0.0182, -0.0121]],

         [[ 0.0024, -0.0104,  0.0015, -0.0166, -0.0141]],

         [[ 0.0077,  0.0147,  0.0053,  0.0341,  0.0233]]],


        [[[-0.0215, -0.0196,  0.0320,  0.0053,  0.0395]],

         [[-0.0135,  0.0091,  0.0206, -0.0237,  0.0159]],

         [[ 0.0012,  0.0104, -0.0071,  0.0221, -0.0094]],

         ...,

         [[ 0.0314, -0.0187, -0.0104,  0.0129, -0.0018]],

         [[-0.0310,  0.0087, -0.0271, -0.0036, -0.0523]],

         [[ 0.0287, -0.0246, -0.0217, -0.0480,  0.0131]]]], device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[ 0.0071],
          [-0.0278],
          [-0.0252],
          [ 0.0033],
          [-0.0163]],

         [[-0.0027],
          [ 0.0260],
          [-0.0432],
          [-0.0250],
          [ 0.0038]],

         [[-0.0339],
          [-0.0208],
          [-0.0029],
          [-0.0138],
          [ 0.0051]],

         ...,

         [[ 0.0203],
          [-0.0183],
          [ 0.0066],
          [-0.0082],
          [-0.0292]],

         [[ 0.0407],
          [ 0.0135],
          [-0.0212],
          [-0.0046],
          [-0.0170]],

         [[-0.0481],
          [-0.0039],
          [-0.0035],
          [-0.0006],
          [ 0.0034]]],


        [[[-0.0422],
          [ 0.0095],
          [ 0.0080],
          [-0.0525],
          [ 0.0168]],

         [[ 0.0028],
          [-0.0381],
          [-0.0203],
          [-0.0170],
          [-0.0347]],

         [[ 0.0047],
          [ 0.0436],
          [ 0.0154],
          [-0.0306],
          [-0.0013]],

         ...,

         [[-0.0037],
          [-0.0037],
          [-0.0150],
          [-0.0198],
          [-0.0042]],

         [[ 0.0435],
          [ 0.0114],
          [-0.0055],
          [ 0.0091],
          [ 0.0271]],

         [[-0.0711],
          [-0.0253],
          [-0.0537],
          [ 0.0044],
          [-0.0020]]],


        [[[ 0.0232],
          [ 0.0228],
          [ 0.0215],
          [-0.0141],
          [-0.0527]],

         [[ 0.0026],
          [ 0.0330],
          [-0.0228],
          [ 0.0051],
          [ 0.0211]],

         [[-0.0152],
          [ 0.0036],
          [-0.0109],
          [ 0.0044],
          [-0.0168]],

         ...,

         [[-0.0476],
          [ 0.0342],
          [-0.0304],
          [ 0.0098],
          [-0.0162]],

         [[ 0.0285],
          [-0.0146],
          [ 0.0049],
          [-0.0229],
          [ 0.0144]],

         [[-0.0109],
          [ 0.0113],
          [ 0.0251],
          [-0.0044],
          [-0.0064]]],


        ...,


        [[[-0.0185],
          [ 0.0080],
          [ 0.0077],
          [ 0.0198],
          [-0.0027]],

         [[-0.0223],
          [ 0.0009],
          [-0.0160],
          [ 0.0179],
          [-0.0449]],

         [[-0.0262],
          [-0.0082],
          [-0.0003],
          [ 0.0227],
          [ 0.0051]],

         ...,

         [[-0.0157],
          [ 0.0127],
          [-0.0067],
          [-0.0165],
          [-0.0518]],

         [[ 0.0201],
          [ 0.0075],
          [ 0.0027],
          [ 0.0104],
          [-0.0231]],

         [[-0.0123],
          [-0.0050],
          [ 0.0210],
          [ 0.0060],
          [-0.0162]]],


        [[[ 0.0042],
          [ 0.0262],
          [ 0.0044],
          [-0.0054],
          [ 0.0145]],

         [[-0.0104],
          [-0.0330],
          [ 0.0238],
          [-0.0201],
          [-0.0142]],

         [[-0.0230],
          [ 0.0065],
          [ 0.0148],
          [ 0.0175],
          [ 0.0237]],

         ...,

         [[-0.0124],
          [-0.0030],
          [-0.0088],
          [-0.0313],
          [-0.0197]],

         [[-0.0420],
          [ 0.0278],
          [ 0.0503],
          [-0.0186],
          [ 0.0110]],

         [[-0.0229],
          [-0.0075],
          [ 0.0448],
          [ 0.0062],
          [ 0.0153]]],


        [[[-0.0344],
          [-0.0102],
          [ 0.0038],
          [ 0.0145],
          [ 0.0184]],

         [[-0.0243],
          [-0.0164],
          [-0.0182],
          [ 0.0214],
          [-0.0206]],

         [[ 0.0045],
          [-0.0306],
          [-0.0034],
          [ 0.0040],
          [-0.0162]],

         ...,

         [[ 0.0118],
          [-0.0279],
          [-0.0176],
          [-0.0310],
          [-0.0018]],

         [[-0.0398],
          [-0.0266],
          [-0.0301],
          [ 0.0312],
          [ 0.0004]],

         [[-0.0225],
          [ 0.0081],
          [-0.0347],
          [-0.0420],
          [-0.0407]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-8.7068e-03,  1.5820e-02, -4.7235e-02,  4.8721e-02, -1.6919e-02]],

         [[ 3.0316e-02,  1.3483e-02, -2.7766e-02,  1.9483e-02, -3.3094e-02]],

         [[-1.4357e-02, -4.1253e-02,  2.0010e-02, -1.8034e-03, -3.1705e-03]],

         ...,

         [[ 4.8110e-02, -3.2192e-02, -1.8834e-02,  1.9627e-02,  9.8297e-04]],

         [[ 3.5418e-03,  1.2056e-02,  2.5165e-02, -8.4332e-03,  1.7530e-02]],

         [[ 1.6650e-02,  3.0759e-02,  2.5458e-03, -2.3915e-03, -9.0400e-03]]],


        [[[-1.0974e-02,  4.3615e-02, -1.4445e-02, -1.8497e-03, -1.0940e-02]],

         [[-8.8143e-03,  1.6226e-02,  1.6612e-03, -1.8916e-02,  1.5136e-02]],

         [[-1.6521e-02, -5.6814e-03, -1.0319e-02, -7.9917e-03,  2.3191e-03]],

         ...,

         [[ 1.8952e-02, -2.2316e-02,  4.1027e-02, -1.3242e-02, -2.5053e-02]],

         [[-4.7315e-03, -3.1114e-03,  3.5326e-02,  1.1494e-02,  2.2401e-03]],

         [[ 3.9567e-02,  1.3720e-03,  2.6647e-02, -2.8777e-02,  2.8978e-02]]],


        [[[ 2.6538e-02,  3.2941e-02,  2.9278e-02,  2.7311e-02,  5.2710e-02]],

         [[ 2.1246e-02, -1.5714e-02, -1.0369e-02, -5.1875e-02,  1.1829e-02]],

         [[ 2.4825e-03,  1.6597e-03,  1.0616e-02,  4.8807e-02,  8.2159e-03]],

         ...,

         [[-3.7833e-02,  3.3383e-03,  3.4397e-02,  4.8877e-03,  2.1401e-03]],

         [[ 1.1817e-02, -1.2928e-02,  2.6472e-02, -3.0617e-02,  5.7009e-02]],

         [[ 1.3109e-02,  2.3195e-03,  2.8615e-02, -2.1785e-02, -2.0977e-02]]],


        ...,


        [[[ 5.9072e-02, -2.7225e-02,  8.0681e-03, -1.4503e-02, -5.0877e-04]],

         [[ 4.0218e-02, -1.5201e-02,  2.5097e-02, -9.2429e-03,  2.9052e-02]],

         [[-5.1709e-02, -3.3359e-03, -2.6259e-03,  2.4479e-02, -1.3566e-02]],

         ...,

         [[ 1.6194e-03,  8.5378e-03,  3.5219e-02, -2.4106e-02, -2.7273e-02]],

         [[ 1.7139e-02,  2.2793e-03, -3.4623e-03,  2.6528e-02, -3.0057e-02]],

         [[-1.2151e-02,  4.4652e-02, -2.1422e-02,  2.0045e-02,  3.0590e-02]]],


        [[[ 1.5155e-02,  3.1079e-02,  2.3597e-02,  8.7656e-03, -8.9902e-03]],

         [[-6.2162e-02,  1.4818e-02, -1.2758e-02, -1.5746e-02,  1.6353e-02]],

         [[-1.1833e-02, -9.7885e-04,  3.4397e-02,  6.6869e-03, -5.1659e-02]],

         ...,

         [[ 8.8154e-04,  1.6661e-02, -4.9676e-03, -1.8133e-02, -1.7393e-02]],

         [[ 4.2011e-02,  1.1188e-02, -7.8474e-03, -1.2291e-03, -2.1961e-02]],

         [[ 5.9757e-04, -2.4413e-02, -4.0714e-03,  1.0302e-02,  5.3790e-03]]],


        [[[-2.3443e-02,  1.3873e-02, -1.2521e-02, -1.3853e-02,  4.4393e-02]],

         [[-1.3754e-02,  1.8819e-05,  1.4282e-02, -2.3577e-02, -4.1144e-02]],

         [[ 5.4602e-03, -1.4213e-02, -2.1041e-02, -1.8442e-02, -2.8445e-02]],

         ...,

         [[ 4.9778e-02,  1.8412e-02, -4.0737e-03,  3.5408e-02, -7.8494e-03]],

         [[ 1.6422e-02,  1.2282e-02,  6.0960e-03, -4.1269e-03,  1.2789e-02]],

         [[ 1.8622e-02, -1.5264e-02,  5.7989e-03, -8.2398e-03,  4.4812e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-1.5659e-03],
          [ 4.3357e-02],
          [-1.4139e-02],
          [-3.5495e-02],
          [-9.2718e-03]],

         [[ 9.4652e-03],
          [ 5.9988e-03],
          [-5.1018e-03],
          [-1.6954e-02],
          [ 3.3603e-02]],

         [[ 1.4100e-02],
          [-4.1073e-02],
          [-3.1490e-03],
          [-5.2570e-02],
          [ 2.7464e-02]],

         ...,

         [[ 4.9508e-03],
          [-1.9491e-03],
          [-1.4067e-02],
          [-2.8534e-02],
          [ 1.7622e-02]],

         [[-3.9494e-02],
          [ 1.5935e-02],
          [ 5.6656e-02],
          [ 4.1361e-02],
          [ 1.4486e-02]],

         [[ 2.7864e-02],
          [ 3.6680e-02],
          [-1.5165e-02],
          [-4.6292e-03],
          [-3.2484e-02]]],


        [[[ 9.3452e-03],
          [-1.6720e-02],
          [ 1.6629e-02],
          [-3.1581e-02],
          [-1.6871e-02]],

         [[ 3.2014e-03],
          [-6.0039e-04],
          [-2.8461e-02],
          [-2.9167e-02],
          [-1.1907e-02]],

         [[-1.6077e-02],
          [ 4.4165e-03],
          [ 1.2913e-02],
          [-3.5717e-03],
          [ 2.1251e-02]],

         ...,

         [[ 1.5072e-02],
          [ 1.4652e-02],
          [-6.2847e-03],
          [ 3.9245e-03],
          [-1.9193e-02]],

         [[-1.2425e-02],
          [ 3.6505e-03],
          [ 7.1360e-02],
          [-1.5663e-02],
          [ 3.0203e-02]],

         [[ 1.1708e-02],
          [-1.3218e-02],
          [-2.4982e-02],
          [-1.6099e-02],
          [-2.0392e-02]]],


        [[[ 6.5522e-05],
          [ 2.3413e-02],
          [-1.9913e-02],
          [-1.6455e-03],
          [ 4.7502e-03]],

         [[-5.1064e-03],
          [ 4.0008e-02],
          [-1.0477e-02],
          [ 1.0692e-02],
          [ 2.1801e-02]],

         [[-1.7755e-02],
          [-2.5867e-02],
          [-2.4930e-02],
          [-7.3473e-03],
          [ 1.3407e-02]],

         ...,

         [[ 1.0607e-02],
          [-1.0175e-03],
          [-1.8767e-02],
          [ 3.6020e-02],
          [-3.6655e-02]],

         [[ 1.3738e-02],
          [-1.4896e-03],
          [-4.3715e-02],
          [-2.9352e-02],
          [-3.6344e-02]],

         [[-3.9132e-02],
          [-1.1816e-03],
          [ 1.8228e-02],
          [ 1.9236e-02],
          [ 1.1788e-02]]],


        ...,


        [[[ 4.4180e-02],
          [-1.2604e-02],
          [-3.3755e-02],
          [ 1.3631e-02],
          [ 7.1892e-03]],

         [[-6.7033e-03],
          [-4.5830e-03],
          [-2.2924e-02],
          [-2.7313e-02],
          [ 3.9672e-02]],

         [[ 1.1253e-02],
          [-1.6621e-02],
          [ 1.9422e-02],
          [ 1.1002e-02],
          [ 2.4804e-03]],

         ...,

         [[-6.0149e-03],
          [-1.4323e-02],
          [ 1.7740e-02],
          [ 1.9716e-02],
          [-1.0232e-04]],

         [[ 9.7033e-03],
          [-7.6124e-03],
          [-9.2555e-03],
          [-1.7888e-02],
          [ 2.6478e-02]],

         [[ 2.3695e-02],
          [-2.0620e-02],
          [ 7.8341e-03],
          [-5.9910e-02],
          [ 2.0574e-02]]],


        [[[-1.8812e-02],
          [-1.9140e-02],
          [-9.2154e-03],
          [ 2.1614e-03],
          [-1.0257e-02]],

         [[-4.2396e-02],
          [ 1.5824e-02],
          [ 4.7172e-02],
          [ 8.7872e-04],
          [-1.3222e-02]],

         [[-7.8587e-03],
          [ 5.1287e-02],
          [-2.6947e-02],
          [-9.9505e-03],
          [-1.3326e-02]],

         ...,

         [[-1.3734e-02],
          [ 8.8037e-03],
          [-7.7932e-03],
          [-1.3818e-03],
          [ 3.1902e-03]],

         [[-2.2624e-02],
          [ 1.6748e-02],
          [-1.0083e-02],
          [ 5.2006e-02],
          [ 4.5822e-03]],

         [[ 2.3500e-02],
          [ 1.7266e-02],
          [-1.2347e-03],
          [-4.3180e-04],
          [-3.0324e-02]]],


        [[[ 4.9236e-02],
          [-2.6372e-02],
          [ 4.4967e-03],
          [ 7.3768e-03],
          [-1.0414e-02]],

         [[ 4.4003e-02],
          [-4.1972e-03],
          [ 2.0230e-02],
          [ 1.4549e-02],
          [-2.4458e-02]],

         [[-4.3249e-03],
          [-2.1829e-02],
          [-3.1439e-02],
          [-2.8694e-02],
          [-2.1806e-02]],

         ...,

         [[-2.1615e-02],
          [ 1.3131e-02],
          [-3.9165e-03],
          [ 1.5982e-03],
          [ 1.0432e-02]],

         [[ 3.2683e-03],
          [ 1.9092e-02],
          [-1.4981e-02],
          [-1.1336e-02],
          [ 2.4519e-02]],

         [[-1.0833e-03],
          [-1.9629e-03],
          [ 4.3937e-02],
          [ 2.5471e-02],
          [ 4.6782e-02]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 0.0109,  0.0072, -0.0350],
          [-0.0298, -0.0060, -0.0339],
          [-0.0014,  0.0435,  0.0216]],

         [[-0.0004, -0.0359, -0.0004],
          [ 0.0301, -0.0010, -0.0486],
          [-0.0151, -0.0553,  0.0160]],

         [[-0.0138, -0.0059, -0.0065],
          [-0.0242,  0.0246, -0.0205],
          [ 0.0921, -0.0278, -0.0126]],

         ...,

         [[ 0.0010,  0.0050,  0.0199],
          [ 0.0143, -0.0022,  0.0002],
          [-0.0450,  0.0201,  0.0407]],

         [[-0.0357, -0.0300, -0.0098],
          [-0.0295, -0.0046,  0.0038],
          [ 0.0095, -0.0321, -0.0211]],

         [[ 0.0330,  0.0066,  0.0217],
          [-0.0075,  0.0110,  0.0367],
          [ 0.0138, -0.0156,  0.0069]]],


        [[[-0.0218,  0.0084,  0.0206],
          [ 0.0286, -0.0106, -0.0169],
          [-0.0137,  0.0201, -0.0052]],

         [[-0.0351, -0.0210,  0.0205],
          [ 0.0215,  0.0407,  0.0243],
          [-0.0139,  0.0095,  0.0103]],

         [[ 0.0002, -0.0346,  0.0484],
          [ 0.0111,  0.0026, -0.0508],
          [ 0.0132,  0.0121,  0.0125]],

         ...,

         [[ 0.0174,  0.0190,  0.0423],
          [ 0.0165,  0.0048,  0.0213],
          [-0.0049, -0.0181,  0.0485]],

         [[ 0.0250,  0.0048,  0.0174],
          [ 0.0241, -0.0059, -0.0283],
          [ 0.0042, -0.0290, -0.0433]],

         [[-0.0298, -0.0256,  0.0263],
          [ 0.0246, -0.0087,  0.0100],
          [ 0.0017,  0.0266, -0.0112]]],


        [[[ 0.0532,  0.0182,  0.0089],
          [ 0.0039,  0.0039, -0.0302],
          [-0.0114, -0.0336,  0.0522]],

         [[ 0.0233, -0.0133, -0.0124],
          [-0.0151, -0.0347, -0.0039],
          [-0.0339,  0.0068,  0.0070]],

         [[-0.0148,  0.0399,  0.0328],
          [-0.0567, -0.0262, -0.0492],
          [ 0.0153, -0.0228,  0.0168]],

         ...,

         [[-0.0131,  0.0014, -0.0184],
          [-0.0303,  0.0074,  0.0089],
          [ 0.0094, -0.0036, -0.0002]],

         [[ 0.0023, -0.0074,  0.0256],
          [ 0.0223, -0.0119, -0.0165],
          [-0.0051,  0.0857, -0.0340]],

         [[ 0.0308, -0.0152,  0.0063],
          [-0.0442,  0.0308, -0.0105],
          [-0.0259, -0.0045,  0.0187]]],


        ...,


        [[[-0.0275, -0.0068, -0.0117],
          [-0.0064,  0.0267, -0.0249],
          [ 0.0163,  0.0350, -0.0067]],

         [[ 0.0212, -0.0130, -0.0197],
          [-0.0134, -0.0308,  0.0277],
          [ 0.1103,  0.0042, -0.0043]],

         [[-0.0012,  0.0343, -0.0296],
          [-0.0187,  0.0004,  0.0512],
          [-0.0691,  0.0100,  0.0067]],

         ...,

         [[-0.0158, -0.0281, -0.0043],
          [ 0.0006,  0.0227,  0.0319],
          [-0.0501,  0.0267, -0.0561]],

         [[-0.0163, -0.0122,  0.0270],
          [ 0.0164,  0.0038,  0.0194],
          [ 0.0311, -0.0382, -0.0802]],

         [[-0.0320, -0.0039,  0.0207],
          [ 0.0200, -0.0216,  0.0467],
          [ 0.0350,  0.0205,  0.0538]]],


        [[[ 0.0016,  0.0334, -0.0523],
          [ 0.0111,  0.0374, -0.0023],
          [ 0.0115, -0.0327, -0.0026]],

         [[ 0.0339, -0.0480,  0.0078],
          [-0.0146,  0.0309, -0.0221],
          [-0.0299, -0.0095, -0.0196]],

         [[-0.0051,  0.0131, -0.0461],
          [ 0.0501,  0.0218,  0.0163],
          [-0.0263,  0.0610,  0.0443]],

         ...,

         [[ 0.0601, -0.0061, -0.0308],
          [-0.0160,  0.0279,  0.0188],
          [-0.0509,  0.0057, -0.0315]],

         [[ 0.0155,  0.0287, -0.0066],
          [-0.0261,  0.0121, -0.0103],
          [-0.0168, -0.0036, -0.0164]],

         [[-0.0313, -0.0034, -0.0438],
          [ 0.0330,  0.0076,  0.0362],
          [ 0.0119, -0.0054, -0.0210]]],


        [[[-0.0091, -0.0304, -0.0270],
          [-0.0275,  0.0503,  0.0497],
          [-0.0217, -0.0090,  0.0335]],

         [[ 0.0299, -0.0188,  0.0303],
          [ 0.0222, -0.0046,  0.0005],
          [-0.0505, -0.0062,  0.0089]],

         [[ 0.0253,  0.0260, -0.0364],
          [ 0.0054,  0.0239,  0.0113],
          [-0.0841,  0.0052, -0.0214]],

         ...,

         [[ 0.0122, -0.0306, -0.0382],
          [ 0.0010, -0.0173, -0.0068],
          [ 0.0357, -0.0120, -0.0809]],

         [[ 0.0033, -0.0044,  0.0474],
          [ 0.0130,  0.0378, -0.0362],
          [-0.0140,  0.0183, -0.0161]],

         [[ 0.0129, -0.0661,  0.0020],
          [ 0.0141,  0.0386,  0.0053],
          [ 0.0063, -0.0229, -0.0202]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[-1.1067e-02, -1.6387e-02,  8.8452e-03],
          [ 5.3524e-03,  3.8362e-03, -8.3203e-03],
          [-1.8844e-02, -9.0319e-03,  1.5494e-02]],

         [[ 1.7010e-02, -5.9143e-03, -7.6615e-04],
          [ 6.9323e-03,  1.1132e-02,  1.6989e-02],
          [ 1.6450e-02,  4.3130e-04, -8.8781e-04]],

         [[ 1.3896e-02,  1.0674e-02,  1.0729e-02],
          [ 4.5223e-03,  1.8582e-02,  2.0827e-02],
          [-9.5596e-04, -2.0264e-02, -1.0450e-02]],

         ...,

         [[-1.1883e-02, -1.2217e-02,  1.8499e-02],
          [-1.3227e-02, -1.1076e-02,  1.8232e-02],
          [-1.7128e-02, -1.9689e-02, -4.4769e-03]],

         [[-3.6468e-03, -7.7664e-03, -1.2205e-02],
          [ 8.0371e-03,  9.1551e-03,  1.1430e-02],
          [-1.9056e-02,  1.9437e-02,  1.5979e-02]],

         [[ 9.3772e-04,  6.5123e-03, -6.2286e-03],
          [-6.9249e-03,  1.1283e-02,  6.5457e-03],
          [-9.2177e-03,  1.3716e-02, -1.3981e-02]]],


        [[[ 2.9666e-03,  1.9569e-02, -4.4393e-03],
          [-1.0184e-02, -1.6927e-03,  9.8597e-03],
          [-9.8900e-03,  4.0484e-03, -1.2534e-02]],

         [[ 1.2925e-02,  1.8512e-02, -9.3396e-03],
          [-1.5579e-02, -5.5410e-03,  8.3832e-03],
          [ 1.9796e-03,  4.0720e-03, -2.0540e-04]],

         [[-7.1977e-03, -1.6044e-02,  8.9355e-03],
          [ 9.0663e-03,  3.8687e-03, -2.3155e-03],
          [-1.6419e-02,  2.2893e-03, -1.0305e-02]],

         ...,

         [[-1.0684e-02, -1.3848e-02,  1.8097e-02],
          [ 7.5722e-03,  1.6929e-02,  1.8215e-02],
          [-3.4361e-03, -7.1852e-03,  2.0229e-02]],

         [[ 1.8653e-02, -1.6982e-02,  2.0368e-02],
          [-3.7342e-03, -1.0812e-02, -1.4016e-02],
          [ 7.3978e-03,  1.5645e-02,  6.0089e-03]],

         [[ 1.9354e-02,  5.6590e-05, -1.0032e-02],
          [ 1.4611e-02, -2.5036e-03, -2.4380e-03],
          [-1.8589e-02, -1.2533e-02, -8.4850e-04]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([-0.0132, -0.0080], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 7.8209e-02,  3.5469e-04, -6.4969e-03],
          [-2.6353e-03, -2.3424e-02,  1.5443e-02],
          [-2.7826e-02, -4.5040e-02,  2.8570e-02]],

         [[-6.3561e-03, -7.7419e-03,  3.0251e-02],
          [ 4.3008e-02, -3.4493e-03,  2.0220e-02],
          [-5.4383e-03, -3.2088e-03, -2.9286e-02]],

         [[-3.4460e-03,  1.5515e-02, -3.6831e-02],
          [ 1.5328e-02,  7.2807e-03,  7.0001e-03],
          [ 1.1322e-02, -1.0451e-02,  1.4244e-02]],

         ...,

         [[ 1.5335e-02,  3.3381e-02,  2.4558e-02],
          [-8.8164e-03,  2.1912e-03,  3.5695e-02],
          [ 7.0631e-03,  2.1551e-02, -1.4449e-02]],

         [[ 4.5409e-02, -3.1194e-02,  1.2684e-02],
          [-2.5319e-02,  6.8011e-03, -1.4216e-02],
          [-1.1721e-03, -2.8349e-03,  8.1313e-04]],

         [[-1.8031e-02, -1.3086e-02, -3.9718e-02],
          [-3.0396e-02, -4.3053e-02, -2.0611e-02],
          [ 8.5049e-03,  3.0121e-02,  1.6898e-02]]],


        [[[-3.8514e-03,  3.7264e-02,  1.5074e-02],
          [-2.6055e-02,  6.3533e-02, -2.5131e-02],
          [ 1.4758e-02,  1.1390e-02, -2.5440e-02]],

         [[ 7.8146e-03, -3.7843e-03, -6.0361e-02],
          [ 1.5989e-02, -2.8992e-02,  6.5619e-03],
          [ 4.1176e-02, -1.8668e-02, -7.5680e-03]],

         [[-3.1118e-02, -1.6586e-02,  6.7654e-02],
          [ 7.3878e-03,  3.0133e-02,  3.0373e-02],
          [ 9.0013e-03, -1.7855e-02, -1.4293e-02]],

         ...,

         [[ 1.9504e-02,  3.2855e-02, -1.6496e-02],
          [-7.1024e-03, -7.2315e-03,  4.4354e-05],
          [-2.3472e-02, -1.0600e-02,  1.9552e-03]],

         [[-1.2850e-03,  1.9308e-02, -5.1010e-02],
          [ 3.5752e-02, -4.3766e-02,  4.2502e-02],
          [ 3.6634e-02,  3.4222e-02,  1.4315e-02]],

         [[ 2.1583e-02, -2.0257e-02, -3.0655e-02],
          [ 5.7837e-03,  1.3181e-02, -1.2484e-02],
          [ 6.6485e-02,  1.6419e-02, -2.0649e-02]]],


        [[[-4.4733e-02, -2.1910e-03,  7.2948e-02],
          [ 5.1355e-02,  9.5926e-03,  2.1678e-02],
          [-2.8465e-02,  4.3564e-02,  1.3232e-02]],

         [[-6.0595e-03, -3.8441e-02, -3.5655e-02],
          [ 4.3045e-03,  2.4206e-02,  3.2288e-02],
          [ 2.0377e-02,  5.4864e-02,  2.9899e-02]],

         [[-3.6706e-02, -4.4383e-02, -4.6141e-03],
          [-5.9068e-03,  1.8345e-02, -3.9894e-02],
          [-1.5260e-02,  4.1291e-02,  1.6947e-02]],

         ...,

         [[-5.0520e-02,  6.9962e-02, -1.4040e-02],
          [-7.1062e-02,  9.1846e-03,  9.4244e-03],
          [-2.9973e-02,  7.9737e-02, -2.4103e-02]],

         [[ 2.2100e-03,  4.0518e-02, -4.2342e-02],
          [-3.9695e-02, -6.0575e-02, -2.0051e-02],
          [ 2.6067e-02, -1.4875e-02, -4.1740e-02]],

         [[ 1.1815e-02,  3.4277e-02,  1.4757e-03],
          [-1.3662e-02, -1.0880e-02, -1.8660e-02],
          [-1.4901e-02,  3.7830e-02, -2.5622e-02]]],


        ...,


        [[[ 4.9022e-03,  5.2588e-03, -3.0807e-02],
          [-2.2131e-02,  6.0448e-02, -2.1116e-02],
          [ 7.6093e-03, -7.6574e-03,  1.4505e-02]],

         [[ 7.7857e-03, -7.1984e-03, -5.1555e-03],
          [-7.6098e-04, -3.9834e-02, -4.0732e-02],
          [-1.3771e-02,  6.3476e-03, -1.7150e-05]],

         [[-1.6561e-02, -7.7197e-03, -2.4317e-02],
          [-2.0802e-02, -3.4953e-02,  8.0665e-03],
          [ 1.0656e-02,  4.9938e-03,  3.2193e-02]],

         ...,

         [[ 4.1409e-02, -9.3555e-03, -4.4610e-02],
          [ 6.2517e-02,  4.4449e-03,  2.8047e-02],
          [ 7.4483e-03, -4.4874e-02, -3.7922e-02]],

         [[-1.4571e-03, -4.5264e-02,  1.3351e-02],
          [-1.6419e-02, -4.8575e-02,  1.5230e-02],
          [ 3.6594e-02,  3.2350e-02, -5.4247e-02]],

         [[ 2.8684e-03,  3.9531e-03, -3.1831e-02],
          [-2.1188e-02, -5.7143e-02, -5.6801e-03],
          [-9.5499e-03, -1.7783e-02, -3.0037e-03]]],


        [[[-8.3770e-03, -7.4343e-03, -1.4294e-02],
          [ 1.8877e-02, -1.9569e-02, -3.2528e-03],
          [ 3.1267e-02, -4.1348e-02, -1.8250e-02]],

         [[-1.8603e-02,  2.3770e-02, -2.6095e-02],
          [ 4.7825e-02, -5.1327e-02,  3.2958e-02],
          [-9.9030e-03, -2.0460e-04,  2.6183e-02]],

         [[ 2.2612e-02, -1.4183e-02, -2.0099e-02],
          [-2.4061e-02,  5.1683e-02,  3.4305e-02],
          [ 5.3352e-03, -2.0502e-02,  1.8272e-02]],

         ...,

         [[-5.8015e-03, -1.6201e-02,  6.9857e-02],
          [ 2.3644e-02,  6.8944e-02, -6.6675e-02],
          [ 2.2535e-02, -3.2614e-02, -1.0293e-02]],

         [[-4.0161e-02,  5.5855e-02,  3.3913e-04],
          [ 2.2737e-02,  4.7054e-03,  1.7429e-02],
          [ 9.1334e-03,  3.0084e-02, -6.3671e-03]],

         [[-9.7372e-03, -1.7623e-02,  1.6152e-03],
          [ 1.0166e-02,  1.4560e-02, -9.2691e-03],
          [ 3.8054e-02,  7.3174e-02,  3.6208e-02]]],


        [[[ 7.7302e-03,  6.6063e-03,  6.3913e-02],
          [ 4.2076e-02,  2.2908e-02, -2.0259e-02],
          [-1.4362e-03, -2.0804e-02, -3.0138e-03]],

         [[-2.3650e-02, -6.1963e-02, -3.8987e-02],
          [ 1.1098e-03,  3.4362e-02,  1.3942e-03],
          [-2.9089e-02, -1.1015e-02,  7.9294e-03]],

         [[ 2.5752e-02, -5.3934e-03,  3.8622e-02],
          [-2.0988e-02,  3.7579e-02,  4.2314e-02],
          [-3.5508e-02,  2.8687e-02, -3.9989e-02]],

         ...,

         [[-2.0711e-02,  3.8964e-03,  1.0843e-02],
          [ 2.8577e-02,  1.2118e-02, -2.9494e-02],
          [ 1.0550e-03,  2.6391e-02, -4.1623e-03]],

         [[ 1.3218e-02, -4.2372e-02,  2.7361e-03],
          [ 1.3442e-04,  3.3553e-02, -5.0433e-02],
          [-5.8109e-04,  2.7867e-02, -2.4592e-02]],

         [[-1.3314e-02, -3.2061e-02,  2.3892e-02],
          [ 2.9261e-02, -1.1352e-02, -1.0215e-02],
          [-2.7304e-02, -6.2105e-03,  3.2628e-02]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0431]],

         [[-0.0013]],

         [[-0.0520]],

         ...,

         [[-0.0609]],

         [[ 0.0081]],

         [[-0.0207]]],


        [[[-0.0359]],

         [[ 0.0231]],

         [[ 0.0170]],

         ...,

         [[-0.0599]],

         [[ 0.0058]],

         [[ 0.0131]]],


        [[[ 0.0017]],

         [[ 0.0243]],

         [[-0.0461]],

         ...,

         [[-0.0478]],

         [[ 0.0105]],

         [[-0.0216]]],


        ...,


        [[[ 0.0208]],

         [[-0.0292]],

         [[ 0.0146]],

         ...,

         [[-0.0086]],

         [[ 0.0434]],

         [[ 0.0446]]],


        [[[-0.0287]],

         [[-0.0350]],

         [[-0.0030]],

         ...,

         [[ 0.0211]],

         [[-0.0166]],

         [[-0.0159]]],


        [[[ 0.0289]],

         [[ 0.0491]],

         [[ 0.0404]],

         ...,

         [[ 0.0091]],

         [[ 0.0423]],

         [[-0.0395]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([-4.0643e-02,  2.0546e-02, -2.8460e-02,  3.3452e-02, -5.4761e-02,
         2.5725e-02, -3.5198e-02,  7.4262e-03,  6.2085e-02, -3.9487e-03,
         1.1426e-02, -3.2991e-02,  2.5849e-02,  5.4981e-02,  5.6409e-02,
         2.4320e-02,  3.7614e-02,  2.4130e-02, -5.0402e-02, -3.9447e-02,
         9.0663e-03, -4.3278e-02, -4.9473e-02, -4.0370e-02,  5.1133e-02,
        -4.2861e-02, -4.8648e-02,  5.7868e-02,  4.7115e-02,  4.7867e-02,
        -2.3182e-02,  4.5249e-03,  6.0517e-03, -6.7872e-03, -5.6225e-03,
         1.0651e-02,  5.4502e-02,  2.7676e-02, -5.6871e-02, -2.7363e-02,
        -1.3050e-02,  4.7538e-02, -5.6165e-02, -1.8004e-03,  5.9720e-02,
         1.3575e-02, -6.5918e-03,  4.3246e-02, -3.2197e-02, -1.7255e-02,
         2.4131e-02,  7.7140e-03,  2.9454e-02,  1.7645e-02,  1.5316e-02,
        -2.8447e-02, -1.8841e-02,  6.4299e-03, -6.1409e-02,  1.8446e-02,
        -1.7781e-02,  2.7531e-02, -7.2301e-03,  3.9936e-02,  4.8767e-02,
        -6.0605e-02, -1.1726e-02,  3.9422e-03, -2.6027e-02,  1.2954e-02,
         2.4982e-02,  5.7047e-02, -1.6335e-02,  4.0584e-02,  1.0071e-02,
         3.3857e-02, -2.0302e-02,  4.0333e-02, -3.6233e-02,  2.3968e-02,
         2.6848e-02,  3.0824e-02, -1.3583e-02, -2.0183e-02,  1.7460e-02,
         2.6690e-02,  1.7791e-02, -5.4612e-02,  6.2340e-02,  4.7829e-03,
        -2.1446e-02,  4.7412e-02,  3.6986e-02, -2.1314e-02,  4.2858e-02,
         2.0368e-02,  4.2159e-02,  5.3500e-02,  6.1171e-02, -5.9058e-02,
        -4.5599e-02, -2.1067e-03, -8.4869e-03, -1.5124e-02, -5.3746e-04,
         1.6306e-02,  2.6870e-02, -8.8961e-03, -2.7161e-02,  5.9204e-02,
        -6.6145e-03, -5.2500e-02, -4.9365e-02,  4.2039e-02, -9.5707e-03,
        -2.1393e-03,  2.9089e-02, -3.0596e-02,  4.0522e-02,  5.4242e-03,
         4.9272e-02,  3.5590e-02, -3.7017e-02, -4.7765e-02,  8.9487e-03,
        -8.4370e-05,  1.7882e-02, -6.1443e-02, -2.8164e-02,  9.1499e-04,
         5.1141e-02, -4.1303e-02,  1.9380e-02,  5.8605e-02, -4.6224e-02,
        -1.9782e-02, -9.9090e-03, -4.8716e-03, -3.3843e-03, -6.1912e-02,
         4.6462e-02, -2.7078e-03,  3.5583e-02,  4.0138e-03, -2.9161e-02,
         6.2047e-02, -4.7515e-02, -2.5072e-02, -3.4150e-02,  5.8416e-03,
        -2.7124e-02, -4.2020e-02,  5.0274e-02,  2.7189e-02,  1.8480e-02,
         3.5479e-02, -4.3480e-02, -5.5303e-02,  1.3918e-02,  5.3306e-02,
         9.7658e-03, -5.8390e-02,  3.2621e-03,  2.9094e-02, -3.5931e-03,
        -2.6815e-03, -5.6357e-02, -5.6965e-02,  6.1826e-02, -9.7609e-03,
        -2.1473e-02,  3.6759e-02,  6.1923e-02,  2.0954e-02, -5.2669e-02,
         1.0867e-03, -4.5172e-02,  5.8541e-02, -3.8366e-02, -6.5298e-04,
         4.9484e-02, -4.0647e-02, -6.1964e-02,  4.4393e-02, -5.3525e-02,
        -5.6455e-02, -5.3994e-02, -5.4215e-02,  1.1498e-02,  5.3768e-02,
        -2.1113e-02,  1.1657e-02,  1.7459e-02, -3.4544e-02,  4.2879e-02,
        -2.9769e-03, -4.3553e-04, -4.8937e-02, -4.4571e-02, -2.9671e-02,
        -3.3141e-02,  4.7475e-02, -6.1036e-02,  2.1982e-03, -1.0005e-02,
         2.6569e-02, -3.6862e-03,  4.7288e-02,  2.9352e-02,  8.6483e-04,
        -4.7205e-04,  5.8739e-02,  9.1511e-03,  5.7647e-02, -8.5959e-03,
         6.4618e-03,  8.0040e-03,  5.4572e-02, -4.2531e-02, -3.1960e-02,
        -8.5922e-03, -3.3841e-02,  3.1066e-02, -3.6957e-02, -4.7113e-02,
        -1.3520e-02, -8.2315e-03,  3.6630e-02,  5.0906e-02,  2.7940e-02,
         1.3424e-02,  2.5621e-02,  1.4632e-03,  2.6991e-02, -5.6896e-02,
         4.1519e-03, -6.1195e-02,  3.4310e-03,  4.8466e-02,  3.8051e-02,
         2.0090e-02, -3.8114e-02, -1.7498e-02, -1.0758e-02, -2.5362e-02,
         2.1958e-02, -3.1445e-02, -5.8873e-02,  5.9161e-02,  8.3614e-03,
         5.0793e-02, -5.2789e-02,  2.7134e-02, -2.5374e-03, -4.3678e-04,
         6.2234e-02, -1.4642e-02,  4.1064e-02, -3.2829e-02, -1.3411e-02,
        -4.7212e-02, -1.8114e-02, -6.0984e-02, -9.2233e-03,  4.3212e-02,
         3.2181e-02,  7.9814e-03,  5.5793e-02, -3.1895e-03,  5.0394e-02,
         2.3553e-02,  4.2726e-02,  3.7283e-02,  3.7663e-02,  3.9535e-02,
        -1.2891e-03, -2.3743e-02,  4.7981e-02, -6.0140e-02, -5.4976e-02,
        -1.5348e-02,  4.4200e-02,  4.2098e-03, -5.5113e-02, -3.6367e-03,
        -3.7603e-02,  2.8240e-02,  5.9729e-02,  2.8796e-02,  5.6406e-02,
        -1.0205e-02, -4.0540e-02, -5.1373e-02, -2.7587e-02, -1.1494e-02,
        -4.9963e-02,  4.0877e-03, -4.2132e-02,  1.7559e-02,  3.7315e-02,
         4.0371e-02,  4.9090e-02,  5.0935e-02,  3.7271e-02, -1.4808e-02,
         2.9028e-02, -4.8011e-02,  5.9727e-02,  2.5056e-02, -4.6774e-02,
        -3.3245e-02, -5.9644e-02, -5.5779e-02, -7.4907e-03,  5.3837e-02,
        -2.1625e-02,  1.1343e-03,  2.5876e-02, -9.5567e-03,  6.2251e-03,
         1.8244e-02, -5.8795e-02,  3.5016e-02,  5.1784e-02,  4.8720e-02,
        -9.7694e-03,  2.7214e-02, -5.0944e-02, -2.9913e-02,  4.7556e-02,
        -6.9457e-03,  6.0274e-02, -5.8523e-02,  4.1057e-02,  6.2398e-02,
        -3.9076e-02, -3.5992e-02, -1.9923e-02, -5.4493e-02, -1.4786e-02,
         7.0222e-03, -1.4149e-02,  5.9957e-03,  1.4556e-02, -3.5711e-02,
        -5.8304e-02, -3.9618e-02, -1.5239e-02,  4.2984e-04, -1.4925e-02,
         1.3897e-02, -6.1952e-02, -5.5066e-02, -4.1295e-02,  4.3788e-02,
        -6.1440e-02, -3.2634e-02, -3.4585e-02,  1.4327e-02,  3.2772e-02,
         5.5309e-04, -5.5616e-02, -2.6466e-02,  5.3548e-02,  6.0837e-02,
         6.1916e-02,  1.5321e-02,  2.4966e-02,  4.7744e-02, -2.8984e-02,
         4.5728e-02, -1.8783e-02,  2.9903e-02, -4.8370e-02,  1.3771e-02,
         5.1566e-02,  1.4578e-02, -2.9244e-02,  4.7284e-02, -3.7102e-02,
         3.6073e-02, -3.5813e-02, -5.6405e-02,  2.2955e-02, -1.6273e-02,
        -4.3114e-02,  4.7053e-02,  2.6214e-02, -4.1242e-02, -2.3200e-02,
         5.9166e-02,  5.6141e-03, -2.0259e-03,  1.9471e-02, -4.3728e-02,
         3.7479e-02, -5.2997e-02,  6.0006e-02, -1.0692e-02, -4.1658e-02,
         7.9474e-03,  1.8544e-02,  1.1415e-02, -5.9494e-02, -1.8471e-02,
        -3.2022e-02, -1.9526e-02, -4.8318e-02, -4.3545e-02,  4.8986e-02,
         1.8152e-02,  2.6233e-02, -4.8298e-02, -3.1420e-02, -3.7905e-02,
         6.5494e-03,  2.5899e-02,  3.2687e-02,  2.6715e-02,  8.6615e-03,
         5.2585e-02,  2.4353e-03, -4.8683e-02,  2.2142e-02,  2.5069e-02,
         5.4276e-03,  4.4661e-03, -1.3098e-02, -3.3224e-02, -9.8728e-03,
         3.7127e-02, -3.9575e-02, -1.1682e-02,  3.3836e-02, -4.0663e-02,
         4.0662e-02,  1.3699e-02,  3.5829e-02,  1.2406e-02,  1.4744e-02,
        -2.6429e-02,  2.7293e-02,  5.6553e-02,  4.7459e-03,  9.8549e-03,
         3.1166e-02, -2.7204e-02,  4.8850e-02, -5.7625e-02,  5.4987e-02,
        -4.8388e-02, -4.9207e-02,  5.7624e-02, -3.0171e-03, -1.1447e-03,
        -1.6229e-02,  5.4932e-02,  1.4492e-02,  1.9509e-02, -2.2182e-02,
         5.8632e-02, -4.0352e-02,  3.9367e-02,  1.8635e-02, -5.0594e-02,
         4.8381e-02,  2.0578e-02,  1.5175e-02, -3.7176e-02,  9.0859e-03,
         5.0905e-03,  2.1230e-02, -3.5601e-02, -4.4627e-02,  5.3516e-02,
         2.5100e-02, -4.5322e-02,  1.9338e-02, -3.7512e-02,  2.0660e-02,
         3.4541e-03, -4.3402e-02,  5.7681e-02,  6.0729e-02, -2.9785e-02,
        -8.4314e-03,  1.6616e-02, -4.7756e-02, -5.6716e-02,  3.3450e-02,
         1.7295e-02,  4.5412e-02, -5.5789e-02, -3.5428e-02, -1.4617e-02,
        -2.2256e-02, -1.6808e-02, -5.3003e-02, -2.0574e-02, -3.4645e-02,
         2.9330e-02, -3.1160e-02, -1.0311e-02,  2.3313e-03,  2.7167e-03,
         4.4579e-02,  4.4348e-04,  2.8232e-02, -2.9562e-02, -1.2452e-04,
        -1.7690e-02,  4.1506e-02,  2.1323e-02,  3.2814e-02,  1.6573e-02,
         2.2548e-02,  3.0778e-02, -4.1643e-02, -6.0697e-02, -3.1787e-02,
        -3.2797e-02,  5.9230e-02,  1.7915e-02, -2.0060e-02,  2.9961e-02,
         5.0351e-02,  4.1612e-03, -1.1459e-02, -4.2177e-02, -3.3829e-02,
        -2.9054e-03, -2.1888e-02,  1.3867e-02, -4.6933e-03, -1.6980e-03,
        -3.1834e-02, -4.2398e-02, -2.8932e-02, -2.1994e-02,  1.2134e-02,
        -2.3423e-02, -2.1765e-02, -1.3645e-02, -4.4218e-02, -5.9322e-02,
         5.5239e-02, -5.2935e-02,  3.4141e-03,  1.7819e-02,  1.4269e-02,
        -2.2207e-02,  1.9502e-02, -1.0079e-03, -5.8559e-02, -1.6235e-03,
         1.2085e-02,  5.2325e-02,  2.4376e-02, -2.8111e-02, -2.1462e-02,
         4.0573e-02,  1.8907e-02, -5.0688e-02, -3.7905e-03, -5.9524e-02,
        -1.1139e-02,  2.2229e-02, -3.3192e-02, -1.4968e-02, -1.1297e-02,
         2.2392e-02,  1.5444e-02,  3.8432e-02, -1.4325e-02,  1.7389e-02,
        -1.1011e-02], device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[ 1.3716e-02,  1.5088e-02,  1.4426e-02,  ...,  7.1408e-03,
           -1.6768e-02,  1.7245e-02],
          [-8.0847e-03, -1.3348e-02,  9.2313e-03,  ...,  4.5028e-03,
            2.7104e-03,  1.1536e-02],
          [-2.9773e-02, -1.1221e-02,  1.5309e-02,  ..., -2.7466e-02,
            6.7732e-03, -3.3793e-02],
          ...,
          [-1.2798e-02, -1.5135e-02, -3.6697e-02,  ...,  4.7542e-03,
           -1.3153e-02,  1.3792e-02],
          [-2.7415e-02,  9.0229e-03, -2.2777e-02,  ..., -1.1150e-02,
            4.7316e-03,  3.1059e-02],
          [-2.4773e-03,  2.6586e-02,  4.0306e-02,  ...,  1.2237e-02,
           -2.6733e-02,  7.8171e-03]],

         [[ 9.9621e-03,  1.8043e-02,  1.6354e-02,  ...,  2.2871e-02,
           -4.7703e-03, -2.6084e-02],
          [ 3.2484e-02,  2.5819e-02,  2.3023e-02,  ...,  3.6675e-02,
            1.0343e-02,  4.3898e-03],
          [ 4.4528e-02,  2.0392e-02,  5.5154e-03,  ...,  2.6179e-02,
           -7.0280e-03,  3.7479e-02],
          ...,
          [-2.5373e-02, -3.7754e-02, -1.2765e-02,  ..., -2.8144e-03,
            1.6508e-02, -3.7220e-02],
          [-2.9559e-02, -2.0369e-03, -2.3544e-02,  ...,  2.9226e-02,
            7.1168e-02,  2.5167e-02],
          [ 4.4901e-03,  1.1208e-03,  4.5163e-02,  ..., -4.7767e-02,
           -2.3129e-03,  1.0281e-03]],

         [[ 2.4628e-02, -5.2224e-03,  1.4082e-02,  ...,  1.9492e-02,
            4.4764e-03,  1.4564e-02],
          [ 3.2432e-02, -1.7021e-02,  1.9021e-02,  ...,  2.3379e-02,
           -2.7821e-02, -2.7279e-02],
          [-3.4278e-02,  3.9310e-03,  3.6157e-02,  ..., -2.0454e-02,
            9.5091e-03, -3.6687e-02],
          ...,
          [-2.3242e-02, -3.6236e-02, -1.6524e-02,  ..., -9.3763e-03,
            9.6452e-03, -2.3458e-03],
          [-1.4389e-03, -1.7876e-02,  5.9955e-02,  ...,  2.2097e-02,
            2.1998e-02, -9.8172e-03],
          [ 2.3254e-02, -4.9043e-02,  3.4535e-03,  ...,  6.3276e-03,
            3.0240e-02,  8.1293e-03]]],


        [[[ 4.2509e-02,  1.6553e-02,  1.2445e-02,  ...,  8.0858e-03,
           -3.2070e-02, -1.1803e-02],
          [ 7.7940e-03, -6.3294e-03, -2.0816e-02,  ...,  3.4261e-02,
           -1.3484e-02,  2.3398e-02],
          [-5.1413e-03, -1.5801e-02, -3.0623e-02,  ...,  3.5592e-02,
           -1.4758e-02,  1.0995e-02],
          ...,
          [ 3.0151e-02, -3.1958e-03,  1.9555e-02,  ...,  2.9621e-02,
            2.8663e-02, -3.9938e-02],
          [-1.0916e-02, -1.5317e-02,  1.5664e-02,  ...,  5.4360e-02,
           -3.7970e-02,  1.9316e-02],
          [ 2.8802e-02, -2.3456e-02, -2.5145e-02,  ..., -2.7341e-02,
           -3.9395e-02, -1.6781e-02]],

         [[ 5.5939e-02, -6.2200e-03,  4.4197e-04,  ..., -1.9404e-02,
            1.3880e-02, -5.7981e-02],
          [-3.0506e-02, -3.1662e-02,  6.5954e-03,  ...,  2.0681e-02,
            4.9100e-02,  1.3964e-02],
          [-4.3104e-02, -4.4601e-03, -2.1911e-02,  ...,  1.2033e-02,
           -1.7557e-02,  1.0417e-02],
          ...,
          [-6.1029e-03,  3.4394e-02, -6.0613e-02,  ...,  1.8009e-02,
            3.4428e-02,  1.7152e-02],
          [-1.0884e-02,  5.9054e-03,  5.4226e-03,  ...,  8.8433e-03,
           -2.0365e-02,  3.2931e-02],
          [-7.4057e-03, -1.8195e-02, -2.2123e-02,  ...,  2.3353e-02,
           -1.2301e-02,  4.4566e-03]],

         [[-4.4419e-03,  2.8599e-02, -1.9397e-02,  ...,  2.5256e-02,
           -9.0923e-03, -3.8891e-03],
          [-9.9246e-03,  3.8996e-03,  2.6508e-02,  ...,  1.4700e-02,
            8.7663e-03,  1.2115e-02],
          [ 1.1645e-02,  2.1777e-02, -5.1694e-02,  ...,  2.7753e-02,
            8.3027e-03, -8.9968e-03],
          ...,
          [-2.6511e-02, -1.3017e-02,  1.7035e-02,  ..., -3.0175e-02,
           -1.1966e-03, -4.3295e-04],
          [ 5.5762e-03,  3.1925e-03, -3.6983e-02,  ...,  1.6528e-02,
           -7.5389e-03,  2.7244e-02],
          [-8.1185e-05,  9.0163e-03,  3.2359e-02,  ...,  1.4226e-02,
           -3.1937e-02,  2.6826e-02]]],


        [[[ 2.1896e-02, -6.4659e-02,  5.1728e-02,  ...,  3.6117e-02,
           -5.6912e-04, -1.4367e-02],
          [-1.1812e-02,  2.4449e-02, -1.7074e-02,  ...,  2.6395e-02,
           -8.2705e-03,  1.2530e-02],
          [-8.5399e-03, -1.3949e-02,  4.4428e-02,  ...,  1.0289e-02,
            5.1613e-03, -2.4881e-02],
          ...,
          [ 2.5519e-02,  4.5845e-02, -4.4722e-02,  ...,  1.9549e-02,
           -4.8570e-03,  2.0476e-02],
          [ 1.6159e-02,  3.5782e-02,  5.6548e-04,  ..., -3.0645e-02,
            1.6352e-02, -7.5585e-02],
          [-2.7171e-02, -1.6306e-02,  1.6044e-02,  ..., -1.8486e-02,
            1.2875e-02, -1.3481e-02]],

         [[-1.7074e-02,  2.0075e-02, -7.6906e-03,  ...,  1.9020e-02,
            5.2396e-03, -7.7041e-03],
          [-2.9154e-02, -2.9314e-02,  4.5665e-02,  ...,  4.4482e-02,
           -8.1445e-03, -1.8350e-02],
          [ 2.5134e-02,  2.7988e-03,  2.3156e-02,  ...,  3.6371e-03,
           -4.5606e-02, -1.3800e-02],
          ...,
          [-3.0956e-02, -1.0047e-02,  1.2393e-03,  ...,  1.5507e-02,
           -4.6027e-02,  2.3018e-02],
          [-2.8320e-02,  2.5196e-02, -1.7168e-02,  ...,  3.1674e-02,
           -5.7662e-02, -2.2769e-02],
          [-2.8180e-02,  2.5434e-02, -4.1578e-02,  ...,  2.5014e-02,
           -2.6680e-02, -1.8332e-02]],

         [[ 2.3789e-02,  4.7437e-02,  5.9321e-03,  ..., -3.6590e-02,
           -2.7309e-02, -1.6410e-03],
          [ 3.5769e-02, -4.1806e-03,  1.4717e-02,  ...,  7.2207e-03,
            2.4251e-02, -6.3806e-02],
          [ 3.2154e-02,  1.8873e-03, -3.4754e-02,  ..., -1.0413e-02,
           -6.4332e-02,  1.8584e-02],
          ...,
          [-2.9551e-02, -1.3843e-02,  2.1102e-02,  ..., -2.4418e-03,
            2.7513e-02,  1.9677e-02],
          [ 2.6809e-02, -9.9925e-03,  2.0825e-02,  ..., -3.7417e-02,
           -3.0054e-02, -1.4828e-03],
          [ 1.8392e-02, -1.4870e-02,  3.2700e-02,  ..., -3.6228e-02,
           -3.6509e-02, -1.9423e-02]]],


        ...,


        [[[-1.6065e-02,  1.5589e-02,  2.2408e-02,  ...,  3.2805e-03,
            2.3283e-02,  4.8540e-03],
          [-1.3906e-02, -1.6446e-02,  1.1686e-02,  ...,  1.1313e-02,
           -4.5694e-03, -5.8980e-02],
          [-8.7064e-03, -5.7055e-03,  2.2957e-02,  ...,  2.4026e-02,
            1.1774e-03, -2.9419e-03],
          ...,
          [-4.4500e-02,  3.6152e-02,  7.8038e-04,  ..., -2.4941e-02,
            7.8878e-03, -1.2095e-02],
          [ 1.2552e-02,  4.2286e-04,  3.2744e-02,  ...,  1.4089e-02,
            1.5598e-02, -1.5901e-02],
          [-3.1825e-02,  2.8355e-02,  1.7037e-02,  ..., -2.7658e-03,
           -2.0240e-02,  4.0574e-02]],

         [[-7.3924e-03,  5.1540e-03, -9.5435e-03,  ...,  1.8182e-02,
           -3.7806e-03,  2.7432e-03],
          [-3.4114e-02,  2.2667e-02,  3.7223e-02,  ...,  2.5495e-03,
            8.1103e-03,  1.5756e-02],
          [ 1.4818e-02,  1.2253e-02,  3.2798e-02,  ..., -9.7476e-03,
            3.3003e-02, -2.1351e-02],
          ...,
          [ 3.3910e-03,  2.3112e-02,  1.5484e-02,  ...,  1.9647e-02,
           -1.0937e-02, -2.1067e-02],
          [-4.2590e-02,  3.8694e-02, -1.0298e-02,  ...,  2.3496e-02,
           -2.8139e-02,  3.1258e-02],
          [-2.5711e-02,  7.2436e-03,  4.9191e-02,  ...,  2.1062e-02,
            1.1109e-02, -2.5278e-02]],

         [[-6.5512e-03, -2.5342e-02, -6.3620e-02,  ..., -2.2891e-03,
           -2.1881e-02,  3.0903e-04],
          [ 2.9937e-02,  3.4426e-02, -1.6582e-02,  ..., -4.1122e-03,
           -5.8520e-02, -1.2510e-02],
          [-1.2784e-02, -1.8022e-03, -4.5941e-02,  ..., -1.0416e-02,
            2.7198e-02, -3.7526e-02],
          ...,
          [-2.8482e-02, -2.2334e-02,  3.2632e-02,  ...,  5.4393e-03,
           -4.7595e-02,  6.0507e-02],
          [-2.5465e-02, -7.4716e-04, -6.0276e-03,  ..., -1.8603e-02,
            2.8481e-03, -2.4069e-02],
          [-4.1817e-02, -9.1646e-03, -4.8120e-04,  ...,  1.6894e-04,
            4.2749e-03,  6.2124e-02]]],


        [[[-1.5689e-03,  3.1938e-02,  7.6619e-03,  ..., -6.9741e-02,
           -5.8205e-02, -1.6621e-02],
          [-2.2871e-02,  8.4444e-03,  2.3853e-02,  ..., -2.0971e-02,
            1.8153e-02,  2.6835e-02],
          [-2.7362e-02, -3.7928e-02, -2.7122e-02,  ..., -5.9812e-02,
           -5.5315e-02, -1.3451e-02],
          ...,
          [-2.5486e-02,  1.7522e-02,  2.7003e-02,  ..., -2.7044e-02,
            3.0839e-02, -4.9464e-03],
          [ 1.2372e-02,  2.0087e-02, -2.3564e-03,  ..., -7.2014e-03,
           -2.9617e-02, -2.9276e-02],
          [-5.6185e-03,  2.4700e-03, -1.7552e-02,  ...,  3.7534e-03,
           -1.3231e-02, -4.6881e-02]],

         [[-2.6446e-02, -9.8583e-03, -1.4700e-02,  ..., -1.1586e-02,
            3.6529e-02, -1.0422e-02],
          [-9.8450e-03,  9.6340e-03,  1.3254e-02,  ..., -4.0972e-02,
            2.2785e-02, -2.4741e-03],
          [ 1.3914e-02,  3.4795e-02, -1.8734e-02,  ...,  4.1265e-03,
           -3.5396e-03,  4.2253e-02],
          ...,
          [-2.4582e-02,  3.4056e-02, -2.8046e-02,  ..., -6.0864e-03,
           -2.1119e-02, -4.6472e-02],
          [-2.2799e-03, -1.4901e-02,  1.8405e-02,  ...,  4.7297e-02,
           -9.1741e-03, -2.0651e-02],
          [-1.1585e-02, -2.6283e-02, -1.3885e-03,  ..., -5.6753e-03,
           -3.1177e-03, -1.6438e-02]],

         [[ 4.1703e-02,  1.0560e-02, -2.6019e-03,  ...,  2.5151e-02,
            2.8183e-02, -2.7140e-02],
          [ 1.6415e-03,  1.4609e-03, -1.0312e-02,  ...,  5.7894e-03,
            2.1386e-02,  2.4801e-02],
          [-5.8954e-03,  2.0430e-02,  5.7380e-03,  ..., -4.5857e-02,
            1.9266e-02,  2.7101e-02],
          ...,
          [-2.5244e-02, -6.8661e-04, -2.0015e-02,  ...,  1.0765e-03,
           -2.6656e-02,  5.3600e-02],
          [-4.5773e-03, -3.7144e-02, -3.9301e-02,  ..., -7.5419e-03,
           -1.5691e-02, -2.8135e-03],
          [ 1.6121e-02, -4.5636e-03,  2.5973e-02,  ...,  8.9808e-03,
            5.0918e-03, -7.1352e-03]]],


        [[[ 9.6801e-03, -6.2439e-03,  2.1531e-02,  ...,  5.1418e-02,
           -3.0780e-03, -1.8546e-02],
          [ 8.1190e-03,  4.1112e-03,  1.0043e-03,  ...,  1.3857e-03,
           -1.2320e-02, -8.6668e-03],
          [ 3.5948e-02, -2.7766e-02, -3.6278e-02,  ..., -4.0614e-03,
           -2.5580e-02, -1.6291e-02],
          ...,
          [-1.8855e-02, -2.0452e-02,  1.5717e-03,  ...,  1.1152e-02,
            2.5702e-02, -1.1849e-02],
          [-7.7209e-05,  2.0750e-02, -4.0198e-03,  ...,  2.0423e-02,
           -1.2482e-02, -1.6807e-02],
          [ 4.6774e-03,  1.0332e-02,  1.5074e-02,  ..., -6.2588e-03,
           -4.3633e-02,  7.7775e-03]],

         [[-4.3603e-02, -2.7483e-02,  8.1805e-03,  ..., -4.7732e-02,
            1.8387e-02,  1.7378e-02],
          [ 4.3226e-02,  1.7738e-02,  7.8265e-03,  ...,  3.9925e-02,
           -3.3637e-03, -3.7727e-02],
          [-4.2298e-02, -7.4517e-03, -1.4105e-02,  ..., -2.3916e-02,
            2.2885e-04,  5.3938e-03],
          ...,
          [ 2.0979e-02,  4.5618e-03, -1.4471e-03,  ..., -1.4090e-02,
           -1.3963e-02, -4.6366e-02],
          [ 2.2600e-02, -1.6153e-02, -2.9147e-02,  ...,  2.9967e-02,
           -2.1186e-03,  2.9473e-02],
          [ 2.7059e-02,  3.2299e-02, -7.4314e-03,  ..., -1.4811e-02,
            1.5457e-02, -1.1770e-02]],

         [[-8.0745e-03, -1.5656e-02, -2.2456e-03,  ...,  6.2562e-02,
           -1.4304e-03, -3.7787e-02],
          [-2.0170e-02,  1.3725e-02,  3.8174e-02,  ..., -4.8628e-03,
            1.9632e-02,  9.1926e-03],
          [ 5.9635e-03, -9.8052e-03, -5.9743e-03,  ...,  3.1204e-02,
            2.4692e-02, -4.2146e-02],
          ...,
          [ 8.6135e-03, -4.5566e-02, -4.0025e-02,  ..., -6.4037e-03,
           -2.2801e-02, -1.5215e-02],
          [ 1.8724e-02,  1.1898e-02,  3.0356e-02,  ...,  4.3642e-02,
            3.1288e-02, -2.7703e-02],
          [-6.7663e-02,  2.8792e-03,  9.8546e-03,  ...,  2.2669e-02,
           -1.6602e-02, -5.0905e-03]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-8.1395e-02, -1.0550e-01, -3.0868e-02],
          [ 1.5503e-02,  1.0293e-01, -2.6352e-03],
          [-1.3414e-02,  9.4621e-03, -6.2924e-03]],

         [[-1.5546e-02, -1.6011e-03, -1.9307e-02],
          [ 1.2371e-01, -1.2164e-02, -3.0917e-02],
          [-1.0998e-01, -5.3840e-02, -2.7740e-02]],

         [[-2.8610e-03,  6.9587e-02, -1.8032e-02],
          [ 5.2359e-02,  6.7651e-03, -2.5047e-02],
          [ 6.8878e-02,  6.2110e-03,  2.9986e-02]],

         ...,

         [[-2.0345e-02, -1.4565e-02, -1.2927e-02],
          [ 6.4965e-02, -4.0103e-02,  4.9329e-03],
          [ 4.7405e-03,  2.9543e-02, -3.2245e-03]],

         [[ 8.6513e-02,  6.2066e-02,  4.3518e-03],
          [-4.3455e-02, -2.5822e-04, -1.3079e-01],
          [-2.6518e-02, -2.5859e-02, -1.5531e-02]],

         [[-5.0627e-02, -1.5367e-02, -3.0512e-02],
          [-1.1113e-02,  1.0592e-02,  1.6174e-02],
          [ 4.1802e-02,  5.5097e-02, -2.7996e-02]]],


        [[[-6.5202e-02,  3.2395e-02,  6.4753e-02],
          [ 7.8461e-02,  5.8947e-02, -5.9664e-02],
          [-1.5651e-01,  3.9392e-02,  4.6453e-02]],

         [[ 1.9764e-02,  7.0969e-02,  3.8499e-03],
          [ 3.5283e-02,  7.7571e-02, -9.5119e-02],
          [-1.5286e-01,  8.1211e-02, -7.4529e-02]],

         [[ 3.4066e-02, -5.4928e-02,  4.1219e-03],
          [ 2.1513e-02, -8.9615e-02, -4.7367e-02],
          [ 2.0934e-02,  1.3917e-01, -3.0729e-03]],

         ...,

         [[-3.9043e-02,  9.1297e-02, -1.0173e-03],
          [ 1.8904e-02, -4.5514e-02,  1.2279e-02],
          [ 6.8127e-03,  1.8816e-01,  8.0010e-02]],

         [[-3.7640e-02, -6.2083e-03,  9.3798e-02],
          [-5.7941e-02, -2.4223e-02, -7.9540e-02],
          [-3.9589e-03,  7.1198e-02, -8.3087e-02]],

         [[-9.2356e-02,  3.4681e-02,  1.5055e-01],
          [ 1.1119e-02,  3.5421e-02,  3.0629e-02],
          [ 4.9221e-02,  1.2604e-02,  3.3410e-02]]],


        [[[ 6.1173e-02, -5.8315e-02,  3.5696e-02],
          [ 1.1371e-01, -4.9899e-02, -3.2440e-02],
          [ 5.3524e-02, -2.7485e-02,  3.9719e-02]],

         [[ 8.9621e-03,  8.1637e-03, -1.2299e-02],
          [-4.8800e-02, -1.3281e-01, -5.9029e-02],
          [ 3.8586e-02,  2.6260e-02,  1.0601e-01]],

         [[-1.0045e-01, -7.3862e-03,  1.3442e-03],
          [-2.7725e-02, -6.0308e-02, -6.4831e-02],
          [-3.2671e-02,  2.9553e-02,  1.1799e-02]],

         ...,

         [[ 6.3361e-02, -3.4439e-02,  5.5928e-03],
          [-1.4297e-02, -2.3514e-02, -4.2726e-02],
          [ 5.1450e-02, -2.5426e-02, -9.6270e-02]],

         [[ 5.0682e-02,  7.3732e-02,  7.2415e-02],
          [ 7.1427e-02,  7.8975e-02, -2.9336e-02],
          [ 7.4292e-03, -9.0028e-02,  2.3115e-02]],

         [[ 3.7657e-02,  8.2354e-03, -9.5746e-02],
          [ 7.2847e-02, -3.5024e-02, -1.0991e-01],
          [ 2.6754e-02, -1.0319e-01,  9.4703e-02]]],


        ...,


        [[[-3.3681e-02,  8.7087e-02,  5.8913e-02],
          [ 1.0523e-01,  2.3800e-02,  2.6171e-02],
          [-2.8455e-02,  5.0716e-02, -1.0679e-02]],

         [[ 2.9440e-02,  1.5941e-02,  5.8211e-02],
          [-4.9964e-02,  1.0160e-01,  1.5072e-02],
          [ 1.2677e-02,  7.9109e-02, -3.8239e-02]],

         [[ 3.3707e-02, -1.0189e-02, -2.9682e-02],
          [ 1.4104e-02, -6.0991e-02, -3.5942e-02],
          [ 2.8050e-02,  4.3104e-02, -2.9581e-02]],

         ...,

         [[-2.7731e-02, -5.1947e-02, -6.6434e-03],
          [ 8.5634e-03, -3.7487e-02, -2.9135e-02],
          [-4.1381e-02,  1.7838e-03,  1.5691e-02]],

         [[ 7.7559e-03, -6.1456e-02,  1.8721e-04],
          [ 2.0154e-03, -1.1047e-01, -1.8395e-03],
          [ 6.1967e-02,  3.6864e-02,  2.1016e-02]],

         [[ 4.4527e-02,  8.8298e-03, -4.7523e-03],
          [-2.9753e-02,  8.4199e-02,  4.5646e-02],
          [-6.5184e-02,  9.2943e-02,  7.8127e-02]]],


        [[[-6.6801e-02,  2.8998e-02,  1.1007e-01],
          [ 1.0870e-01,  4.0786e-02, -2.0319e-02],
          [-1.0574e-02,  5.4125e-02, -6.6934e-03]],

         [[ 8.5376e-02,  5.1811e-02,  1.7198e-02],
          [ 5.1009e-03,  7.9139e-03,  4.0709e-02],
          [ 5.0062e-02,  6.2050e-03,  2.8662e-02]],

         [[-3.8173e-02, -7.5824e-02, -4.1325e-02],
          [ 3.8347e-02,  1.7007e-02, -1.0538e-03],
          [-9.5808e-02,  3.7248e-02,  1.0970e-01]],

         ...,

         [[-4.2351e-02,  1.3375e-01, -4.8783e-02],
          [-2.3713e-02,  1.5009e-02, -1.0461e-01],
          [ 7.7216e-02,  5.6811e-02, -1.7822e-01]],

         [[ 6.0573e-02, -5.9464e-02,  8.8582e-02],
          [ 1.7070e-02,  8.2218e-02,  2.1006e-02],
          [-4.5169e-02, -5.3188e-02, -2.2031e-02]],

         [[-5.0777e-02, -1.2781e-01,  2.9787e-03],
          [ 7.4557e-02,  2.7618e-02,  1.9686e-02],
          [-7.7319e-02, -2.6553e-02,  5.1956e-02]]],


        [[[-7.8974e-02,  7.4073e-03,  1.3721e-02],
          [ 1.4283e-02,  5.5423e-02,  8.2826e-02],
          [-7.4296e-02,  8.2806e-02, -4.1038e-02]],

         [[-1.3781e-01, -4.1905e-02, -1.6068e-02],
          [-2.0296e-02,  2.2547e-03, -1.1911e-01],
          [ 1.0701e-01, -2.4812e-03, -2.3559e-02]],

         [[ 3.6191e-02, -5.4535e-02,  8.1464e-02],
          [-5.7389e-02, -3.2671e-03, -2.3804e-02],
          [-5.2253e-03, -6.4067e-02,  1.8285e-02]],

         ...,

         [[-2.0419e-02, -8.1322e-02, -4.1893e-02],
          [-5.9789e-02,  6.7362e-02, -2.4994e-02],
          [-4.9531e-03,  9.1575e-02, -2.0141e-01]],

         [[ 8.6050e-02, -3.5052e-03,  3.8955e-02],
          [-4.9976e-02,  5.7083e-02, -4.5732e-02],
          [ 9.1173e-03,  5.7392e-03,  2.1829e-02]],

         [[-1.0514e-01,  6.8293e-02, -6.3608e-02],
          [ 4.5371e-02, -5.7712e-03,  1.0005e-02],
          [ 6.3547e-02, -5.4828e-02, -2.3697e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 0.0632, -0.0645, -0.0410],
          [-0.0339, -0.0364,  0.0277],
          [-0.0115,  0.0686,  0.0904]],

         [[-0.0277, -0.0290, -0.0258],
          [ 0.0527, -0.0081, -0.0480],
          [-0.0666, -0.0073,  0.1044]],

         [[ 0.0489,  0.0513,  0.0023],
          [-0.1329, -0.0773, -0.0730],
          [-0.1501,  0.0691,  0.1413]],

         ...,

         [[-0.0093, -0.0900, -0.0198],
          [-0.0381,  0.0472, -0.0134],
          [-0.0438, -0.0601,  0.0999]],

         [[-0.0876, -0.0858,  0.0966],
          [-0.0532,  0.0167,  0.0347],
          [ 0.0832, -0.1026, -0.0215]],

         [[ 0.0321, -0.0480, -0.0525],
          [ 0.0080, -0.0083,  0.0442],
          [-0.0371,  0.0786, -0.0596]]],


        [[[-0.0354, -0.0701, -0.0370],
          [ 0.0017, -0.0986, -0.0730],
          [-0.0352, -0.1064,  0.0089]],

         [[-0.0924, -0.1111,  0.1194],
          [ 0.0856, -0.0695,  0.0112],
          [-0.1021, -0.0493, -0.0009]],

         [[-0.0082,  0.0044, -0.0040],
          [-0.0629, -0.0569,  0.0618],
          [-0.0365, -0.0130,  0.0033]],

         ...,

         [[ 0.0689, -0.1612,  0.0464],
          [ 0.0060, -0.0012,  0.0155],
          [-0.0164, -0.0256, -0.0181]],

         [[ 0.0199,  0.0233, -0.0413],
          [-0.0092, -0.0211, -0.1419],
          [ 0.0734, -0.0484, -0.0109]],

         [[ 0.0513,  0.1086, -0.0093],
          [-0.0523, -0.0494, -0.0120],
          [ 0.0532,  0.0370, -0.0213]]],


        [[[-0.0010,  0.0350,  0.0281],
          [ 0.0145, -0.0094,  0.0579],
          [-0.1054, -0.0913,  0.0048]],

         [[ 0.0048,  0.0694, -0.0939],
          [ 0.0136,  0.0657,  0.0869],
          [ 0.0739, -0.0199, -0.0589]],

         [[ 0.0097, -0.0069, -0.0890],
          [-0.0136,  0.0283,  0.0146],
          [ 0.0517,  0.0072,  0.0381]],

         ...,

         [[-0.0444,  0.0643,  0.0367],
          [ 0.0133,  0.0513,  0.1091],
          [ 0.0393, -0.0486, -0.0347]],

         [[ 0.0584, -0.0768,  0.0604],
          [ 0.0017, -0.0759,  0.0016],
          [ 0.0772, -0.0517,  0.0563]],

         [[-0.1178, -0.0512,  0.0161],
          [-0.0057,  0.1169, -0.0118],
          [ 0.0532, -0.0674, -0.0097]]],


        ...,


        [[[ 0.0191, -0.1132, -0.0623],
          [ 0.0156,  0.0202, -0.0837],
          [ 0.0279,  0.0153, -0.0187]],

         [[ 0.0503,  0.0055,  0.0147],
          [ 0.0119,  0.0236, -0.0182],
          [-0.0128,  0.0436, -0.0088]],

         [[-0.1013,  0.0748, -0.0040],
          [ 0.0911, -0.0250, -0.0603],
          [ 0.0250,  0.0290,  0.0017]],

         ...,

         [[ 0.0122,  0.0080,  0.0175],
          [ 0.0392, -0.0955, -0.0405],
          [ 0.0564,  0.0074, -0.0605]],

         [[-0.0393, -0.0071, -0.0265],
          [-0.0660,  0.0305,  0.0032],
          [-0.1032,  0.0762,  0.0465]],

         [[-0.0002,  0.0190,  0.0634],
          [ 0.0053, -0.1611, -0.0411],
          [ 0.0612, -0.0440,  0.0732]]],


        [[[-0.0112, -0.0015,  0.0546],
          [ 0.0348, -0.0847,  0.1078],
          [-0.0539, -0.0087,  0.0375]],

         [[-0.0197, -0.0727, -0.0565],
          [-0.0168, -0.0584, -0.0800],
          [-0.1211,  0.0292, -0.0163]],

         [[-0.0169,  0.0741, -0.0007],
          [ 0.0322, -0.0878, -0.0503],
          [ 0.0267,  0.0013, -0.0385]],

         ...,

         [[ 0.0416, -0.0640, -0.0002],
          [ 0.0627, -0.0281,  0.0737],
          [ 0.1000, -0.0201, -0.0688]],

         [[-0.0188,  0.0463,  0.0291],
          [ 0.0433,  0.0382, -0.0231],
          [-0.0389, -0.0250,  0.0112]],

         [[-0.0237, -0.0660, -0.1360],
          [ 0.0470,  0.0582, -0.0242],
          [ 0.0275,  0.1247, -0.0270]]],


        [[[-0.0648,  0.0219, -0.0207],
          [ 0.0750, -0.0398,  0.0210],
          [ 0.0439,  0.0653, -0.0346]],

         [[-0.0800, -0.0759, -0.0632],
          [-0.0298, -0.0066,  0.0149],
          [-0.0165, -0.0591,  0.0400]],

         [[-0.0547, -0.0690, -0.0137],
          [ 0.0652, -0.0659,  0.0666],
          [ 0.0631, -0.0533,  0.0708]],

         ...,

         [[ 0.0430,  0.0344,  0.0013],
          [ 0.0311, -0.0718, -0.0147],
          [-0.0347, -0.0279,  0.0687]],

         [[-0.0517, -0.0268, -0.0121],
          [ 0.0144, -0.0422, -0.1043],
          [-0.0606,  0.0805, -0.0010]],

         [[-0.0389, -0.0392,  0.0490],
          [ 0.1005, -0.1085, -0.0159],
          [-0.0008, -0.0073,  0.0261]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 6.6951e-03, -1.6844e-01, -6.2892e-02],
          [ 5.7619e-02, -1.3811e-03,  1.6234e-02],
          [-9.0537e-02, -4.5294e-02, -7.7632e-02]],

         [[-4.8165e-02, -3.5470e-03,  5.1214e-02],
          [ 4.8310e-03,  1.4489e-03,  1.0151e-02],
          [-1.1043e-02, -1.2049e-01, -2.6998e-02]],

         [[ 6.1109e-03,  2.5991e-02, -3.8590e-02],
          [ 2.5406e-02, -1.5285e-03, -5.5965e-02],
          [-3.9258e-02, -1.9548e-02, -2.2695e-02]],

         ...,

         [[-9.3718e-02, -1.2394e-02,  8.0231e-02],
          [ 7.3140e-02, -7.7232e-02, -1.3196e-01],
          [-7.3679e-02, -4.7619e-02,  1.6007e-02]],

         [[-2.1191e-02, -4.5458e-02, -5.9580e-02],
          [ 1.5317e-01,  6.2068e-02, -6.1935e-02],
          [ 4.6676e-02, -6.0691e-02, -3.1576e-03]],

         [[-8.5882e-02,  1.4587e-02,  4.3177e-02],
          [-1.9842e-03,  6.3161e-03,  1.6843e-02],
          [ 6.2290e-02, -5.2634e-02, -2.6043e-02]]],


        [[[-7.6349e-02,  1.4450e-02,  9.2630e-02],
          [ 5.6318e-03, -2.2896e-02,  3.9652e-02],
          [ 7.2622e-03, -1.3979e-02, -1.2883e-03]],

         [[-1.8995e-03,  2.1226e-01,  6.9278e-03],
          [-2.3343e-02, -1.8523e-02,  1.4178e-02],
          [-7.5985e-02,  1.1965e-02, -7.6304e-02]],

         [[ 1.1290e-01,  3.6087e-02, -3.3989e-02],
          [-5.4333e-04,  4.0937e-02,  2.9035e-02],
          [-3.4078e-03,  8.6519e-02, -5.3581e-02]],

         ...,

         [[ 4.0390e-02,  3.6064e-02,  3.2862e-02],
          [-7.8748e-02,  6.9797e-02, -2.2211e-02],
          [ 7.9924e-02,  5.7360e-02,  4.4916e-02]],

         [[ 3.5298e-02, -8.1180e-02,  4.3376e-02],
          [-2.0960e-02,  2.0584e-02,  1.0347e-01],
          [ 2.4677e-02,  7.5629e-03,  9.3924e-02]],

         [[-7.8683e-03,  7.5034e-03, -1.5679e-01],
          [-1.2790e-02, -1.0679e-02,  3.3318e-02],
          [ 5.8264e-02,  8.4015e-02, -4.0533e-02]]],


        [[[ 2.0057e-03,  9.8723e-03,  8.9543e-02],
          [-7.5210e-02, -1.0968e-01, -4.2251e-03],
          [-1.8581e-02, -8.5375e-02, -3.6518e-02]],

         [[ 1.8956e-01,  2.8627e-02,  4.1309e-02],
          [ 1.5942e-02,  3.0988e-02, -1.2872e-01],
          [-2.1781e-02, -1.0848e-01,  7.4889e-02]],

         [[-3.3402e-02, -9.2834e-02, -2.0483e-02],
          [ 5.7198e-02,  3.8032e-02, -3.1617e-02],
          [ 1.4273e-02,  2.8076e-02,  1.3422e-01]],

         ...,

         [[ 2.0996e-02, -1.3600e-04, -1.3899e-01],
          [-3.2441e-03, -3.6345e-02, -1.1338e-01],
          [-1.3768e-01,  8.0940e-02, -4.7661e-02]],

         [[-4.8547e-02,  2.0181e-02,  1.3826e-01],
          [ 6.0986e-02, -1.6077e-02,  2.0310e-02],
          [ 3.6002e-02, -1.4486e-02, -2.7074e-02]],

         [[-4.7771e-02,  1.0288e-02, -3.7075e-02],
          [-4.4396e-02,  3.2512e-03,  8.6015e-03],
          [-1.2355e-02, -1.4639e-01, -4.9086e-02]]],


        ...,


        [[[ 9.2629e-02, -1.9847e-02, -8.7331e-02],
          [ 9.7867e-03, -7.2075e-02,  2.9265e-02],
          [-3.0839e-02, -1.9226e-03, -2.1217e-03]],

         [[ 1.6638e-02, -8.9263e-02, -5.4689e-02],
          [-1.3936e-01,  6.3785e-02, -1.0328e-01],
          [ 4.1778e-02, -1.3837e-01,  1.2779e-01]],

         [[ 1.0852e-02, -4.1534e-02,  3.4634e-02],
          [ 2.1145e-02, -5.2595e-03,  1.1418e-02],
          [ 1.5125e-02,  6.8752e-02, -6.6052e-03]],

         ...,

         [[ 8.1226e-02, -1.4996e-02,  5.8881e-02],
          [-1.2883e-02,  1.2680e-01,  3.5902e-02],
          [ 5.8689e-02,  5.3004e-02,  6.4569e-02]],

         [[ 2.0778e-02, -2.1649e-02,  2.7628e-02],
          [ 1.2743e-02, -7.1341e-02,  4.1646e-03],
          [ 4.9419e-02, -7.4108e-02,  4.0201e-03]],

         [[-4.0768e-02,  6.2994e-02,  3.4234e-02],
          [-5.5484e-02, -1.1377e-02,  7.8348e-02],
          [ 2.0808e-02,  6.6954e-02, -1.9613e-03]]],


        [[[-5.9608e-04,  4.5772e-02, -4.1721e-04],
          [-8.4076e-02, -8.6925e-02, -1.9599e-02],
          [ 3.1794e-02, -1.6482e-02, -3.5767e-02]],

         [[-8.7526e-03, -7.0908e-02,  7.8379e-03],
          [ 7.1899e-03,  3.4273e-02, -6.5501e-02],
          [-2.5109e-02, -5.8825e-02,  1.2950e-01]],

         [[-6.6773e-02, -1.0140e-01,  1.2895e-01],
          [ 1.9231e-02, -5.0385e-02, -2.6242e-02],
          [-1.3364e-02, -5.7018e-02,  5.4457e-02]],

         ...,

         [[ 3.5508e-02, -7.5340e-02, -8.2143e-02],
          [ 6.9006e-02,  9.1258e-03,  5.9348e-04],
          [-3.5657e-02, -6.0773e-02, -9.0135e-02]],

         [[ 3.7021e-02,  4.2654e-02,  8.8760e-02],
          [ 5.7236e-02, -9.3115e-03,  2.3159e-02],
          [ 1.5902e-03, -3.1285e-02, -1.7745e-02]],

         [[-2.6029e-02,  7.8703e-02,  2.0221e-03],
          [-2.7530e-02,  5.7467e-02,  1.2565e-02],
          [ 1.7714e-02, -7.5474e-03, -8.4665e-03]]],


        [[[ 2.8927e-02, -1.2079e-05, -1.4803e-01],
          [-1.4874e-03,  5.6627e-02, -1.4803e-03],
          [ 7.2607e-03,  2.4771e-02,  3.1895e-02]],

         [[-6.4957e-02, -5.9340e-03, -7.7726e-02],
          [-2.1042e-02, -9.1291e-02,  5.2624e-02],
          [ 5.0900e-02,  2.6176e-02,  1.4902e-01]],

         [[ 2.0162e-02,  4.4530e-02,  2.6889e-02],
          [-1.4156e-02,  3.0301e-02, -4.5364e-02],
          [ 4.1835e-02, -2.1738e-02,  2.4399e-02]],

         ...,

         [[ 1.8315e-02,  3.7100e-02,  6.5186e-02],
          [-2.0214e-02, -4.3170e-03,  2.5061e-02],
          [-1.0872e-02,  1.0099e-02,  2.3665e-04]],

         [[-5.0966e-02,  3.1204e-02, -1.9146e-01],
          [-5.5303e-02,  7.5486e-02,  1.3063e-01],
          [-8.9883e-03, -1.8342e-02,  1.1043e-01]],

         [[-3.7010e-02,  4.2562e-03,  6.8792e-02],
          [ 4.8603e-02, -1.1222e-02,  8.6497e-02],
          [-1.4586e-02, -2.7687e-02,  1.1828e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 9.8243e-02,  7.1397e-02,  2.3486e-02],
          [ 5.7464e-02, -4.5105e-02,  4.2790e-02],
          [ 1.2922e-01, -1.6501e-02, -1.5282e-02]],

         [[-2.5588e-02,  3.8605e-02,  8.6240e-03],
          [-4.3746e-02, -1.8888e-03,  2.1402e-02],
          [-7.1450e-02, -8.6296e-03, -1.1670e-01]],

         [[ 1.7585e-02,  8.8509e-02,  1.0195e-01],
          [-1.7416e-02,  1.5093e-01, -4.0741e-02],
          [-4.8726e-02,  2.8299e-02,  1.8296e-02]],

         ...,

         [[ 2.7641e-02,  3.8062e-02,  8.2211e-02],
          [-1.7931e-02, -1.2049e-01, -8.1919e-03],
          [-5.4408e-02, -2.9752e-02,  2.0569e-02]],

         [[-6.0680e-02, -5.3851e-02,  1.2172e-02],
          [-7.0492e-02,  2.0668e-02,  5.3526e-02],
          [ 1.0461e-01,  4.3913e-02, -1.8907e-02]],

         [[-4.2996e-02,  2.0246e-02, -6.7014e-02],
          [ 6.0500e-03, -2.7530e-02, -3.6543e-02],
          [ 3.3628e-02, -1.3172e-01, -3.8692e-02]]],


        [[[-4.4395e-03,  1.2939e-03,  4.4692e-02],
          [ 1.5184e-01, -1.3811e-03,  1.1869e-02],
          [ 5.5383e-02,  6.0949e-02, -4.1156e-02]],

         [[-1.1003e-01,  3.4054e-03, -3.4725e-02],
          [-5.8561e-04,  1.7040e-02,  1.2069e-01],
          [-1.4969e-02, -7.1859e-02, -3.8220e-02]],

         [[ 5.6163e-02, -8.3505e-02, -4.5920e-02],
          [-6.9094e-02, -5.9291e-02, -4.0051e-02],
          [-2.0537e-02,  2.8707e-02,  1.6582e-01]],

         ...,

         [[-7.8879e-02, -4.9624e-02, -9.7657e-03],
          [-8.1625e-02,  2.3282e-02, -1.3516e-02],
          [ 4.5365e-02,  3.7915e-02,  5.9627e-02]],

         [[ 3.0419e-02, -4.7022e-03,  2.9554e-02],
          [-6.8590e-02, -8.1696e-04,  2.1694e-02],
          [-1.1060e-02, -5.6228e-02,  1.4411e-02]],

         [[ 1.2861e-02,  2.1672e-02, -3.8309e-03],
          [ 1.2062e-02, -9.9809e-02,  2.6745e-02],
          [ 6.8623e-03,  6.4444e-02, -9.5048e-03]]],


        [[[-2.5946e-02,  2.8799e-02,  3.8893e-02],
          [ 1.0191e-03, -2.6798e-02, -3.8092e-02],
          [-6.5511e-02,  1.5543e-02,  2.2251e-02]],

         [[ 7.1710e-03, -6.7874e-02,  5.8831e-04],
          [ 2.2436e-02,  1.8459e-02,  1.3219e-01],
          [-4.7443e-02, -9.2634e-02,  3.6116e-02]],

         [[ 4.5137e-02,  3.3668e-02, -1.5846e-02],
          [-3.9611e-02,  1.2007e-02,  9.7576e-02],
          [ 8.2313e-02, -2.4031e-02, -1.6356e-02]],

         ...,

         [[ 3.7473e-02,  6.4380e-02, -3.3167e-02],
          [ 2.9867e-02, -1.6427e-03,  7.3624e-02],
          [-3.3785e-02, -3.9920e-02,  7.4562e-02]],

         [[-4.2147e-02,  6.5498e-03, -3.2534e-03],
          [ 2.1246e-02,  9.5453e-03, -1.1790e-01],
          [ 9.1294e-03, -5.0143e-02,  7.1990e-02]],

         [[ 7.4549e-02,  4.6945e-02,  7.2401e-03],
          [-5.7338e-03,  8.6209e-02, -3.5374e-02],
          [ 9.1996e-02,  3.3602e-02, -2.4108e-02]]],


        ...,


        [[[-5.7711e-02,  9.6963e-03, -1.1238e-01],
          [ 4.1474e-02, -2.0286e-02, -8.8484e-03],
          [ 2.8799e-03, -1.4040e-02, -4.2626e-02]],

         [[ 3.1425e-02,  2.7173e-02, -3.5577e-02],
          [ 1.5467e-02, -6.8927e-02, -3.9255e-02],
          [ 5.9472e-02,  5.4497e-02, -1.7615e-02]],

         [[-1.4901e-02,  8.9628e-03,  3.9813e-02],
          [-3.0452e-05,  3.3867e-02,  4.8634e-02],
          [ 5.3079e-02, -5.6782e-03, -3.0553e-03]],

         ...,

         [[-6.0753e-02,  5.6867e-03,  8.6756e-02],
          [ 1.8299e-02,  5.0257e-02,  3.0202e-02],
          [-5.4238e-02, -6.5349e-02,  9.0355e-02]],

         [[ 4.6415e-02, -6.2773e-02, -2.0053e-02],
          [ 7.8302e-02, -2.5482e-02, -1.4972e-02],
          [ 8.5217e-02,  7.9962e-02,  1.7796e-02]],

         [[ 1.0442e-01, -1.1897e-01, -3.2415e-02],
          [-8.2985e-02,  4.7716e-02, -1.0036e-01],
          [-6.7426e-02, -3.9983e-02,  7.0969e-02]]],


        [[[ 1.1816e-02, -6.8205e-03,  6.8375e-03],
          [ 6.6113e-02,  3.4889e-03, -6.1532e-02],
          [ 2.7218e-02, -3.9672e-02,  2.0811e-02]],

         [[-7.3342e-02, -3.1676e-02,  6.6606e-02],
          [ 1.3160e-02, -7.3332e-02, -3.8659e-03],
          [ 3.0493e-02,  3.3185e-02, -5.9418e-02]],

         [[ 5.3521e-02,  2.2434e-02,  3.2202e-02],
          [ 4.1783e-02,  3.0831e-02, -2.4267e-02],
          [ 6.9044e-02,  4.8093e-02, -3.3958e-02]],

         ...,

         [[ 6.3106e-02, -6.8463e-02,  4.9179e-03],
          [-1.4747e-02,  3.9092e-02,  3.8717e-02],
          [ 1.1753e-01, -3.8446e-02,  6.3722e-02]],

         [[-2.9295e-02, -3.9398e-02, -1.4288e-01],
          [ 3.9520e-02, -4.5559e-02, -5.4702e-02],
          [-4.9658e-02, -7.6144e-02, -2.9792e-02]],

         [[-5.0135e-02, -9.0859e-02, -4.9786e-02],
          [-6.9318e-02, -5.6067e-02, -1.0195e-01],
          [ 1.3250e-03, -4.0227e-04,  1.6682e-02]]],


        [[[-2.7842e-02,  5.9856e-03,  1.2112e-02],
          [ 1.5519e-02, -2.0707e-03,  2.7692e-02],
          [-9.2885e-02, -1.7015e-02, -1.1667e-04]],

         [[-2.4180e-02,  1.8048e-02, -6.1517e-02],
          [ 3.1733e-02,  2.4711e-02, -1.2059e-02],
          [ 1.0612e-01, -1.6044e-02, -3.3685e-02]],

         [[ 6.0989e-02,  1.0387e-02, -9.1732e-02],
          [ 7.7374e-02, -4.6840e-02, -5.4447e-02],
          [ 1.8836e-02, -9.4395e-02, -4.8335e-02]],

         ...,

         [[-2.9742e-02,  4.7268e-02, -4.3011e-02],
          [-2.2180e-02, -9.8756e-02,  5.3246e-02],
          [-1.1559e-02, -5.0751e-02, -4.1955e-04]],

         [[ 6.0794e-02,  8.6506e-02, -7.2302e-02],
          [ 2.7858e-02,  4.0382e-02, -9.5869e-02],
          [-1.2020e-01, -7.0552e-02,  7.5728e-02]],

         [[-2.5711e-02, -4.8773e-02, -3.8575e-02],
          [-3.0870e-03, -1.1612e-01, -1.0886e-02],
          [ 3.0065e-02,  1.8883e-02, -4.2785e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[ 0.0069]],

         [[ 0.0172]],

         [[-0.0702]],

         ...,

         [[ 0.0292]],

         [[-0.1733]],

         [[ 0.0114]]],


        [[[-0.0311]],

         [[ 0.0536]],

         [[ 0.0428]],

         ...,

         [[-0.0200]],

         [[ 0.0531]],

         [[-0.0583]]],


        [[[ 0.0684]],

         [[ 0.1375]],

         [[-0.0042]],

         ...,

         [[ 0.1371]],

         [[ 0.0545]],

         [[ 0.0496]]],


        ...,


        [[[-0.0638]],

         [[-0.1839]],

         [[ 0.0116]],

         ...,

         [[ 0.0047]],

         [[ 0.0498]],

         [[ 0.0253]]],


        [[[ 0.0342]],

         [[ 0.1123]],

         [[-0.0225]],

         ...,

         [[ 0.0640]],

         [[-0.0251]],

         [[-0.0888]]],


        [[[-0.0371]],

         [[ 0.0830]],

         [[-0.0121]],

         ...,

         [[ 0.0424]],

         [[ 0.0652]],

         [[-0.1754]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 0.0026, -0.0078,  0.0340],
          [-0.0466, -0.0025,  0.0772],
          [-0.0826, -0.0123,  0.0278]],

         [[ 0.0050,  0.0909, -0.0542],
          [-0.0144, -0.0160, -0.0521],
          [ 0.0065, -0.0294, -0.0616]],

         [[ 0.0665, -0.0367, -0.0459],
          [ 0.0558, -0.0900,  0.0593],
          [-0.0230,  0.0596, -0.0253]],

         ...,

         [[ 0.0498,  0.0665, -0.0443],
          [ 0.0168, -0.0453,  0.0616],
          [-0.0181, -0.0807, -0.0210]],

         [[-0.0745,  0.0070, -0.0514],
          [-0.0112,  0.0363,  0.0578],
          [-0.0289, -0.0588,  0.0370]],

         [[ 0.1043, -0.0308,  0.0033],
          [ 0.0224, -0.0720,  0.0015],
          [ 0.0657,  0.1111, -0.0694]]],


        [[[ 0.0517, -0.0028, -0.0194],
          [ 0.0307,  0.0957, -0.0352],
          [-0.0116, -0.0259, -0.0415]],

         [[-0.0162,  0.0789,  0.0670],
          [ 0.0254, -0.0486,  0.0287],
          [-0.0961, -0.0341, -0.0701]],

         [[-0.0187,  0.0752,  0.0405],
          [-0.0022,  0.0651, -0.0435],
          [ 0.0329,  0.0101, -0.0446]],

         ...,

         [[ 0.0442,  0.0570, -0.0028],
          [-0.0908, -0.0258, -0.0429],
          [-0.0209,  0.0867, -0.0054]],

         [[ 0.0127,  0.0777,  0.0377],
          [-0.0732,  0.0798, -0.1020],
          [ 0.0366, -0.0105, -0.0146]],

         [[ 0.0245, -0.0359,  0.0054],
          [ 0.0483, -0.0253, -0.0256],
          [ 0.0177,  0.0095, -0.0662]]],


        [[[ 0.0468,  0.0261,  0.0734],
          [-0.0521,  0.1014, -0.0224],
          [ 0.0593,  0.0078, -0.0934]],

         [[-0.0773,  0.0455,  0.0317],
          [-0.0125,  0.0511, -0.0561],
          [-0.0475,  0.0030, -0.0460]],

         [[-0.0843,  0.0594,  0.0087],
          [ 0.0007,  0.0265,  0.0411],
          [-0.0110,  0.0294, -0.0221]],

         ...,

         [[-0.0385,  0.0312,  0.0294],
          [ 0.0541, -0.0192, -0.0566],
          [ 0.0405,  0.0178, -0.0675]],

         [[ 0.0048,  0.0003,  0.0151],
          [ 0.0536, -0.0311,  0.0035],
          [-0.0228, -0.0198,  0.0033]],

         [[-0.0327, -0.0379,  0.0342],
          [ 0.0282, -0.0117,  0.0081],
          [-0.0269, -0.0104, -0.0109]]],


        ...,


        [[[ 0.0077,  0.0053,  0.0151],
          [-0.0185, -0.0529, -0.0321],
          [ 0.0459,  0.0824,  0.0258]],

         [[ 0.0363, -0.0732, -0.0526],
          [ 0.0351,  0.0435,  0.0284],
          [ 0.0589,  0.0127, -0.0915]],

         [[-0.0352,  0.0127, -0.0818],
          [-0.0561,  0.0229, -0.0972],
          [-0.0332, -0.0889,  0.0094]],

         ...,

         [[ 0.0014, -0.0279,  0.0510],
          [-0.0698,  0.0031,  0.0506],
          [-0.1488, -0.0518, -0.0333]],

         [[ 0.0211,  0.0019, -0.0036],
          [-0.0492, -0.0232,  0.0173],
          [ 0.0226, -0.0564, -0.0292]],

         [[ 0.0078, -0.0023, -0.0280],
          [ 0.0053, -0.0074,  0.0674],
          [-0.0481, -0.0346,  0.0144]]],


        [[[-0.0660, -0.0551,  0.0556],
          [-0.0044,  0.0308,  0.0607],
          [-0.0446, -0.0021,  0.0079]],

         [[-0.0289,  0.0469,  0.0151],
          [-0.0633,  0.1443,  0.0026],
          [ 0.0042,  0.0094, -0.0785]],

         [[ 0.0867, -0.0310,  0.0599],
          [ 0.0109,  0.0266,  0.0566],
          [ 0.0628, -0.0426, -0.0120]],

         ...,

         [[ 0.0138,  0.0299,  0.0643],
          [ 0.0379, -0.0696, -0.1377],
          [ 0.0506, -0.0771,  0.0284]],

         [[ 0.0470,  0.0909,  0.0688],
          [ 0.0298, -0.0285,  0.0112],
          [ 0.0312, -0.0464, -0.0196]],

         [[ 0.1002,  0.0116, -0.0834],
          [ 0.0250,  0.0453,  0.0475],
          [-0.0777, -0.0318,  0.0575]]],


        [[[ 0.0092,  0.0416,  0.0112],
          [-0.0084, -0.0664,  0.0336],
          [-0.0183, -0.0194,  0.0380]],

         [[ 0.0719,  0.0942,  0.0089],
          [-0.0006, -0.0307, -0.0124],
          [ 0.0059, -0.0404, -0.0457]],

         [[ 0.0035, -0.0178, -0.0353],
          [-0.0320, -0.1129, -0.0550],
          [-0.0183,  0.0111,  0.0631]],

         ...,

         [[ 0.0982,  0.0087, -0.0297],
          [-0.0224, -0.0534, -0.0742],
          [-0.0140, -0.0583,  0.0274]],

         [[ 0.0406, -0.0228,  0.0200],
          [-0.0127, -0.0283, -0.0910],
          [ 0.0437,  0.0183, -0.0231]],

         [[-0.0309,  0.0593,  0.0093],
          [-0.0118, -0.0460,  0.0089],
          [-0.0200, -0.0377, -0.0495]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 6.4136e-02,  2.4537e-03, -4.2727e-02],
          [-1.7268e-02,  2.5581e-02,  1.1321e-01],
          [-2.3506e-02, -4.6988e-02,  4.8413e-02]],

         [[-1.4911e-02, -3.6394e-02,  4.6420e-03],
          [-2.6765e-02,  4.4377e-02,  6.3127e-02],
          [-5.2088e-02, -4.8300e-02, -1.8008e-02]],

         [[ 3.7230e-02, -4.5749e-02,  5.1109e-02],
          [-2.0796e-02, -6.1336e-02, -8.4416e-02],
          [-1.1785e-01,  2.8954e-02,  4.2544e-02]],

         ...,

         [[ 3.6712e-02,  3.5868e-02, -1.0353e-01],
          [-8.6113e-02, -7.6146e-02, -2.1926e-02],
          [ 2.2458e-02,  4.7346e-02, -9.8333e-02]],

         [[ 3.9285e-02, -1.2785e-02, -4.6413e-02],
          [-8.0124e-02, -9.6885e-03,  2.6295e-03],
          [ 2.9679e-02, -4.1646e-02, -3.8478e-02]],

         [[ 3.9131e-02,  3.2856e-02, -6.1525e-02],
          [ 3.0326e-02, -5.2183e-02, -2.8523e-03],
          [-1.1823e-02,  8.8392e-02, -4.9601e-02]]],


        [[[ 9.6815e-03,  6.5725e-02,  2.8222e-03],
          [-3.5882e-03, -3.3026e-02,  7.3740e-02],
          [-3.3886e-02,  2.5306e-02, -6.1184e-02]],

         [[-3.2849e-02, -4.7490e-02, -2.6327e-02],
          [ 4.1377e-02, -9.6093e-02,  5.6359e-02],
          [-2.4716e-02, -6.4501e-02,  3.1878e-03]],

         [[ 7.6303e-02, -3.0553e-02, -1.3768e-01],
          [-8.7755e-04, -3.2880e-03, -8.6496e-02],
          [-3.4172e-02, -6.5010e-02,  3.4212e-02]],

         ...,

         [[ 3.6801e-02,  2.8833e-02, -8.2387e-02],
          [-5.6723e-02,  4.5573e-02, -1.2814e-01],
          [-1.0930e-01, -6.7761e-02, -8.1860e-02]],

         [[-3.8616e-02, -2.7304e-02,  5.9335e-02],
          [ 5.2771e-02,  1.8577e-02,  8.1627e-02],
          [ 4.2564e-02,  2.2935e-02,  7.6902e-02]],

         [[-1.3018e-02,  6.1339e-02, -8.9567e-02],
          [ 1.7351e-02, -4.3230e-02,  2.3837e-02],
          [-7.8953e-02,  2.5509e-02,  5.4263e-03]]],


        [[[ 3.3319e-02, -5.9255e-02, -5.3441e-02],
          [ 3.2424e-02, -8.5235e-03,  3.9200e-02],
          [ 1.9298e-02,  6.6884e-02, -2.1577e-02]],

         [[ 6.7533e-02, -5.4190e-03,  2.3788e-02],
          [ 8.6861e-02, -8.4471e-02, -3.1132e-02],
          [-6.5202e-02,  6.4273e-02,  3.9679e-02]],

         [[-1.6039e-02,  1.6730e-02,  5.7867e-02],
          [-3.1186e-02,  6.6684e-02, -5.3604e-02],
          [ 6.4373e-02, -2.6050e-02,  5.5426e-02]],

         ...,

         [[-1.0580e-04, -2.4233e-02, -1.8676e-02],
          [-3.7974e-02,  2.8586e-02,  2.9317e-02],
          [ 1.7008e-02, -6.1962e-03,  2.9075e-02]],

         [[-7.4863e-02,  1.1035e-02,  1.3150e-02],
          [-6.1186e-03,  4.5090e-02, -6.2442e-02],
          [ 2.1138e-02,  1.8163e-02, -2.3038e-02]],

         [[-2.0939e-02, -1.0792e-01,  4.1781e-03],
          [-7.3492e-02, -6.0813e-02,  5.9553e-02],
          [-9.2219e-02, -3.2803e-02, -8.9143e-02]]],


        ...,


        [[[ 6.0813e-02,  9.9126e-02, -3.9713e-02],
          [ 8.0413e-02,  3.8121e-02,  4.0286e-03],
          [-3.9068e-02, -2.3393e-02, -2.2683e-02]],

         [[ 3.3122e-03, -1.2519e-01, -3.6571e-02],
          [ 6.9669e-02,  4.3372e-02, -3.6147e-03],
          [-2.7815e-02, -8.1219e-02, -8.8040e-02]],

         [[-1.7386e-02, -3.3395e-02,  1.1881e-02],
          [-2.8736e-03, -1.7765e-02,  1.0181e-02],
          [-1.6245e-02,  1.3382e-02,  3.0400e-03]],

         ...,

         [[ 7.8190e-02,  2.4613e-02, -4.2605e-02],
          [-6.9011e-02, -9.1016e-04,  2.2095e-02],
          [-3.4832e-02, -7.5612e-02, -5.9205e-02]],

         [[ 6.8449e-02, -5.3737e-02, -2.7557e-02],
          [ 1.1555e-01,  1.7567e-02, -1.0106e-02],
          [ 2.2213e-02,  2.6671e-02, -6.1408e-03]],

         [[-7.4016e-02, -3.9884e-02, -1.4256e-03],
          [ 1.0586e-02, -6.7752e-02, -8.4493e-02],
          [ 3.2575e-02, -4.3362e-02, -3.5588e-02]]],


        [[[ 3.5145e-02,  9.6939e-02,  1.7157e-03],
          [-2.5503e-02, -4.6090e-02, -4.5644e-02],
          [-4.6223e-02,  2.1562e-02,  4.7214e-03]],

         [[-4.5703e-02, -2.1481e-02,  3.6247e-02],
          [ 8.9778e-02,  2.8043e-03,  3.7492e-02],
          [ 8.1104e-02, -7.7217e-02,  1.5702e-02]],

         [[ 5.2774e-02, -4.2396e-02, -5.2329e-02],
          [-5.2317e-03,  7.3673e-03, -5.2780e-02],
          [ 9.3189e-03, -2.1122e-02, -4.6255e-03]],

         ...,

         [[ 5.5345e-03,  1.6234e-02,  2.3682e-02],
          [-1.7830e-02,  6.9886e-02, -6.6616e-02],
          [-2.2897e-02,  6.3612e-03,  2.7399e-02]],

         [[-2.9410e-02, -9.2627e-03,  4.6214e-02],
          [-4.2582e-02,  1.3495e-02, -1.2007e-02],
          [-5.2679e-02,  9.9278e-02, -5.7582e-02]],

         [[-6.9955e-02,  4.0427e-02, -7.3098e-03],
          [ 6.2155e-03, -6.2577e-03,  1.0400e-01],
          [-3.0488e-02, -5.3379e-02,  1.8905e-02]]],


        [[[ 2.2819e-02, -2.4062e-02, -4.7843e-02],
          [-6.1090e-02, -2.2108e-02, -1.6815e-02],
          [-4.5740e-02, -5.7114e-02, -3.3393e-02]],

         [[-3.7024e-02,  3.3579e-02, -2.8147e-02],
          [ 2.4501e-02,  4.1705e-02,  1.3667e-02],
          [-3.4140e-02, -1.9384e-02, -5.7029e-03]],

         [[ 7.2555e-02,  5.6466e-02,  2.2970e-02],
          [-2.4442e-03, -1.0816e-01,  5.8163e-03],
          [ 4.1193e-02,  2.9885e-02,  4.4142e-02]],

         ...,

         [[ 5.2781e-03,  3.1827e-02, -9.8730e-02],
          [ 1.1016e-01, -3.6695e-03, -1.8451e-02],
          [-2.0361e-02, -5.1828e-02, -6.0450e-02]],

         [[-6.8187e-02,  6.1364e-02,  1.5033e-02],
          [ 2.5115e-02, -6.1976e-02,  7.5859e-03],
          [ 3.7768e-02,  1.0529e-02,  8.2751e-02]],

         [[-2.4100e-02, -2.6974e-02,  3.7316e-02],
          [ 2.9475e-02,  7.5294e-02, -1.6517e-02],
          [ 4.1472e-02,  2.5599e-02, -1.5441e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1605]],

         [[ 0.0147]],

         [[ 0.2471]],

         ...,

         [[-0.3206]],

         [[-0.0353]],

         [[-0.0590]]],


        [[[ 0.3335]],

         [[ 0.0214]],

         [[-0.0512]],

         ...,

         [[ 0.0226]],

         [[ 0.0612]],

         [[ 0.0153]]],


        [[[-0.1313]],

         [[-0.0884]],

         [[ 0.2906]],

         ...,

         [[ 0.0017]],

         [[ 0.0431]],

         [[-0.2495]]],


        ...,


        [[[ 0.0977]],

         [[-0.2704]],

         [[ 0.2709]],

         ...,

         [[ 0.1549]],

         [[-0.0108]],

         [[ 0.0315]]],


        [[[-0.0927]],

         [[ 0.0368]],

         [[-0.0956]],

         ...,

         [[ 0.3580]],

         [[-0.0595]],

         [[-0.3074]]],


        [[[-0.1608]],

         [[ 0.0127]],

         [[-0.0856]],

         ...,

         [[-0.0645]],

         [[ 0.0156]],

         [[ 0.1723]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 5.2091e-04,  1.1748e-01, -1.3596e-02],
          [-8.3937e-02, -1.8203e-02, -3.6696e-03],
          [-1.2967e-02,  3.1211e-02,  1.0855e-01]],

         [[-3.4803e-02,  2.4229e-03, -8.1495e-02],
          [-3.5014e-02, -6.5569e-03,  1.2001e-01],
          [ 3.8523e-02,  2.4267e-02, -3.2100e-02]],

         [[-3.8751e-02,  3.2287e-02,  6.0218e-02],
          [-2.5926e-02, -8.8813e-02, -1.2336e-01],
          [-8.7240e-03,  2.0863e-02,  4.7963e-02]],

         ...,

         [[ 5.8178e-02, -1.1529e-02, -2.1518e-02],
          [-8.5411e-03, -6.3698e-03, -7.4143e-02],
          [ 6.1813e-02, -7.2348e-02,  3.0595e-02]],

         [[-4.3864e-02,  5.6989e-02,  5.0123e-02],
          [ 1.3333e-02, -1.8847e-02, -4.4106e-02],
          [-1.2128e-02, -1.0496e-02, -3.5163e-02]],

         [[ 2.8274e-02,  5.1293e-03, -4.3416e-03],
          [-3.4375e-02, -6.5776e-02, -7.5358e-02],
          [ 5.2723e-02, -4.4827e-02,  7.7852e-03]]],


        [[[-4.4672e-02,  4.0951e-02, -1.3837e-02],
          [ 5.6117e-02,  2.2029e-02, -3.4424e-02],
          [ 4.6381e-02, -3.2203e-02,  3.4040e-02]],

         [[ 4.3123e-02, -7.0479e-02, -6.2472e-03],
          [-1.1297e-01,  6.0795e-02,  7.2514e-02],
          [-2.1130e-02,  5.9773e-02,  8.8053e-02]],

         [[ 2.2868e-02, -3.5192e-02,  5.1321e-02],
          [ 8.5703e-03, -1.9535e-02,  1.0115e-01],
          [ 1.1980e-01,  4.4181e-02, -1.9069e-02]],

         ...,

         [[-2.3559e-02,  2.6541e-02,  5.8165e-02],
          [ 1.2469e-02,  5.5585e-02,  1.9053e-02],
          [ 2.3018e-02,  7.6514e-02, -2.1660e-02]],

         [[ 3.6275e-02, -7.6412e-02, -2.8144e-02],
          [ 7.3810e-02,  1.2970e-02,  9.3330e-02],
          [ 7.6810e-02, -2.7960e-02, -9.2798e-04]],

         [[-2.7757e-02, -4.6393e-02, -1.1955e-02],
          [-4.0819e-03, -5.9674e-02, -1.0721e-02],
          [ 6.5197e-02,  1.2340e-02,  6.9822e-02]]],


        [[[ 1.7497e-02,  4.9004e-02, -2.0359e-02],
          [ 8.1799e-02, -5.6623e-03,  8.7778e-02],
          [-1.5146e-03,  6.0298e-02, -8.1838e-03]],

         [[ 1.3950e-04,  3.0115e-03,  2.4060e-02],
          [-2.9083e-02,  1.4047e-02,  1.9835e-02],
          [-4.0455e-02,  1.6467e-02, -3.2147e-02]],

         [[-5.2906e-02, -7.6063e-02,  1.8833e-02],
          [ 1.5062e-02,  4.4948e-02,  3.2315e-02],
          [ 2.3909e-02,  2.4004e-03,  9.6025e-03]],

         ...,

         [[-4.1049e-02, -4.3649e-02,  1.1535e-02],
          [-6.8685e-03, -7.5970e-03, -3.4846e-02],
          [ 4.9109e-02,  5.4454e-02, -7.8592e-03]],

         [[-4.8012e-02, -2.0709e-02,  6.1644e-02],
          [-3.1555e-02, -4.6720e-02,  2.2784e-02],
          [-1.1888e-01,  9.5718e-02, -8.8041e-02]],

         [[ 3.0196e-02,  1.0183e-02, -6.7465e-02],
          [-7.5053e-02,  3.9841e-02,  6.5226e-02],
          [ 1.2755e-01, -3.9019e-02,  7.8227e-02]]],


        ...,


        [[[ 7.1227e-03,  6.3161e-02, -6.2788e-03],
          [ 2.9154e-02,  1.8701e-03, -9.9917e-02],
          [ 3.0377e-02,  2.5754e-02,  5.9416e-03]],

         [[-1.7653e-02,  5.8439e-02, -5.0266e-02],
          [-3.0111e-02,  4.0024e-02,  3.4013e-02],
          [-5.5470e-03,  1.0269e-01, -2.5957e-02]],

         [[-3.9258e-02, -2.4130e-03,  6.6387e-02],
          [ 9.4920e-02,  8.1771e-02,  7.5639e-02],
          [-5.3177e-02,  1.1072e-01, -8.3285e-02]],

         ...,

         [[-2.5554e-02, -2.6703e-02,  5.8729e-02],
          [ 2.1391e-02,  6.7273e-02, -1.3381e-03],
          [ 2.0300e-02, -9.1011e-03,  4.8015e-02]],

         [[-3.2133e-03, -2.2819e-02,  3.0953e-02],
          [-3.4829e-03, -3.7169e-02,  2.1153e-03],
          [ 5.0496e-03, -6.9568e-02, -1.4224e-02]],

         [[-1.8445e-02,  5.6688e-02,  2.8393e-02],
          [-1.9289e-02,  1.2535e-02,  5.4552e-02],
          [-1.2490e-02, -2.9620e-02, -1.0646e-02]]],


        [[[-6.8149e-02,  5.2203e-02,  8.5153e-02],
          [ 2.5964e-03, -4.4197e-02, -1.3840e-02],
          [ 2.8384e-02,  5.0811e-02, -8.6486e-02]],

         [[ 1.0701e-01, -8.8150e-02,  9.2114e-02],
          [-5.9593e-02,  9.2565e-02,  7.0191e-02],
          [-7.1210e-03,  4.4362e-02, -4.4074e-02]],

         [[-3.6944e-02,  5.5873e-02, -1.4266e-02],
          [ 1.4313e-01, -6.3367e-02, -2.2630e-02],
          [-7.4205e-02,  1.8225e-02, -2.0605e-02]],

         ...,

         [[-1.9522e-02,  4.3267e-04,  1.1973e-02],
          [-3.0937e-03,  3.6666e-02, -1.9804e-02],
          [-9.3876e-02, -3.1074e-02, -5.0387e-02]],

         [[-4.2281e-02,  3.9963e-02, -3.1541e-02],
          [ 3.0418e-02,  7.6342e-02, -4.4133e-03],
          [-2.9455e-02, -2.2643e-02,  3.2281e-02]],

         [[ 3.0705e-02, -7.6512e-02, -2.1614e-02],
          [ 1.3307e-02, -5.0815e-02,  2.2077e-02],
          [-2.4965e-02, -2.2890e-02,  2.8157e-02]]],


        [[[ 5.4527e-02, -2.2540e-02, -1.1957e-02],
          [-3.0495e-02,  1.9746e-03, -3.5112e-02],
          [ 8.7262e-03, -6.7568e-02, -3.1195e-02]],

         [[-1.7800e-02, -6.0892e-02, -1.6895e-02],
          [-2.5183e-02, -2.1399e-03, -5.8529e-03],
          [ 4.9630e-02, -2.3940e-02, -3.0952e-02]],

         [[ 2.0679e-03, -6.0755e-02,  9.4396e-02],
          [-1.1216e-02, -7.1825e-02, -3.6879e-02],
          [ 1.2005e-02,  9.4000e-02, -1.5564e-02]],

         ...,

         [[-1.3899e-02, -5.3274e-02,  1.3218e-02],
          [ 4.8328e-02,  1.0853e-02, -6.5686e-02],
          [-3.0111e-02, -2.3894e-02,  5.5656e-02]],

         [[-2.8371e-02,  7.0163e-03, -6.5073e-02],
          [ 2.7601e-02,  9.4853e-02, -5.1196e-02],
          [ 7.8773e-03,  2.1988e-02, -1.0359e-02]],

         [[ 9.9090e-03,  3.3238e-03, -1.2767e-02],
          [-9.3103e-03,  7.6608e-02, -4.2818e-02],
          [ 4.9173e-02, -1.2263e-02,  1.1606e-03]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-0.0012,  0.0624, -0.0111],
          [ 0.0793, -0.0414,  0.0720],
          [ 0.0504, -0.0357, -0.0636]],

         [[ 0.0297, -0.0129, -0.0404],
          [-0.0302, -0.0258, -0.0127],
          [ 0.0027,  0.0630, -0.0739]],

         [[ 0.0222,  0.0106, -0.0199],
          [ 0.0352,  0.0458,  0.0262],
          [-0.0800,  0.0420, -0.0486]],

         ...,

         [[-0.0160, -0.0580,  0.0025],
          [ 0.0089, -0.0432, -0.0494],
          [-0.0573,  0.0245,  0.1033]],

         [[-0.0537, -0.0667, -0.0456],
          [-0.0335, -0.0252, -0.0573],
          [-0.0095,  0.0080, -0.0660]],

         [[ 0.0295,  0.0483,  0.0022],
          [ 0.0344,  0.0382,  0.0538],
          [ 0.0437,  0.0116,  0.0070]]],


        [[[-0.0080, -0.0351, -0.0215],
          [-0.0606, -0.0146, -0.0551],
          [-0.0039, -0.0231,  0.0277]],

         [[ 0.1333, -0.0366, -0.0373],
          [-0.0148, -0.0464,  0.1131],
          [-0.1005, -0.0718, -0.0645]],

         [[ 0.0563,  0.0054,  0.0498],
          [-0.0227,  0.0465,  0.0160],
          [ 0.0516,  0.0014,  0.0577]],

         ...,

         [[ 0.0052,  0.0650, -0.1156],
          [-0.0507,  0.0025,  0.0447],
          [-0.0231, -0.0415,  0.0064]],

         [[-0.0469,  0.0111, -0.0948],
          [-0.0855,  0.0085,  0.0722],
          [ 0.0102,  0.0309,  0.0012]],

         [[-0.0283, -0.0495,  0.0623],
          [-0.0005, -0.0133, -0.0256],
          [ 0.0980, -0.0420,  0.0562]]],


        [[[ 0.0044, -0.0119, -0.0613],
          [ 0.1081, -0.0372, -0.0328],
          [ 0.0489,  0.0068, -0.0619]],

         [[ 0.0577,  0.0348, -0.1331],
          [ 0.0085, -0.0452, -0.0339],
          [ 0.0978,  0.0008,  0.0424]],

         [[-0.0350,  0.0082,  0.0625],
          [-0.0345, -0.0174,  0.0238],
          [-0.0249,  0.1140, -0.0699]],

         ...,

         [[ 0.0299, -0.0666,  0.1025],
          [ 0.0393, -0.0344, -0.0253],
          [ 0.0542, -0.0585, -0.0435]],

         [[ 0.0107, -0.0081, -0.0392],
          [ 0.0066,  0.0565,  0.0120],
          [ 0.0084,  0.0198, -0.0002]],

         [[-0.0181,  0.0428, -0.0144],
          [ 0.0096, -0.0238, -0.0010],
          [-0.0261, -0.0052, -0.0498]]],


        ...,


        [[[ 0.0311, -0.0704, -0.0085],
          [-0.0034, -0.0002, -0.0386],
          [-0.0022, -0.0430, -0.0336]],

         [[-0.0231, -0.0057,  0.0208],
          [ 0.0098,  0.0434, -0.0497],
          [ 0.0154, -0.0034,  0.0075]],

         [[-0.0003, -0.0608, -0.0162],
          [ 0.0568,  0.0682,  0.0021],
          [ 0.0551, -0.0542,  0.0629]],

         ...,

         [[ 0.0513, -0.0179,  0.0104],
          [ 0.0249, -0.0702, -0.0706],
          [ 0.0749,  0.0179,  0.0777]],

         [[-0.0215,  0.0009,  0.0309],
          [ 0.0311, -0.0031,  0.0391],
          [-0.0711,  0.0226,  0.0709]],

         [[ 0.0222, -0.0614, -0.0004],
          [-0.0720,  0.0554, -0.0471],
          [ 0.0161, -0.0412, -0.0522]]],


        [[[-0.0135,  0.0543, -0.0184],
          [ 0.0033, -0.0562,  0.0291],
          [ 0.0171,  0.0019, -0.0300]],

         [[-0.0205, -0.0414,  0.0225],
          [-0.0027, -0.0053,  0.0950],
          [-0.0368, -0.0280, -0.0435]],

         [[-0.0065,  0.0211, -0.1239],
          [-0.0247, -0.0269,  0.0582],
          [ 0.1090, -0.0100,  0.0962]],

         ...,

         [[-0.0408,  0.0316, -0.0180],
          [-0.0443,  0.0594,  0.0308],
          [-0.0358, -0.0608,  0.0331]],

         [[ 0.0613, -0.0182, -0.0341],
          [ 0.0733, -0.0524,  0.0857],
          [-0.0002,  0.0803, -0.0259]],

         [[ 0.0388,  0.0602, -0.0657],
          [-0.0034,  0.0436, -0.0314],
          [-0.0288, -0.0470,  0.0660]]],


        [[[ 0.1035, -0.0160,  0.0289],
          [-0.0377, -0.0851, -0.0081],
          [-0.0692,  0.0362, -0.0153]],

         [[ 0.0298,  0.0448, -0.0140],
          [ 0.0480,  0.0117, -0.0017],
          [-0.0113,  0.0060, -0.0667]],

         [[-0.0386,  0.0581,  0.0127],
          [-0.0517,  0.0904,  0.0765],
          [ 0.0750,  0.0348,  0.0563]],

         ...,

         [[-0.0506, -0.0436, -0.0948],
          [ 0.0104,  0.0305,  0.0059],
          [-0.0541,  0.0911,  0.0004]],

         [[ 0.0414,  0.0152,  0.0131],
          [-0.0338, -0.0420, -0.0256],
          [-0.0253, -0.0714,  0.0155]],

         [[-0.0452, -0.0266,  0.0560],
          [ 0.0191, -0.1039,  0.0872],
          [-0.0558,  0.0561,  0.0261]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 0.0020,  0.0390, -0.0555],
          [ 0.0013,  0.0151,  0.0323],
          [-0.0250, -0.0103, -0.0200]],

         [[-0.0418,  0.0133, -0.0026],
          [-0.0681, -0.0296,  0.0206],
          [ 0.0600, -0.0147, -0.0199]],

         [[-0.0502,  0.0240, -0.0106],
          [-0.0413, -0.0007, -0.0247],
          [ 0.0312, -0.0363, -0.0389]],

         ...,

         [[ 0.0766, -0.0217,  0.0099],
          [-0.0585, -0.0138, -0.0110],
          [-0.0012,  0.0625, -0.0910]],

         [[ 0.0323,  0.0752, -0.0137],
          [-0.0435, -0.0554,  0.0734],
          [-0.0524, -0.0387, -0.0259]],

         [[-0.0561, -0.0599, -0.0743],
          [ 0.0402,  0.0205, -0.0707],
          [ 0.0612, -0.0445,  0.0049]]],


        [[[ 0.0949, -0.0305, -0.0212],
          [ 0.0356,  0.0125,  0.0353],
          [-0.0031, -0.0615, -0.0382]],

         [[-0.0648, -0.0714, -0.0063],
          [-0.0294,  0.0855, -0.0511],
          [-0.0006,  0.0294, -0.0267]],

         [[-0.0196, -0.0796,  0.0465],
          [ 0.0518, -0.0003,  0.0329],
          [-0.0023,  0.0759, -0.0261]],

         ...,

         [[-0.0257, -0.0198,  0.0296],
          [-0.0955, -0.0164,  0.0121],
          [-0.0058, -0.0230, -0.0214]],

         [[ 0.0168, -0.0377, -0.0015],
          [-0.0033,  0.0004, -0.0701],
          [-0.0501,  0.0054,  0.0088]],

         [[ 0.0570,  0.0088,  0.0353],
          [ 0.0524, -0.0357,  0.0288],
          [-0.0717,  0.0407,  0.0348]]],


        [[[-0.0020,  0.0574, -0.0130],
          [ 0.0317,  0.0323,  0.0282],
          [ 0.0316,  0.0202,  0.0417]],

         [[ 0.0120, -0.0071,  0.0015],
          [-0.0634,  0.0369, -0.0191],
          [-0.0155,  0.0105,  0.0260]],

         [[-0.0156, -0.0172, -0.0040],
          [-0.0178, -0.0083, -0.0549],
          [-0.0429,  0.0490, -0.0700]],

         ...,

         [[ 0.0224,  0.0082,  0.0073],
          [-0.0194,  0.0064,  0.0797],
          [ 0.0369,  0.0629,  0.0031]],

         [[-0.0377, -0.0287,  0.0313],
          [ 0.0080, -0.0820,  0.0726],
          [-0.0367, -0.0170,  0.0593]],

         [[ 0.0187, -0.0166, -0.0059],
          [-0.0490,  0.0117, -0.0517],
          [-0.1127,  0.0351, -0.0090]]],


        ...,


        [[[-0.0429, -0.0547, -0.0050],
          [ 0.0358, -0.0049, -0.0284],
          [-0.0145,  0.0137,  0.0256]],

         [[-0.0281,  0.0074,  0.0659],
          [ 0.0449, -0.0214, -0.0329],
          [ 0.0286,  0.0245, -0.0291]],

         [[ 0.0604,  0.0526,  0.0173],
          [-0.0095,  0.0138,  0.0216],
          [-0.0371, -0.0424, -0.1081]],

         ...,

         [[-0.0077,  0.0008, -0.0738],
          [-0.0669,  0.0286,  0.0194],
          [-0.0344, -0.0558, -0.0279]],

         [[ 0.0161,  0.0158, -0.0161],
          [ 0.0881, -0.0379, -0.0180],
          [-0.0391, -0.0325,  0.0295]],

         [[ 0.0565,  0.0466,  0.0033],
          [-0.0245,  0.0015, -0.0023],
          [-0.0041,  0.0840, -0.0256]]],


        [[[-0.0431, -0.0377, -0.1565],
          [-0.0559,  0.0430,  0.0368],
          [-0.0141,  0.0829,  0.0213]],

         [[ 0.0193,  0.0816, -0.0939],
          [ 0.0417, -0.0746, -0.0132],
          [-0.0064,  0.0060,  0.0268]],

         [[-0.0169, -0.0333, -0.0007],
          [-0.0233, -0.0078, -0.0430],
          [ 0.0675,  0.0495,  0.0036]],

         ...,

         [[-0.0230, -0.0102, -0.0529],
          [ 0.0632,  0.0307,  0.0058],
          [ 0.0715,  0.0828, -0.0659]],

         [[-0.0444,  0.0126, -0.0234],
          [-0.0301,  0.0021, -0.0273],
          [ 0.0100,  0.0094,  0.0996]],

         [[ 0.0109,  0.0462, -0.0305],
          [ 0.0667,  0.0151,  0.0301],
          [ 0.0596,  0.0260, -0.0088]]],


        [[[-0.0048, -0.0043,  0.0330],
          [-0.0178,  0.0362, -0.0395],
          [ 0.0679,  0.0708,  0.0212]],

         [[ 0.0396, -0.0731,  0.0067],
          [ 0.0257,  0.0410,  0.0030],
          [-0.0181,  0.0029, -0.0166]],

         [[ 0.0238,  0.0476,  0.0287],
          [-0.0372, -0.0030, -0.0492],
          [-0.0087, -0.0386, -0.0204]],

         ...,

         [[-0.0403, -0.0497,  0.0678],
          [ 0.0586,  0.0410, -0.0633],
          [-0.0587, -0.1233,  0.0132]],

         [[ 0.0138, -0.0244, -0.0410],
          [-0.0343, -0.0243,  0.1014],
          [ 0.0087, -0.0148,  0.0036]],

         [[ 0.0575, -0.0349,  0.0326],
          [ 0.0634,  0.0127,  0.0085],
          [ 0.0596, -0.0167,  0.0413]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-3.6434e-02,  3.2825e-02,  6.1388e-02],
          [ 1.1478e-02,  7.3436e-02, -5.1758e-02],
          [ 2.7803e-02, -5.2134e-02,  5.1965e-02]],

         [[ 5.1734e-02,  2.7235e-02, -7.2444e-03],
          [-2.9744e-02, -3.1968e-02, -4.2491e-02],
          [ 2.6823e-02,  3.0059e-02,  4.0422e-02]],

         [[-7.5135e-03,  6.5609e-03, -8.6029e-02],
          [-4.5678e-02, -4.6053e-03, -6.4664e-02],
          [-1.2641e-03, -9.9952e-02,  2.2397e-03]],

         ...,

         [[ 1.7081e-04, -2.8692e-02,  2.9749e-03],
          [-1.5975e-02,  7.6416e-03,  5.6336e-02],
          [ 5.0965e-02, -1.3034e-02,  6.0490e-02]],

         [[ 2.2476e-04, -3.9618e-02, -5.1638e-04],
          [ 2.2164e-02, -1.5423e-03, -1.2348e-02],
          [ 1.6553e-02, -5.3512e-02,  1.5027e-02]],

         [[ 3.6938e-02, -2.9543e-02,  2.5783e-02],
          [-2.4437e-02,  1.6469e-03,  2.9936e-02],
          [-1.0281e-04, -1.5909e-02,  3.4466e-02]]],


        [[[-9.8523e-04,  7.5184e-02,  4.5668e-02],
          [ 1.7457e-02, -1.1704e-02,  4.5325e-02],
          [ 2.0600e-02,  5.5563e-02, -1.8866e-02]],

         [[ 1.6203e-02, -4.6920e-02, -1.4848e-02],
          [-7.2649e-02,  1.9327e-02,  6.1567e-03],
          [ 3.4740e-02,  8.4678e-02, -3.7638e-02]],

         [[ 4.0162e-03,  1.0446e-01, -4.0023e-02],
          [ 3.0794e-02, -3.8675e-02, -4.4774e-03],
          [-1.5322e-02,  1.9069e-02, -1.4216e-02]],

         ...,

         [[-1.8667e-02,  8.3024e-03, -1.5808e-02],
          [ 7.7679e-02, -2.4875e-02, -2.7838e-02],
          [-1.5080e-02, -3.0616e-02,  1.9994e-02]],

         [[ 4.9839e-02,  3.2930e-02, -3.4067e-02],
          [ 2.8088e-03,  5.4063e-02,  1.2009e-02],
          [-3.5631e-02, -2.4348e-02, -1.7855e-02]],

         [[ 9.2058e-03, -6.8977e-04, -6.0389e-03],
          [-8.3517e-03, -2.1449e-02, -2.9493e-02],
          [-4.3320e-02,  3.0022e-02, -7.4928e-03]]],


        [[[ 2.9517e-02,  4.3377e-02,  1.3502e-02],
          [ 1.8866e-02, -2.3678e-02,  7.0274e-03],
          [ 1.0576e-02, -9.9193e-03, -4.7487e-02]],

         [[-2.4927e-02,  3.8492e-02, -4.4534e-03],
          [ 9.0961e-03,  8.4131e-03,  2.0579e-02],
          [-2.6390e-02, -1.1823e-02,  2.2725e-02]],

         [[-1.5298e-02, -5.8979e-02, -2.1393e-02],
          [ 3.2626e-02,  1.2750e-02, -5.0110e-03],
          [-6.5637e-02, -4.1284e-02, -4.0006e-02]],

         ...,

         [[ 1.0577e-01,  3.2509e-02, -7.0739e-02],
          [ 3.9432e-02, -8.4173e-03,  6.9240e-02],
          [ 5.4943e-02, -4.2507e-02, -2.0103e-02]],

         [[ 2.3126e-02, -1.3012e-02, -4.4730e-02],
          [ 2.3494e-02, -2.9185e-02,  4.3383e-03],
          [ 1.0546e-01,  1.3105e-02,  2.6454e-02]],

         [[-2.1778e-02,  2.5570e-02, -1.2478e-02],
          [-2.4175e-02,  3.2496e-02, -2.1692e-02],
          [ 2.3117e-02,  3.7691e-02,  5.3902e-02]]],


        ...,


        [[[ 3.6226e-02, -1.6166e-02, -4.0556e-03],
          [-5.2155e-02, -7.7438e-02, -1.2462e-02],
          [ 1.2207e-02, -2.5451e-02, -3.0923e-03]],

         [[-1.7614e-02,  4.5741e-02, -5.5216e-02],
          [ 1.0561e-02, -3.8391e-03, -1.9296e-02],
          [-2.8786e-02, -6.4904e-03,  2.4351e-02]],

         [[ 6.4892e-02,  1.8888e-02, -1.4321e-02],
          [-2.7675e-02,  2.0815e-02,  2.0982e-02],
          [-6.7501e-02, -1.1549e-02, -6.6708e-02]],

         ...,

         [[-1.7782e-02, -2.8901e-02,  2.3175e-02],
          [ 2.8936e-04, -8.7133e-02, -8.7674e-02],
          [ 2.1451e-02,  3.5690e-02, -3.3899e-02]],

         [[-6.2227e-02,  3.2563e-02, -7.1678e-02],
          [ 1.7870e-02,  6.5649e-02, -3.8911e-02],
          [ 5.0070e-03,  2.9375e-02, -2.9209e-03]],

         [[ 2.2477e-02, -5.1432e-04, -3.7624e-02],
          [-5.3516e-02, -5.0365e-02, -6.4980e-02],
          [-1.8371e-02, -5.7072e-03,  9.1947e-03]]],


        [[[ 3.4736e-02,  3.9067e-02,  4.1052e-02],
          [ 1.2598e-02, -1.1418e-03, -3.5290e-02],
          [-4.6359e-02, -1.2267e-02,  1.8723e-01]],

         [[-1.1667e-02,  3.8118e-03,  7.2382e-02],
          [ 3.5935e-02,  1.0237e-02,  7.4353e-02],
          [-2.6360e-02, -1.0668e-02, -7.0659e-02]],

         [[ 5.9592e-02,  2.3380e-02,  3.7013e-02],
          [ 1.1899e-02, -4.4957e-02,  6.5029e-03],
          [-5.4583e-03, -3.0145e-02, -1.9720e-02]],

         ...,

         [[ 2.7803e-02,  3.2698e-02,  2.1655e-02],
          [ 1.0782e-02,  6.0232e-02, -2.5755e-02],
          [ 2.0571e-02, -6.1831e-02,  3.3380e-02]],

         [[-8.7707e-02, -1.5569e-02,  5.4040e-02],
          [ 6.8472e-03, -1.0315e-03,  9.5069e-03],
          [-1.4085e-02,  1.1811e-02,  4.5464e-02]],

         [[-2.1569e-02,  1.1839e-03,  5.0118e-02],
          [-2.6380e-03, -1.8176e-02,  6.7621e-03],
          [-4.6976e-02, -3.2063e-02,  1.5286e-02]]],


        [[[-1.3064e-02, -1.3371e-02,  1.3024e-02],
          [-2.3334e-02, -2.4697e-03, -2.8285e-02],
          [ 1.6488e-02, -6.5479e-03,  4.0661e-02]],

         [[-3.1883e-02, -3.1771e-02,  8.7440e-03],
          [-3.3224e-02, -3.9013e-02,  4.4867e-02],
          [ 3.5425e-02, -6.5096e-02, -2.2587e-02]],

         [[ 1.8746e-02,  1.1196e-02,  2.9826e-02],
          [-6.5535e-02,  7.6936e-02, -6.4327e-02],
          [ 5.6064e-03,  5.2931e-02, -3.0567e-02]],

         ...,

         [[ 1.2888e-02,  2.3288e-03, -3.0378e-02],
          [-4.9523e-04, -1.1779e-02, -8.5517e-02],
          [ 3.2483e-02,  3.6045e-02,  7.2143e-02]],

         [[ 3.2412e-02, -6.3059e-02, -6.3053e-02],
          [ 2.6136e-02, -4.6417e-02,  3.9864e-02],
          [ 4.3834e-03, -2.5815e-02, -6.2637e-03]],

         [[-1.4420e-02, -1.6954e-02,  2.7241e-02],
          [-5.5770e-02,  2.0570e-02,  3.1032e-02],
          [-4.5823e-02, -1.0647e-02,  4.7032e-05]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0334]],

         [[-0.0663]],

         [[ 0.0587]],

         ...,

         [[ 0.0377]],

         [[-0.0843]],

         [[-0.1731]]],


        [[[-0.0426]],

         [[ 0.0796]],

         [[-0.2109]],

         ...,

         [[-0.1006]],

         [[-0.1209]],

         [[ 0.1952]]],


        [[[-0.1277]],

         [[ 0.1352]],

         [[-0.0061]],

         ...,

         [[ 0.0388]],

         [[ 0.0766]],

         [[-0.0384]]],


        ...,


        [[[-0.1056]],

         [[-0.0082]],

         [[ 0.0334]],

         ...,

         [[-0.1149]],

         [[ 0.0824]],

         [[-0.1371]]],


        [[[-0.0250]],

         [[ 0.0850]],

         [[-0.0747]],

         ...,

         [[-0.1593]],

         [[ 0.0060]],

         [[-0.1209]]],


        [[[-0.0232]],

         [[ 0.0005]],

         [[-0.0101]],

         ...,

         [[ 0.2145]],

         [[-0.0860]],

         [[-0.0501]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-4.0007e-02, -8.3715e-03,  3.1442e-04],
          [-1.7553e-02,  6.3956e-02, -3.5441e-02],
          [ 1.7272e-03,  4.3343e-02,  3.8368e-02]],

         [[ 8.0892e-02,  1.2346e-03, -2.8564e-02],
          [-2.9053e-02, -3.0576e-02, -6.6470e-02],
          [ 4.7825e-02,  2.9016e-02, -6.9930e-02]],

         [[-1.6567e-03,  3.3878e-02, -2.5110e-02],
          [ 1.1335e-03,  5.9735e-03,  3.2509e-02],
          [-1.6236e-02, -7.3786e-03,  3.2471e-02]],

         ...,

         [[-4.3926e-02,  1.5578e-02,  4.3852e-02],
          [-3.7846e-03,  1.4711e-02,  1.2019e-02],
          [-4.1549e-02, -3.1938e-03, -5.6440e-02]],

         [[-3.0545e-02, -2.1735e-02, -2.0920e-02],
          [-4.8534e-02,  4.9614e-02,  4.9792e-02],
          [-4.1327e-02,  2.2446e-02, -4.7100e-02]],

         [[-3.1545e-02,  3.2742e-03,  6.1585e-02],
          [-8.2726e-03, -6.7147e-02,  2.1700e-02],
          [-2.2836e-03,  2.6119e-02,  1.8529e-02]]],


        [[[-9.1521e-02,  5.9095e-02, -3.3691e-02],
          [ 3.2164e-02, -2.7164e-02, -4.8635e-02],
          [ 1.3707e-02, -3.3004e-02,  1.7680e-02]],

         [[-1.9205e-02,  5.0529e-02,  6.4455e-03],
          [ 5.1274e-02, -6.2190e-02, -5.4277e-02],
          [ 5.6382e-02,  5.1812e-02,  1.7568e-02]],

         [[ 1.3209e-02, -1.9618e-02, -6.8630e-02],
          [-1.3355e-02,  1.2996e-02, -2.4807e-02],
          [-4.4143e-02, -8.4206e-02,  6.5862e-02]],

         ...,

         [[-1.8791e-02,  2.2324e-02, -3.5954e-02],
          [ 2.4095e-02,  3.2552e-02, -1.6009e-02],
          [ 8.1766e-02,  3.3700e-02,  4.5619e-02]],

         [[ 2.2730e-02, -7.6140e-02,  1.2481e-02],
          [-3.5306e-02,  2.4195e-04, -7.3683e-02],
          [ 1.7679e-03,  1.0619e-02,  3.9882e-02]],

         [[-6.0420e-03, -6.6525e-02, -6.0916e-02],
          [ 1.1201e-02, -2.9068e-02,  1.3004e-04],
          [-1.3481e-02, -6.4325e-02, -5.2571e-03]]],


        [[[-6.3687e-03,  5.4288e-02,  1.4504e-02],
          [ 1.6496e-02, -2.7198e-02, -5.0432e-02],
          [ 1.9105e-02,  5.5761e-03,  2.4256e-02]],

         [[ 1.0377e-02, -4.3889e-02, -9.6911e-02],
          [ 5.9863e-03,  2.4640e-02, -3.3233e-03],
          [-2.1169e-02, -1.7819e-02,  1.3751e-02]],

         [[-1.8920e-02,  2.3878e-02,  5.1380e-03],
          [ 1.0587e-02, -6.6389e-03,  5.6852e-03],
          [-2.9008e-02,  3.7953e-03,  6.7377e-02]],

         ...,

         [[-1.3786e-02, -3.8289e-02, -2.9845e-02],
          [-6.2015e-02,  2.5399e-02, -7.3465e-03],
          [ 4.1094e-02,  2.0764e-02, -5.2906e-03]],

         [[ 3.3953e-02, -4.0055e-02,  6.7327e-03],
          [-5.2622e-03, -6.6451e-02, -3.7342e-02],
          [ 3.2351e-02, -3.1996e-02, -1.8297e-02]],

         [[-1.2950e-03, -5.9322e-02, -1.2364e-02],
          [ 1.4555e-02,  2.0224e-02, -7.0288e-02],
          [ 4.2660e-02,  1.8515e-02, -3.2954e-02]]],


        ...,


        [[[ 4.1205e-02, -4.3703e-02,  3.9198e-02],
          [-6.9009e-02,  1.7339e-02,  3.2464e-02],
          [-9.5988e-02,  1.4590e-02,  2.3159e-02]],

         [[-8.4877e-02,  4.5540e-02,  5.4227e-02],
          [-4.7167e-03,  4.2167e-02, -7.2506e-02],
          [ 2.9125e-02,  4.8630e-02, -6.4357e-02]],

         [[-5.7031e-02, -5.6304e-03,  2.4771e-02],
          [ 1.1654e-02,  6.5720e-02,  2.0195e-02],
          [ 2.3075e-02, -1.8366e-04,  5.0519e-03]],

         ...,

         [[ 1.7464e-02, -1.0429e-02, -1.0877e-03],
          [ 2.1883e-02, -2.2204e-02, -1.0398e-03],
          [-6.4014e-02, -5.8443e-02, -7.8100e-02]],

         [[-2.4989e-04, -2.6637e-02, -1.3935e-02],
          [ 8.2753e-02, -1.6251e-02,  4.2512e-02],
          [-4.2513e-02,  5.6817e-02, -3.3742e-02]],

         [[ 5.4382e-02, -3.2870e-02,  8.3246e-02],
          [-3.0217e-02,  3.0348e-02, -1.1119e-02],
          [ 7.4207e-03,  3.4699e-02,  2.5806e-02]]],


        [[[ 1.4702e-02, -2.4185e-02,  1.4075e-02],
          [ 2.8635e-03,  1.7378e-02,  2.5291e-02],
          [-6.9011e-03,  3.8334e-02,  7.2031e-03]],

         [[ 9.3804e-03, -1.4975e-02, -2.6404e-02],
          [-2.2221e-02, -2.2041e-02,  2.8196e-02],
          [ 2.3216e-02, -6.4607e-02, -5.3206e-02]],

         [[-2.8167e-02,  3.1275e-02,  5.4978e-03],
          [-1.6581e-02,  3.5729e-02, -5.9547e-02],
          [-2.4546e-02, -8.5283e-03, -6.7075e-02]],

         ...,

         [[-2.3299e-02,  4.7185e-03,  1.1822e-02],
          [-4.1118e-02, -7.9678e-03, -1.5601e-02],
          [-1.3909e-01,  6.1413e-03,  6.8642e-03]],

         [[ 4.2862e-02, -4.2492e-02,  6.3784e-02],
          [-4.5177e-02, -3.4408e-02, -2.6560e-03],
          [ 5.7224e-02, -3.1297e-02, -5.0506e-03]],

         [[-2.1554e-02, -3.7446e-02, -5.5108e-02],
          [-9.0054e-03, -4.8587e-03,  8.2568e-02],
          [ 5.9330e-02, -2.3428e-02,  1.6314e-02]]],


        [[[ 2.5369e-02,  5.2738e-02,  1.8527e-02],
          [ 6.6841e-02,  9.1166e-03,  5.8008e-02],
          [ 4.0682e-02,  4.1947e-03,  1.8226e-02]],

         [[ 9.3638e-03, -1.6699e-02, -5.4434e-02],
          [-5.4400e-02, -1.1029e-02, -2.6677e-02],
          [ 2.8927e-02, -3.6284e-02, -4.1979e-02]],

         [[-1.2487e-02, -7.2777e-02, -3.3351e-02],
          [-2.5989e-02,  4.7747e-02,  1.0805e-01],
          [-1.9832e-02, -2.1266e-02,  4.0718e-02]],

         ...,

         [[ 6.0100e-02,  5.8076e-02, -6.8566e-02],
          [-3.1990e-02,  1.3167e-02, -8.6388e-03],
          [ 6.9625e-02,  8.5581e-02, -2.5856e-02]],

         [[-7.4599e-04,  6.7068e-03, -5.1268e-02],
          [-1.0865e-02,  6.5511e-02, -6.2418e-02],
          [ 9.2776e-03, -1.9997e-02,  7.3021e-02]],

         [[ 3.7597e-02, -8.2066e-03,  2.1395e-02],
          [ 5.2203e-02, -6.0188e-02,  4.1047e-02],
          [-5.5735e-02, -6.6935e-02, -6.4057e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 6.6009e-02,  2.8243e-02,  1.4123e-02],
          [-1.2749e-02, -2.6662e-02,  2.8855e-03],
          [ 5.3870e-02,  4.0836e-02,  1.1471e-02]],

         [[ 1.2911e-03,  7.9017e-02,  3.7361e-02],
          [-2.2970e-02, -3.2446e-02, -2.7833e-02],
          [-1.2959e-02,  1.5205e-03,  1.8395e-02]],

         [[-3.5938e-02, -5.1999e-02,  2.0041e-02],
          [ 2.6222e-02, -5.4056e-02, -4.2184e-04],
          [ 6.0932e-02,  3.7462e-02,  4.5156e-03]],

         ...,

         [[ 7.1968e-02,  3.7620e-02,  2.9502e-02],
          [-9.3624e-03,  6.1912e-02, -6.7755e-03],
          [-2.6776e-02,  9.1262e-03, -2.7182e-02]],

         [[ 2.3737e-02,  8.3792e-02, -8.9395e-02],
          [-2.0340e-02,  1.9448e-02, -6.6403e-03],
          [-5.2776e-02,  2.7216e-02, -5.6013e-02]],

         [[ 8.0456e-03,  2.9603e-02,  4.2004e-02],
          [-7.5174e-02, -2.3283e-02,  9.5163e-02],
          [ 3.2260e-02, -2.6657e-02, -1.8853e-02]]],


        [[[ 1.9098e-02, -1.0269e-02, -2.5238e-03],
          [ 2.5535e-02,  2.9875e-02, -1.1147e-02],
          [-1.0856e-02,  4.8703e-02,  1.1053e-02]],

         [[ 1.0217e-02,  6.7776e-04, -2.7521e-03],
          [ 3.8340e-02, -7.4748e-03,  1.2655e-01],
          [-2.2167e-03,  1.5677e-02, -4.8694e-02]],

         [[-3.6245e-02, -2.5678e-02,  1.2266e-02],
          [ 6.4586e-02,  5.5188e-02,  5.4462e-03],
          [ 3.7803e-02, -8.7636e-02,  3.1943e-02]],

         ...,

         [[ 5.9478e-03,  5.7994e-02, -4.7267e-02],
          [-2.2259e-02, -8.7961e-03, -1.7758e-02],
          [-9.5853e-03, -1.7872e-02, -1.3017e-02]],

         [[-2.4075e-03, -4.3729e-02, -5.1666e-03],
          [ 1.5157e-02,  3.4993e-02,  2.1526e-02],
          [-4.0190e-02,  5.6812e-02,  4.8185e-02]],

         [[ 9.8991e-03, -1.0625e-02,  4.6057e-02],
          [ 2.4399e-02, -4.1056e-02, -1.2118e-03],
          [ 3.9877e-02, -2.0235e-02,  3.8370e-02]]],


        [[[-4.5635e-02, -7.8655e-03, -5.0339e-03],
          [ 7.7767e-02,  3.7275e-02, -5.5810e-02],
          [ 8.7556e-03,  2.8029e-02,  4.1581e-02]],

         [[-9.4827e-02, -1.0410e-02,  7.4817e-02],
          [ 4.4993e-02, -6.6424e-02,  1.3338e-02],
          [-3.3328e-02,  2.5158e-02,  7.6630e-02]],

         [[-8.2847e-02, -3.7926e-02, -9.4921e-02],
          [ 5.9311e-03,  7.1121e-03,  3.4344e-02],
          [-5.4856e-02, -6.2964e-02,  6.2014e-02]],

         ...,

         [[ 1.2217e-02, -3.4898e-02,  1.0547e-01],
          [ 3.4203e-02, -3.6716e-02,  3.5828e-02],
          [-1.6419e-03,  4.9489e-03, -7.7211e-03]],

         [[-4.3099e-02, -7.5020e-02,  3.3171e-02],
          [-1.6592e-02, -6.4693e-02,  6.9273e-02],
          [-2.3221e-02,  9.4912e-02,  2.5929e-03]],

         [[ 1.1221e-02,  1.5380e-02, -1.4820e-02],
          [-2.4368e-03,  5.3330e-02, -1.8886e-02],
          [ 7.2258e-02,  1.4931e-02, -7.8983e-03]]],


        ...,


        [[[ 3.2732e-02, -1.4628e-02,  6.9847e-02],
          [-4.2301e-02, -4.3916e-02, -2.7115e-02],
          [-5.9223e-02, -2.6024e-02, -3.3153e-02]],

         [[-4.4509e-02,  2.9736e-02, -8.2013e-03],
          [-4.5216e-02, -1.5633e-02,  9.0578e-04],
          [-2.7913e-02, -5.1548e-02, -1.6047e-02]],

         [[ 1.1215e-02, -2.1035e-02, -3.2590e-03],
          [ 5.0922e-02,  2.4265e-02,  1.5612e-02],
          [ 3.2541e-02, -4.8134e-02,  2.2512e-02]],

         ...,

         [[-2.3701e-02, -1.7397e-02,  2.4422e-02],
          [-1.0745e-01, -3.6141e-02, -4.0763e-02],
          [ 2.0871e-02, -2.3191e-02, -3.1607e-02]],

         [[ 1.2529e-02,  5.8148e-02, -6.0780e-02],
          [-3.5690e-02,  5.2904e-02,  2.5689e-02],
          [ 2.1631e-02,  7.1849e-02,  5.3960e-02]],

         [[-2.8355e-02,  3.5640e-02, -3.0755e-02],
          [ 4.8846e-03,  2.1929e-02,  2.1882e-02],
          [-8.9625e-03, -2.0334e-02,  3.3349e-02]]],


        [[[-2.9091e-03,  1.9510e-02, -7.7736e-02],
          [ 5.2572e-03, -1.2865e-04, -6.4355e-02],
          [-7.0461e-02,  1.9224e-02,  3.3027e-02]],

         [[ 3.0967e-03, -3.7389e-03,  4.1776e-02],
          [-2.5382e-02,  4.0087e-02,  3.8445e-02],
          [ 1.0495e-02, -4.5425e-02, -2.4316e-02]],

         [[ 7.0107e-02, -2.2066e-02, -3.6169e-02],
          [-8.0346e-02,  9.0704e-03, -5.1248e-02],
          [-1.8777e-02,  1.6361e-02, -1.4176e-02]],

         ...,

         [[-3.2531e-02,  1.5216e-02, -2.6666e-02],
          [ 1.4828e-02, -9.3832e-02,  7.0852e-02],
          [ 9.7597e-03,  4.5312e-02,  2.2840e-02]],

         [[ 1.1257e-02,  3.9617e-02, -1.1058e-01],
          [-5.5545e-02,  9.8633e-02,  7.7937e-02],
          [-2.8315e-02,  3.3983e-02,  1.0006e-02]],

         [[ 1.1997e-02, -1.6895e-02,  2.6258e-02],
          [-7.9036e-02,  3.3979e-02,  7.9338e-02],
          [ 7.3064e-02, -2.4234e-02, -4.7358e-02]]],


        [[[ 5.9165e-03,  1.6706e-02,  9.5148e-04],
          [ 5.2939e-02, -2.9986e-04,  2.5665e-02],
          [ 1.1887e-02,  1.6423e-02, -1.8692e-02]],

         [[-1.6917e-02, -7.0407e-03,  2.1614e-02],
          [ 2.7987e-02,  1.4780e-03,  5.8806e-05],
          [-2.0243e-02, -2.6573e-02, -4.8740e-02]],

         [[ 4.5474e-02,  4.1794e-02,  2.9334e-02],
          [ 1.1010e-02, -1.7843e-02, -3.3489e-02],
          [-3.0783e-02, -5.8943e-02,  2.6776e-02]],

         ...,

         [[-3.7584e-02,  1.9870e-02, -3.9414e-02],
          [-6.6772e-02,  1.1579e-02, -6.0034e-02],
          [ 3.3969e-02, -1.8441e-02, -5.0656e-02]],

         [[-4.7583e-02, -3.4557e-02,  7.9575e-03],
          [ 1.2511e-02,  5.1333e-03, -3.6585e-02],
          [-6.3191e-02,  4.7734e-02,  1.0883e-01]],

         [[ 5.3350e-02,  8.3163e-03, -6.2810e-02],
          [ 2.0341e-02,  3.7297e-02,  5.8997e-02],
          [-5.2989e-02, -6.9777e-02,  3.4360e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 22:04:34,165 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 4:27:52, time: 0.161, data_time: 0.018, memory: 547, loss_flow: 126.4617, loss: 126.4617, grad_norm: 4.2979
2022-10-09 22:04:39,889 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 3:49:11, time: 0.114, data_time: 0.005, memory: 547, loss_flow: 119.0641, loss: 119.0641, grad_norm: 3.9818
2022-10-09 22:04:45,483 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 3:34:46, time: 0.112, data_time: 0.005, memory: 547, loss_flow: 101.2939, loss: 101.2939, grad_norm: 4.3975
2022-10-09 22:04:50,776 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 3:25:01, time: 0.106, data_time: 0.005, memory: 547, loss_flow: 122.7857, loss: 122.7857, grad_norm: 5.6870
2022-10-09 22:04:58,942 - mmflow - INFO - Iter [250/100000]	lr: 1.097e-05, eta: 3:38:13, time: 0.163, data_time: 0.058, memory: 547, loss_flow: 109.7658, loss: 109.7658, grad_norm: 3.8782
2022-10-09 22:05:04,376 - mmflow - INFO - Iter [300/100000]	lr: 1.217e-05, eta: 3:31:52, time: 0.109, data_time: 0.006, memory: 547, loss_flow: 108.7856, loss: 108.7856, grad_norm: 4.4271
2022-10-09 22:05:10,035 - mmflow - INFO - Iter [350/100000]	lr: 1.337e-05, eta: 3:28:21, time: 0.113, data_time: 0.004, memory: 547, loss_flow: 119.0410, loss: 119.0410, grad_norm: 4.3825
2022-10-09 22:05:15,636 - mmflow - INFO - Iter [400/100000]	lr: 1.457e-05, eta: 3:25:28, time: 0.112, data_time: 0.005, memory: 547, loss_flow: 113.3483, loss: 113.3483, grad_norm: 5.1264
2022-10-09 22:05:23,691 - mmflow - INFO - Iter [450/100000]	lr: 1.577e-05, eta: 3:32:14, time: 0.161, data_time: 0.056, memory: 547, loss_flow: 104.5831, loss: 104.5831, grad_norm: 3.5230
2022-10-09 22:05:29,228 - mmflow - INFO - Iter [500/100000]	lr: 1.697e-05, eta: 3:29:17, time: 0.111, data_time: 0.004, memory: 547, loss_flow: 124.2817, loss: 124.2817, grad_norm: 4.1460
2022-10-09 22:05:34,861 - mmflow - INFO - Iter [550/100000]	lr: 1.817e-05, eta: 3:27:08, time: 0.113, data_time: 0.004, memory: 547, loss_flow: 126.6046, loss: 126.6046, grad_norm: 5.0150
2022-10-09 22:05:40,230 - mmflow - INFO - Iter [600/100000]	lr: 1.936e-05, eta: 3:24:36, time: 0.107, data_time: 0.005, memory: 547, loss_flow: 119.6072, loss: 119.6072, grad_norm: 4.4567
2022-10-09 22:05:48,385 - mmflow - INFO - Iter [650/100000]	lr: 2.056e-05, eta: 3:29:32, time: 0.163, data_time: 0.058, memory: 547, loss_flow: 119.5603, loss: 119.5603, grad_norm: 3.5539
2022-10-09 22:05:54,047 - mmflow - INFO - Iter [700/100000]	lr: 2.176e-05, eta: 3:27:52, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 110.9316, loss: 110.9316, grad_norm: 4.1010
2022-10-09 22:05:59,639 - mmflow - INFO - Iter [750/100000]	lr: 2.296e-05, eta: 3:26:14, time: 0.112, data_time: 0.005, memory: 547, loss_flow: 106.9786, loss: 106.9786, grad_norm: 4.5126
2022-10-09 22:06:05,093 - mmflow - INFO - Iter [800/100000]	lr: 2.416e-05, eta: 3:24:31, time: 0.109, data_time: 0.004, memory: 547, loss_flow: 108.5861, loss: 108.5861, grad_norm: 4.5331
2022-10-09 22:06:13,529 - mmflow - INFO - Iter [850/100000]	lr: 2.536e-05, eta: 3:28:48, time: 0.169, data_time: 0.058, memory: 547, loss_flow: 110.6441, loss: 110.6441, grad_norm: 5.6475
2022-10-09 22:06:18,999 - mmflow - INFO - Iter [900/100000]	lr: 2.656e-05, eta: 3:27:08, time: 0.109, data_time: 0.005, memory: 547, loss_flow: 108.9636, loss: 108.9636, grad_norm: 3.8316
2022-10-09 22:06:24,640 - mmflow - INFO - Iter [950/100000]	lr: 2.776e-05, eta: 3:25:56, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 128.5831, loss: 128.5831, grad_norm: 4.7316
2022-10-09 22:06:30,123 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:06:30,125 - mmflow - INFO - Iter [1000/100000]	lr: 2.896e-05, eta: 3:24:35, time: 0.110, data_time: 0.004, memory: 547, loss_flow: 106.7175, loss: 106.7175, grad_norm: 4.6623
2022-10-09 22:06:38,265 - mmflow - INFO - Iter [1050/100000]	lr: 3.016e-05, eta: 3:27:32, time: 0.163, data_time: 0.058, memory: 547, loss_flow: 121.3563, loss: 121.3563, grad_norm: 4.5945
2022-10-09 22:06:43,850 - mmflow - INFO - Iter [1100/100000]	lr: 3.135e-05, eta: 3:26:22, time: 0.112, data_time: 0.004, memory: 547, loss_flow: 94.8394, loss: 94.8394, grad_norm: 3.5702
2022-10-09 22:06:49,503 - mmflow - INFO - Iter [1150/100000]	lr: 3.255e-05, eta: 3:25:23, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 111.0123, loss: 111.0123, grad_norm: 4.3319
2022-10-09 22:06:54,872 - mmflow - INFO - Iter [1200/100000]	lr: 3.375e-05, eta: 3:24:06, time: 0.107, data_time: 0.005, memory: 547, loss_flow: 117.1863, loss: 117.1863, grad_norm: 4.9647
2022-10-09 22:07:03,127 - mmflow - INFO - Iter [1250/100000]	lr: 3.495e-05, eta: 3:26:42, time: 0.165, data_time: 0.062, memory: 547, loss_flow: 137.7824, loss: 137.7824, grad_norm: 5.7399
2022-10-09 22:07:08,881 - mmflow - INFO - Iter [1300/100000]	lr: 3.615e-05, eta: 3:25:56, time: 0.115, data_time: 0.005, memory: 547, loss_flow: 127.3749, loss: 127.3749, grad_norm: 4.7106
2022-10-09 22:07:14,459 - mmflow - INFO - Iter [1350/100000]	lr: 3.735e-05, eta: 3:25:00, time: 0.112, data_time: 0.005, memory: 547, loss_flow: 110.9826, loss: 110.9826, grad_norm: 4.5966
2022-10-09 22:07:19,615 - mmflow - INFO - Iter [1400/100000]	lr: 3.855e-05, eta: 3:23:38, time: 0.103, data_time: 0.005, memory: 547, loss_flow: 133.3159, loss: 133.3159, grad_norm: 5.5909
2022-10-09 22:07:27,627 - mmflow - INFO - Iter [1450/100000]	lr: 3.975e-05, eta: 3:25:35, time: 0.160, data_time: 0.058, memory: 547, loss_flow: 122.4496, loss: 122.4496, grad_norm: 4.2776
2022-10-09 22:07:33,118 - mmflow - INFO - Iter [1500/100000]	lr: 4.095e-05, eta: 3:24:38, time: 0.110, data_time: 0.004, memory: 547, loss_flow: 104.0240, loss: 104.0240, grad_norm: 2.8817
2022-10-09 22:07:38,654 - mmflow - INFO - Iter [1550/100000]	lr: 4.215e-05, eta: 3:23:48, time: 0.111, data_time: 0.005, memory: 547, loss_flow: 114.7825, loss: 114.7825, grad_norm: 5.0865
2022-10-09 22:07:43,858 - mmflow - INFO - Iter [1600/100000]	lr: 4.335e-05, eta: 3:22:40, time: 0.104, data_time: 0.005, memory: 547, loss_flow: 118.0267, loss: 118.0267, grad_norm: 4.7853
2022-10-09 22:07:52,008 - mmflow - INFO - Iter [1650/100000]	lr: 4.454e-05, eta: 3:24:31, time: 0.163, data_time: 0.061, memory: 547, loss_flow: 111.3655, loss: 111.3655, grad_norm: 3.4548
2022-10-09 22:07:57,167 - mmflow - INFO - Iter [1700/100000]	lr: 4.574e-05, eta: 3:23:22, time: 0.103, data_time: 0.004, memory: 547, loss_flow: 97.5658, loss: 97.5658, grad_norm: 3.6693
2022-10-09 22:08:02,566 - mmflow - INFO - Iter [1750/100000]	lr: 4.694e-05, eta: 3:22:31, time: 0.108, data_time: 0.004, memory: 547, loss_flow: 112.8957, loss: 112.8957, grad_norm: 4.8654
2022-10-09 22:08:07,775 - mmflow - INFO - Iter [1800/100000]	lr: 4.814e-05, eta: 3:21:31, time: 0.104, data_time: 0.004, memory: 547, loss_flow: 124.5241, loss: 124.5241, grad_norm: 5.1785
2022-10-09 22:08:16,093 - mmflow - INFO - Iter [1850/100000]	lr: 4.934e-05, eta: 3:23:20, time: 0.166, data_time: 0.060, memory: 547, loss_flow: 129.3841, loss: 129.3841, grad_norm: 4.4820
2022-10-09 22:08:21,416 - mmflow - INFO - Iter [1900/100000]	lr: 5.054e-05, eta: 3:22:28, time: 0.106, data_time: 0.004, memory: 547, loss_flow: 97.2250, loss: 97.2250, grad_norm: 3.3297
2022-10-09 22:08:26,794 - mmflow - INFO - Iter [1950/100000]	lr: 5.174e-05, eta: 3:21:40, time: 0.108, data_time: 0.005, memory: 547, loss_flow: 101.9130, loss: 101.9130, grad_norm: 4.2398
2022-10-09 22:08:32,237 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:08:32,239 - mmflow - INFO - Iter [2000/100000]	lr: 5.294e-05, eta: 3:20:59, time: 0.109, data_time: 0.005, memory: 547, loss_flow: 132.4185, loss: 132.4185, grad_norm: 5.1580
2022-10-09 22:08:40,257 - mmflow - INFO - Iter [2050/100000]	lr: 5.414e-05, eta: 3:22:22, time: 0.160, data_time: 0.068, memory: 547, loss_flow: 128.4668, loss: 128.4668, grad_norm: 3.9917
2022-10-09 22:08:45,371 - mmflow - INFO - Iter [2100/100000]	lr: 5.534e-05, eta: 3:21:25, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 108.1121, loss: 108.1121, grad_norm: 3.8892
2022-10-09 22:08:50,541 - mmflow - INFO - Iter [2150/100000]	lr: 5.653e-05, eta: 3:20:33, time: 0.103, data_time: 0.016, memory: 547, loss_flow: 126.8269, loss: 126.8269, grad_norm: 4.8532
2022-10-09 22:08:55,693 - mmflow - INFO - Iter [2200/100000]	lr: 5.773e-05, eta: 3:19:43, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 118.8713, loss: 118.8713, grad_norm: 4.7627
2022-10-09 22:09:03,597 - mmflow - INFO - Iter [2250/100000]	lr: 5.893e-05, eta: 3:20:54, time: 0.158, data_time: 0.068, memory: 547, loss_flow: 129.6954, loss: 129.6954, grad_norm: 4.1401
2022-10-09 22:09:08,746 - mmflow - INFO - Iter [2300/100000]	lr: 6.013e-05, eta: 3:20:04, time: 0.103, data_time: 0.016, memory: 547, loss_flow: 98.5153, loss: 98.5153, grad_norm: 3.2951
2022-10-09 22:09:13,749 - mmflow - INFO - Iter [2350/100000]	lr: 6.133e-05, eta: 3:19:11, time: 0.100, data_time: 0.011, memory: 547, loss_flow: 101.3973, loss: 101.3973, grad_norm: 4.7935
2022-10-09 22:09:18,920 - mmflow - INFO - Iter [2400/100000]	lr: 6.253e-05, eta: 3:18:26, time: 0.103, data_time: 0.016, memory: 547, loss_flow: 118.2447, loss: 118.2447, grad_norm: 4.6986
2022-10-09 22:09:26,724 - mmflow - INFO - Iter [2450/100000]	lr: 6.373e-05, eta: 3:19:28, time: 0.156, data_time: 0.065, memory: 547, loss_flow: 119.0685, loss: 119.0685, grad_norm: 4.9575
2022-10-09 22:09:31,913 - mmflow - INFO - Iter [2500/100000]	lr: 6.493e-05, eta: 3:18:45, time: 0.104, data_time: 0.015, memory: 547, loss_flow: 96.8494, loss: 96.8494, grad_norm: 3.4129
2022-10-09 22:09:37,017 - mmflow - INFO - Iter [2550/100000]	lr: 6.613e-05, eta: 3:18:00, time: 0.102, data_time: 0.015, memory: 547, loss_flow: 122.6494, loss: 122.6494, grad_norm: 4.7900
2022-10-09 22:09:42,090 - mmflow - INFO - Iter [2600/100000]	lr: 6.733e-05, eta: 3:17:16, time: 0.101, data_time: 0.014, memory: 547, loss_flow: 95.8833, loss: 95.8833, grad_norm: 4.0884
2022-10-09 22:09:49,763 - mmflow - INFO - Iter [2650/100000]	lr: 6.853e-05, eta: 3:18:08, time: 0.153, data_time: 0.063, memory: 547, loss_flow: 113.0587, loss: 113.0587, grad_norm: 3.6478
2022-10-09 22:09:54,777 - mmflow - INFO - Iter [2700/100000]	lr: 6.972e-05, eta: 3:17:23, time: 0.100, data_time: 0.012, memory: 547, loss_flow: 119.4678, loss: 119.4678, grad_norm: 4.7524
2022-10-09 22:09:59,959 - mmflow - INFO - Iter [2750/100000]	lr: 7.092e-05, eta: 3:16:45, time: 0.104, data_time: 0.016, memory: 547, loss_flow: 94.8184, loss: 94.8184, grad_norm: 3.4946
2022-10-09 22:10:05,189 - mmflow - INFO - Iter [2800/100000]	lr: 7.212e-05, eta: 3:16:09, time: 0.105, data_time: 0.019, memory: 547, loss_flow: 115.9459, loss: 115.9459, grad_norm: 4.7535
2022-10-09 22:10:12,904 - mmflow - INFO - Iter [2850/100000]	lr: 7.332e-05, eta: 3:17:00, time: 0.154, data_time: 0.063, memory: 547, loss_flow: 125.0099, loss: 125.0099, grad_norm: 4.6304
2022-10-09 22:10:18,135 - mmflow - INFO - Iter [2900/100000]	lr: 7.452e-05, eta: 3:16:25, time: 0.105, data_time: 0.016, memory: 547, loss_flow: 112.0091, loss: 112.0091, grad_norm: 4.3132
2022-10-09 22:10:23,213 - mmflow - INFO - Iter [2950/100000]	lr: 7.572e-05, eta: 3:15:47, time: 0.102, data_time: 0.012, memory: 547, loss_flow: 88.8081, loss: 88.8081, grad_norm: 3.3537
2022-10-09 22:10:28,296 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:10:28,299 - mmflow - INFO - Iter [3000/100000]	lr: 7.692e-05, eta: 3:15:09, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 112.5401, loss: 112.5401, grad_norm: 4.8109
2022-10-09 22:10:35,993 - mmflow - INFO - Iter [3050/100000]	lr: 7.812e-05, eta: 3:15:56, time: 0.154, data_time: 0.063, memory: 547, loss_flow: 125.8785, loss: 125.8785, grad_norm: 4.1526
2022-10-09 22:10:41,067 - mmflow - INFO - Iter [3100/100000]	lr: 7.932e-05, eta: 3:15:19, time: 0.102, data_time: 0.012, memory: 547, loss_flow: 105.6088, loss: 105.6088, grad_norm: 4.0071
2022-10-09 22:10:46,142 - mmflow - INFO - Iter [3150/100000]	lr: 8.052e-05, eta: 3:14:43, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 113.3118, loss: 113.3118, grad_norm: 4.2722
2022-10-09 22:10:51,453 - mmflow - INFO - Iter [3200/100000]	lr: 8.171e-05, eta: 3:14:15, time: 0.106, data_time: 0.018, memory: 547, loss_flow: 101.9284, loss: 101.9284, grad_norm: 3.7604
2022-10-09 22:10:59,167 - mmflow - INFO - Iter [3250/100000]	lr: 8.291e-05, eta: 3:15:00, time: 0.154, data_time: 0.063, memory: 547, loss_flow: 109.6253, loss: 109.6253, grad_norm: 3.9338
2022-10-09 22:11:04,229 - mmflow - INFO - Iter [3300/100000]	lr: 8.411e-05, eta: 3:14:25, time: 0.101, data_time: 0.013, memory: 547, loss_flow: 114.7405, loss: 114.7405, grad_norm: 4.8106
2022-10-09 22:11:09,321 - mmflow - INFO - Iter [3350/100000]	lr: 8.531e-05, eta: 3:13:52, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 109.2518, loss: 109.2518, grad_norm: 4.3817
2022-10-09 22:11:14,456 - mmflow - INFO - Iter [3400/100000]	lr: 8.651e-05, eta: 3:13:20, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 102.0477, loss: 102.0477, grad_norm: 4.0540
2022-10-09 22:11:22,324 - mmflow - INFO - Iter [3450/100000]	lr: 8.771e-05, eta: 3:14:07, time: 0.157, data_time: 0.068, memory: 547, loss_flow: 102.9204, loss: 102.9204, grad_norm: 3.1062
2022-10-09 22:11:27,559 - mmflow - INFO - Iter [3500/100000]	lr: 8.891e-05, eta: 3:13:39, time: 0.105, data_time: 0.016, memory: 547, loss_flow: 102.8642, loss: 102.8642, grad_norm: 4.3112
2022-10-09 22:11:32,695 - mmflow - INFO - Iter [3550/100000]	lr: 9.011e-05, eta: 3:13:09, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 114.1693, loss: 114.1693, grad_norm: 4.1171
2022-10-09 22:11:37,702 - mmflow - INFO - Iter [3600/100000]	lr: 9.131e-05, eta: 3:12:36, time: 0.100, data_time: 0.013, memory: 547, loss_flow: 123.2617, loss: 123.2617, grad_norm: 4.9753
2022-10-09 22:11:45,457 - mmflow - INFO - Iter [3650/100000]	lr: 9.251e-05, eta: 3:13:16, time: 0.155, data_time: 0.066, memory: 547, loss_flow: 112.1369, loss: 112.1369, grad_norm: 4.0427
2022-10-09 22:11:50,557 - mmflow - INFO - Iter [3700/100000]	lr: 9.371e-05, eta: 3:12:46, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 99.6459, loss: 99.6459, grad_norm: 3.4412
2022-10-09 22:11:55,662 - mmflow - INFO - Iter [3750/100000]	lr: 9.490e-05, eta: 3:12:17, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 97.3406, loss: 97.3406, grad_norm: 3.8467
2022-10-09 22:12:00,829 - mmflow - INFO - Iter [3800/100000]	lr: 9.610e-05, eta: 3:11:50, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 117.9435, loss: 117.9435, grad_norm: 5.3786
2022-10-09 22:12:08,667 - mmflow - INFO - Iter [3850/100000]	lr: 9.730e-05, eta: 3:12:31, time: 0.157, data_time: 0.068, memory: 547, loss_flow: 121.8291, loss: 121.8291, grad_norm: 4.2827
2022-10-09 22:12:13,838 - mmflow - INFO - Iter [3900/100000]	lr: 9.850e-05, eta: 3:12:04, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 110.3063, loss: 110.3063, grad_norm: 3.9545
2022-10-09 22:12:18,970 - mmflow - INFO - Iter [3950/100000]	lr: 9.970e-05, eta: 3:11:37, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 103.6766, loss: 103.6766, grad_norm: 4.1468
2022-10-09 22:12:24,129 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:12:24,130 - mmflow - INFO - Iter [4000/100000]	lr: 1.009e-04, eta: 3:11:11, time: 0.103, data_time: 0.016, memory: 547, loss_flow: 120.7707, loss: 120.7707, grad_norm: 4.3556
2022-10-09 22:12:31,903 - mmflow - INFO - Iter [4050/100000]	lr: 1.021e-04, eta: 3:11:48, time: 0.155, data_time: 0.063, memory: 547, loss_flow: 102.5537, loss: 102.5537, grad_norm: 3.9637
2022-10-09 22:12:37,085 - mmflow - INFO - Iter [4100/100000]	lr: 1.033e-04, eta: 3:11:23, time: 0.104, data_time: 0.016, memory: 547, loss_flow: 104.1096, loss: 104.1096, grad_norm: 3.9211
2022-10-09 22:12:42,200 - mmflow - INFO - Iter [4150/100000]	lr: 1.045e-04, eta: 3:10:57, time: 0.102, data_time: 0.015, memory: 547, loss_flow: 125.3541, loss: 125.3541, grad_norm: 4.5419
2022-10-09 22:12:47,305 - mmflow - INFO - Iter [4200/100000]	lr: 1.057e-04, eta: 3:10:31, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 113.2266, loss: 113.2266, grad_norm: 4.5356
2022-10-09 22:12:55,033 - mmflow - INFO - Iter [4250/100000]	lr: 1.069e-04, eta: 3:11:04, time: 0.155, data_time: 0.064, memory: 547, loss_flow: 114.0186, loss: 114.0186, grad_norm: 3.5864
2022-10-09 22:13:00,265 - mmflow - INFO - Iter [4300/100000]	lr: 1.081e-04, eta: 3:10:42, time: 0.105, data_time: 0.016, memory: 547, loss_flow: 130.2768, loss: 130.2768, grad_norm: 4.2067
2022-10-09 22:13:05,460 - mmflow - INFO - Iter [4350/100000]	lr: 1.093e-04, eta: 3:10:18, time: 0.104, data_time: 0.016, memory: 547, loss_flow: 91.5876, loss: 91.5876, grad_norm: 3.6850
2022-10-09 22:13:10,624 - mmflow - INFO - Iter [4400/100000]	lr: 1.105e-04, eta: 3:09:55, time: 0.103, data_time: 0.017, memory: 547, loss_flow: 100.4613, loss: 100.4613, grad_norm: 4.0033
2022-10-09 22:13:18,404 - mmflow - INFO - Iter [4450/100000]	lr: 1.117e-04, eta: 3:10:28, time: 0.156, data_time: 0.066, memory: 547, loss_flow: 106.5684, loss: 106.5684, grad_norm: 3.5314
2022-10-09 22:13:23,523 - mmflow - INFO - Iter [4500/100000]	lr: 1.129e-04, eta: 3:10:04, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 86.2090, loss: 86.2090, grad_norm: 2.5256
2022-10-09 22:13:28,766 - mmflow - INFO - Iter [4550/100000]	lr: 1.141e-04, eta: 3:09:43, time: 0.105, data_time: 0.017, memory: 547, loss_flow: 100.3513, loss: 100.3513, grad_norm: 4.0639
2022-10-09 22:13:33,905 - mmflow - INFO - Iter [4600/100000]	lr: 1.153e-04, eta: 3:09:20, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 104.4300, loss: 104.4300, grad_norm: 4.0251
2022-10-09 22:13:41,753 - mmflow - INFO - Iter [4650/100000]	lr: 1.165e-04, eta: 3:09:52, time: 0.157, data_time: 0.067, memory: 547, loss_flow: 112.1130, loss: 112.1130, grad_norm: 3.6474
2022-10-09 22:13:46,823 - mmflow - INFO - Iter [4700/100000]	lr: 1.177e-04, eta: 3:09:28, time: 0.101, data_time: 0.011, memory: 547, loss_flow: 98.9000, loss: 98.9000, grad_norm: 3.4358
2022-10-09 22:13:51,755 - mmflow - INFO - Iter [4750/100000]	lr: 1.189e-04, eta: 3:09:01, time: 0.099, data_time: 0.008, memory: 547, loss_flow: 97.8475, loss: 97.8475, grad_norm: 3.5909
2022-10-09 22:13:56,822 - mmflow - INFO - Iter [4800/100000]	lr: 1.201e-04, eta: 3:08:38, time: 0.101, data_time: 0.010, memory: 547, loss_flow: 103.6452, loss: 103.6452, grad_norm: 4.0902
2022-10-09 22:14:04,523 - mmflow - INFO - Iter [4850/100000]	lr: 1.213e-04, eta: 3:09:06, time: 0.154, data_time: 0.060, memory: 547, loss_flow: 122.9629, loss: 122.9629, grad_norm: 3.9089
2022-10-09 22:14:09,575 - mmflow - INFO - Iter [4900/100000]	lr: 1.225e-04, eta: 3:08:43, time: 0.101, data_time: 0.006, memory: 547, loss_flow: 104.4989, loss: 104.4989, grad_norm: 3.2790
2022-10-09 22:14:14,586 - mmflow - INFO - Iter [4950/100000]	lr: 1.237e-04, eta: 3:08:19, time: 0.100, data_time: 0.004, memory: 547, loss_flow: 84.8134, loss: 84.8134, grad_norm: 3.2539
2022-10-09 22:14:19,645 - mmflow - INFO - Saving checkpoint at 5000 iterations
2022-10-09 22:14:19,805 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:14:19,807 - mmflow - INFO - Iter [5000/100000]	lr: 1.249e-04, eta: 3:07:59, time: 0.104, data_time: 0.005, memory: 547, loss_flow: 108.5793, loss: 108.5793, grad_norm: 4.0775
2022-10-09 22:14:27,758 - mmflow - INFO - Iter [5050/100000]	lr: 1.249e-04, eta: 3:08:31, time: 0.159, data_time: 0.068, memory: 547, loss_flow: 120.8873, loss: 120.8873, grad_norm: 4.1327
2022-10-09 22:14:33,002 - mmflow - INFO - Iter [5100/100000]	lr: 1.249e-04, eta: 3:08:12, time: 0.105, data_time: 0.016, memory: 547, loss_flow: 99.1953, loss: 99.1953, grad_norm: 3.4844
2022-10-09 22:14:38,160 - mmflow - INFO - Iter [5150/100000]	lr: 1.248e-04, eta: 3:07:51, time: 0.103, data_time: 0.016, memory: 547, loss_flow: 86.9625, loss: 86.9625, grad_norm: 2.9612
2022-10-09 22:14:43,165 - mmflow - INFO - Iter [5200/100000]	lr: 1.247e-04, eta: 3:07:28, time: 0.100, data_time: 0.012, memory: 547, loss_flow: 112.7296, loss: 112.7296, grad_norm: 5.0103
2022-10-09 22:14:50,955 - mmflow - INFO - Iter [5250/100000]	lr: 1.247e-04, eta: 3:07:56, time: 0.156, data_time: 0.066, memory: 547, loss_flow: 115.8470, loss: 115.8470, grad_norm: 4.2145
2022-10-09 22:14:56,084 - mmflow - INFO - Iter [5300/100000]	lr: 1.246e-04, eta: 3:07:35, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 93.1040, loss: 93.1040, grad_norm: 3.0749
2022-10-09 22:15:01,208 - mmflow - INFO - Iter [5350/100000]	lr: 1.245e-04, eta: 3:07:15, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 96.4717, loss: 96.4717, grad_norm: 3.3367
2022-10-09 22:15:06,188 - mmflow - INFO - Iter [5400/100000]	lr: 1.245e-04, eta: 3:06:52, time: 0.100, data_time: 0.011, memory: 547, loss_flow: 97.3147, loss: 97.3147, grad_norm: 3.8068
2022-10-09 22:15:13,978 - mmflow - INFO - Iter [5450/100000]	lr: 1.244e-04, eta: 3:07:18, time: 0.156, data_time: 0.066, memory: 547, loss_flow: 128.5829, loss: 128.5829, grad_norm: 4.6691
2022-10-09 22:15:19,040 - mmflow - INFO - Iter [5500/100000]	lr: 1.243e-04, eta: 3:06:57, time: 0.101, data_time: 0.013, memory: 547, loss_flow: 100.4799, loss: 100.4799, grad_norm: 3.3634
2022-10-09 22:15:24,261 - mmflow - INFO - Iter [5550/100000]	lr: 1.243e-04, eta: 3:06:39, time: 0.104, data_time: 0.016, memory: 547, loss_flow: 75.3829, loss: 75.3829, grad_norm: 3.2375
2022-10-09 22:15:29,435 - mmflow - INFO - Iter [5600/100000]	lr: 1.242e-04, eta: 3:06:21, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 83.5258, loss: 83.5258, grad_norm: 2.7173
2022-10-09 22:15:37,318 - mmflow - INFO - Iter [5650/100000]	lr: 1.242e-04, eta: 3:06:47, time: 0.158, data_time: 0.067, memory: 547, loss_flow: 101.7766, loss: 101.7766, grad_norm: 4.1733
2022-10-09 22:15:42,397 - mmflow - INFO - Iter [5700/100000]	lr: 1.241e-04, eta: 3:06:27, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 106.4038, loss: 106.4038, grad_norm: 4.4079
2022-10-09 22:15:47,486 - mmflow - INFO - Iter [5750/100000]	lr: 1.240e-04, eta: 3:06:07, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 95.1157, loss: 95.1157, grad_norm: 3.4810
2022-10-09 22:15:52,657 - mmflow - INFO - Iter [5800/100000]	lr: 1.240e-04, eta: 3:05:49, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 112.2710, loss: 112.2710, grad_norm: 3.9692
2022-10-09 22:16:00,521 - mmflow - INFO - Iter [5850/100000]	lr: 1.239e-04, eta: 3:06:15, time: 0.157, data_time: 0.067, memory: 547, loss_flow: 103.5462, loss: 103.5462, grad_norm: 3.1611
2022-10-09 22:16:05,484 - mmflow - INFO - Iter [5900/100000]	lr: 1.238e-04, eta: 3:05:53, time: 0.099, data_time: 0.011, memory: 547, loss_flow: 95.4054, loss: 95.4054, grad_norm: 3.4164
2022-10-09 22:16:10,631 - mmflow - INFO - Iter [5950/100000]	lr: 1.238e-04, eta: 3:05:35, time: 0.103, data_time: 0.014, memory: 547, loss_flow: 85.1258, loss: 85.1258, grad_norm: 3.8648
2022-10-09 22:16:15,753 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:16:15,754 - mmflow - INFO - Iter [6000/100000]	lr: 1.237e-04, eta: 3:05:17, time: 0.102, data_time: 0.014, memory: 547, loss_flow: 92.6750, loss: 92.6750, grad_norm: 3.6553
2022-10-09 22:16:23,540 - mmflow - INFO - Iter [6050/100000]	lr: 1.236e-04, eta: 3:05:40, time: 0.156, data_time: 0.067, memory: 547, loss_flow: 113.8335, loss: 113.8335, grad_norm: 4.0977
2022-10-09 22:16:28,656 - mmflow - INFO - Iter [6100/100000]	lr: 1.236e-04, eta: 3:05:21, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 101.8752, loss: 101.8752, grad_norm: 3.4565
2022-10-09 22:16:33,778 - mmflow - INFO - Iter [6150/100000]	lr: 1.235e-04, eta: 3:05:03, time: 0.102, data_time: 0.013, memory: 547, loss_flow: 101.0884, loss: 101.0884, grad_norm: 3.9828
2022-10-09 22:16:38,839 - mmflow - INFO - Iter [6200/100000]	lr: 1.234e-04, eta: 3:04:44, time: 0.101, data_time: 0.012, memory: 547, loss_flow: 85.3157, loss: 85.3157, grad_norm: 3.3982
2022-10-09 22:16:46,722 - mmflow - INFO - Iter [6250/100000]	lr: 1.234e-04, eta: 3:05:08, time: 0.158, data_time: 0.069, memory: 547, loss_flow: 106.8545, loss: 106.8545, grad_norm: 3.3717
2022-10-09 22:16:51,899 - mmflow - INFO - Iter [6300/100000]	lr: 1.233e-04, eta: 3:04:51, time: 0.104, data_time: 0.015, memory: 547, loss_flow: 106.2746, loss: 106.2746, grad_norm: 3.6907
2022-10-09 22:16:57,046 - mmflow - INFO - Iter [6350/100000]	lr: 1.232e-04, eta: 3:04:34, time: 0.103, data_time: 0.015, memory: 547, loss_flow: 104.9341, loss: 104.9341, grad_norm: 4.2488
2022-10-09 22:17:02,089 - mmflow - INFO - Iter [6400/100000]	lr: 1.232e-04, eta: 3:04:15, time: 0.101, data_time: 0.012, memory: 547, loss_flow: 106.1968, loss: 106.1968, grad_norm: 3.6980
2022-10-09 22:17:10,014 - mmflow - INFO - Iter [6450/100000]	lr: 1.231e-04, eta: 3:04:38, time: 0.158, data_time: 0.066, memory: 547, loss_flow: 97.2267, loss: 97.2267, grad_norm: 3.0187
2022-10-09 22:17:15,192 - mmflow - INFO - Iter [6500/100000]	lr: 1.230e-04, eta: 3:04:22, time: 0.104, data_time: 0.015, memory: 547, loss_flow: 100.4607, loss: 100.4607, grad_norm: 3.2319
2022-10-09 22:17:20,205 - mmflow - INFO - Iter [6550/100000]	lr: 1.230e-04, eta: 3:04:03, time: 0.100, data_time: 0.012, memory: 547, loss_flow: 102.4836, loss: 102.4836, grad_norm: 4.0158
2022-10-09 22:17:25,729 - mmflow - INFO - Iter [6600/100000]	lr: 1.229e-04, eta: 3:03:52, time: 0.110, data_time: 0.005, memory: 547, loss_flow: 89.0596, loss: 89.0596, grad_norm: 3.5906
2022-10-09 22:17:34,126 - mmflow - INFO - Iter [6650/100000]	lr: 1.228e-04, eta: 3:04:21, time: 0.168, data_time: 0.062, memory: 547, loss_flow: 111.3232, loss: 111.3232, grad_norm: 3.8512
2022-10-09 22:17:39,830 - mmflow - INFO - Iter [6700/100000]	lr: 1.228e-04, eta: 3:04:12, time: 0.114, data_time: 0.007, memory: 547, loss_flow: 104.2563, loss: 104.2563, grad_norm: 3.6270
2022-10-09 22:17:45,455 - mmflow - INFO - Iter [6750/100000]	lr: 1.227e-04, eta: 3:04:02, time: 0.112, data_time: 0.004, memory: 547, loss_flow: 97.7688, loss: 97.7688, grad_norm: 3.7593
2022-10-09 22:17:50,843 - mmflow - INFO - Iter [6800/100000]	lr: 1.226e-04, eta: 3:03:48, time: 0.108, data_time: 0.004, memory: 547, loss_flow: 100.3320, loss: 100.3320, grad_norm: 4.5480
2022-10-09 22:17:59,078 - mmflow - INFO - Iter [6850/100000]	lr: 1.226e-04, eta: 3:04:14, time: 0.165, data_time: 0.058, memory: 547, loss_flow: 106.6663, loss: 106.6663, grad_norm: 3.4965
2022-10-09 22:18:05,041 - mmflow - INFO - Iter [6900/100000]	lr: 1.225e-04, eta: 3:04:08, time: 0.119, data_time: 0.009, memory: 547, loss_flow: 83.7022, loss: 83.7022, grad_norm: 2.7637
2022-10-09 22:18:10,611 - mmflow - INFO - Iter [6950/100000]	lr: 1.224e-04, eta: 3:03:58, time: 0.111, data_time: 0.005, memory: 547, loss_flow: 91.2301, loss: 91.2301, grad_norm: 3.7931
2022-10-09 22:18:16,388 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:18:16,390 - mmflow - INFO - Iter [7000/100000]	lr: 1.224e-04, eta: 3:03:50, time: 0.116, data_time: 0.005, memory: 547, loss_flow: 94.7507, loss: 94.7507, grad_norm: 4.0298
2022-10-09 22:18:24,680 - mmflow - INFO - Iter [7050/100000]	lr: 1.223e-04, eta: 3:04:15, time: 0.166, data_time: 0.060, memory: 547, loss_flow: 92.4050, loss: 92.4050, grad_norm: 2.8373
2022-10-09 22:18:30,180 - mmflow - INFO - Iter [7100/100000]	lr: 1.222e-04, eta: 3:04:03, time: 0.110, data_time: 0.006, memory: 547, loss_flow: 101.4744, loss: 101.4744, grad_norm: 3.3162
2022-10-09 22:18:35,762 - mmflow - INFO - Iter [7150/100000]	lr: 1.222e-04, eta: 3:03:52, time: 0.112, data_time: 0.004, memory: 547, loss_flow: 78.0880, loss: 78.0880, grad_norm: 3.0615
2022-10-09 22:18:41,625 - mmflow - INFO - Iter [7200/100000]	lr: 1.221e-04, eta: 3:03:45, time: 0.117, data_time: 0.005, memory: 547, loss_flow: 86.3540, loss: 86.3540, grad_norm: 3.2424
2022-10-09 22:18:49,653 - mmflow - INFO - Iter [7250/100000]	lr: 1.220e-04, eta: 3:04:06, time: 0.161, data_time: 0.060, memory: 547, loss_flow: 100.9083, loss: 100.9083, grad_norm: 3.2605
2022-10-09 22:18:55,375 - mmflow - INFO - Iter [7300/100000]	lr: 1.220e-04, eta: 3:03:57, time: 0.114, data_time: 0.009, memory: 547, loss_flow: 91.1662, loss: 91.1662, grad_norm: 3.2658
2022-10-09 22:19:00,894 - mmflow - INFO - Iter [7350/100000]	lr: 1.219e-04, eta: 3:03:46, time: 0.110, data_time: 0.005, memory: 547, loss_flow: 98.6820, loss: 98.6820, grad_norm: 3.4172
2022-10-09 22:19:06,491 - mmflow - INFO - Iter [7400/100000]	lr: 1.219e-04, eta: 3:03:36, time: 0.112, data_time: 0.004, memory: 547, loss_flow: 82.8115, loss: 82.8115, grad_norm: 3.4728
2022-10-09 22:19:15,041 - mmflow - INFO - Iter [7450/100000]	lr: 1.218e-04, eta: 3:04:02, time: 0.171, data_time: 0.056, memory: 547, loss_flow: 94.7111, loss: 94.7111, grad_norm: 2.9827
2022-10-09 22:19:20,755 - mmflow - INFO - Iter [7500/100000]	lr: 1.217e-04, eta: 3:03:53, time: 0.114, data_time: 0.005, memory: 547, loss_flow: 112.3052, loss: 112.3052, grad_norm: 3.7805
2022-10-09 22:19:26,371 - mmflow - INFO - Iter [7550/100000]	lr: 1.217e-04, eta: 3:03:43, time: 0.112, data_time: 0.004, memory: 547, loss_flow: 91.7492, loss: 91.7492, grad_norm: 3.1123
2022-10-09 22:19:31,791 - mmflow - INFO - Iter [7600/100000]	lr: 1.216e-04, eta: 3:03:30, time: 0.108, data_time: 0.005, memory: 547, loss_flow: 96.5385, loss: 96.5385, grad_norm: 3.7021
2022-10-09 22:19:39,942 - mmflow - INFO - Iter [7650/100000]	lr: 1.215e-04, eta: 3:03:51, time: 0.163, data_time: 0.058, memory: 547, loss_flow: 109.9612, loss: 109.9612, grad_norm: 3.6979
2022-10-09 22:19:45,601 - mmflow - INFO - Iter [7700/100000]	lr: 1.215e-04, eta: 3:03:41, time: 0.113, data_time: 0.004, memory: 547, loss_flow: 85.8726, loss: 85.8726, grad_norm: 3.2472
2022-10-09 22:19:51,003 - mmflow - INFO - Iter [7750/100000]	lr: 1.214e-04, eta: 3:03:28, time: 0.108, data_time: 0.004, memory: 547, loss_flow: 67.8301, loss: 67.8301, grad_norm: 2.6898
2022-10-09 22:19:56,527 - mmflow - INFO - Iter [7800/100000]	lr: 1.213e-04, eta: 3:03:17, time: 0.110, data_time: 0.005, memory: 547, loss_flow: 102.8416, loss: 102.8416, grad_norm: 4.3789
2022-10-09 22:20:04,627 - mmflow - INFO - Iter [7850/100000]	lr: 1.213e-04, eta: 3:03:36, time: 0.162, data_time: 0.055, memory: 547, loss_flow: 111.0790, loss: 111.0790, grad_norm: 3.9737
2022-10-09 22:20:09,978 - mmflow - INFO - Iter [7900/100000]	lr: 1.212e-04, eta: 3:03:23, time: 0.107, data_time: 0.005, memory: 547, loss_flow: 79.6738, loss: 79.6738, grad_norm: 2.4413
2022-10-09 22:20:15,501 - mmflow - INFO - Iter [7950/100000]	lr: 1.211e-04, eta: 3:03:11, time: 0.110, data_time: 0.004, memory: 547, loss_flow: 79.4460, loss: 79.4460, grad_norm: 3.4824
2022-10-09 22:20:21,159 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:20:21,161 - mmflow - INFO - Iter [8000/100000]	lr: 1.211e-04, eta: 3:03:02, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 86.8670, loss: 86.8670, grad_norm: 3.1321
2022-10-09 22:20:29,366 - mmflow - INFO - Iter [8050/100000]	lr: 1.210e-04, eta: 3:03:22, time: 0.164, data_time: 0.058, memory: 547, loss_flow: 122.1952, loss: 122.1952, grad_norm: 3.7999
2022-10-09 22:20:35,066 - mmflow - INFO - Iter [8100/100000]	lr: 1.209e-04, eta: 3:03:12, time: 0.114, data_time: 0.005, memory: 547, loss_flow: 94.9055, loss: 94.9055, grad_norm: 3.7202
2022-10-09 22:20:40,987 - mmflow - INFO - Iter [8150/100000]	lr: 1.209e-04, eta: 3:03:06, time: 0.118, data_time: 0.005, memory: 547, loss_flow: 100.2900, loss: 100.2900, grad_norm: 4.2802
2022-10-09 22:20:46,496 - mmflow - INFO - Iter [8200/100000]	lr: 1.208e-04, eta: 3:02:54, time: 0.110, data_time: 0.004, memory: 547, loss_flow: 100.8661, loss: 100.8661, grad_norm: 3.9584
2022-10-09 22:20:54,692 - mmflow - INFO - Iter [8250/100000]	lr: 1.207e-04, eta: 3:03:13, time: 0.164, data_time: 0.059, memory: 547, loss_flow: 99.4626, loss: 99.4626, grad_norm: 3.7481
2022-10-09 22:21:00,386 - mmflow - INFO - Iter [8300/100000]	lr: 1.207e-04, eta: 3:03:04, time: 0.114, data_time: 0.005, memory: 547, loss_flow: 92.6861, loss: 92.6861, grad_norm: 2.8341
2022-10-09 22:21:05,659 - mmflow - INFO - Iter [8350/100000]	lr: 1.206e-04, eta: 3:02:50, time: 0.105, data_time: 0.005, memory: 547, loss_flow: 80.6882, loss: 80.6882, grad_norm: 2.5312
2022-10-09 22:21:11,031 - mmflow - INFO - Iter [8400/100000]	lr: 1.205e-04, eta: 3:02:37, time: 0.107, data_time: 0.005, memory: 547, loss_flow: 95.9481, loss: 95.9481, grad_norm: 4.4056
2022-10-09 22:21:19,262 - mmflow - INFO - Iter [8450/100000]	lr: 1.205e-04, eta: 3:02:56, time: 0.165, data_time: 0.058, memory: 547, loss_flow: 93.3631, loss: 93.3631, grad_norm: 2.9898
2022-10-09 22:21:24,902 - mmflow - INFO - Iter [8500/100000]	lr: 1.204e-04, eta: 3:02:46, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 90.4269, loss: 90.4269, grad_norm: 2.6327
2022-10-09 22:21:30,564 - mmflow - INFO - Iter [8550/100000]	lr: 1.203e-04, eta: 3:02:36, time: 0.113, data_time: 0.005, memory: 547, loss_flow: 92.7456, loss: 92.7456, grad_norm: 3.2220
2022-10-09 22:21:35,976 - mmflow - INFO - Iter [8600/100000]	lr: 1.203e-04, eta: 3:02:24, time: 0.108, data_time: 0.005, memory: 547, loss_flow: 92.0462, loss: 92.0462, grad_norm: 4.1076
2022-10-09 22:21:44,315 - mmflow - INFO - Iter [8650/100000]	lr: 1.202e-04, eta: 3:02:43, time: 0.167, data_time: 0.060, memory: 547, loss_flow: 102.1604, loss: 102.1604, grad_norm: 3.7383
2022-10-09 22:21:49,623 - mmflow - INFO - Iter [8700/100000]	lr: 1.201e-04, eta: 3:02:30, time: 0.106, data_time: 0.008, memory: 547, loss_flow: 97.1681, loss: 97.1681, grad_norm: 3.7465
2022-10-09 22:21:55,499 - mmflow - INFO - Iter [8750/100000]	lr: 1.201e-04, eta: 3:02:23, time: 0.118, data_time: 0.006, memory: 547, loss_flow: 80.1392, loss: 80.1392, grad_norm: 2.4294
2022-10-09 22:22:00,755 - mmflow - INFO - Iter [8800/100000]	lr: 1.200e-04, eta: 3:02:09, time: 0.105, data_time: 0.005, memory: 547, loss_flow: 88.0076, loss: 88.0076, grad_norm: 3.4189
2022-10-09 22:22:08,842 - mmflow - INFO - Iter [8850/100000]	lr: 1.199e-04, eta: 3:02:24, time: 0.162, data_time: 0.057, memory: 547, loss_flow: 93.4038, loss: 93.4038, grad_norm: 2.8558
2022-10-09 22:22:14,534 - mmflow - INFO - Iter [8900/100000]	lr: 1.199e-04, eta: 3:02:15, time: 0.114, data_time: 0.005, memory: 547, loss_flow: 88.7549, loss: 88.7549, grad_norm: 3.2225
2022-10-09 22:22:20,237 - mmflow - INFO - Iter [8950/100000]	lr: 1.198e-04, eta: 3:02:06, time: 0.114, data_time: 0.010, memory: 547, loss_flow: 95.3918, loss: 95.3918, grad_norm: 3.3231
2022-10-09 22:22:25,681 - mmflow - INFO - Exp name: raft_caddy_mix.py
2022-10-09 22:22:25,683 - mmflow - INFO - Iter [9000/100000]	lr: 1.197e-04, eta: 3:01:55, time: 0.109, data_time: 0.009, memory: 547, loss_flow: 91.3648, loss: 91.3648, grad_norm: 3.4850
2022-10-09 22:22:33,885 - mmflow - INFO - Iter [9050/100000]	lr: 1.197e-04, eta: 3:02:11, time: 0.164, data_time: 0.061, memory: 547, loss_flow: 113.4697, loss: 113.4697, grad_norm: 3.7116
2022-10-09 22:22:39,346 - mmflow - INFO - Iter [9100/100000]	lr: 1.196e-04, eta: 3:01:59, time: 0.109, data_time: 0.006, memory: 547, loss_flow: 99.3081, loss: 99.3081, grad_norm: 3.4522
2022-10-09 22:22:45,099 - mmflow - INFO - Iter [9150/100000]	lr: 1.196e-04, eta: 3:01:51, time: 0.115, data_time: 0.005, memory: 547, loss_flow: 98.7034, loss: 98.7034, grad_norm: 3.9316
2022-10-09 22:22:50,563 - mmflow - INFO - Iter [9200/100000]	lr: 1.195e-04, eta: 3:01:39, time: 0.109, data_time: 0.006, memory: 547, loss_flow: 85.3291, loss: 85.3291, grad_norm: 2.9283
2022-10-09 22:22:58,770 - mmflow - INFO - Iter [9250/100000]	lr: 1.194e-04, eta: 3:01:55, time: 0.164, data_time: 0.062, memory: 547, loss_flow: 101.9327, loss: 101.9327, grad_norm: 2.8853
2022-10-09 22:23:04,505 - mmflow - INFO - Iter [9300/100000]	lr: 1.194e-04, eta: 3:01:46, time: 0.115, data_time: 0.013, memory: 547, loss_flow: 83.5280, loss: 83.5280, grad_norm: 2.7562
2022-10-09 22:23:09,903 - mmflow - INFO - Iter [9350/100000]	lr: 1.193e-04, eta: 3:01:34, time: 0.108, data_time: 0.012, memory: 547, loss_flow: 82.7058, loss: 82.7058, grad_norm: 3.2475
2022-10-09 22:23:15,338 - mmflow - INFO - Iter [9400/100000]	lr: 1.192e-04, eta: 3:01:23, time: 0.109, data_time: 0.006, memory: 547, loss_flow: 87.2935, loss: 87.2935, grad_norm: 3.1233
2022-10-09 22:23:23,494 - mmflow - INFO - Iter [9450/100000]	lr: 1.192e-04, eta: 3:01:37, time: 0.163, data_time: 0.061, memory: 547, loss_flow: 100.8042, loss: 100.8042, grad_norm: 2.9696
2022-10-09 22:23:28,936 - mmflow - INFO - Iter [9500/100000]	lr: 1.191e-04, eta: 3:01:26, time: 0.109, data_time: 0.007, memory: 547, loss_flow: 101.0983, loss: 101.0983, grad_norm: 4.0313
2022-10-09 22:23:34,497 - mmflow - INFO - Iter [9550/100000]	lr: 1.190e-04, eta: 3:01:16, time: 0.111, data_time: 0.010, memory: 547, loss_flow: 85.3775, loss: 85.3775, grad_norm: 3.0987
2022-10-09 22:23:39,779 - mmflow - INFO - Iter [9600/100000]	lr: 1.190e-04, eta: 3:01:03, time: 0.106, data_time: 0.006, memory: 547, loss_flow: 93.9179, loss: 93.9179, grad_norm: 3.4548
2022-10-09 22:23:48,063 - mmflow - INFO - Iter [9650/100000]	lr: 1.189e-04, eta: 3:01:18, time: 0.166, data_time: 0.060, memory: 547, loss_flow: 92.6331, loss: 92.6331, grad_norm: 3.3699
2022-10-09 22:23:53,571 - mmflow - INFO - Iter [9700/100000]	lr: 1.188e-04, eta: 3:01:07, time: 0.110, data_time: 0.009, memory: 547, loss_flow: 96.9873, loss: 96.9873, grad_norm: 2.9692
2022-10-09 22:23:59,082 - mmflow - INFO - Iter [9750/100000]	lr: 1.188e-04, eta: 3:00:56, time: 0.110, data_time: 0.007, memory: 547, loss_flow: 108.9608, loss: 108.9608, grad_norm: 3.8662
2022-10-09 22:24:04,487 - mmflow - INFO - Iter [9800/100000]	lr: 1.187e-04, eta: 3:00:45, time: 0.108, data_time: 0.004, memory: 547, loss_flow: 101.1628, loss: 101.1628, grad_norm: 4.4048
2022-10-09 22:24:12,818 - mmflow - INFO - Iter [9850/100000]	lr: 1.186e-04, eta: 3:01:00, time: 0.167, data_time: 0.062, memory: 547, loss_flow: 81.1363, loss: 81.1363, grad_norm: 2.3186
2022-10-09 22:24:18,267 - mmflow - INFO - Iter [9900/100000]	lr: 1.186e-04, eta: 3:00:49, time: 0.109, data_time: 0.010, memory: 547, loss_flow: 97.3293, loss: 97.3293, grad_norm: 3.5184
2022-10-09 22:24:24,029 - mmflow - INFO - Iter [9950/100000]	lr: 1.185e-04, eta: 3:00:40, time: 0.115, data_time: 0.010, memory: 547, loss_flow: 84.5103, loss: 84.5103, grad_norm: 3.2767
2022-10-09 22:24:29,600 - mmflow - INFO - Saving checkpoint at 10000 iterations
[                                                  ] 0/200, elapsed: 0s, ETA:Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 70, in train
    self.call_hook('after_train_iter')
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/base_runner.py", line 317, in call_hook
    getattr(hook, fn_name)(self)
  File "/home/s.starace/FlowNets/mmflow/mmflow/core/evaluation/eval_hooks.py", line 54, in after_train_iter
    self.evaluate(runner)
  File "/home/s.starace/FlowNets/mmflow/mmflow/core/evaluation/eval_hooks.py", line 66, in evaluate
    results_metrics = single_gpu_online_evaluation(
  File "/home/s.starace/FlowNets/mmflow/mmflow/core/evaluation/evaluation.py", line 96, in single_gpu_online_evaluation
    batch_results_metrics = eval_metrics(batch_flow, batch_flow_gt,
  File "/home/s.starace/FlowNets/mmflow/mmflow/core/evaluation/metrics.py", line 107, in eval_metrics
    raise KeyError('metrics {} is not supported'.format(metrics))
KeyError: "metrics ['EPE, Fl'] is not supported"
