2022-10-09 17:06:14,286 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 17:06:14,288 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 17:06:14,346 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 17:06:14,347 - mmflow - INFO - Distributed training: False
2022-10-09 17:06:15,178 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = './data/KITTI_AUG'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='./data/KITTI_AUG',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='KITTI2015AUG',
            data_root='./data/KITTI_AUG',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False),
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09'
auto_resume = False
gpu_ids = [0]

2022-10-09 17:06:15,180 - mmflow - INFO - Set random seed to 810917439, deterministic: False
2022-10-09 17:06:15,255 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 17:06:15,318 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 17:06:15,335 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 17:06:16,562 - mmflow - INFO - dataset size 1200
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 17:06:18,723 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 17:06:18,842 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09
2022-10-09 17:06:18,843 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 17:06:18,844 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 17:06:18,845 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-0.0055, -0.0168, -0.0128,  ..., -0.0042,  0.0363,  0.0012],
          [-0.0012, -0.0696,  0.0196,  ...,  0.0307, -0.0086,  0.0345],
          [ 0.0194,  0.0113,  0.0153,  ...,  0.0014,  0.0317, -0.0162],
          ...,
          [ 0.0039, -0.0259, -0.0220,  ..., -0.0203,  0.0224, -0.0126],
          [-0.0316,  0.0274, -0.0044,  ..., -0.0033,  0.0510, -0.0327],
          [ 0.0018,  0.0294,  0.0128,  ..., -0.0206, -0.0132, -0.0358]],

         [[ 0.0337,  0.0274,  0.0101,  ...,  0.0040,  0.0031,  0.0067],
          [-0.0112,  0.0289, -0.0215,  ...,  0.0043,  0.0232, -0.0143],
          [-0.0108,  0.0166, -0.0167,  ..., -0.0119, -0.0323, -0.0129],
          ...,
          [-0.0144, -0.0225, -0.0006,  ...,  0.0144, -0.0420,  0.0023],
          [-0.0096, -0.0407,  0.0089,  ..., -0.0245, -0.0571, -0.0241],
          [-0.0229, -0.0384, -0.0261,  ..., -0.0105, -0.0440,  0.0075]],

         [[-0.0045,  0.0171, -0.0748,  ...,  0.0369, -0.0055, -0.0123],
          [-0.0307, -0.0019,  0.0438,  ...,  0.0323, -0.0294,  0.0222],
          [ 0.0022,  0.0364,  0.0049,  ..., -0.0365, -0.0420, -0.0176],
          ...,
          [ 0.0086,  0.0268, -0.0150,  ...,  0.0051,  0.0229,  0.0046],
          [ 0.0167, -0.0136,  0.0070,  ...,  0.0371,  0.0222, -0.0520],
          [ 0.0170, -0.0015, -0.0265,  ...,  0.0149, -0.0088, -0.0086]]],


        [[[-0.0105, -0.0016,  0.0421,  ...,  0.0017,  0.0010,  0.0304],
          [ 0.0090,  0.0024, -0.0114,  ...,  0.0396, -0.0031, -0.0340],
          [-0.0263, -0.0270, -0.0492,  ...,  0.0118, -0.0813, -0.0332],
          ...,
          [ 0.0325, -0.0318,  0.0067,  ...,  0.0032, -0.0254,  0.0162],
          [-0.0308,  0.0203, -0.0250,  ...,  0.0184, -0.0119,  0.0732],
          [ 0.0395, -0.0037, -0.0278,  ..., -0.0195, -0.0052, -0.0058]],

         [[ 0.0002, -0.0056, -0.0178,  ...,  0.0392,  0.0383,  0.0227],
          [ 0.0289,  0.0250, -0.0255,  ..., -0.0427,  0.0113,  0.0137],
          [ 0.0301, -0.0068,  0.0372,  ..., -0.0150, -0.0056,  0.0188],
          ...,
          [-0.0377, -0.0018,  0.0173,  ..., -0.0148,  0.0194, -0.0305],
          [ 0.0515,  0.0153,  0.0034,  ..., -0.0049, -0.0122, -0.0331],
          [-0.0019,  0.0302, -0.0138,  ..., -0.0328, -0.0041, -0.0005]],

         [[ 0.0115,  0.0321, -0.0294,  ..., -0.0271, -0.0431,  0.0087],
          [-0.0174,  0.0385, -0.0024,  ..., -0.0257,  0.0405, -0.0009],
          [ 0.0217, -0.0048, -0.0200,  ..., -0.0427, -0.0036,  0.0420],
          ...,
          [-0.0302,  0.0162,  0.0025,  ..., -0.0193, -0.0747, -0.0237],
          [ 0.0454, -0.0098, -0.0116,  ...,  0.0009,  0.0222,  0.0199],
          [-0.0125, -0.0034, -0.0080,  ...,  0.0116,  0.0107,  0.0414]]],


        [[[-0.0365,  0.0399, -0.0384,  ..., -0.0013,  0.0048, -0.0452],
          [-0.0157, -0.0439,  0.0026,  ..., -0.0174, -0.0024, -0.0003],
          [ 0.0132, -0.0412, -0.0042,  ...,  0.0009, -0.0476,  0.0349],
          ...,
          [-0.0108, -0.0173, -0.0255,  ..., -0.0319, -0.0239, -0.0083],
          [ 0.0410,  0.0601, -0.0278,  ..., -0.0120, -0.0087,  0.0318],
          [ 0.0223,  0.0431, -0.0016,  ..., -0.0045, -0.0371,  0.0310]],

         [[-0.0118, -0.0332,  0.0034,  ...,  0.0458,  0.0079,  0.0078],
          [ 0.0150, -0.0063,  0.0253,  ...,  0.0531,  0.0347, -0.0199],
          [ 0.0078,  0.0243, -0.0255,  ...,  0.0552,  0.0035,  0.0262],
          ...,
          [-0.0139, -0.0463,  0.0306,  ..., -0.0068,  0.0143,  0.0027],
          [-0.0033,  0.0207,  0.0222,  ...,  0.0562,  0.0020, -0.0042],
          [ 0.0127, -0.0046, -0.0205,  ...,  0.0172,  0.0056, -0.0127]],

         [[ 0.0330,  0.0330, -0.0351,  ..., -0.0163, -0.0319, -0.0179],
          [-0.0335, -0.0047, -0.0170,  ..., -0.0161,  0.0372,  0.0015],
          [-0.0385, -0.0231,  0.0247,  ..., -0.0377, -0.0143,  0.0406],
          ...,
          [-0.0158,  0.0324, -0.0297,  ...,  0.0425,  0.0260, -0.0019],
          [-0.0187, -0.0196,  0.0106,  ...,  0.0025, -0.0449, -0.0281],
          [ 0.0120, -0.0070, -0.0101,  ..., -0.0381,  0.0225, -0.0068]]],


        ...,


        [[[ 0.0332,  0.0102, -0.0491,  ..., -0.0403, -0.0011, -0.0003],
          [ 0.0295,  0.0312, -0.0097,  ..., -0.0082,  0.0283,  0.0080],
          [-0.0388, -0.0028,  0.0187,  ...,  0.0148, -0.0054, -0.0198],
          ...,
          [-0.0175, -0.0267,  0.0211,  ..., -0.0007, -0.0008,  0.0132],
          [-0.0071,  0.0064, -0.0016,  ..., -0.0098,  0.0037, -0.0237],
          [ 0.0288, -0.0041, -0.0279,  ...,  0.0025, -0.0169, -0.0490]],

         [[-0.0028, -0.0170,  0.0227,  ..., -0.0101,  0.0029, -0.0493],
          [-0.0069, -0.0473,  0.0077,  ..., -0.0492, -0.0274, -0.0289],
          [-0.0110,  0.0096,  0.0350,  ..., -0.0036,  0.0124, -0.0332],
          ...,
          [ 0.0007, -0.0535, -0.0102,  ..., -0.0063, -0.0027,  0.0231],
          [-0.0155, -0.0213, -0.0022,  ...,  0.0333, -0.0162,  0.0062],
          [-0.0049, -0.0217, -0.0078,  ..., -0.0056, -0.0343, -0.0306]],

         [[-0.0164,  0.0418, -0.0108,  ..., -0.0233, -0.0140, -0.0210],
          [ 0.0159, -0.0147,  0.0054,  ..., -0.0250, -0.0343,  0.0071],
          [ 0.0018, -0.0024,  0.0053,  ...,  0.0341,  0.0001,  0.0125],
          ...,
          [-0.0519, -0.0117, -0.0021,  ...,  0.0014,  0.0219, -0.0019],
          [ 0.0291, -0.0606, -0.0279,  ...,  0.0250,  0.0191, -0.0184],
          [ 0.0193,  0.0571, -0.0500,  ...,  0.0156, -0.0199, -0.0324]]],


        [[[ 0.0116, -0.0162, -0.0155,  ...,  0.0073, -0.0093,  0.0004],
          [ 0.0192,  0.0033, -0.0315,  ...,  0.0072, -0.0180, -0.0692],
          [ 0.0250, -0.0139,  0.0259,  ..., -0.0337, -0.0095,  0.0506],
          ...,
          [-0.0177, -0.0439, -0.0466,  ...,  0.0028, -0.0108,  0.0199],
          [ 0.0314, -0.0154, -0.0216,  ...,  0.0016,  0.0049, -0.0383],
          [-0.0239,  0.0100,  0.0409,  ..., -0.0235,  0.0248,  0.0007]],

         [[ 0.0078,  0.0007, -0.0215,  ..., -0.0223,  0.0259, -0.0180],
          [-0.0026,  0.0237, -0.0237,  ...,  0.0037, -0.0007,  0.0189],
          [-0.0206, -0.0112,  0.0434,  ...,  0.0480,  0.0447, -0.0248],
          ...,
          [-0.0103,  0.0037,  0.0517,  ...,  0.0190, -0.0230,  0.0056],
          [ 0.0010, -0.0037,  0.0329,  ...,  0.0173, -0.0059, -0.0368],
          [-0.0603,  0.0028,  0.0010,  ..., -0.0008, -0.0183, -0.0361]],

         [[ 0.0051, -0.0566,  0.0404,  ...,  0.0276,  0.0078, -0.0242],
          [-0.0013, -0.0233,  0.0314,  ...,  0.0154,  0.0186, -0.0053],
          [ 0.0061, -0.0064,  0.0048,  ..., -0.0314,  0.0301, -0.0359],
          ...,
          [ 0.0189,  0.0072, -0.0169,  ..., -0.0221, -0.0176, -0.0239],
          [ 0.0086, -0.0369,  0.0096,  ..., -0.0083, -0.0174, -0.0158],
          [-0.0151, -0.0170,  0.0249,  ...,  0.0232, -0.0369,  0.0104]]],


        [[[ 0.0267, -0.0024, -0.0577,  ..., -0.0401, -0.0060, -0.0331],
          [-0.0168, -0.0231, -0.0328,  ..., -0.0137,  0.0066,  0.0144],
          [-0.0286,  0.0015,  0.0140,  ...,  0.0037, -0.0166, -0.0044],
          ...,
          [ 0.0058,  0.0224,  0.0158,  ...,  0.0200, -0.0232, -0.0031],
          [-0.0036,  0.0089, -0.0268,  ..., -0.0279, -0.0299, -0.0068],
          [ 0.0127, -0.0390,  0.0337,  ...,  0.0129,  0.0188,  0.0292]],

         [[ 0.0326,  0.0481,  0.0276,  ..., -0.0044,  0.0204,  0.0080],
          [-0.0049,  0.0319, -0.0315,  ..., -0.0405,  0.0027, -0.0254],
          [-0.0136, -0.0265, -0.0055,  ..., -0.0105,  0.0358,  0.0080],
          ...,
          [ 0.0161, -0.0462,  0.0017,  ..., -0.0409,  0.0058, -0.0013],
          [ 0.0087, -0.0086,  0.0223,  ...,  0.0055,  0.0267,  0.0251],
          [-0.0033, -0.0079,  0.0195,  ..., -0.0303,  0.0123, -0.0266]],

         [[ 0.0105,  0.0093,  0.0304,  ...,  0.0586,  0.0191,  0.0117],
          [-0.0256,  0.0040, -0.0282,  ..., -0.0415, -0.0174, -0.0212],
          [ 0.0180, -0.0316, -0.0516,  ...,  0.0169,  0.0346,  0.0212],
          ...,
          [ 0.0238, -0.0209, -0.0302,  ..., -0.0102, -0.0181,  0.0132],
          [-0.0211,  0.0080,  0.0647,  ..., -0.0142,  0.0047,  0.0061],
          [ 0.0220, -0.0270, -0.0033,  ..., -0.0141, -0.0508,  0.0435]]]],
       device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 0.0513,  0.0319, -0.0151],
          [-0.0888, -0.0020,  0.0270],
          [-0.0225,  0.0449, -0.0590]],

         [[ 0.0947, -0.0124, -0.0456],
          [-0.0418, -0.0156, -0.0309],
          [-0.0535,  0.0335, -0.0665]],

         [[ 0.0075, -0.1134,  0.0957],
          [ 0.0401,  0.0260, -0.0182],
          [ 0.0260, -0.0860, -0.0347]],

         ...,

         [[-0.1731,  0.0780, -0.0718],
          [ 0.0102,  0.0288,  0.0634],
          [ 0.0461,  0.0404,  0.0751]],

         [[-0.0568,  0.0761, -0.0785],
          [ 0.0355, -0.0304,  0.0224],
          [ 0.0542,  0.0397, -0.0260]],

         [[-0.0373,  0.0692, -0.0721],
          [-0.0558,  0.0141, -0.0584],
          [ 0.0424,  0.0106,  0.0784]]],


        [[[-0.0533,  0.0189, -0.0502],
          [-0.0335, -0.0283, -0.0736],
          [-0.0056,  0.0363,  0.0464]],

         [[ 0.0248, -0.0113, -0.0238],
          [-0.1239, -0.0071,  0.0016],
          [ 0.0190,  0.0815, -0.0258]],

         [[-0.0072, -0.1074, -0.0156],
          [-0.1358,  0.0257, -0.0369],
          [-0.0152, -0.0138, -0.0433]],

         ...,

         [[ 0.0407, -0.0345, -0.0394],
          [ 0.0238,  0.0366,  0.0083],
          [-0.0257, -0.0184,  0.0113]],

         [[ 0.0277, -0.0451, -0.0077],
          [ 0.0099,  0.0706, -0.0496],
          [ 0.0599, -0.0351,  0.1136]],

         [[ 0.0069,  0.0730, -0.0035],
          [-0.0006,  0.0469, -0.0250],
          [-0.0514,  0.0207, -0.0739]]],


        [[[ 0.1349, -0.0071,  0.0582],
          [-0.0501, -0.0234,  0.0239],
          [-0.0007,  0.0157, -0.0448]],

         [[-0.0039, -0.0349, -0.0329],
          [-0.0582, -0.0403, -0.0562],
          [ 0.0061,  0.0970, -0.0735]],

         [[ 0.0630,  0.0428,  0.0372],
          [ 0.0074,  0.0115,  0.0735],
          [ 0.0140, -0.0797,  0.0006]],

         ...,

         [[ 0.0791,  0.0647, -0.0443],
          [-0.0819,  0.0421, -0.0921],
          [ 0.1031, -0.0258,  0.0181]],

         [[-0.0016,  0.0895, -0.0182],
          [ 0.0902,  0.0171,  0.0567],
          [-0.0263, -0.0535,  0.0284]],

         [[-0.0640, -0.0978, -0.0031],
          [ 0.0250, -0.0050, -0.0476],
          [ 0.0005, -0.0300, -0.0983]]],


        ...,


        [[[ 0.0401, -0.0272, -0.0210],
          [-0.0050, -0.0094, -0.0940],
          [ 0.0491,  0.1224, -0.0086]],

         [[-0.0085, -0.0375,  0.0395],
          [ 0.0265,  0.0236,  0.0671],
          [-0.0447, -0.1384, -0.0025]],

         [[-0.0348,  0.1199,  0.0896],
          [ 0.0828, -0.0468, -0.0177],
          [ 0.0754,  0.0364,  0.1105]],

         ...,

         [[-0.0452, -0.0985,  0.0574],
          [ 0.1827, -0.1004, -0.0529],
          [-0.0578,  0.0703, -0.0219]],

         [[ 0.0949,  0.1084, -0.0279],
          [-0.0196, -0.0269, -0.0677],
          [-0.1254,  0.0184,  0.0462]],

         [[-0.0613, -0.0286, -0.0557],
          [ 0.0572,  0.0327, -0.0471],
          [ 0.0431, -0.0610,  0.0380]]],


        [[[ 0.0130, -0.0325, -0.0482],
          [ 0.0947,  0.0659, -0.0547],
          [ 0.0680,  0.0233, -0.0497]],

         [[ 0.0561,  0.0025,  0.0388],
          [ 0.0418,  0.0730, -0.0363],
          [ 0.0843, -0.0878,  0.0204]],

         [[-0.0129,  0.0364,  0.0471],
          [-0.0640,  0.0258, -0.0277],
          [-0.0216, -0.0239, -0.1058]],

         ...,

         [[ 0.0060,  0.0192,  0.0556],
          [-0.0921,  0.0366, -0.0371],
          [ 0.0015, -0.0322, -0.0405]],

         [[-0.0962,  0.0808,  0.1006],
          [-0.0102, -0.0352, -0.0322],
          [ 0.0957, -0.1057, -0.0263]],

         [[ 0.0119,  0.0945, -0.0370],
          [-0.0975,  0.1245, -0.0522],
          [-0.0647, -0.0830, -0.0152]]],


        [[[-0.0089,  0.0595, -0.0367],
          [-0.0353,  0.0777,  0.1198],
          [ 0.0981,  0.0328,  0.0010]],

         [[ 0.0116, -0.0468,  0.0226],
          [-0.0054, -0.0254, -0.0992],
          [ 0.0141,  0.0613,  0.0055]],

         [[ 0.0110, -0.0463, -0.0556],
          [-0.0214,  0.1512,  0.0795],
          [-0.0273, -0.0591, -0.0036]],

         ...,

         [[ 0.0349, -0.0924, -0.0029],
          [-0.0066, -0.0119, -0.0115],
          [ 0.0056, -0.0562,  0.0030]],

         [[ 0.0163,  0.0147, -0.0878],
          [ 0.0181,  0.1045,  0.0016],
          [ 0.0564,  0.0178,  0.1053]],

         [[ 0.0297, -0.0939, -0.0203],
          [ 0.0687, -0.0490, -0.0136],
          [-0.0711, -0.0143, -0.0974]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 0.0031,  0.0490,  0.0634],
          [ 0.0375,  0.0257,  0.0464],
          [ 0.1117, -0.0080,  0.0949]],

         [[-0.0186,  0.0576,  0.0547],
          [-0.0023,  0.0457, -0.0369],
          [-0.0578, -0.0639,  0.0205]],

         [[ 0.0385,  0.0171,  0.0560],
          [ 0.0655,  0.0472, -0.0271],
          [ 0.0731,  0.0152, -0.1293]],

         ...,

         [[-0.0581,  0.0254,  0.0434],
          [ 0.0142, -0.0514, -0.0162],
          [-0.0448,  0.0291, -0.0615]],

         [[-0.0663,  0.0766,  0.0147],
          [-0.0822,  0.0601,  0.0428],
          [-0.0038, -0.0973, -0.0174]],

         [[ 0.0192,  0.0121, -0.0758],
          [ 0.0252, -0.0291, -0.0366],
          [-0.0082,  0.0048,  0.0497]]],


        [[[-0.0292, -0.0260, -0.1657],
          [-0.0317,  0.0186,  0.0755],
          [ 0.0103, -0.1021,  0.0891]],

         [[ 0.0550,  0.0804, -0.0230],
          [ 0.0213, -0.0972, -0.0006],
          [ 0.0154,  0.1668, -0.0032]],

         [[-0.0386, -0.0811, -0.0173],
          [ 0.0201, -0.0343,  0.0898],
          [ 0.0185, -0.0392,  0.0033]],

         ...,

         [[-0.0555,  0.0915,  0.0810],
          [ 0.0017,  0.0369, -0.0706],
          [-0.0158, -0.0434,  0.0084]],

         [[ 0.0136,  0.0372,  0.0302],
          [ 0.0543, -0.0312, -0.0034],
          [ 0.0468,  0.0409,  0.0118]],

         [[-0.0234,  0.0200, -0.0104],
          [-0.0184,  0.0814, -0.0785],
          [-0.0131, -0.0548,  0.0793]]],


        [[[-0.0533,  0.0197,  0.1672],
          [-0.0412,  0.0761, -0.0475],
          [ 0.0577, -0.0673,  0.0013]],

         [[ 0.0125, -0.0038, -0.0319],
          [ 0.0973,  0.0551,  0.0706],
          [-0.0564,  0.0693,  0.0177]],

         [[ 0.0209, -0.0773,  0.1053],
          [ 0.0455, -0.0163, -0.0458],
          [ 0.0752,  0.0465,  0.0563]],

         ...,

         [[ 0.0006,  0.0349, -0.0718],
          [-0.0220, -0.0032,  0.0635],
          [ 0.0167, -0.0157,  0.0098]],

         [[-0.0876,  0.0025, -0.0344],
          [-0.0213,  0.0527, -0.0272],
          [-0.0004, -0.0732, -0.0043]],

         [[ 0.0525, -0.0304, -0.0716],
          [-0.0075, -0.0457,  0.0417],
          [-0.0443,  0.0238,  0.0623]]],


        ...,


        [[[ 0.0448,  0.0929,  0.0097],
          [ 0.0562,  0.0325, -0.0661],
          [ 0.1047,  0.0056, -0.0709]],

         [[-0.0458,  0.1577,  0.0167],
          [ 0.0142,  0.0758,  0.0585],
          [-0.0364, -0.0072,  0.0376]],

         [[-0.0683, -0.0219,  0.0700],
          [-0.0615, -0.0449,  0.1073],
          [-0.0288, -0.0128, -0.0268]],

         ...,

         [[-0.0093,  0.0240, -0.0684],
          [ 0.0256, -0.0369,  0.0563],
          [-0.0754, -0.0929,  0.0581]],

         [[ 0.0411,  0.0925, -0.0042],
          [-0.0815, -0.0101,  0.0205],
          [-0.0094, -0.0107,  0.1408]],

         [[ 0.1098, -0.0679,  0.0497],
          [ 0.0725, -0.0247, -0.0472],
          [ 0.0201, -0.0562,  0.0243]]],


        [[[-0.0245,  0.0619,  0.0074],
          [-0.0387,  0.0247, -0.0062],
          [ 0.0285, -0.1466,  0.0365]],

         [[-0.0101, -0.0154,  0.0046],
          [ 0.0388,  0.1973,  0.0184],
          [-0.0672, -0.0171, -0.0309]],

         [[-0.0099, -0.0100, -0.1383],
          [-0.0685, -0.2091, -0.0660],
          [ 0.0305,  0.0195,  0.0367]],

         ...,

         [[-0.0440, -0.1254, -0.0136],
          [ 0.0598, -0.1392,  0.0266],
          [ 0.0357,  0.0246,  0.0362]],

         [[ 0.0542, -0.0398,  0.0881],
          [-0.0493,  0.1251, -0.1527],
          [ 0.1134,  0.0134, -0.0108]],

         [[-0.0239, -0.0810, -0.0404],
          [ 0.1093,  0.0041,  0.0670],
          [ 0.0085, -0.0116,  0.0464]]],


        [[[-0.0822,  0.0868,  0.0404],
          [-0.0730, -0.0719,  0.0170],
          [ 0.0074, -0.0122, -0.0009]],

         [[-0.0537,  0.0097,  0.1145],
          [ 0.1061,  0.0453,  0.0137],
          [-0.0404, -0.0073,  0.0046]],

         [[-0.0937,  0.0524, -0.1245],
          [-0.0462,  0.0105,  0.0210],
          [-0.0120, -0.0191,  0.0364]],

         ...,

         [[ 0.0367, -0.0845,  0.0228],
          [ 0.0310, -0.0676,  0.0008],
          [ 0.0468,  0.0271,  0.0529]],

         [[ 0.0649, -0.0264,  0.0126],
          [-0.0197,  0.0325, -0.0603],
          [-0.0248,  0.0319,  0.0723]],

         [[ 0.0658, -0.0168, -0.0714],
          [ 0.0133,  0.0293,  0.0469],
          [-0.0154, -0.0098,  0.0658]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 5.7723e-03,  3.9431e-02,  8.2919e-02],
          [-3.9984e-02,  1.8890e-01,  5.9575e-02],
          [-1.6854e-02, -6.5756e-02, -7.5508e-03]],

         [[ 7.3275e-02,  9.5092e-02, -3.3652e-03],
          [ 4.1993e-02, -1.8829e-02,  4.2566e-02],
          [ 5.3532e-02,  6.3890e-02, -8.5295e-03]],

         [[-2.6101e-02, -3.0959e-02,  2.7255e-02],
          [ 4.1957e-02,  7.8307e-02,  3.9114e-02],
          [-3.1557e-02,  9.3141e-02, -8.5812e-02]],

         ...,

         [[ 7.3985e-02, -1.6325e-02, -6.2818e-02],
          [ 1.2292e-02,  2.0001e-02, -8.0232e-02],
          [-2.3810e-02, -7.6710e-02, -1.2051e-03]],

         [[-2.0786e-02, -2.0778e-04,  1.1253e-01],
          [ 1.6984e-02, -1.0919e-02,  3.6806e-02],
          [ 6.8714e-02,  1.8645e-02,  1.4157e-02]],

         [[-1.6952e-02,  7.9821e-02, -1.3778e-01],
          [ 3.0041e-02, -3.1328e-02, -7.4299e-02],
          [-3.9100e-03, -9.3707e-02,  2.6198e-02]]],


        [[[-4.5212e-02, -6.7035e-02,  1.5958e-02],
          [-2.1933e-02,  5.6352e-02, -1.4483e-02],
          [-4.2648e-02,  2.6100e-02, -1.6392e-02]],

         [[-8.5274e-02,  8.3546e-02, -7.7959e-02],
          [-4.4441e-02, -7.6649e-02,  4.6362e-02],
          [-6.8345e-02,  1.9817e-02,  2.3463e-03]],

         [[-3.1079e-02,  6.8232e-02, -4.9691e-02],
          [-2.7183e-04,  2.9373e-02,  7.7199e-02],
          [-6.0799e-02, -6.2819e-02,  6.9302e-02]],

         ...,

         [[ 7.3060e-02, -1.8549e-02, -1.3863e-02],
          [ 8.0100e-02,  8.4822e-02, -1.9441e-02],
          [-1.5236e-02, -1.3007e-02, -9.1406e-02]],

         [[-4.6838e-03, -4.9299e-02, -1.5909e-01],
          [-1.0853e-01,  4.5351e-02,  6.7503e-02],
          [ 5.2385e-03,  2.9827e-02,  3.0641e-02]],

         [[ 9.5165e-02, -8.1410e-02,  7.6618e-02],
          [ 8.5240e-02, -6.9897e-02, -1.8520e-02],
          [ 9.5728e-02,  5.4564e-02, -1.5283e-01]]],


        [[[-1.4877e-01, -1.7474e-02, -1.2502e-02],
          [ 5.0325e-02,  1.7985e-03, -9.6072e-03],
          [-1.1010e-02,  1.1592e-02,  7.8015e-02]],

         [[ 2.3824e-02, -2.9497e-02,  3.6339e-02],
          [ 4.4511e-02, -4.7814e-02,  1.0217e-01],
          [ 2.1095e-02, -6.8939e-02, -1.0831e-01]],

         [[-1.4050e-02, -4.5892e-02,  5.0822e-02],
          [-9.9156e-02, -4.7915e-02,  6.7704e-02],
          [-1.1204e-02,  7.8062e-02,  5.9969e-02]],

         ...,

         [[-1.2939e-01,  8.8268e-02, -5.1878e-02],
          [ 5.2271e-02, -2.7630e-02, -4.0338e-02],
          [-6.9051e-02, -1.6316e-02, -2.2702e-02]],

         [[ 4.6019e-02, -6.3059e-02,  4.7758e-02],
          [ 1.0821e-03,  1.4055e-01,  3.5617e-02],
          [ 4.8423e-02,  1.2638e-01,  2.7933e-02]],

         [[-5.4522e-02,  5.9984e-02,  1.0373e-01],
          [ 7.6284e-02,  2.3183e-03, -3.0157e-02],
          [-5.9009e-02,  6.7338e-03, -3.5033e-02]]],


        ...,


        [[[-5.7027e-02, -2.6820e-02, -8.1497e-02],
          [ 8.9433e-03,  1.2698e-01,  9.1009e-02],
          [ 4.7026e-02, -7.9434e-02, -2.1985e-02]],

         [[-7.5241e-02, -7.1437e-02, -7.2240e-02],
          [-1.4306e-02,  2.5701e-02, -1.3044e-02],
          [ 2.4589e-02, -8.4545e-03, -8.9006e-02]],

         [[ 9.8354e-02,  8.8889e-02,  5.3254e-03],
          [ 1.5177e-01,  5.8039e-02,  3.1601e-02],
          [ 3.8943e-02, -1.7598e-02, -3.5372e-02]],

         ...,

         [[-1.2065e-01, -4.4135e-02,  1.0809e-02],
          [-5.2172e-03,  1.8957e-02,  5.4831e-02],
          [-1.7554e-02,  5.2832e-02, -2.4190e-02]],

         [[-3.4027e-02,  1.3075e-02,  2.7230e-02],
          [-2.1583e-02, -5.3215e-02, -1.4070e-02],
          [-3.4573e-02, -7.3836e-02,  3.7667e-02]],

         [[-2.5596e-02,  5.0595e-02, -1.2886e-02],
          [ 3.7017e-02, -2.6609e-03, -8.4879e-02],
          [-3.5918e-02,  1.0272e-02,  5.3882e-03]]],


        [[[-1.3766e-02, -4.5792e-02, -5.7726e-02],
          [ 3.8809e-02,  3.9227e-02,  2.2747e-03],
          [-8.5491e-02, -8.2255e-02,  4.8925e-02]],

         [[ 6.4987e-02,  8.2445e-02, -5.5463e-02],
          [-1.2198e-01,  1.9183e-02,  4.8229e-02],
          [ 7.9379e-03, -3.3387e-02,  9.6237e-03]],

         [[ 6.7722e-04, -5.7732e-02, -2.5103e-02],
          [-1.8689e-02,  3.2800e-03,  5.3961e-03],
          [-4.2551e-02,  6.5906e-02,  5.9224e-02]],

         ...,

         [[ 1.1234e-01, -1.0381e-01, -9.6016e-03],
          [ 4.8329e-03, -3.1788e-02, -6.2858e-02],
          [-8.8498e-03, -3.2456e-02, -6.3231e-02]],

         [[ 2.8460e-02, -7.8008e-02,  5.6498e-02],
          [-3.2748e-02, -1.0724e-01,  3.2472e-03],
          [ 1.9084e-02, -9.9315e-02,  9.8948e-03]],

         [[ 1.6063e-04, -4.1726e-02, -7.4542e-02],
          [-7.9178e-03,  1.7886e-02,  1.1375e-02],
          [-9.2688e-02, -2.9132e-02, -8.4637e-02]]],


        [[[ 3.1388e-02,  3.5659e-02,  8.5762e-03],
          [ 4.4809e-02,  5.3214e-02, -3.3276e-02],
          [-4.9819e-02, -9.8399e-03, -8.6875e-02]],

         [[-1.2868e-01,  9.7875e-02, -7.6350e-03],
          [ 6.3915e-02,  1.0139e-01,  9.4012e-03],
          [ 1.6236e-03, -8.3063e-02,  1.1083e-02]],

         [[-3.4760e-02,  8.6153e-02, -3.1817e-02],
          [ 6.5381e-03,  4.3884e-02, -4.2653e-02],
          [ 1.0578e-02,  9.0411e-03, -3.0521e-02]],

         ...,

         [[ 3.6757e-02, -5.3937e-02,  3.9754e-02],
          [-6.3898e-02,  7.1870e-02,  7.0410e-02],
          [-3.2565e-02, -9.6673e-02,  6.6190e-02]],

         [[-3.3095e-02, -5.0147e-03,  7.1906e-02],
          [ 1.5815e-02, -4.2641e-03, -7.4255e-02],
          [-1.0161e-01, -5.3881e-02,  5.6149e-02]],

         [[ 3.9707e-02,  4.8826e-02,  5.5198e-03],
          [ 5.5953e-02, -3.9952e-03,  1.2523e-02],
          [ 4.6936e-02,  2.7624e-02, -5.0020e-03]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-3.5281e-02,  7.0691e-02,  1.3674e-02],
          [-5.4809e-02,  2.8916e-02,  3.8205e-02],
          [ 6.8355e-02,  7.7163e-02,  2.7463e-02]],

         [[ 1.0411e-01,  5.8511e-02, -4.9134e-02],
          [-1.3484e-01,  5.3518e-02,  8.5435e-03],
          [ 1.5134e-02, -2.3692e-02, -2.2888e-02]],

         [[ 3.3915e-02, -2.0735e-02, -5.1609e-02],
          [ 3.8121e-02, -1.0130e-01, -4.5828e-02],
          [ 5.2254e-02, -9.9790e-02, -5.4507e-03]],

         ...,

         [[-6.0546e-02,  8.0367e-02,  3.8984e-02],
          [-2.2953e-02,  1.2750e-01,  9.8502e-02],
          [-4.7705e-02, -1.5544e-02, -4.9781e-02]],

         [[ 5.0212e-02,  1.0079e-01, -3.3359e-02],
          [-6.9415e-02, -7.0239e-02,  1.2129e-01],
          [ 4.7430e-03,  1.2186e-02, -2.9412e-03]],

         [[-1.5260e-02,  3.6293e-02,  3.5084e-03],
          [ 6.0228e-02, -8.6068e-02, -1.3509e-01],
          [ 6.1554e-02,  5.8561e-02, -2.0558e-02]]],


        [[[-4.3236e-02, -4.4993e-02,  4.4714e-02],
          [-6.3556e-02,  1.6790e-02, -3.4474e-02],
          [ 1.8233e-02, -1.6121e-02,  1.7836e-02]],

         [[-1.0716e-01,  3.4199e-02,  7.1904e-02],
          [ 1.6704e-01,  4.9318e-03,  6.5368e-02],
          [-1.7498e-03, -9.6620e-02, -1.4376e-02]],

         [[ 1.8495e-03,  1.4857e-02, -1.8335e-03],
          [ 3.3853e-02, -5.3684e-02,  1.0611e-01],
          [-1.4348e-01, -3.8481e-02,  1.7821e-02]],

         ...,

         [[-3.4219e-02, -9.4575e-02, -6.0739e-02],
          [-1.5744e-01,  1.7231e-02,  6.2676e-02],
          [-5.3480e-02, -5.5548e-02,  4.4229e-02]],

         [[-4.8110e-02, -3.6697e-02, -4.8831e-02],
          [-4.6329e-02, -2.8979e-02, -4.5840e-02],
          [ 1.0217e-01,  8.4697e-02, -4.1742e-02]],

         [[ 1.2331e-02,  1.0282e-02,  7.3339e-02],
          [ 1.3887e-02,  1.5673e-02, -9.5026e-02],
          [-2.8151e-02, -2.3283e-02,  6.6214e-02]]],


        [[[-2.9665e-02,  4.9994e-02, -1.0130e-01],
          [ 2.9653e-02, -4.2414e-02, -1.0185e-02],
          [ 9.6831e-02,  8.6740e-02,  1.4293e-02]],

         [[-3.2741e-02, -6.9616e-02, -4.2022e-02],
          [ 1.2843e-02, -5.4616e-02, -5.4348e-02],
          [-2.5445e-02, -2.8352e-03,  2.2578e-02]],

         [[-4.3449e-02, -6.2355e-02, -1.0766e-02],
          [-2.6089e-02,  1.0462e-01, -9.8431e-03],
          [ 4.8478e-02, -7.4634e-02,  4.0154e-02]],

         ...,

         [[ 1.2581e-01, -3.1508e-02, -2.2094e-02],
          [ 1.2358e-02,  8.4904e-03,  2.1787e-03],
          [ 4.6970e-02,  2.2632e-02,  2.3762e-02]],

         [[ 3.8664e-03,  4.6634e-02,  2.5700e-02],
          [ 3.3142e-02,  7.8897e-02,  5.8699e-02],
          [ 1.6768e-01,  1.8254e-02,  1.0595e-01]],

         [[ 3.1655e-02, -1.7889e-02, -5.0812e-02],
          [-2.1611e-02,  6.0757e-02,  9.3315e-02],
          [-4.1299e-02, -1.1418e-01, -1.2726e-02]]],


        ...,


        [[[ 2.4890e-02,  8.5701e-02,  3.3501e-02],
          [-5.9524e-02,  1.0980e-01,  1.0754e-01],
          [ 6.6447e-02,  3.3111e-02,  4.7332e-03]],

         [[ 5.0665e-02, -1.5062e-04,  4.3741e-02],
          [ 1.0268e-01,  3.5453e-02,  9.8049e-02],
          [-9.7654e-02,  5.5867e-02,  9.8479e-02]],

         [[-6.6903e-02, -2.6587e-02, -1.3792e-02],
          [ 1.1607e-01,  5.2364e-02, -7.9547e-03],
          [-2.3250e-03,  5.5700e-02, -2.3397e-02]],

         ...,

         [[ 1.0942e-01, -3.2389e-02, -9.3491e-03],
          [ 6.4614e-02,  2.3046e-02,  5.7371e-02],
          [-4.4317e-03,  3.3576e-02,  4.1325e-02]],

         [[ 2.7557e-03,  1.1786e-01, -1.0011e-01],
          [-9.7394e-03,  5.3299e-02, -1.4108e-02],
          [ 4.4279e-02, -1.1055e-01, -2.2568e-02]],

         [[ 1.2535e-02,  3.9340e-03,  2.9991e-02],
          [-1.7114e-02,  7.5350e-02, -6.2846e-02],
          [ 2.7526e-02,  1.1407e-01,  1.9571e-02]]],


        [[[-8.7523e-03, -9.4111e-02,  9.9506e-02],
          [-2.3265e-02, -4.9140e-02, -7.9018e-02],
          [-3.0792e-02,  7.3267e-02,  4.7228e-02]],

         [[ 5.5780e-02,  2.6009e-02, -4.7673e-02],
          [-1.4858e-02, -8.2327e-02, -7.0015e-02],
          [-2.0782e-03,  6.5705e-03, -4.0382e-02]],

         [[ 5.1177e-02,  2.8832e-02, -6.7081e-03],
          [-2.1872e-03, -4.9190e-02,  3.0884e-02],
          [-1.7956e-02,  1.5307e-01, -4.2010e-02]],

         ...,

         [[-8.7818e-02, -2.7457e-02, -7.9090e-02],
          [-6.6750e-02, -3.0217e-02,  3.1894e-02],
          [-1.5175e-02, -2.1916e-02, -2.7180e-02]],

         [[-4.8144e-02, -5.7706e-02,  1.0973e-01],
          [-4.2062e-02, -2.9770e-02,  9.7557e-02],
          [ 2.2337e-02, -1.8163e-02,  7.0784e-02]],

         [[ 4.8099e-02,  5.2510e-02, -9.7544e-04],
          [-1.6403e-02, -7.6251e-02,  9.0375e-02],
          [ 1.0848e-02, -3.9409e-02, -1.0656e-01]]],


        [[[ 2.5116e-02, -4.3455e-02, -6.3983e-02],
          [-5.5828e-02, -5.5762e-03, -2.1097e-02],
          [ 6.7795e-02, -9.4560e-02, -1.3817e-02]],

         [[-7.9244e-02, -1.8300e-02,  9.0979e-02],
          [-1.6236e-01, -8.6278e-02,  1.6607e-01],
          [-1.7694e-02,  2.7587e-02, -1.1387e-01]],

         [[-1.7758e-02,  3.6575e-02, -8.8833e-02],
          [-5.4013e-02, -3.0027e-02,  7.8675e-02],
          [-5.3005e-02, -2.2542e-02, -1.1382e-01]],

         ...,

         [[ 2.8515e-02,  5.3053e-02, -1.1713e-01],
          [ 7.7813e-02,  6.4397e-04, -1.0753e-02],
          [ 6.2460e-02,  2.3361e-02, -7.0355e-02]],

         [[ 5.7418e-02,  2.3423e-02,  9.3054e-02],
          [ 1.7892e-02, -3.5377e-02,  3.8494e-02],
          [ 4.6787e-03, -1.3008e-01,  1.0199e-01]],

         [[-1.9566e-02,  3.5955e-02,  2.6052e-02],
          [ 8.9312e-03,  3.7675e-02,  1.2722e-02],
          [-4.4228e-02,  1.9727e-02, -2.3082e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.1333]],

         [[-0.0278]],

         [[ 0.0497]],

         ...,

         [[-0.0664]],

         [[-0.0617]],

         [[-0.0850]]],


        [[[ 0.0958]],

         [[ 0.1369]],

         [[ 0.1057]],

         ...,

         [[ 0.1041]],

         [[-0.0937]],

         [[-0.0924]]],


        [[[ 0.0142]],

         [[ 0.0280]],

         [[ 0.0784]],

         ...,

         [[-0.1701]],

         [[-0.0473]],

         [[-0.0464]]],


        ...,


        [[[-0.0412]],

         [[-0.0155]],

         [[ 0.0238]],

         ...,

         [[-0.0128]],

         [[-0.1182]],

         [[ 0.0058]]],


        [[[ 0.0892]],

         [[-0.0603]],

         [[-0.0141]],

         ...,

         [[-0.0157]],

         [[-0.1108]],

         [[ 0.0900]]],


        [[[ 0.1103]],

         [[ 0.0670]],

         [[-0.0338]],

         ...,

         [[-0.0268]],

         [[ 0.0944]],

         [[ 0.0647]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 6.0973e-02, -1.2878e-01,  4.6700e-02],
          [-3.3106e-02,  1.3997e-02,  6.9740e-02],
          [ 7.5479e-02, -4.7805e-02,  8.4362e-02]],

         [[ 4.2797e-02, -6.8406e-03,  1.0279e-02],
          [-1.7913e-02, -1.0928e-02,  7.3314e-02],
          [-7.1855e-02, -2.4850e-03, -8.6568e-02]],

         [[ 7.2798e-02,  7.8940e-03,  5.7195e-02],
          [ 7.1566e-03, -2.7684e-04, -2.2610e-02],
          [-3.4058e-02, -5.7806e-03, -5.8316e-03]],

         ...,

         [[-5.5816e-02,  2.6115e-02, -9.8964e-02],
          [ 5.4702e-02,  6.4127e-02, -8.2034e-03],
          [ 5.3581e-02,  1.2087e-02, -1.6524e-03]],

         [[ 6.4383e-02,  5.8271e-02,  3.2036e-02],
          [ 1.1792e-02, -8.9549e-02, -1.5818e-02],
          [-2.6097e-02, -7.3685e-03,  9.6382e-02]],

         [[-3.9860e-02, -2.2237e-02,  3.6291e-02],
          [-4.5379e-02,  3.3357e-02, -2.2291e-02],
          [ 3.7220e-02, -6.5283e-02, -6.7688e-02]]],


        [[[-4.7765e-02,  8.1535e-03, -2.3330e-02],
          [ 6.8437e-02, -2.4815e-02,  7.4898e-02],
          [-1.7445e-03, -5.0134e-02,  5.1839e-02]],

         [[ 4.7920e-02,  5.8287e-02, -4.8798e-02],
          [ 6.0304e-02, -8.8016e-02, -7.4476e-02],
          [ 1.5908e-02,  8.8001e-03,  2.8604e-02]],

         [[-3.0070e-03, -7.3536e-02,  1.7967e-02],
          [ 9.6089e-02, -4.5073e-03,  8.5678e-02],
          [ 7.5229e-04,  2.6785e-02,  4.3441e-02]],

         ...,

         [[-2.2681e-02, -1.0482e-01, -2.6061e-02],
          [-2.6984e-02, -1.8242e-02,  3.3242e-02],
          [ 2.0072e-02,  5.3285e-02,  2.9381e-02]],

         [[-5.1412e-02, -1.5460e-03,  2.2354e-02],
          [-1.0705e-01,  3.9193e-02,  2.2824e-02],
          [-4.4569e-02, -1.9962e-02, -7.8464e-02]],

         [[ 5.0296e-03,  4.9145e-02,  1.1486e-01],
          [ 2.8603e-02, -1.9941e-02, -4.4875e-03],
          [ 5.6180e-02, -2.7057e-02,  3.5184e-02]]],


        [[[-7.0445e-02, -3.3714e-02, -9.9532e-03],
          [ 9.4025e-03,  2.7832e-02, -1.2485e-01],
          [-1.2587e-02, -9.1045e-02,  1.0011e-02]],

         [[ 8.1598e-03,  4.4926e-02, -3.0753e-03],
          [-7.5086e-02, -6.4397e-02,  4.6522e-02],
          [ 8.5229e-02, -1.7379e-02, -2.9602e-02]],

         [[ 1.5851e-02, -6.8147e-03, -3.3894e-02],
          [ 7.1555e-02,  6.6060e-02, -4.3081e-02],
          [-6.7464e-02, -2.9812e-02,  4.6218e-02]],

         ...,

         [[-3.5386e-02, -5.3531e-02,  6.5050e-02],
          [ 2.9437e-02,  5.9547e-02,  1.0192e-02],
          [-1.5936e-02,  1.4075e-02,  3.6524e-02]],

         [[-4.7652e-02, -7.7152e-02,  1.0395e-02],
          [ 7.7353e-03, -1.2721e-02, -1.8765e-02],
          [-1.9853e-04, -7.7192e-02,  5.9990e-02]],

         [[ 3.8519e-02, -4.8481e-02, -4.9874e-02],
          [-7.5144e-02, -5.0285e-02,  3.7947e-03],
          [ 6.3961e-02, -5.4174e-02, -8.6533e-03]]],


        ...,


        [[[ 1.3098e-02, -1.8284e-02, -9.5056e-02],
          [-1.4688e-02, -8.0978e-03, -2.1766e-03],
          [-1.3756e-02,  6.4342e-03, -1.0479e-01]],

         [[-3.4544e-03, -2.0733e-02, -3.4778e-02],
          [ 1.0267e-01,  3.2856e-02, -7.5093e-03],
          [ 5.6343e-02,  5.6555e-03,  5.2692e-02]],

         [[-1.9378e-02, -3.0726e-02,  4.8729e-02],
          [-2.7612e-02,  9.9782e-03, -1.7908e-02],
          [ 6.8684e-03, -9.8984e-03, -4.7110e-02]],

         ...,

         [[-1.2952e-02, -4.1189e-04,  1.5302e-02],
          [ 2.5138e-02, -1.0705e-02, -3.4925e-03],
          [-1.4445e-01,  4.1043e-03,  3.5155e-02]],

         [[ 1.7014e-03,  2.9482e-02, -7.5891e-04],
          [-3.7090e-02, -2.0925e-03,  9.8798e-03],
          [ 3.4072e-03,  8.1250e-02, -1.6466e-02]],

         [[-8.3307e-02, -9.4869e-03,  1.5953e-02],
          [-8.4365e-02, -8.5761e-03, -3.3357e-02],
          [ 8.1212e-03,  7.7744e-02, -8.8082e-02]]],


        [[[-7.7778e-02,  2.9543e-02,  1.3085e-01],
          [ 7.0800e-02, -4.1565e-04, -5.1689e-02],
          [ 2.4025e-02,  1.8039e-02, -5.1198e-02]],

         [[ 8.2071e-02,  1.0006e-01, -5.5234e-02],
          [-1.2244e-01,  8.4861e-02, -2.8665e-03],
          [-1.1202e-01, -7.5449e-02, -1.6178e-02]],

         [[-1.8785e-02,  4.7371e-02, -3.4621e-03],
          [ 4.4355e-02, -2.5533e-02,  8.9876e-03],
          [ 5.9644e-02, -7.9124e-02,  9.7166e-02]],

         ...,

         [[-6.4296e-02, -3.6628e-02,  9.1678e-02],
          [-9.9740e-02,  8.2921e-02,  8.4180e-02],
          [-8.4886e-04, -3.1891e-02, -3.6142e-02]],

         [[-5.4713e-04, -4.5469e-02, -6.3369e-03],
          [ 2.8996e-02,  4.4280e-02, -1.8322e-02],
          [-1.1852e-02, -8.5572e-02, -2.9759e-02]],

         [[ 3.9704e-02,  5.6229e-02,  5.3417e-02],
          [ 9.0409e-02, -1.8590e-02, -3.9491e-03],
          [-2.5161e-02,  1.2712e-02,  5.9468e-03]]],


        [[[-5.2519e-02,  2.5027e-02, -7.1418e-02],
          [-2.0259e-03, -2.7425e-02, -1.1920e-02],
          [-3.7358e-03,  1.2723e-05,  1.1204e-02]],

         [[-1.5028e-02,  2.1281e-03,  7.0727e-02],
          [-1.5347e-02, -2.0513e-02,  3.0337e-02],
          [-6.9664e-02, -5.2206e-02, -1.2754e-02]],

         [[ 7.1385e-02,  2.9199e-02, -4.6993e-05],
          [ 3.1410e-02, -5.6111e-02,  2.5560e-02],
          [ 2.2889e-02, -1.6184e-02, -6.2299e-03]],

         ...,

         [[ 7.9099e-03,  4.9274e-02,  2.4371e-02],
          [-1.0955e-01, -2.0402e-02, -8.9386e-02],
          [ 4.4762e-02, -5.5921e-02,  5.2706e-02]],

         [[-2.8823e-02,  4.4499e-03, -8.8437e-02],
          [ 5.7168e-02,  4.9321e-03,  2.1838e-02],
          [-2.2444e-02, -1.7222e-02,  8.2005e-02]],

         [[-4.1004e-02,  4.6398e-02, -1.3429e-03],
          [ 3.0988e-02, -6.3444e-02, -5.1422e-02],
          [ 7.6839e-04,  1.6366e-03, -3.7545e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 1.1871e-02, -2.8796e-02,  2.9696e-02],
          [-1.1738e-01, -3.0225e-02,  4.0957e-02],
          [ 1.3118e-02,  3.8246e-03,  9.8685e-03]],

         [[-1.1657e-02,  4.7161e-03,  2.2896e-02],
          [-1.1131e-03, -9.0763e-02,  3.5604e-02],
          [ 2.5136e-02,  3.0600e-03,  5.3846e-02]],

         [[-6.3031e-02, -7.0518e-02,  3.3347e-02],
          [-1.9921e-02,  5.1550e-02, -3.3359e-03],
          [ 2.6028e-02, -3.7380e-02,  2.9133e-02]],

         ...,

         [[ 1.5059e-01,  5.9363e-03,  5.4785e-03],
          [-4.3629e-02, -7.3111e-02,  4.7927e-02],
          [ 8.3109e-03, -3.8818e-02, -5.8454e-03]],

         [[-2.6445e-02, -6.3136e-02, -3.3742e-02],
          [-5.5845e-02,  9.7263e-02,  8.5739e-02],
          [-6.0883e-02, -4.5741e-02,  3.2724e-03]],

         [[ 3.4880e-02,  9.6138e-04,  3.5364e-02],
          [-3.3533e-02,  1.1678e-02,  7.0510e-02],
          [ 1.1013e-01,  2.0595e-02,  1.9875e-02]]],


        [[[-2.9017e-02, -3.2815e-02,  1.1801e-02],
          [-3.6264e-02,  1.9240e-02,  2.2421e-02],
          [-9.1275e-02,  1.3693e-02, -2.8460e-02]],

         [[ 4.8949e-02,  5.8076e-02,  2.0863e-03],
          [ 1.1487e-01, -5.6188e-03,  5.5770e-02],
          [-7.1703e-02,  5.1901e-02,  7.2674e-02]],

         [[ 1.4105e-02, -5.9496e-02, -8.7833e-02],
          [ 5.5681e-02, -1.1506e-01, -3.1785e-02],
          [-5.1753e-02, -1.4912e-02, -4.8523e-02]],

         ...,

         [[-1.6604e-02, -6.6554e-02, -2.4363e-03],
          [-3.7451e-02, -3.3247e-02, -7.5239e-03],
          [-2.7576e-02, -7.5799e-02,  4.4117e-02]],

         [[-6.7641e-02,  2.1732e-02,  5.0370e-02],
          [-1.4978e-02, -9.4137e-02, -2.1116e-02],
          [-3.9880e-02,  3.8457e-02,  2.1166e-04]],

         [[-5.7109e-03, -4.0246e-02, -1.3316e-02],
          [-2.7601e-02,  4.6670e-02, -1.1624e-02],
          [-8.5768e-02, -4.1257e-02,  8.0648e-02]]],


        [[[ 2.3687e-02,  3.1103e-02,  1.8813e-02],
          [-4.1770e-03, -6.5108e-02,  1.6918e-03],
          [ 6.6989e-02,  7.5517e-02,  1.7117e-02]],

         [[ 5.3888e-02,  6.3572e-02,  4.2552e-02],
          [-5.1162e-02, -2.5100e-02, -1.6036e-01],
          [-2.7636e-02, -4.1908e-03, -6.6401e-02]],

         [[-6.6746e-02,  3.8154e-02,  3.6810e-02],
          [-2.1836e-02, -7.6213e-02, -1.2517e-02],
          [-3.1349e-02,  8.8154e-03, -3.6345e-02]],

         ...,

         [[-1.0849e-02,  7.2215e-02, -8.6959e-03],
          [-1.5622e-02, -3.3739e-03,  3.5294e-03],
          [-2.2394e-03, -5.3602e-02,  3.5509e-02]],

         [[-1.5070e-02,  3.3522e-02,  2.7931e-02],
          [ 6.9684e-02,  2.9208e-02, -1.7395e-02],
          [-3.9234e-03,  5.6577e-02,  2.0376e-02]],

         [[-1.0327e-01, -3.9856e-02, -3.2414e-02],
          [-3.1088e-02,  5.3501e-02, -2.5786e-02],
          [-1.0209e-02, -1.6819e-02,  5.7475e-02]]],


        ...,


        [[[-5.1214e-02, -3.9235e-02,  5.2811e-03],
          [ 6.2047e-02,  3.1327e-02, -4.2379e-02],
          [ 2.4626e-02,  3.5638e-02, -5.9753e-02]],

         [[ 4.5540e-02,  2.7964e-02,  1.2484e-03],
          [ 4.6548e-02, -2.7395e-02, -5.3204e-02],
          [ 1.8119e-02, -5.6260e-03, -6.3278e-02]],

         [[-4.8422e-02, -8.9109e-03,  1.1755e-01],
          [ 9.0022e-02,  8.6222e-03,  2.5174e-02],
          [ 9.9257e-02, -4.7994e-02,  8.3895e-02]],

         ...,

         [[-3.1343e-02,  6.6110e-02,  4.7353e-02],
          [-3.8719e-02, -5.4027e-02, -5.4540e-02],
          [ 4.1703e-02,  2.5255e-02, -1.8423e-02]],

         [[ 6.0499e-02,  1.8431e-02, -5.9992e-02],
          [-1.1081e-02, -1.8753e-02,  5.5300e-02],
          [ 1.0613e-01, -9.4685e-03,  1.0411e-01]],

         [[ 1.7208e-02, -6.5118e-02,  1.1419e-02],
          [-2.5930e-02, -5.5766e-02, -1.3087e-01],
          [-1.0388e-02,  2.9671e-02, -9.0157e-02]]],


        [[[-3.9159e-02, -1.2975e-02, -4.0862e-02],
          [-1.1141e-02, -2.7223e-02,  4.2676e-03],
          [-6.1527e-02, -2.8275e-02, -3.4209e-02]],

         [[ 2.3364e-02, -5.5807e-02,  6.7475e-02],
          [ 3.4291e-03, -3.1116e-03,  9.5497e-03],
          [ 6.9674e-02, -6.1328e-02, -2.6429e-02]],

         [[-3.5921e-02,  6.3765e-02,  4.8432e-02],
          [ 2.7239e-03,  5.5066e-02,  3.2804e-02],
          [ 8.5311e-02,  5.2099e-03, -9.1090e-03]],

         ...,

         [[ 2.5756e-02, -5.1458e-02,  2.0680e-02],
          [ 2.3925e-05, -5.8063e-03, -4.0294e-02],
          [-1.1857e-02, -1.6979e-02,  1.3007e-02]],

         [[-3.0582e-02, -4.9210e-02,  2.5176e-02],
          [ 2.2845e-02,  2.4580e-04, -2.9362e-02],
          [-1.0359e-02,  3.5687e-02, -1.6585e-02]],

         [[ 9.2854e-03, -1.5389e-02, -2.9409e-02],
          [ 3.3285e-02, -3.5390e-02, -2.5479e-02],
          [ 1.8494e-02, -4.9254e-02,  5.4477e-02]]],


        [[[-5.5322e-02, -1.1169e-01,  8.1146e-03],
          [-3.0732e-02, -4.0999e-02,  1.5859e-02],
          [ 1.1874e-02, -9.3649e-02,  6.6261e-02]],

         [[ 1.0011e-02, -5.3267e-02, -5.3675e-02],
          [ 1.7201e-03, -6.4029e-02, -4.9387e-02],
          [-2.7382e-02, -1.8024e-02, -8.0998e-02]],

         [[ 1.4877e-03,  2.5897e-02, -3.9866e-02],
          [ 2.8421e-02, -4.6309e-02,  1.1958e-02],
          [-5.4620e-02, -7.6077e-02, -1.6063e-02]],

         ...,

         [[ 7.5045e-02,  3.6110e-02,  1.3972e-02],
          [ 1.7611e-02,  1.4296e-02,  5.4316e-02],
          [ 5.1088e-02,  7.7256e-02, -5.1942e-02]],

         [[-3.8550e-02, -3.4498e-02, -8.0625e-03],
          [ 4.9875e-02, -7.0870e-02, -7.1720e-02],
          [ 1.0230e-01, -5.5760e-02, -2.3347e-02]],

         [[ 1.1466e-02, -2.7498e-03, -3.5507e-02],
          [-1.7933e-02,  1.0791e-02, -4.1451e-02],
          [ 7.4891e-02, -1.9713e-02, -2.0568e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0488]],

         [[-0.0685]],

         [[ 0.0815]],

         ...,

         [[-0.1674]],

         [[ 0.0721]],

         [[-0.2039]]],


        [[[-0.0643]],

         [[ 0.1563]],

         [[ 0.1906]],

         ...,

         [[ 0.0566]],

         [[ 0.0856]],

         [[ 0.1447]]],


        [[[ 0.0413]],

         [[ 0.0820]],

         [[ 0.2044]],

         ...,

         [[ 0.0925]],

         [[-0.0232]],

         [[-0.0152]]],


        ...,


        [[[ 0.0192]],

         [[ 0.0691]],

         [[ 0.0479]],

         ...,

         [[ 0.0799]],

         [[-0.0272]],

         [[-0.2578]]],


        [[[ 0.0916]],

         [[ 0.0285]],

         [[-0.0442]],

         ...,

         [[-0.0636]],

         [[-0.0157]],

         [[-0.0546]]],


        [[[-0.0793]],

         [[-0.1527]],

         [[-0.1199]],

         ...,

         [[-0.0552]],

         [[-0.0648]],

         [[-0.1245]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 2.5410e-02, -8.7511e-02, -1.1324e-02],
          [ 7.4251e-02,  7.5024e-02,  2.6995e-02],
          [-7.9425e-02, -5.8503e-02, -9.1740e-02]],

         [[ 5.5526e-02,  6.9644e-02,  6.8849e-03],
          [-3.1297e-02,  5.5531e-02, -1.7917e-02],
          [-3.2758e-02,  1.1007e-01,  8.0468e-02]],

         [[-4.1690e-02,  4.8416e-02,  1.5360e-03],
          [ 1.0204e-01, -1.4746e-02, -3.1800e-02],
          [-2.3048e-02,  4.2321e-02, -1.6039e-01]],

         ...,

         [[-4.9462e-02,  2.1432e-02,  6.5532e-02],
          [-2.6636e-03,  1.0611e-01, -2.7298e-03],
          [-7.2528e-03, -9.9811e-03,  5.6171e-02]],

         [[-3.9689e-02,  2.9383e-02, -1.9512e-02],
          [-7.7073e-02,  2.5206e-02,  1.3574e-02],
          [ 1.5694e-01,  1.5094e-02,  7.1217e-02]],

         [[-1.2686e-02,  6.2573e-02,  8.9788e-02],
          [ 1.1943e-02, -3.4829e-03, -1.8838e-02],
          [ 5.8925e-02, -1.3995e-02, -3.3947e-02]]],


        [[[-1.3449e-03, -3.8359e-02,  3.5916e-02],
          [-5.2662e-02, -6.4215e-03, -6.3301e-02],
          [ 3.5743e-03, -1.7378e-02, -3.1714e-02]],

         [[ 3.3710e-02, -2.6695e-04, -5.5684e-02],
          [-4.8041e-02,  2.7976e-02, -1.6050e-02],
          [ 6.2556e-03,  3.3051e-02,  7.6542e-02]],

         [[ 3.5626e-03, -2.8549e-02, -2.1848e-02],
          [ 6.3636e-02,  2.5505e-02,  1.2278e-02],
          [ 1.6312e-02,  5.5494e-02, -1.7239e-02]],

         ...,

         [[-1.3218e-02, -2.7748e-02, -3.1360e-02],
          [-6.3007e-02, -1.1791e-02, -4.0595e-02],
          [-7.9122e-02,  2.0523e-02,  1.0020e-02]],

         [[ 4.9610e-02,  4.9558e-02,  5.3651e-03],
          [ 3.3322e-02, -3.9515e-03, -1.9724e-02],
          [ 1.0952e-01,  4.8342e-02,  6.0122e-02]],

         [[-1.8717e-02, -3.0961e-02,  1.4722e-02],
          [ 2.1418e-02, -1.4297e-02, -3.2026e-02],
          [-1.2308e-01, -1.0680e-01, -1.7286e-02]]],


        [[[ 6.1344e-02, -1.7500e-02, -3.9939e-03],
          [ 2.9427e-02,  3.5269e-02, -2.1238e-02],
          [ 3.4688e-03,  3.0542e-02,  7.7265e-03]],

         [[-3.8185e-02, -9.5607e-03,  1.2477e-02],
          [ 4.0647e-02, -4.8834e-02,  1.3154e-02],
          [ 5.1386e-03,  1.2271e-02,  2.6931e-02]],

         [[ 1.0747e-02,  5.2183e-02, -6.0683e-02],
          [ 1.5384e-02, -6.2095e-02,  2.8765e-02],
          [ 2.5563e-02,  2.3963e-02,  2.1673e-02]],

         ...,

         [[ 7.8723e-02,  4.0289e-02, -6.3918e-02],
          [-2.4860e-02, -2.5929e-02, -6.4477e-02],
          [ 4.8975e-02, -1.6094e-03, -3.1658e-02]],

         [[ 6.8567e-02,  4.7562e-02,  5.2264e-02],
          [-9.1731e-02, -2.8056e-02, -3.1311e-02],
          [-4.3053e-02,  4.6131e-02,  4.2037e-02]],

         [[-1.3717e-02, -8.0153e-03, -2.7784e-02],
          [-7.8597e-02,  3.0616e-02, -2.5202e-02],
          [-6.2836e-02,  3.2351e-02, -4.6373e-03]]],


        ...,


        [[[-9.4894e-03, -1.7286e-02,  3.8538e-02],
          [ 9.7693e-03, -2.1056e-02, -9.3202e-02],
          [-6.4060e-02,  4.9186e-02, -9.6698e-02]],

         [[-1.0872e-01,  2.0808e-02,  6.5550e-02],
          [-8.6070e-03, -1.9452e-02, -5.2852e-02],
          [-9.6903e-02,  1.4999e-02,  4.9813e-02]],

         [[-9.4298e-02, -2.9717e-04,  4.7511e-02],
          [ 1.5900e-03,  6.9494e-02,  3.4224e-02],
          [-9.7335e-02, -1.1894e-04,  8.9426e-02]],

         ...,

         [[ 6.8930e-02, -6.4213e-02, -2.6204e-02],
          [ 4.2681e-02, -2.3074e-02,  2.4226e-02],
          [ 7.3024e-03,  2.0199e-02, -1.3815e-02]],

         [[-4.1057e-02, -9.1891e-04,  3.0496e-02],
          [-6.7429e-02, -4.6841e-02,  7.8145e-03],
          [ 2.9095e-02, -6.0799e-03,  4.9762e-02]],

         [[ 2.9185e-02, -7.9783e-04,  1.0169e-02],
          [-1.5346e-02,  4.7614e-02, -9.7768e-03],
          [ 3.3364e-02, -1.4965e-04, -7.5190e-02]]],


        [[[-5.0141e-02,  3.4704e-02, -2.3583e-02],
          [-5.6281e-02, -5.2471e-02, -7.6062e-03],
          [-4.9298e-02, -6.9510e-02, -3.5388e-02]],

         [[-1.6987e-02,  6.4029e-02, -9.9038e-03],
          [ 3.9672e-02,  6.7096e-02, -8.1446e-02],
          [-2.8559e-02, -2.6991e-02,  7.2992e-02]],

         [[ 5.2061e-02,  3.7228e-02, -2.3620e-03],
          [-7.2357e-02, -1.1094e-02,  6.2285e-02],
          [ 1.3643e-02, -6.2957e-02,  4.6342e-02]],

         ...,

         [[-4.1698e-02, -1.6016e-02, -2.4951e-02],
          [-1.3773e-03,  2.1858e-02, -1.0311e-02],
          [-2.4422e-02, -7.2564e-02, -1.2363e-02]],

         [[-2.4788e-02,  7.1828e-03,  1.8524e-03],
          [ 2.2954e-02,  1.8513e-02,  1.2247e-01],
          [ 4.2027e-02, -6.4955e-03, -2.0844e-02]],

         [[-7.9536e-03, -3.0537e-02,  5.1351e-02],
          [ 8.8057e-02,  2.6200e-02, -5.8793e-02],
          [-2.1157e-02, -4.7768e-02, -2.5552e-02]]],


        [[[ 4.5814e-02,  4.3147e-02, -2.9611e-02],
          [ 7.2395e-02,  2.6846e-02, -8.0339e-03],
          [-5.7909e-02,  4.9588e-02,  5.6447e-02]],

         [[ 3.7756e-02, -1.6085e-02, -1.8718e-02],
          [-1.6396e-02,  5.9389e-03, -3.2542e-02],
          [ 7.4293e-02,  1.5236e-02,  3.7290e-02]],

         [[ 1.9169e-02,  3.3618e-02, -8.1610e-02],
          [ 1.5117e-02,  1.0322e-02,  5.1995e-02],
          [ 2.3459e-02,  2.9049e-02, -6.3340e-02]],

         ...,

         [[ 1.6799e-02, -4.7085e-02,  1.4933e-02],
          [ 3.9952e-02, -2.7541e-02,  7.7004e-04],
          [ 4.6318e-03,  2.6524e-04,  6.7603e-03]],

         [[ 6.0071e-02,  7.7548e-02,  5.6914e-02],
          [ 4.5922e-02, -1.7634e-02,  2.4517e-02],
          [ 2.4949e-02, -3.2270e-02, -2.0558e-02]],

         [[ 3.2008e-02,  1.3968e-03, -1.5587e-02],
          [-7.2103e-02, -9.1734e-03, -7.6153e-02],
          [ 9.6265e-03,  2.2129e-02,  9.5516e-02]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-0.0290,  0.0209,  0.0127],
          [-0.0757, -0.0972, -0.0117],
          [-0.0379, -0.0627, -0.0183]],

         [[ 0.0211, -0.0298,  0.0059],
          [-0.0499,  0.0635, -0.0185],
          [-0.0556, -0.0996, -0.0675]],

         [[ 0.0083, -0.0043,  0.1273],
          [-0.0227,  0.0702,  0.0273],
          [-0.0349,  0.0168,  0.0123]],

         ...,

         [[-0.0220,  0.0375,  0.0238],
          [ 0.0257, -0.0289, -0.0377],
          [ 0.0291,  0.0044,  0.0631]],

         [[ 0.0222,  0.0525,  0.0119],
          [ 0.0249,  0.0588, -0.0446],
          [-0.0362,  0.0314, -0.0317]],

         [[ 0.0576,  0.0892, -0.0209],
          [ 0.1005,  0.0089,  0.0889],
          [-0.0103, -0.0115, -0.0098]]],


        [[[ 0.0311, -0.0138, -0.0278],
          [-0.0073, -0.0938,  0.0388],
          [ 0.0276, -0.0357, -0.0485]],

         [[-0.0163, -0.0006,  0.0022],
          [-0.0022,  0.1290,  0.0276],
          [-0.0311, -0.0439,  0.0329]],

         [[ 0.0104,  0.0656,  0.0752],
          [-0.0014,  0.1297, -0.1060],
          [-0.0908, -0.0557, -0.0674]],

         ...,

         [[ 0.0069, -0.0609, -0.0899],
          [ 0.0816, -0.0473, -0.0004],
          [ 0.0566, -0.0241, -0.0218]],

         [[ 0.0155,  0.0801,  0.0682],
          [-0.0268, -0.1360, -0.0237],
          [ 0.0287,  0.0346,  0.0492]],

         [[ 0.0511,  0.0133, -0.0447],
          [ 0.0101, -0.0039, -0.0932],
          [ 0.0013, -0.0202,  0.0284]]],


        [[[ 0.0210,  0.0114, -0.0249],
          [-0.0668, -0.0041, -0.0099],
          [-0.0381,  0.1225, -0.0269]],

         [[ 0.0339, -0.0223,  0.1175],
          [ 0.0019,  0.0036, -0.0215],
          [-0.0520, -0.0097,  0.0096]],

         [[-0.0040,  0.0724, -0.0431],
          [-0.0105, -0.0472, -0.0499],
          [-0.0366, -0.0240, -0.0429]],

         ...,

         [[ 0.0079, -0.0523,  0.0306],
          [-0.0649,  0.0570, -0.0333],
          [ 0.0241, -0.0301, -0.0214]],

         [[ 0.0192, -0.0384, -0.0012],
          [ 0.0306, -0.0599,  0.0086],
          [ 0.0278, -0.0018, -0.0614]],

         [[-0.0168, -0.0336, -0.0231],
          [ 0.0129,  0.0260,  0.0248],
          [ 0.0310, -0.0428, -0.0787]]],


        ...,


        [[[-0.0144, -0.0628, -0.0400],
          [ 0.0579,  0.0157,  0.0221],
          [ 0.0182,  0.0015, -0.0160]],

         [[-0.0622,  0.0582,  0.0450],
          [ 0.0350, -0.0223, -0.0113],
          [ 0.0255, -0.0227, -0.0088]],

         [[-0.0399, -0.0697, -0.0277],
          [ 0.0067, -0.0231,  0.0021],
          [-0.0625, -0.0200,  0.0532]],

         ...,

         [[-0.0216, -0.0434, -0.0436],
          [ 0.0167, -0.0168, -0.0850],
          [-0.0446,  0.0743,  0.0488]],

         [[-0.0737,  0.0167,  0.0445],
          [-0.0539, -0.0199,  0.0577],
          [-0.0046, -0.0304,  0.0622]],

         [[ 0.0687,  0.0076, -0.0605],
          [-0.0495,  0.0664,  0.0503],
          [-0.0215, -0.0563,  0.0344]]],


        [[[ 0.0111,  0.0104, -0.0090],
          [ 0.0168,  0.0621, -0.0388],
          [-0.0220,  0.0719, -0.0079]],

         [[ 0.0253,  0.0436, -0.0307],
          [ 0.0803, -0.0216,  0.0776],
          [ 0.0281,  0.0015,  0.0370]],

         [[-0.0566, -0.0612,  0.0132],
          [-0.0410,  0.0268, -0.0304],
          [ 0.0928, -0.0035,  0.0260]],

         ...,

         [[ 0.0163,  0.0258,  0.0085],
          [-0.0724,  0.0055,  0.0408],
          [ 0.0659,  0.0188, -0.0119]],

         [[-0.0323,  0.0545,  0.0447],
          [ 0.0513, -0.0540,  0.0391],
          [-0.0145,  0.0628, -0.0253]],

         [[-0.0158, -0.0187,  0.0005],
          [ 0.0322,  0.0142, -0.0084],
          [ 0.0340,  0.0535, -0.0725]]],


        [[[-0.0869,  0.0498, -0.0181],
          [-0.0725,  0.0444, -0.0406],
          [-0.0253,  0.0415, -0.0323]],

         [[-0.0416, -0.0014, -0.0462],
          [-0.0617,  0.0665,  0.0035],
          [ 0.0927, -0.0364, -0.0035]],

         [[-0.0938,  0.0459,  0.0090],
          [ 0.0196,  0.0440,  0.0136],
          [-0.0088,  0.0485, -0.0264]],

         ...,

         [[ 0.0411,  0.0341, -0.0534],
          [ 0.0095,  0.0714, -0.0174],
          [ 0.0108, -0.0365, -0.0314]],

         [[-0.0704, -0.0039, -0.0305],
          [ 0.0406,  0.0112,  0.0359],
          [ 0.0523, -0.0461, -0.0216]],

         [[-0.0248,  0.0548, -0.0500],
          [ 0.0410,  0.0530,  0.0790],
          [ 0.0533, -0.0907, -0.0329]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 2.5666e-02,  1.8234e-02, -4.7237e-02],
          [-2.0927e-02,  1.4662e-02,  1.2996e-02],
          [-2.9138e-02, -1.4542e-02,  1.7017e-02]],

         [[ 7.8357e-02, -5.0916e-03,  1.6303e-02],
          [-2.1044e-03,  2.8935e-03, -5.8068e-02],
          [ 1.9984e-02,  2.8631e-02, -1.3655e-02]],

         [[-1.5665e-02,  3.3894e-02,  4.7582e-02],
          [ 3.0980e-03,  9.9300e-02,  3.3879e-02],
          [ 4.2655e-02,  8.4934e-02,  4.6468e-02]],

         ...,

         [[ 5.7275e-03,  3.8472e-02, -5.7675e-02],
          [-3.1648e-02, -5.6802e-02,  4.1861e-02],
          [ 7.2536e-02, -2.4944e-02,  1.3822e-02]],

         [[-2.0595e-02,  6.8494e-03, -9.2642e-02],
          [ 5.2110e-02,  4.3414e-02,  6.6781e-04],
          [-2.8075e-02,  7.6301e-02,  5.3689e-02]],

         [[ 1.6396e-02, -8.1103e-02, -6.5174e-02],
          [-6.2520e-02, -6.0134e-03,  1.2674e-02],
          [-2.4798e-02, -1.0104e-02, -2.6889e-02]]],


        [[[ 5.2157e-02, -2.5255e-02,  4.0327e-02],
          [ 2.3866e-02, -7.1884e-03, -1.6196e-02],
          [-2.3835e-03,  3.9237e-02, -4.2387e-02]],

         [[ 4.5542e-02, -6.8492e-02,  1.2655e-02],
          [ 1.3831e-02,  2.2709e-02, -2.3325e-04],
          [-5.4100e-02, -7.0972e-02, -6.4109e-03]],

         [[ 4.1458e-03, -6.2618e-02,  5.4032e-03],
          [-2.3800e-02, -2.0610e-02,  1.3409e-02],
          [ 3.7613e-02,  1.3547e-03, -2.8223e-02]],

         ...,

         [[-5.3863e-02,  2.7486e-02, -6.3018e-02],
          [-6.6376e-02, -3.0958e-02, -1.9378e-02],
          [ 1.4402e-02, -1.0527e-04,  2.4345e-02]],

         [[ 3.0024e-02,  3.5255e-02, -8.3908e-03],
          [-1.3338e-02,  2.8553e-02, -2.1969e-03],
          [ 6.1141e-02,  8.1755e-02, -2.4215e-02]],

         [[ 2.6987e-02, -2.4551e-02, -2.5794e-02],
          [ 2.5520e-02,  2.6677e-02,  3.3422e-03],
          [ 2.4227e-02, -2.4274e-02, -3.5402e-02]]],


        [[[-9.2341e-03, -1.3361e-02,  1.1932e-02],
          [ 8.4320e-03,  2.8357e-02, -3.1095e-02],
          [-3.8975e-02, -2.6973e-02,  2.4566e-02]],

         [[-9.1578e-03,  2.7456e-02, -4.3189e-02],
          [ 9.7384e-03,  1.9494e-02,  1.7444e-02],
          [ 3.0673e-02, -2.4832e-02,  1.4751e-02]],

         [[ 7.5655e-02,  1.0295e-01,  3.0076e-02],
          [ 9.7827e-03,  2.5944e-02, -1.8457e-02],
          [ 6.0264e-03, -3.6543e-02, -1.4807e-02]],

         ...,

         [[-2.1451e-02,  3.7212e-02, -5.5817e-03],
          [ 2.4487e-02, -2.3525e-02,  2.7180e-02],
          [-4.5407e-02, -6.2954e-02,  4.5640e-02]],

         [[ 9.2284e-03,  5.7795e-02,  5.8685e-02],
          [ 2.1283e-02,  3.2734e-03,  3.3801e-02],
          [ 8.8701e-03,  5.6324e-02, -6.0395e-02]],

         [[ 3.2413e-02, -4.1006e-02,  1.0218e-02],
          [ 3.4628e-02, -4.6710e-03,  1.4931e-01],
          [-6.1400e-02, -3.0843e-02,  3.4519e-02]]],


        ...,


        [[[ 5.3411e-02, -1.8506e-02,  1.7980e-02],
          [-1.1206e-03, -7.0860e-03, -5.5819e-02],
          [-2.4260e-02, -1.0002e-02, -4.1745e-02]],

         [[-2.4064e-02,  1.7537e-02,  1.1135e-02],
          [-4.5278e-02, -1.3068e-02,  2.9395e-02],
          [ 6.7178e-02,  1.2368e-02, -7.2596e-02]],

         [[-4.4859e-02,  1.3159e-02,  8.6897e-02],
          [ 1.1200e-02, -4.5816e-02, -2.6478e-02],
          [-4.8706e-02,  2.7740e-02,  1.7831e-02]],

         ...,

         [[-4.5318e-03, -2.7691e-02, -3.0567e-02],
          [-1.2066e-02,  1.4748e-02, -5.0086e-02],
          [-3.4294e-03, -9.1144e-03, -6.5889e-02]],

         [[ 5.7056e-02, -2.2724e-03,  4.0489e-02],
          [-1.1245e-02,  4.9594e-02, -1.8968e-04],
          [ 5.1737e-02, -5.8579e-03, -6.1397e-02]],

         [[ 6.6970e-02,  3.1026e-02, -3.7071e-03],
          [-1.3449e-02, -1.4580e-02,  2.7005e-02],
          [-5.7728e-02, -3.4315e-02, -7.7526e-02]]],


        [[[ 6.3114e-04, -3.4177e-03,  7.2278e-02],
          [ 2.3490e-03, -7.8148e-02, -9.6123e-02],
          [ 2.1329e-03, -2.2193e-02, -1.8102e-02]],

         [[ 4.3349e-02, -3.8981e-02,  5.2624e-03],
          [ 5.7926e-03,  6.0988e-02, -6.8208e-03],
          [ 2.5385e-02,  4.8469e-04, -5.6323e-02]],

         [[ 4.7933e-02,  2.1417e-02,  3.1828e-02],
          [ 2.5394e-02, -6.7590e-02,  3.6783e-02],
          [-5.8473e-02, -2.0712e-02,  6.4197e-02]],

         ...,

         [[-3.2341e-02, -1.5553e-03, -6.1799e-02],
          [-1.6394e-02,  4.3099e-02,  4.3861e-03],
          [ 2.3393e-02,  1.6003e-02, -4.0358e-02]],

         [[-7.8263e-02, -2.1043e-02,  5.3207e-03],
          [-2.4344e-02,  6.3805e-02,  8.0085e-03],
          [-9.4815e-02, -1.9084e-02, -3.4083e-02]],

         [[-1.2592e-02, -8.6766e-02, -4.7521e-02],
          [ 4.2753e-02, -5.8330e-03,  6.9306e-02],
          [-1.5155e-02, -2.3549e-02, -9.9518e-03]]],


        [[[-6.4222e-02, -8.4069e-03,  1.2768e-03],
          [-4.9546e-02,  7.5107e-03,  5.1199e-02],
          [ 5.3545e-02, -1.4003e-02,  3.4558e-02]],

         [[-3.7848e-02,  5.9582e-03, -7.6750e-02],
          [-1.1971e-02, -7.0038e-03, -6.8475e-03],
          [ 3.7060e-03, -1.5346e-02,  3.1897e-02]],

         [[-1.0539e-02,  1.7435e-02, -6.7890e-02],
          [ 2.9690e-02,  6.3843e-03, -1.7299e-02],
          [-1.3978e-02, -4.6707e-02,  2.0725e-02]],

         ...,

         [[ 6.2646e-02, -8.6841e-03, -3.1885e-02],
          [ 5.8587e-03, -2.7164e-02,  1.7279e-03],
          [-1.4438e-02, -1.5020e-02, -2.0092e-02]],

         [[ 9.8322e-02, -4.2582e-05, -5.8567e-02],
          [ 5.0263e-02, -2.2160e-03, -6.0296e-02],
          [ 1.1474e-02,  6.5020e-02,  2.1674e-02]],

         [[-1.3265e-02, -6.6898e-02,  6.3318e-02],
          [ 7.8170e-05,  3.4528e-02,  4.1400e-02],
          [-8.3138e-03, -8.3971e-03, -1.4078e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-0.0299,  0.0407, -0.0220],
          [ 0.0015,  0.0658,  0.0556],
          [-0.0762,  0.0284, -0.0098]],

         [[ 0.0459,  0.0120, -0.0439],
          [-0.0694,  0.0037,  0.0264],
          [-0.0044,  0.0377, -0.0559]],

         [[ 0.0207, -0.0085,  0.0210],
          [-0.0040,  0.0195, -0.0373],
          [-0.0015, -0.0475, -0.0356]],

         ...,

         [[ 0.0058, -0.0067, -0.0460],
          [-0.0180,  0.0077,  0.0633],
          [-0.0187,  0.0446, -0.0213]],

         [[-0.0201, -0.0398, -0.0265],
          [ 0.0330,  0.0506, -0.0167],
          [ 0.0326,  0.0341,  0.0330]],

         [[-0.0237,  0.0878,  0.0303],
          [-0.0761, -0.0121, -0.0455],
          [-0.0018, -0.0329,  0.0116]]],


        [[[ 0.0582,  0.0621, -0.0847],
          [-0.0490,  0.0590,  0.0185],
          [ 0.0322, -0.0213, -0.0094]],

         [[ 0.0568, -0.0143, -0.0303],
          [-0.0029, -0.0355,  0.0150],
          [ 0.0158,  0.0941,  0.0587]],

         [[-0.0028,  0.0268,  0.0131],
          [-0.0040,  0.0373, -0.0804],
          [-0.0516, -0.0402, -0.0325]],

         ...,

         [[ 0.0034, -0.0269, -0.1009],
          [ 0.0065,  0.0697,  0.1083],
          [ 0.0607, -0.0816,  0.0065]],

         [[ 0.0052, -0.0425,  0.0849],
          [-0.0341,  0.0136, -0.0294],
          [ 0.0089,  0.0345,  0.0129]],

         [[ 0.0812, -0.0039,  0.0516],
          [ 0.0144, -0.0066, -0.0191],
          [ 0.0099,  0.0764, -0.0062]]],


        [[[ 0.0934, -0.0193, -0.0224],
          [ 0.0189, -0.0158,  0.0068],
          [ 0.0073,  0.0104,  0.0516]],

         [[ 0.0068, -0.0531,  0.0074],
          [ 0.0076, -0.0605, -0.0168],
          [ 0.0334,  0.0260,  0.0172]],

         [[ 0.0164,  0.0315, -0.0133],
          [-0.0464,  0.0321, -0.0534],
          [-0.0101, -0.0280, -0.0230]],

         ...,

         [[ 0.0459, -0.0109, -0.0182],
          [ 0.0976,  0.0352,  0.0237],
          [ 0.0134, -0.0041,  0.0206]],

         [[ 0.0138, -0.0116,  0.0053],
          [-0.0492,  0.1189,  0.0210],
          [-0.0239,  0.0244, -0.0277]],

         [[ 0.0149,  0.0232, -0.0079],
          [-0.0672, -0.0721, -0.0657],
          [-0.0231,  0.0119,  0.0283]]],


        ...,


        [[[ 0.0766,  0.0245,  0.0171],
          [ 0.0125, -0.0105, -0.0302],
          [-0.0143,  0.0242, -0.0086]],

         [[-0.0347, -0.0256,  0.0301],
          [-0.0204,  0.0152,  0.0153],
          [-0.0165, -0.0156, -0.0946]],

         [[ 0.0195,  0.0802,  0.0398],
          [ 0.0103,  0.0139, -0.0496],
          [ 0.0473, -0.0084, -0.0347]],

         ...,

         [[ 0.0269, -0.0291, -0.0416],
          [ 0.0145, -0.0563, -0.0125],
          [-0.0146, -0.0902, -0.0128]],

         [[-0.0417,  0.0740, -0.0046],
          [ 0.0366,  0.0241, -0.0092],
          [-0.0440,  0.0093,  0.0968]],

         [[ 0.0248, -0.0238,  0.0040],
          [-0.0251, -0.0437,  0.0007],
          [-0.0133, -0.0348,  0.0216]]],


        [[[ 0.0425, -0.0493, -0.0362],
          [-0.1093, -0.0074,  0.0247],
          [ 0.0510, -0.0344,  0.0210]],

         [[ 0.0660,  0.0010, -0.0561],
          [ 0.0256, -0.0907,  0.1076],
          [ 0.0167,  0.0205,  0.0513]],

         [[-0.0323,  0.0650, -0.0363],
          [ 0.0166,  0.0014,  0.0200],
          [ 0.0380, -0.0086, -0.0473]],

         ...,

         [[-0.0847,  0.0608,  0.0023],
          [ 0.0552,  0.0006, -0.0516],
          [-0.0186,  0.0466, -0.0578]],

         [[ 0.0065, -0.0299, -0.0511],
          [ 0.0065,  0.0021,  0.0338],
          [-0.0635, -0.0034,  0.0398]],

         [[ 0.1179,  0.0261,  0.0181],
          [-0.0249,  0.0527, -0.0529],
          [-0.0485,  0.0185,  0.0149]]],


        [[[ 0.0011,  0.0115, -0.0627],
          [ 0.0541,  0.0879, -0.0330],
          [-0.0037, -0.0299,  0.0129]],

         [[-0.0241,  0.0604,  0.0150],
          [ 0.0483,  0.0226,  0.0365],
          [-0.0279, -0.0659, -0.0178]],

         [[-0.0611,  0.0136, -0.1093],
          [-0.0423,  0.0928,  0.0181],
          [ 0.0153, -0.0371,  0.0351]],

         ...,

         [[-0.0387, -0.0243,  0.0434],
          [ 0.0207,  0.0623, -0.0286],
          [-0.0142,  0.1216, -0.0022]],

         [[-0.0459,  0.0393, -0.0883],
          [ 0.0872,  0.0645, -0.0362],
          [ 0.0383,  0.0435, -0.0191]],

         [[ 0.0156,  0.0002, -0.0064],
          [ 0.0535, -0.0015,  0.0069],
          [ 0.0560,  0.0365,  0.0231]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.2311]],

         [[-0.2436]],

         [[ 0.2294]],

         ...,

         [[-0.0599]],

         [[-0.2075]],

         [[ 0.0357]]],


        [[[ 0.2507]],

         [[ 0.0488]],

         [[ 0.2037]],

         ...,

         [[-0.0670]],

         [[-0.0203]],

         [[ 0.0705]]],


        [[[-0.1430]],

         [[ 0.0541]],

         [[-0.0269]],

         ...,

         [[-0.0433]],

         [[ 0.0459]],

         [[ 0.0900]]],


        ...,


        [[[-0.0725]],

         [[-0.1334]],

         [[-0.0378]],

         ...,

         [[-0.0992]],

         [[-0.2314]],

         [[-0.0210]]],


        [[[-0.0481]],

         [[-0.0376]],

         [[ 0.1325]],

         ...,

         [[ 0.0658]],

         [[ 0.3109]],

         [[ 0.1061]]],


        [[[-0.0087]],

         [[-0.2024]],

         [[-0.0178]],

         ...,

         [[-0.1425]],

         [[ 0.1022]],

         [[-0.0027]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0479,  0.0572, -0.0051],
          [ 0.0486,  0.0009,  0.0603],
          [-0.0325,  0.0487, -0.0570]],

         [[-0.0555, -0.0363, -0.0808],
          [-0.0596,  0.0271,  0.0044],
          [-0.0170, -0.0017,  0.0195]],

         [[-0.0084, -0.0327,  0.0805],
          [-0.0102, -0.0578,  0.0466],
          [ 0.0551,  0.0333,  0.0737]],

         ...,

         [[ 0.0159, -0.0654,  0.0252],
          [-0.0804, -0.0209, -0.0010],
          [ 0.0868, -0.0177, -0.0548]],

         [[-0.0427, -0.0171, -0.0139],
          [-0.0475, -0.0347, -0.0452],
          [-0.0220,  0.0502, -0.0840]],

         [[-0.0189,  0.0417,  0.0822],
          [-0.0218, -0.0010, -0.0029],
          [ 0.0129,  0.0069, -0.0163]]],


        [[[ 0.0343, -0.1030,  0.0029],
          [-0.0688,  0.0706,  0.0532],
          [ 0.0049, -0.0026,  0.0254]],

         [[ 0.0390,  0.0186,  0.0234],
          [-0.0568, -0.0148, -0.0246],
          [-0.0086,  0.0403,  0.0243]],

         [[-0.0604, -0.0028, -0.0107],
          [ 0.0389, -0.0130,  0.0480],
          [-0.0384,  0.0368, -0.0077]],

         ...,

         [[ 0.0279, -0.0410,  0.0874],
          [ 0.0278,  0.0523, -0.0889],
          [-0.0095,  0.0476,  0.0763]],

         [[-0.0052, -0.0351,  0.0137],
          [ 0.0280,  0.0221,  0.0063],
          [-0.0335,  0.0223, -0.0430]],

         [[-0.0145,  0.0075,  0.0184],
          [-0.0016, -0.0105,  0.0833],
          [ 0.0098, -0.0662, -0.0121]]],


        [[[ 0.0203,  0.0192,  0.0560],
          [ 0.1137, -0.0494, -0.0029],
          [-0.0060, -0.0192, -0.0452]],

         [[ 0.0215, -0.0374, -0.0685],
          [ 0.0201, -0.0495,  0.0199],
          [-0.0319,  0.0589,  0.0345]],

         [[ 0.0279,  0.0153,  0.0302],
          [-0.0061,  0.0697,  0.0334],
          [-0.0509,  0.0209, -0.0009]],

         ...,

         [[ 0.0021, -0.0337, -0.0178],
          [-0.0143,  0.0104,  0.0144],
          [-0.0330, -0.0221, -0.0400]],

         [[ 0.0291, -0.0321, -0.0445],
          [-0.0317,  0.0284, -0.0259],
          [-0.0800,  0.0209,  0.0175]],

         [[-0.0235, -0.0600, -0.0121],
          [-0.0117,  0.0400, -0.0174],
          [ 0.0067, -0.0358,  0.0031]]],


        ...,


        [[[ 0.0799, -0.0354, -0.0419],
          [-0.0863, -0.0395,  0.0137],
          [ 0.0130, -0.0536,  0.0313]],

         [[-0.0389,  0.0310, -0.0003],
          [ 0.0013,  0.0605, -0.0345],
          [-0.0030, -0.0166,  0.0006]],

         [[ 0.0516, -0.0465, -0.0478],
          [ 0.0282, -0.0484, -0.0042],
          [-0.0944, -0.0013,  0.0061]],

         ...,

         [[ 0.0689, -0.0545, -0.0211],
          [-0.0317, -0.0496, -0.0253],
          [-0.0569, -0.0385, -0.0321]],

         [[-0.0230,  0.0170, -0.0453],
          [-0.0390,  0.0173, -0.0096],
          [-0.0309, -0.0060, -0.0314]],

         [[ 0.0004, -0.0174, -0.0232],
          [ 0.0472,  0.0495, -0.0326],
          [-0.0455, -0.0254, -0.0078]]],


        [[[-0.0049,  0.0101,  0.0448],
          [-0.0161, -0.0572, -0.0055],
          [ 0.0649,  0.0201, -0.0056]],

         [[ 0.0204, -0.0351,  0.0481],
          [ 0.0089,  0.0302, -0.0262],
          [-0.0161,  0.0534,  0.0639]],

         [[-0.0076,  0.0409, -0.0280],
          [-0.0493,  0.0243, -0.0635],
          [ 0.0337,  0.0334, -0.0027]],

         ...,

         [[-0.0149, -0.0333, -0.0506],
          [ 0.1049, -0.0234, -0.0218],
          [-0.0030, -0.0709,  0.0014]],

         [[ 0.1101, -0.0839, -0.0364],
          [ 0.0446,  0.0411,  0.0599],
          [-0.0167, -0.0178, -0.0910]],

         [[-0.0075, -0.0369, -0.0221],
          [ 0.0343,  0.0361,  0.0292],
          [-0.0028, -0.0118, -0.0249]]],


        [[[ 0.0178,  0.0010, -0.0873],
          [ 0.0009, -0.0529, -0.0184],
          [-0.0533,  0.0394, -0.0222]],

         [[ 0.0115,  0.0267, -0.0290],
          [ 0.0337,  0.0056,  0.0258],
          [-0.0120, -0.0007, -0.0228]],

         [[ 0.0171,  0.0577, -0.0541],
          [ 0.0316, -0.0104, -0.0117],
          [-0.0365, -0.0137,  0.0959]],

         ...,

         [[ 0.0311,  0.0283,  0.0277],
          [ 0.0335, -0.0177,  0.0466],
          [ 0.0292, -0.0515, -0.0733]],

         [[ 0.0303,  0.0149,  0.0518],
          [ 0.0718,  0.0347, -0.0407],
          [ 0.0168,  0.0311,  0.0447]],

         [[ 0.0108,  0.0261, -0.0324],
          [-0.0190, -0.0002, -0.0514],
          [-0.0247, -0.0640, -0.0347]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-8.8256e-02, -3.3615e-02, -5.1078e-02],
          [ 2.9649e-02,  3.4442e-03,  3.8021e-02],
          [-1.2870e-03, -2.8903e-02,  5.7837e-02]],

         [[-9.6274e-02, -1.6163e-01,  5.8840e-02],
          [-6.7842e-02,  4.1568e-02,  3.6028e-02],
          [ 4.4259e-02,  1.9393e-02,  2.3464e-02]],

         [[ 6.1414e-02,  4.8988e-02,  7.2558e-02],
          [-2.7548e-02, -7.6403e-02, -1.3389e-02],
          [-1.7830e-02, -8.1185e-02, -5.8207e-02]],

         ...,

         [[-1.3708e-02,  2.8536e-02, -4.0517e-02],
          [-3.1079e-02,  7.9894e-02,  1.4172e-02],
          [ 5.1508e-03,  4.9105e-02, -1.6578e-02]],

         [[-1.9244e-02, -3.0140e-02, -1.3846e-02],
          [-3.5732e-02, -5.0661e-02, -2.3210e-02],
          [-3.3935e-02,  8.2031e-03,  6.9750e-02]],

         [[ 3.1491e-02, -1.0801e-02, -2.6160e-02],
          [-3.4228e-02, -8.4778e-03,  2.2041e-02],
          [ 1.2179e-02,  5.9714e-05,  7.6287e-03]]],


        [[[ 1.5840e-02, -9.7312e-03, -2.6577e-02],
          [-1.3287e-02,  5.7314e-03,  5.5265e-02],
          [-6.2007e-03, -1.1747e-02,  6.1501e-02]],

         [[-2.6665e-02, -1.9406e-02, -1.7319e-02],
          [-1.2354e-02,  1.9586e-02, -1.9831e-02],
          [-4.8726e-02,  8.1732e-03, -1.7610e-03]],

         [[ 1.3152e-02, -1.9026e-02, -3.0011e-02],
          [-6.7546e-03, -2.3795e-02,  3.8609e-02],
          [-7.9854e-02, -1.5405e-02, -2.9764e-02]],

         ...,

         [[ 1.3293e-02,  7.1848e-02,  4.9549e-02],
          [-1.4685e-02,  2.6993e-02,  2.8082e-02],
          [-6.7752e-02,  9.6813e-03, -5.6660e-02]],

         [[ 7.1714e-03,  2.4001e-02,  1.4101e-02],
          [-3.4290e-02,  4.8647e-03, -5.1494e-02],
          [ 1.0584e-02,  3.9400e-02,  5.5114e-02]],

         [[ 1.5682e-03, -3.3748e-02, -5.2702e-02],
          [-3.9496e-02, -6.1247e-02, -5.3070e-02],
          [ 6.8003e-02, -1.0362e-01, -2.8162e-02]]],


        [[[-5.1273e-03,  5.7931e-02,  1.4667e-02],
          [ 3.6769e-03, -6.5916e-02, -6.4319e-02],
          [ 2.9107e-02,  4.9295e-02, -7.2717e-02]],

         [[ 2.0446e-02, -2.1149e-02,  4.3507e-02],
          [-7.7922e-02,  3.9639e-02,  9.8402e-02],
          [ 1.4537e-02,  6.6871e-02, -8.3697e-03]],

         [[-6.6539e-03,  1.4800e-02, -1.0801e-01],
          [ 1.3314e-03,  1.9201e-02, -3.5339e-02],
          [ 4.5011e-02, -1.0467e-01, -5.2637e-02]],

         ...,

         [[-1.0291e-02,  1.0935e-02, -8.1582e-03],
          [-5.8356e-02,  3.0702e-02, -5.9039e-02],
          [-2.7367e-02,  1.4759e-02, -1.9260e-02]],

         [[ 1.5520e-02, -1.2256e-02,  2.8238e-02],
          [ 2.4764e-02,  2.8133e-02, -1.6848e-02],
          [-1.3455e-02, -1.7118e-03, -8.4580e-02]],

         [[ 1.8369e-02,  3.0520e-02,  6.7298e-03],
          [-1.3297e-01,  6.7076e-02, -4.2731e-02],
          [-1.4323e-02, -1.4953e-02, -1.3270e-02]]],


        ...,


        [[[-2.2674e-02,  1.9059e-02, -5.5941e-02],
          [ 5.2612e-02,  8.8858e-02, -5.4071e-03],
          [-3.6468e-03,  5.8496e-04, -3.3207e-03]],

         [[ 4.6763e-02, -2.0729e-02,  3.3770e-02],
          [ 7.8696e-02, -5.3291e-02, -5.0063e-02],
          [-2.0132e-02,  1.5852e-02,  5.5892e-03]],

         [[-6.4435e-02,  7.8627e-02,  6.2734e-02],
          [ 1.0185e-02,  2.0604e-02,  6.4273e-02],
          [-2.4704e-02,  1.1053e-01,  3.5256e-02]],

         ...,

         [[ 7.8728e-02, -5.4103e-02, -3.9534e-02],
          [-3.0838e-02, -8.3851e-03, -2.3929e-02],
          [ 2.3198e-02,  1.2210e-02,  1.1616e-02]],

         [[-4.1898e-03,  9.5783e-02,  6.9521e-03],
          [-3.6320e-02,  5.1299e-02,  2.0835e-02],
          [ 2.8412e-02, -5.9517e-02, -1.7737e-02]],

         [[ 5.7277e-02,  5.1016e-02,  3.2947e-03],
          [-3.4013e-02, -2.2010e-02, -4.6431e-02],
          [-1.0471e-02, -1.0348e-02, -4.6955e-02]]],


        [[[-5.3591e-03, -2.2121e-03,  5.3421e-02],
          [-6.2514e-02, -5.2637e-02, -1.0689e-01],
          [-1.4352e-02,  2.2412e-02,  3.7143e-02]],

         [[ 3.1816e-02,  2.5811e-02,  4.0668e-02],
          [ 2.9237e-02, -2.9805e-02, -7.2229e-02],
          [-5.3205e-02, -8.1259e-03,  5.5729e-03]],

         [[-3.6263e-02, -5.1214e-02, -6.4298e-02],
          [ 7.3365e-02, -2.5774e-02, -4.9880e-02],
          [ 6.1931e-03, -5.6142e-02, -1.9816e-02]],

         ...,

         [[ 5.8728e-03, -3.5435e-03, -5.2817e-02],
          [-3.7318e-02, -4.2557e-02, -8.6488e-02],
          [ 8.4246e-03, -1.9889e-02,  7.4336e-02]],

         [[-1.4978e-03,  1.8973e-03, -1.2097e-02],
          [ 4.0078e-02,  1.0968e-03,  3.7517e-02],
          [-1.8636e-02, -3.8693e-02, -3.6363e-02]],

         [[ 2.2044e-02, -2.7239e-02,  4.5137e-02],
          [ 7.3700e-03,  4.1444e-02, -5.5770e-02],
          [-3.1994e-02,  2.5822e-02,  5.8516e-02]]],


        [[[ 1.5642e-02,  7.2092e-02, -2.8279e-02],
          [-5.3993e-02, -2.7392e-02,  3.5155e-02],
          [ 2.6992e-02,  6.8276e-02,  3.6529e-02]],

         [[-9.9956e-03, -3.7518e-02, -1.4407e-02],
          [-2.6675e-02,  3.1630e-02, -2.3993e-02],
          [-2.0472e-02,  1.9038e-02, -3.2235e-03]],

         [[-2.8286e-02, -5.7096e-02, -3.3844e-02],
          [-1.7917e-02,  6.7369e-04,  6.8198e-02],
          [-2.3775e-02, -2.3512e-02, -3.5210e-02]],

         ...,

         [[ 3.6875e-02, -1.3064e-02, -4.1623e-02],
          [ 5.9422e-02,  2.1051e-02,  2.1011e-02],
          [ 5.1332e-02, -2.4488e-02, -5.9458e-02]],

         [[-1.5094e-02,  5.9121e-03,  2.4317e-02],
          [-2.9771e-02,  6.4822e-02, -2.3550e-02],
          [ 5.7592e-03,  6.3965e-03,  1.3837e-02]],

         [[ 3.3526e-02, -4.6795e-02,  4.9201e-02],
          [ 7.3115e-02, -5.1520e-03,  3.6350e-02],
          [ 2.4769e-02, -2.9234e-02,  3.1294e-03]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 0.0595]],

         [[-0.0389]],

         [[-0.1332]],

         ...,

         [[ 0.1978]],

         [[ 0.1296]],

         [[ 0.1813]]],


        [[[-0.1934]],

         [[-0.0078]],

         [[ 0.0207]],

         ...,

         [[-0.0403]],

         [[ 0.0276]],

         [[-0.1188]]],


        [[[ 0.1802]],

         [[ 0.0223]],

         [[ 0.1535]],

         ...,

         [[ 0.0014]],

         [[-0.0393]],

         [[-0.1058]]],


        ...,


        [[[-0.0124]],

         [[ 0.0799]],

         [[ 0.0194]],

         ...,

         [[ 0.0144]],

         [[ 0.0652]],

         [[-0.0288]]],


        [[[-0.0388]],

         [[ 0.1601]],

         [[ 0.1076]],

         ...,

         [[-0.0276]],

         [[ 0.0546]],

         [[ 0.0863]]],


        [[[-0.0114]],

         [[-0.0296]],

         [[ 0.0884]],

         ...,

         [[ 0.0550]],

         [[-0.0690]],

         [[ 0.1182]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[-0.0179,  0.0034,  0.0484],
          [-0.0731, -0.0022, -0.0355],
          [ 0.0117,  0.0060,  0.0150]],

         [[ 0.0400,  0.0365,  0.0350],
          [ 0.0042,  0.0086,  0.0159],
          [ 0.0214, -0.0664, -0.0183]],

         [[-0.0877, -0.0086, -0.0737],
          [-0.0068,  0.0291,  0.0399],
          [ 0.0581,  0.0075,  0.0007]],

         ...,

         [[-0.0041,  0.0059, -0.0415],
          [-0.0010, -0.0164,  0.0247],
          [-0.0040,  0.0347, -0.0134]],

         [[-0.0697, -0.0963,  0.0295],
          [-0.0025,  0.0073,  0.0027],
          [ 0.0158,  0.0110, -0.0516]],

         [[-0.0231, -0.0070,  0.0246],
          [-0.0656, -0.0215,  0.0258],
          [-0.0095,  0.0032,  0.0829]]],


        [[[ 0.0055, -0.0618,  0.0543],
          [-0.0216,  0.0164, -0.0066],
          [-0.0126,  0.0400, -0.0304]],

         [[ 0.0539, -0.0268,  0.0629],
          [ 0.0468, -0.0398, -0.0313],
          [-0.0096,  0.0562,  0.0050]],

         [[ 0.0343, -0.0219, -0.0099],
          [ 0.0361, -0.0352,  0.0264],
          [ 0.0119,  0.0268, -0.0238]],

         ...,

         [[-0.0063, -0.0013,  0.0460],
          [ 0.0124, -0.0137,  0.0025],
          [ 0.0316, -0.0241, -0.0252]],

         [[-0.0006, -0.0259,  0.0113],
          [ 0.0006,  0.0134,  0.0009],
          [ 0.0189,  0.0040, -0.0046]],

         [[ 0.0132,  0.0169, -0.0101],
          [ 0.0162, -0.0202,  0.0058],
          [ 0.0260, -0.0217,  0.0252]]],


        [[[-0.0110,  0.0398,  0.0210],
          [ 0.0678,  0.0165, -0.0182],
          [ 0.0267, -0.0357, -0.0038]],

         [[ 0.0043,  0.0198, -0.0033],
          [ 0.0081,  0.0312,  0.0190],
          [-0.0107, -0.0270,  0.0488]],

         [[-0.0176,  0.0080,  0.0127],
          [-0.0372, -0.0022,  0.0049],
          [ 0.0284,  0.0189,  0.0644]],

         ...,

         [[-0.0020, -0.0385, -0.0531],
          [-0.0485,  0.0030,  0.0705],
          [ 0.0184, -0.0170,  0.0246]],

         [[-0.0070,  0.0176,  0.0113],
          [ 0.0163, -0.0031,  0.0160],
          [-0.0473, -0.0085, -0.0290]],

         [[-0.0051, -0.0214,  0.0286],
          [-0.1078, -0.0823, -0.0161],
          [ 0.0179, -0.0004,  0.0102]]],


        ...,


        [[[ 0.0165,  0.0113,  0.0292],
          [-0.0197,  0.0154, -0.0267],
          [ 0.0610, -0.0152, -0.0033]],

         [[-0.0050, -0.0382, -0.0088],
          [ 0.0181, -0.0123, -0.0274],
          [ 0.0022, -0.0089, -0.0192]],

         [[ 0.0390, -0.0421,  0.0192],
          [ 0.0196,  0.0020,  0.0254],
          [ 0.0165,  0.0332, -0.0101]],

         ...,

         [[-0.0102, -0.0130, -0.0502],
          [-0.0087,  0.0288,  0.0257],
          [ 0.0601,  0.0420,  0.0174]],

         [[ 0.0195,  0.0270, -0.0217],
          [ 0.0025, -0.0141,  0.0177],
          [ 0.0565, -0.0657,  0.0064]],

         [[ 0.0242,  0.0135, -0.0124],
          [-0.0445, -0.0251, -0.0031],
          [-0.0285, -0.0013,  0.0514]]],


        [[[-0.0290,  0.0427,  0.0017],
          [ 0.0149,  0.0104,  0.0582],
          [-0.0170, -0.0073, -0.0595]],

         [[ 0.0203,  0.0173,  0.0302],
          [ 0.0262,  0.0033,  0.0141],
          [-0.0072,  0.0004, -0.0079]],

         [[ 0.0283, -0.0170, -0.0297],
          [ 0.0147,  0.0055, -0.0494],
          [ 0.0870, -0.0116,  0.0114]],

         ...,

         [[-0.0214, -0.0208,  0.0132],
          [-0.0406, -0.0242,  0.0177],
          [-0.0567,  0.0254,  0.0076]],

         [[ 0.0227,  0.0650,  0.0092],
          [-0.0191,  0.0058,  0.0055],
          [-0.0487,  0.0387,  0.0128]],

         [[ 0.0358, -0.0011, -0.0192],
          [-0.0121, -0.0168, -0.0413],
          [ 0.0242, -0.0431,  0.0563]]],


        [[[ 0.0081, -0.0504,  0.0214],
          [-0.0113, -0.0140,  0.0479],
          [-0.0133,  0.0249, -0.0124]],

         [[-0.0166,  0.0257, -0.0236],
          [-0.0306, -0.0988, -0.0476],
          [-0.0722, -0.0383, -0.0734]],

         [[-0.0152,  0.0042,  0.0079],
          [-0.0153, -0.0110, -0.0375],
          [-0.0116, -0.0026, -0.0559]],

         ...,

         [[ 0.0014,  0.0128, -0.0413],
          [-0.0354, -0.0233,  0.0221],
          [-0.0293, -0.0182, -0.0574]],

         [[ 0.0667, -0.1206,  0.0312],
          [ 0.0354, -0.0044, -0.0430],
          [-0.0195, -0.0262,  0.0239]],

         [[ 0.0198, -0.0146,  0.0089],
          [ 0.0191,  0.0427,  0.0552],
          [ 0.0136,  0.0334,  0.0390]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 2.4466e-02, -2.1359e-02, -9.2603e-03,  ...,  1.3728e-02,
           -9.1359e-05,  2.2837e-02],
          [-2.7447e-02, -7.4797e-03, -2.0455e-02,  ..., -2.6177e-02,
            6.0471e-03,  3.1656e-02],
          [ 5.4152e-03,  3.0779e-02,  1.1211e-02,  ..., -1.7279e-02,
            1.4514e-03,  2.0797e-02],
          ...,
          [-1.5058e-02, -9.2837e-03, -2.0498e-02,  ..., -3.9347e-03,
           -9.4443e-03,  1.7525e-02],
          [ 2.0044e-02, -1.2375e-02, -1.0152e-02,  ..., -2.3454e-02,
           -1.0098e-02, -6.5408e-03],
          [ 2.1909e-02,  2.4712e-02,  1.5666e-02,  ..., -1.9749e-02,
           -2.6791e-02, -5.5477e-02]],

         [[ 2.7602e-02, -6.9566e-03,  2.1196e-02,  ...,  3.6202e-03,
            7.0209e-03,  8.3073e-03],
          [-5.0727e-03,  8.0449e-04, -7.3313e-04,  ...,  2.7885e-02,
            1.5212e-02,  1.3882e-02],
          [ 8.8954e-03, -2.0909e-02, -4.9839e-03,  ..., -7.4614e-03,
           -1.0462e-03,  1.7829e-03],
          ...,
          [ 1.1250e-02, -3.4599e-03, -6.7073e-03,  ...,  1.9323e-02,
           -2.3269e-03, -2.1662e-03],
          [ 8.4505e-03, -1.8801e-02, -1.1512e-02,  ..., -8.0704e-03,
            2.3479e-02, -9.2077e-03],
          [-1.1956e-02,  9.3512e-03,  9.0786e-03,  ..., -2.2222e-02,
            6.7262e-03, -2.7583e-02]]],


        [[[ 1.4375e-02,  5.4935e-03,  3.9969e-02,  ...,  1.0952e-02,
            1.3668e-04, -1.5849e-02],
          [ 4.0253e-03,  6.9296e-03, -1.9925e-02,  ..., -1.9064e-02,
            4.4647e-03,  1.0254e-03],
          [ 1.3930e-02, -1.3763e-02,  2.3415e-02,  ..., -1.2470e-02,
           -6.0574e-03,  6.7059e-03],
          ...,
          [ 3.6997e-03,  1.4645e-02,  3.0278e-03,  ..., -2.7443e-03,
           -2.6915e-02, -1.2570e-02],
          [ 6.2507e-03, -2.4739e-02,  3.3009e-02,  ...,  8.9040e-03,
           -1.2845e-02, -2.1387e-02],
          [-1.3462e-02,  2.1702e-02, -2.4961e-03,  ...,  2.2928e-02,
           -1.4160e-02, -3.0041e-03]],

         [[-5.7769e-03,  2.2432e-02,  2.5488e-02,  ...,  2.9657e-02,
            1.2394e-02, -1.8295e-02],
          [-9.8283e-03, -8.4475e-03, -5.7436e-03,  ..., -3.0565e-03,
            1.0896e-03,  1.0126e-02],
          [ 6.1480e-03,  2.4424e-02, -8.3320e-03,  ...,  4.7293e-03,
            6.9409e-03, -2.6205e-02],
          ...,
          [ 3.1499e-02,  9.7391e-03,  9.2980e-03,  ...,  2.3384e-03,
           -1.9012e-02,  1.4385e-02],
          [-3.3838e-03,  7.1546e-03,  7.7484e-03,  ...,  3.6029e-02,
            3.5502e-03, -8.1164e-03],
          [ 1.5187e-02, -1.7141e-02,  2.1296e-02,  ..., -3.1701e-02,
           -1.9240e-02, -3.3569e-02]]],


        [[[-9.4355e-03,  1.3622e-02,  3.5123e-03,  ..., -6.1467e-03,
            1.0969e-02,  9.3180e-03],
          [-5.1844e-03, -1.0512e-02,  6.1464e-03,  ...,  3.0481e-02,
           -5.5224e-03,  1.0596e-02],
          [ 1.2278e-03, -1.0448e-02,  3.4704e-02,  ...,  2.1218e-02,
           -8.4209e-03,  8.9091e-03],
          ...,
          [-6.0035e-03, -2.6444e-02, -1.5021e-02,  ..., -2.7361e-03,
           -1.8043e-03,  8.2272e-03],
          [ 9.0795e-03, -1.1097e-02, -3.6808e-02,  ...,  2.7609e-02,
            6.5378e-03, -2.2760e-02],
          [-6.2695e-03,  1.0779e-02,  4.3565e-03,  ..., -1.6664e-02,
            6.2989e-03,  3.5051e-02]],

         [[-9.7500e-03, -3.3971e-04, -1.8176e-02,  ...,  1.7159e-02,
           -1.1681e-02,  5.3920e-04],
          [-2.0409e-02, -1.4332e-02, -1.0540e-02,  ...,  1.6408e-02,
           -2.4824e-02,  1.4879e-02],
          [-6.6443e-03,  4.2827e-02, -1.3906e-02,  ..., -4.2481e-02,
           -6.9143e-03,  2.0452e-02],
          ...,
          [-7.2072e-03, -7.5465e-03,  4.9737e-03,  ...,  1.2217e-02,
           -4.9974e-03, -3.0081e-03],
          [-1.6046e-02,  1.2774e-02, -4.6461e-03,  ..., -4.2978e-02,
           -1.8885e-02, -9.5626e-03],
          [-7.9914e-03, -4.2661e-03,  9.0419e-03,  ..., -1.9146e-02,
            3.6893e-03,  7.1897e-04]]],


        ...,


        [[[ 7.5567e-03, -5.2808e-04,  4.5315e-04,  ...,  6.2514e-03,
            2.5819e-02, -3.9462e-02],
          [ 3.0600e-02,  4.0131e-03,  1.6476e-02,  ...,  4.2715e-02,
            6.3766e-03,  1.1728e-02],
          [-1.1814e-02,  1.2375e-02,  1.2816e-02,  ..., -1.1566e-02,
           -7.4591e-03,  3.4246e-02],
          ...,
          [ 1.9849e-02,  4.0322e-03, -6.2671e-04,  ...,  1.7573e-02,
           -5.3777e-04, -1.6578e-02],
          [ 7.4810e-03, -2.8896e-02, -2.7287e-03,  ..., -3.2101e-02,
            3.6050e-03, -6.3989e-03],
          [ 2.3776e-02, -1.1434e-02, -7.5280e-03,  ...,  2.2439e-02,
            1.3152e-02,  2.3062e-02]],

         [[ 6.5733e-05,  5.4027e-03, -3.3302e-02,  ...,  4.2151e-03,
            1.7052e-02, -1.0740e-02],
          [ 6.5167e-03,  5.5140e-03,  2.1176e-02,  ..., -2.1262e-02,
           -2.0904e-02,  2.1206e-02],
          [-5.3979e-04,  1.8595e-02, -2.6780e-02,  ...,  1.0270e-03,
           -1.7867e-02, -4.0055e-03],
          ...,
          [ 9.1936e-03, -1.5771e-02,  1.2354e-02,  ...,  2.8437e-02,
            1.2391e-03,  1.5519e-03],
          [-2.1068e-02, -5.8386e-03,  1.5807e-03,  ..., -1.7367e-02,
            1.5771e-02,  1.0133e-02],
          [-3.4776e-03,  1.3852e-02, -1.9994e-02,  ..., -1.1698e-02,
           -2.3889e-02, -6.9979e-03]]],


        [[[-2.6991e-02, -2.3167e-04,  4.9737e-03,  ...,  3.1174e-03,
            1.6287e-02,  2.1736e-03],
          [ 9.1163e-03, -1.7060e-02, -1.7817e-02,  ..., -7.1651e-03,
           -1.7244e-02,  3.6821e-02],
          [ 4.1764e-03,  2.0119e-02, -1.1975e-02,  ...,  5.7624e-03,
           -7.6048e-03,  1.6995e-02],
          ...,
          [-9.4716e-03,  2.1897e-02, -2.0945e-02,  ...,  8.6521e-03,
            3.7186e-03,  4.6302e-02],
          [ 1.7476e-02,  1.3722e-02,  2.6782e-02,  ...,  1.1823e-03,
           -6.9897e-04,  2.7331e-02],
          [-2.0646e-03, -3.7554e-02, -1.6828e-02,  ...,  1.0103e-02,
           -1.5177e-02, -8.3934e-04]],

         [[-5.9000e-04,  3.2222e-02,  4.2638e-04,  ...,  2.2703e-02,
            2.3620e-02,  1.6812e-02],
          [-1.6982e-02,  2.2054e-02,  9.8549e-03,  ..., -1.4984e-02,
           -6.0992e-03,  1.3584e-02],
          [ 4.7038e-02, -1.3592e-02,  1.0264e-02,  ...,  1.1323e-02,
           -2.1288e-02,  6.9292e-03],
          ...,
          [ 9.2529e-03,  1.0329e-03, -1.0354e-03,  ..., -3.7395e-02,
            3.4657e-03, -1.6139e-02],
          [-1.1417e-02, -1.8261e-02,  1.9824e-02,  ...,  2.9278e-02,
           -1.7950e-02,  1.9540e-02],
          [ 1.7666e-02, -1.0847e-02, -4.1832e-02,  ...,  3.7567e-03,
           -1.5740e-02,  1.9014e-03]]],


        [[[-4.8263e-02, -3.7895e-03, -2.3051e-02,  ..., -1.0426e-02,
           -9.5208e-03, -1.7971e-02],
          [ 4.7309e-03,  7.9530e-03, -1.0410e-02,  ..., -2.5134e-02,
           -2.3122e-02,  1.7159e-03],
          [ 1.3231e-02, -1.7955e-02,  8.3497e-03,  ...,  4.0926e-04,
           -2.6506e-02, -1.1001e-02],
          ...,
          [-2.2183e-02, -1.3756e-02, -2.6229e-04,  ...,  1.4528e-02,
           -3.3191e-03, -2.9335e-02],
          [ 1.0041e-02, -9.2089e-03, -9.5794e-03,  ..., -1.7839e-02,
            1.5366e-02,  3.1402e-02],
          [ 1.5872e-02,  2.6879e-02,  1.9639e-02,  ...,  4.2662e-03,
           -9.8890e-03,  7.4177e-03]],

         [[-4.2053e-02, -1.0280e-02, -1.2410e-02,  ..., -1.3629e-02,
           -2.5148e-02,  3.9508e-03],
          [ 6.2243e-03, -2.9769e-02,  2.5453e-03,  ..., -2.2093e-02,
            1.8320e-02, -1.0029e-02],
          [ 1.0165e-02,  3.2598e-02, -3.3147e-03,  ..., -3.6376e-02,
            5.9927e-03,  8.1300e-03],
          ...,
          [-1.6367e-02, -8.5502e-03,  8.5061e-03,  ...,  9.7918e-03,
            4.2289e-02, -1.0992e-03],
          [-1.8749e-02,  1.5057e-02,  2.1234e-02,  ..., -5.1172e-03,
           -3.8654e-03, -4.4378e-03],
          [ 2.7082e-02, -8.1744e-03,  2.1778e-05,  ..., -3.2307e-02,
            1.7446e-02,  1.8283e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[-6.8471e-02, -2.2552e-03,  6.3579e-05],
          [-1.1795e-01,  9.0859e-03,  7.5332e-03],
          [-4.1167e-02, -1.2237e-01, -1.3468e-02]],

         [[ 2.0707e-02, -5.1164e-02, -2.5260e-02],
          [ 6.2693e-02,  6.1066e-03, -1.1889e-01],
          [-1.8179e-02,  3.6577e-02, -1.8582e-03]],

         [[ 4.5032e-02, -1.0856e-02, -3.8710e-02],
          [ 3.5679e-02, -1.1383e-02, -5.7347e-02],
          [-1.3448e-02,  7.3769e-02, -1.0042e-01]],

         ...,

         [[-1.5660e-02, -7.7515e-02,  2.5667e-02],
          [-2.2374e-02,  3.6184e-02, -6.7216e-02],
          [-1.0567e-01,  1.0474e-01,  4.4822e-02]],

         [[-8.0624e-02, -1.7632e-02, -6.4804e-02],
          [-3.9913e-02, -3.7953e-02,  1.0846e-01],
          [-1.3952e-02, -1.0337e-01,  2.5261e-02]],

         [[-5.4482e-02, -1.6396e-02, -5.2296e-03],
          [ 5.5178e-02,  3.3207e-02,  5.7036e-04],
          [ 5.3516e-02,  1.8449e-02, -2.0098e-02]]],


        [[[-2.4521e-02,  1.2266e-02,  1.0916e-01],
          [ 7.3797e-02, -9.7684e-02,  9.0086e-03],
          [ 5.1176e-03,  2.1394e-02,  7.8750e-02]],

         [[-4.8743e-02, -4.5747e-02, -5.3767e-03],
          [-2.7656e-02, -1.4637e-02, -1.3942e-01],
          [ 8.4917e-02, -7.0873e-03,  6.1889e-02]],

         [[-8.4127e-02, -1.6214e-02, -5.0206e-03],
          [ 4.0363e-02, -3.8184e-02, -2.3554e-02],
          [-6.6768e-02, -6.5975e-02,  2.2899e-02]],

         ...,

         [[ 2.8466e-02,  1.5364e-01, -1.2211e-03],
          [ 1.0078e-01, -1.5871e-01, -6.8080e-03],
          [-6.9495e-02,  2.1817e-02, -3.7145e-02]],

         [[ 8.2129e-02, -3.5035e-02,  1.5747e-02],
          [-9.2679e-02,  3.6809e-02,  8.2807e-03],
          [ 8.1778e-02, -3.3357e-02, -6.4923e-03]],

         [[ 5.8260e-02, -2.0943e-02, -1.2853e-01],
          [-5.0148e-02, -1.6384e-02,  7.5319e-02],
          [ 5.4319e-02,  5.9768e-02, -8.3452e-04]]],


        [[[-5.0845e-04, -1.3560e-02,  1.4196e-02],
          [ 2.2110e-02,  2.8771e-02, -2.6941e-02],
          [-6.7771e-02, -2.2587e-02,  1.0505e-01]],

         [[ 1.5717e-02, -4.6188e-02,  8.4849e-02],
          [-2.3285e-02,  3.4383e-02,  4.1450e-02],
          [-4.6116e-02,  4.6160e-03, -9.0217e-02]],

         [[-6.4646e-02,  1.3996e-01, -1.5596e-01],
          [-6.8466e-03,  2.1023e-02, -9.3336e-02],
          [ 8.3023e-03, -1.1884e-02,  1.5486e-02]],

         ...,

         [[ 6.2211e-02,  8.8466e-02,  1.4110e-01],
          [ 6.3805e-02, -3.1525e-02, -7.5948e-02],
          [-5.9121e-03, -4.5666e-02,  1.9392e-02]],

         [[-1.8614e-02,  8.6037e-03, -4.3178e-02],
          [-1.0458e-01, -7.6366e-02, -3.1754e-02],
          [ 1.1343e-02,  1.5417e-02, -6.3951e-02]],

         [[ 5.2895e-02, -5.5323e-02,  4.6587e-02],
          [ 8.6155e-02, -2.5218e-02,  7.4234e-02],
          [ 1.0038e-02, -1.0364e-02, -1.1926e-01]]],


        ...,


        [[[ 3.6510e-02, -1.4430e-01, -7.7294e-02],
          [ 1.3392e-02, -1.0898e-01, -1.4729e-02],
          [ 7.8433e-02, -2.7764e-03, -1.7472e-01]],

         [[-3.3118e-03,  8.9670e-02,  1.5039e-02],
          [-1.1653e-01, -7.2251e-03,  7.1606e-02],
          [-2.4135e-03, -1.0927e-02, -3.5770e-02]],

         [[-1.4905e-01, -4.6236e-02, -7.2405e-02],
          [-2.8894e-02, -2.4808e-02, -1.9354e-02],
          [ 4.3756e-02,  8.5077e-03, -9.0127e-03]],

         ...,

         [[ 9.7019e-03,  1.8721e-02,  1.2317e-02],
          [-1.1585e-03,  9.4415e-03,  6.1057e-02],
          [-6.9588e-03, -4.0313e-02,  5.5979e-02]],

         [[-2.4370e-02,  1.7476e-02,  2.4491e-02],
          [-4.4970e-02,  8.5372e-02, -3.6655e-02],
          [-5.9070e-02, -1.5915e-02, -1.3728e-03]],

         [[-1.0232e-02, -1.2745e-02,  4.7225e-02],
          [ 1.2550e-02,  4.4733e-02, -5.9493e-02],
          [-8.7714e-02,  3.0030e-02, -8.2407e-02]]],


        [[[-1.4503e-01, -1.6713e-02, -9.1047e-02],
          [-4.0229e-02,  4.9803e-02, -8.6563e-02],
          [-9.5056e-02, -4.3163e-02,  9.9636e-02]],

         [[ 5.6687e-02, -3.0737e-02,  1.0157e-01],
          [ 6.0732e-02,  1.2613e-02, -2.4019e-02],
          [-3.1969e-02,  1.8275e-03, -3.1817e-02]],

         [[-1.2772e-01, -2.2686e-02,  1.0403e-01],
          [ 2.4055e-02,  1.8213e-03, -1.2294e-01],
          [ 6.4875e-02, -1.5855e-02, -8.9862e-02]],

         ...,

         [[ 6.1260e-02, -5.6523e-02,  4.4070e-02],
          [-5.2927e-02, -1.2063e-02,  8.9107e-02],
          [-4.2775e-02,  9.1817e-02, -4.5120e-02]],

         [[-2.5071e-02,  1.2217e-02,  4.7035e-02],
          [-2.1928e-02, -6.7874e-02,  3.5045e-03],
          [-1.4386e-02,  6.3222e-02, -3.4357e-02]],

         [[-3.3270e-02, -7.1403e-02, -1.4226e-01],
          [ 1.9908e-02, -8.7899e-02, -1.1824e-02],
          [-1.6627e-02, -2.5260e-03, -2.3996e-02]]],


        [[[ 1.8882e-02, -5.9471e-02,  1.0127e-01],
          [-5.0809e-02,  3.9274e-02,  1.7456e-02],
          [ 2.6763e-02, -5.3636e-02,  4.6099e-02]],

         [[ 2.0472e-02, -8.4066e-02,  1.4356e-01],
          [ 2.8474e-02, -1.2921e-02,  4.0376e-02],
          [ 4.1244e-02, -5.0434e-02, -9.6801e-02]],

         [[ 2.8295e-02, -4.6233e-02,  9.4240e-02],
          [-5.6400e-02, -5.4837e-02, -4.3521e-02],
          [-1.1325e-02,  3.6659e-02, -8.2806e-02]],

         ...,

         [[ 1.8515e-02, -1.1499e-01, -2.7253e-02],
          [-1.0359e-02,  1.0790e-01, -3.8474e-02],
          [ 3.4464e-02,  1.3631e-03, -4.1206e-02]],

         [[-4.5258e-02,  5.8834e-02, -2.0394e-02],
          [ 1.1579e-03, -2.4425e-02,  4.1416e-02],
          [ 1.4886e-02, -1.7878e-02, -2.8216e-02]],

         [[-5.9838e-03, -3.0208e-02, -9.5369e-03],
          [ 4.7873e-02,  4.8892e-02,  2.0039e-02],
          [-6.3226e-02, -1.3413e-02, -8.1448e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[ 4.8352e-02, -4.1625e-02, -2.6763e-02],
          [ 2.6487e-02, -2.9545e-02,  6.4720e-02],
          [ 6.9857e-02, -5.1263e-02,  3.1876e-02]],

         [[-2.3075e-02,  3.7940e-02, -2.6357e-02],
          [ 3.2925e-03, -7.1580e-02,  7.1246e-03],
          [-2.1646e-03, -3.1657e-02,  2.0962e-02]],

         [[-4.7233e-02, -1.7918e-02, -4.1722e-03],
          [ 1.4856e-02, -4.4344e-02,  2.3860e-02],
          [ 4.2227e-02,  6.8086e-02,  3.2241e-02]],

         ...,

         [[ 4.0427e-03, -1.1006e-02, -4.4805e-02],
          [ 7.4407e-02, -5.4822e-02, -9.7367e-02],
          [ 2.5856e-02, -4.3459e-03, -2.8596e-02]],

         [[-4.1571e-02, -3.1357e-02,  3.8334e-02],
          [ 5.4507e-03, -3.0579e-02,  2.5822e-02],
          [ 8.8713e-02, -9.7681e-03,  7.7500e-02]],

         [[ 3.2072e-02,  2.8134e-02,  6.1433e-03],
          [ 4.5995e-02, -1.9150e-02, -3.2109e-02],
          [ 3.9189e-02,  6.7979e-02,  3.8402e-02]]],


        [[[-1.6183e-02,  2.6093e-02,  4.5982e-03],
          [ 4.1441e-04,  5.8953e-02, -1.7792e-02],
          [-3.6734e-02,  3.0907e-02,  2.2072e-02]],

         [[ 2.6644e-02,  1.6522e-02, -3.1276e-02],
          [ 1.1597e-02, -6.7506e-03,  5.6460e-02],
          [ 4.2632e-03, -7.8060e-02, -7.3012e-02]],

         [[-6.8855e-02, -6.5119e-03, -1.6629e-02],
          [-5.1486e-02,  9.8998e-02, -1.3817e-02],
          [-6.0582e-02,  1.5470e-02,  3.6598e-02]],

         ...,

         [[ 5.4359e-02, -2.8205e-02, -4.6804e-02],
          [-1.6303e-02, -3.1040e-02,  6.5414e-02],
          [ 3.0953e-02,  2.2930e-02, -1.4119e-02]],

         [[-2.3575e-02, -5.1006e-02,  3.1393e-02],
          [ 8.4190e-03,  4.7505e-02,  1.5394e-02],
          [-5.7208e-03, -2.2724e-04, -4.3195e-02]],

         [[ 1.3232e-02, -1.1969e-02, -3.1109e-02],
          [-5.7901e-02, -3.2647e-03,  5.3232e-02],
          [ 2.4605e-02,  1.6026e-02, -3.0241e-02]]],


        [[[ 9.2928e-03, -1.8651e-02,  8.3029e-03],
          [ 6.2530e-02, -8.8968e-02,  3.2540e-02],
          [-2.1938e-03,  5.2313e-02,  4.6324e-02]],

         [[ 4.6528e-02, -6.5092e-02, -3.6739e-02],
          [-1.5571e-02,  3.6654e-02,  5.2380e-02],
          [ 3.7556e-02, -1.5988e-01,  2.5180e-02]],

         [[-5.0597e-02, -1.2358e-03,  1.9394e-03],
          [-2.7302e-02, -5.9545e-03, -7.3017e-03],
          [-1.0192e-02,  2.2051e-02,  3.9676e-03]],

         ...,

         [[-9.0306e-02,  7.6504e-03, -7.0420e-02],
          [-7.2416e-02,  9.4260e-02, -4.9295e-03],
          [-1.0267e-02, -3.4321e-02,  3.3586e-02]],

         [[ 5.8644e-03,  3.7786e-02,  4.4665e-02],
          [ 4.9151e-02,  3.3226e-02, -3.6326e-02],
          [ 7.3398e-02,  2.8621e-02, -4.3325e-02]],

         [[ 2.0097e-04, -3.5663e-02, -7.5065e-02],
          [-4.7161e-02, -2.2969e-02, -4.0481e-02],
          [ 1.5639e-02,  4.9780e-02, -3.9891e-02]]],


        ...,


        [[[ 2.6931e-02,  2.3527e-02,  1.9109e-02],
          [ 4.2675e-02,  4.1221e-02,  2.6678e-02],
          [ 7.6639e-03, -1.2592e-02, -4.0992e-03]],

         [[-1.4983e-02,  8.4832e-02, -3.0410e-03],
          [ 9.3340e-03,  3.8700e-02, -8.9661e-04],
          [ 1.3906e-02,  1.1355e-02,  1.0125e-02]],

         [[ 2.5480e-02,  4.9154e-03,  2.0790e-02],
          [ 9.9658e-02,  4.0717e-02,  3.8835e-02],
          [ 3.5581e-02, -3.6334e-02, -7.1483e-02]],

         ...,

         [[ 5.0924e-02,  8.8616e-02, -2.0368e-02],
          [ 1.6536e-03, -1.3519e-02, -3.9302e-02],
          [ 6.2509e-03, -3.3814e-02,  2.0452e-02]],

         [[-3.4084e-05,  3.0675e-02,  2.6560e-02],
          [-9.4843e-02, -6.5670e-02,  6.0416e-02],
          [ 2.0934e-02, -9.6229e-03, -3.6494e-02]],

         [[-8.6122e-02,  2.9227e-02,  6.5005e-02],
          [-3.6536e-02,  4.1848e-02, -2.9242e-02],
          [ 8.0302e-02, -1.8755e-02, -3.0079e-02]]],


        [[[ 1.5620e-02,  6.5696e-02, -1.0125e-02],
          [-3.0949e-02, -6.5102e-03, -6.5685e-02],
          [ 3.0809e-02,  6.3862e-02, -4.1863e-02]],

         [[ 1.4930e-02,  3.2395e-02, -1.3183e-02],
          [ 8.7994e-02, -7.4107e-02, -3.0439e-02],
          [-4.0508e-02,  9.2008e-04,  8.6991e-02]],

         [[-8.9503e-02, -4.9309e-02,  5.5326e-02],
          [ 1.4148e-02, -1.0506e-02, -1.5244e-02],
          [-5.3103e-02, -5.5358e-02, -2.2275e-02]],

         ...,

         [[-1.4994e-02,  1.0180e-02,  8.6346e-02],
          [ 7.5160e-03,  3.7122e-02, -6.7019e-02],
          [ 7.1136e-02, -3.5464e-02, -8.5155e-03]],

         [[-7.3444e-02,  9.4383e-04, -4.3874e-02],
          [-1.9157e-02, -9.4157e-03,  4.9253e-03],
          [-1.7945e-02, -5.2800e-02,  9.8381e-04]],

         [[ 3.0576e-02, -2.4511e-02,  5.8473e-02],
          [ 3.6549e-02,  7.5080e-03,  2.4568e-02],
          [ 4.7070e-02, -6.3074e-02,  8.5976e-02]]],


        [[[ 2.0756e-02, -5.9910e-03,  4.4866e-02],
          [ 2.4379e-02, -5.4533e-02, -1.1239e-02],
          [-3.9775e-02, -1.0765e-01,  1.6655e-02]],

         [[ 2.8123e-02, -6.0189e-02,  7.7772e-02],
          [-8.5346e-03, -4.1748e-02, -9.6143e-02],
          [ 1.1872e-02, -1.5324e-02,  1.6482e-02]],

         [[-2.0067e-02,  7.7155e-02, -2.9776e-02],
          [ 2.7457e-02,  1.0668e-02, -1.2606e-02],
          [ 2.8478e-02,  5.7573e-02,  4.3266e-02]],

         ...,

         [[-1.1954e-02,  3.1250e-02,  3.3788e-02],
          [-4.0208e-02,  2.2811e-02,  1.8982e-02],
          [ 3.5610e-02,  1.9595e-02,  6.0560e-02]],

         [[-4.3191e-02, -5.6268e-02,  3.9787e-02],
          [-2.9861e-02,  2.8598e-03,  1.9043e-02],
          [ 1.7245e-02,  2.0797e-02, -2.5194e-02]],

         [[ 1.1485e-02, -7.8839e-03, -6.6723e-03],
          [ 3.0251e-02, -3.9304e-02,  3.3413e-02],
          [ 5.2784e-03,  1.7332e-03,  5.7257e-02]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[-8.1992e-03, -1.7942e-02,  5.7312e-03,  8.6808e-03, -8.4281e-03]],

         [[ 1.9309e-02,  3.6666e-02,  3.6265e-02,  3.7418e-02, -7.4741e-03]],

         [[ 5.6829e-03, -1.3962e-03, -1.9978e-02,  1.8933e-02,  3.1791e-02]],

         ...,

         [[-3.1972e-02, -9.8406e-03, -3.3071e-02, -2.4528e-02, -2.3456e-02]],

         [[ 3.7023e-02, -3.6096e-03,  9.2382e-03, -1.3531e-02,  1.0009e-02]],

         [[ 3.4227e-02, -4.8060e-04, -2.9872e-02, -2.7801e-03, -2.8919e-02]]],


        [[[ 1.1593e-02, -6.4011e-03, -1.8247e-03,  5.7175e-03,  2.0293e-02]],

         [[ 2.9026e-02, -5.4070e-02,  9.2045e-03,  2.3237e-02,  2.5886e-02]],

         [[-8.8017e-03, -2.1423e-02, -3.4418e-03,  3.1212e-02, -1.5315e-02]],

         ...,

         [[ 1.0146e-03,  8.2283e-04,  1.8634e-02, -3.6480e-02,  1.3866e-02]],

         [[-5.7486e-05, -9.5627e-03,  3.0673e-02,  3.7990e-02, -6.0501e-03]],

         [[-2.3317e-02, -2.2193e-02, -2.3954e-02, -4.1068e-02, -4.9829e-02]]],


        [[[-5.8560e-03, -2.9534e-02,  4.1040e-02, -2.3878e-02, -1.2256e-02]],

         [[ 4.6337e-03, -2.8638e-02, -2.3945e-02, -3.0629e-02,  8.8960e-03]],

         [[ 3.5969e-03, -1.5960e-02, -1.7775e-02,  3.8669e-03,  2.0135e-02]],

         ...,

         [[-1.9698e-02, -7.7424e-03,  3.5822e-02,  3.4440e-02,  1.4835e-02]],

         [[ 2.5263e-02, -3.0738e-02,  4.7276e-03, -3.1436e-02, -1.5017e-02]],

         [[-2.9535e-02,  1.9502e-02, -1.0047e-02, -2.4491e-02,  3.1913e-02]]],


        ...,


        [[[ 2.7584e-02, -2.7517e-03,  1.2595e-02, -4.7344e-02,  2.9484e-02]],

         [[-2.1377e-02,  3.4763e-02, -1.6779e-02, -2.6583e-02, -1.9933e-02]],

         [[ 1.7258e-02, -4.3820e-03, -2.8533e-02,  5.7496e-03,  7.1779e-03]],

         ...,

         [[-2.2548e-02,  2.1900e-02, -2.1859e-03, -6.7046e-02, -6.8349e-03]],

         [[-4.2793e-02, -1.5134e-02, -1.6376e-02, -2.3266e-02, -4.3436e-02]],

         [[-2.5822e-02,  7.7547e-03,  4.2504e-03, -4.0362e-03,  1.9192e-02]]],


        [[[-6.5605e-03,  1.6432e-02,  9.8095e-03,  3.0950e-02, -3.3993e-02]],

         [[ 3.4393e-02, -8.5538e-03, -3.1759e-02,  2.9446e-02,  3.5170e-02]],

         [[-4.9554e-03,  2.3894e-02, -6.2871e-03,  1.7339e-02, -6.6948e-04]],

         ...,

         [[ 2.3400e-02, -1.0440e-02, -3.4148e-02,  2.7211e-02,  4.5576e-02]],

         [[-2.0129e-03, -1.0929e-02,  3.1753e-02,  9.3537e-03,  3.5592e-02]],

         [[-2.3399e-02,  1.0288e-02,  1.7993e-02,  4.0379e-02, -1.7831e-04]]],


        [[[-3.7708e-02, -1.8421e-02,  2.1351e-02,  4.9437e-02,  1.4240e-02]],

         [[ 1.4419e-03, -4.9925e-03, -1.6300e-03, -9.8780e-03, -2.2152e-02]],

         [[-4.1330e-04, -2.9541e-03, -4.8785e-02, -1.0709e-02, -1.8274e-02]],

         ...,

         [[-3.0685e-02, -4.7874e-03,  3.8529e-02, -1.6321e-02, -1.1253e-02]],

         [[-1.3584e-02,  2.3887e-02,  1.6410e-02, -5.8406e-03, -1.3083e-02]],

         [[ 5.4219e-02, -2.2740e-02,  2.2625e-02,  5.9345e-03,  5.3098e-03]]]],
       device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[-1.0128e-02],
          [ 2.4339e-02],
          [ 2.5167e-02],
          [-2.7927e-03],
          [-1.2932e-02]],

         [[-4.0848e-02],
          [ 6.9918e-02],
          [-1.8842e-02],
          [-1.7310e-02],
          [-4.4845e-02]],

         [[ 2.5694e-02],
          [ 2.4996e-02],
          [ 6.1603e-03],
          [-4.1693e-02],
          [ 3.1630e-02]],

         ...,

         [[ 1.0951e-02],
          [ 3.2002e-02],
          [-1.9970e-03],
          [ 3.9176e-03],
          [-1.8263e-03]],

         [[-2.0657e-03],
          [-1.2534e-02],
          [-5.2707e-02],
          [ 1.8853e-02],
          [-1.8615e-02]],

         [[-1.9077e-02],
          [ 2.2279e-02],
          [-9.5048e-03],
          [-2.5051e-03],
          [-1.6187e-02]]],


        [[[-2.9707e-02],
          [ 1.7382e-02],
          [-1.8973e-02],
          [ 1.4736e-02],
          [ 2.7238e-03]],

         [[-5.7838e-03],
          [-1.3078e-02],
          [ 2.0154e-04],
          [-3.2424e-02],
          [-1.9977e-02]],

         [[ 2.6243e-02],
          [ 1.3170e-02],
          [ 1.5355e-02],
          [-8.0796e-03],
          [ 4.1767e-02]],

         ...,

         [[-9.6316e-03],
          [ 2.2904e-02],
          [-2.3426e-02],
          [ 1.2540e-02],
          [-5.2381e-03]],

         [[ 9.0461e-03],
          [ 1.0186e-02],
          [-3.8540e-02],
          [-3.0198e-02],
          [ 2.6989e-02]],

         [[-2.1315e-03],
          [-2.1106e-03],
          [ 1.0870e-02],
          [ 1.1893e-02],
          [ 1.2254e-02]]],


        [[[ 2.8640e-03],
          [-1.8792e-02],
          [ 1.7159e-02],
          [ 7.8331e-03],
          [ 5.4858e-03]],

         [[ 3.2875e-02],
          [ 3.5315e-03],
          [ 3.8029e-03],
          [-2.1415e-02],
          [-7.2872e-03]],

         [[ 3.6148e-02],
          [-8.7183e-03],
          [-8.5939e-03],
          [ 1.0612e-02],
          [ 1.2920e-02]],

         ...,

         [[-9.3921e-03],
          [-1.1607e-02],
          [ 1.2024e-02],
          [ 8.7693e-05],
          [-4.5562e-04]],

         [[ 8.0270e-03],
          [ 2.7309e-02],
          [-9.8821e-03],
          [-5.0398e-02],
          [ 3.7658e-02]],

         [[-2.0201e-03],
          [-7.1315e-03],
          [ 7.4544e-03],
          [ 5.2122e-04],
          [ 4.7707e-02]]],


        ...,


        [[[-2.5341e-02],
          [-4.1128e-03],
          [-8.5025e-04],
          [ 2.3746e-02],
          [ 1.8243e-05]],

         [[-4.8975e-02],
          [-4.3179e-03],
          [ 1.5014e-02],
          [ 1.9670e-02],
          [-2.9554e-03]],

         [[ 1.8780e-02],
          [ 3.5217e-02],
          [-6.3544e-03],
          [-2.2640e-02],
          [ 1.4044e-02]],

         ...,

         [[-2.0288e-02],
          [ 1.3690e-02],
          [ 3.7228e-03],
          [ 6.7340e-03],
          [ 1.3902e-02]],

         [[-1.6386e-02],
          [-1.9666e-02],
          [ 1.8226e-02],
          [-1.5186e-02],
          [-1.3467e-02]],

         [[ 1.6281e-03],
          [ 1.7630e-02],
          [-9.8673e-03],
          [-2.3253e-02],
          [ 3.7713e-02]]],


        [[[ 2.2527e-02],
          [ 7.3945e-03],
          [ 2.8898e-02],
          [-3.7528e-02],
          [ 3.6256e-02]],

         [[-3.1155e-02],
          [-8.6680e-04],
          [ 1.7885e-02],
          [-1.5587e-02],
          [-3.3310e-02]],

         [[-2.2422e-02],
          [ 3.2831e-02],
          [ 1.0263e-02],
          [-1.2757e-02],
          [-2.3253e-02]],

         ...,

         [[-3.2929e-03],
          [ 4.9603e-02],
          [ 3.1694e-03],
          [-1.4332e-02],
          [ 7.2168e-03]],

         [[ 2.4096e-03],
          [ 6.0279e-03],
          [-1.5757e-02],
          [-1.0031e-02],
          [-2.9424e-02]],

         [[ 2.3177e-02],
          [ 2.3586e-02],
          [-4.7436e-02],
          [-3.5179e-03],
          [-2.5538e-02]]],


        [[[ 1.2598e-02],
          [-1.7636e-02],
          [-1.6085e-02],
          [-2.7659e-03],
          [-5.2797e-03]],

         [[ 2.6580e-02],
          [ 5.3453e-02],
          [-4.5568e-04],
          [ 3.1251e-03],
          [-1.7064e-02]],

         [[ 2.7895e-02],
          [-9.0538e-03],
          [-7.4129e-03],
          [-2.6476e-03],
          [-2.3292e-02]],

         ...,

         [[-5.3843e-03],
          [-6.3813e-03],
          [-8.1325e-03],
          [ 2.7428e-04],
          [ 2.3920e-02]],

         [[-3.5270e-02],
          [ 1.5287e-02],
          [-8.7850e-03],
          [-4.8210e-03],
          [-5.1829e-03]],

         [[-6.4885e-04],
          [ 3.3443e-02],
          [ 1.3594e-02],
          [-1.7637e-02],
          [-1.3051e-02]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-1.7105e-02,  2.3183e-02, -3.3534e-02, -1.8639e-02, -2.9415e-02]],

         [[ 3.7133e-02, -2.3709e-02,  1.2434e-02,  3.2188e-02, -4.0736e-02]],

         [[ 9.3536e-03, -4.0740e-02, -6.2517e-03, -1.2145e-02,  1.0445e-02]],

         ...,

         [[ 1.9358e-03, -1.8895e-02,  9.5422e-03,  2.3579e-02,  2.9592e-02]],

         [[-1.7783e-02, -4.1058e-02,  2.8766e-02,  6.8638e-03,  3.6477e-02]],

         [[ 2.1333e-02, -2.3481e-02,  2.9338e-02, -3.0878e-02,  3.4747e-02]]],


        [[[ 1.4539e-02,  1.0750e-02,  3.1861e-02, -9.8192e-03,  1.6724e-03]],

         [[ 2.8599e-02,  1.5534e-02,  4.3310e-02,  1.9250e-04, -7.2416e-03]],

         [[-1.9764e-02,  1.9641e-02,  5.2294e-02, -7.5770e-03,  3.7552e-02]],

         ...,

         [[-4.4197e-03,  5.1419e-03,  3.8272e-02,  1.6226e-02, -4.0816e-02]],

         [[ 3.3730e-02,  7.0824e-03, -3.4504e-02,  3.3779e-02,  2.3757e-02]],

         [[ 2.2815e-02, -1.4209e-02,  5.2624e-02, -2.2971e-02,  1.6407e-02]]],


        [[[ 2.7668e-03, -9.7499e-03,  1.0182e-03, -1.5910e-02, -1.8576e-02]],

         [[ 3.0817e-02, -1.3553e-03, -8.1581e-03,  5.7246e-03, -1.9652e-02]],

         [[-4.1038e-02, -1.5443e-02,  2.5380e-02, -1.5286e-02,  8.7208e-03]],

         ...,

         [[ 8.8147e-03,  1.2253e-02,  1.0852e-02, -3.8400e-02,  3.3768e-02]],

         [[-2.1162e-02, -1.0479e-02, -3.2893e-03, -1.1209e-02, -1.6515e-02]],

         [[ 2.5622e-02, -2.3854e-02, -7.2304e-03, -9.2972e-03,  8.8782e-04]]],


        ...,


        [[[ 1.7655e-02, -2.3107e-02,  6.7561e-03, -2.6276e-02,  1.1591e-02]],

         [[ 1.1463e-02, -2.1047e-02, -8.3419e-03,  1.9021e-02,  3.7509e-02]],

         [[-3.2790e-02,  1.1566e-02, -2.7777e-02,  2.9334e-02,  4.0234e-02]],

         ...,

         [[ 5.9538e-03,  1.1941e-02,  2.3940e-02, -2.7806e-02,  6.9416e-02]],

         [[ 7.2710e-03,  1.7696e-02,  7.9217e-03,  4.8261e-02, -6.9994e-03]],

         [[-4.0300e-03,  1.0495e-03,  1.1903e-02, -2.5180e-02,  1.6780e-02]]],


        [[[ 1.0525e-02,  3.6231e-03,  4.6807e-03,  1.7849e-03, -2.4850e-02]],

         [[-1.7705e-02, -4.3909e-04,  9.0734e-03, -3.6004e-02, -1.8394e-02]],

         [[-3.6789e-02,  1.2526e-02, -2.6334e-02, -7.3713e-03,  7.0012e-03]],

         ...,

         [[-1.2293e-02, -1.2692e-02,  5.2910e-03, -5.9370e-04,  8.8328e-03]],

         [[-4.9956e-02, -3.4290e-02,  8.2137e-03,  5.1188e-02,  1.6510e-02]],

         [[-8.2760e-05,  8.5069e-04, -2.5082e-02,  2.4056e-02,  3.4852e-03]]],


        [[[-1.0517e-02, -3.1336e-02,  6.9401e-03, -4.0569e-02, -3.4735e-02]],

         [[ 7.3962e-03, -5.6937e-03, -1.3247e-02,  2.6792e-03, -2.0057e-02]],

         [[-1.7714e-02, -1.2562e-02, -1.1987e-02, -5.4899e-03,  2.3158e-02]],

         ...,

         [[-7.3355e-03,  1.2936e-02,  1.1388e-03, -2.8572e-03,  1.3523e-02]],

         [[-7.6931e-03, -2.2346e-02, -4.8077e-02,  6.5043e-03,  1.7021e-02]],

         [[ 2.9503e-02, -2.2166e-02, -1.5997e-02, -2.1261e-02,  9.9600e-03]]]],
       device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[ 0.0132],
          [ 0.0082],
          [ 0.0470],
          [ 0.0119],
          [-0.0632]],

         [[ 0.0056],
          [ 0.0452],
          [-0.0143],
          [-0.0115],
          [-0.0079]],

         [[ 0.0062],
          [-0.0343],
          [-0.0193],
          [-0.0012],
          [ 0.0014]],

         ...,

         [[ 0.0119],
          [ 0.0169],
          [-0.0242],
          [-0.0401],
          [ 0.0003]],

         [[-0.0034],
          [-0.0040],
          [ 0.0021],
          [ 0.0035],
          [ 0.0029]],

         [[-0.0066],
          [-0.0217],
          [-0.0086],
          [-0.0123],
          [ 0.0024]]],


        [[[-0.0047],
          [-0.0323],
          [ 0.0176],
          [ 0.0259],
          [-0.0075]],

         [[-0.0056],
          [ 0.0220],
          [-0.0156],
          [ 0.0023],
          [ 0.0046]],

         [[-0.0183],
          [-0.0209],
          [-0.0372],
          [-0.0060],
          [ 0.0184]],

         ...,

         [[-0.0105],
          [ 0.0088],
          [ 0.0102],
          [-0.0059],
          [-0.0058]],

         [[-0.0324],
          [-0.0194],
          [-0.0187],
          [-0.0070],
          [ 0.0252]],

         [[ 0.0009],
          [-0.0254],
          [-0.0264],
          [-0.0089],
          [-0.0072]]],


        [[[ 0.0448],
          [-0.0284],
          [ 0.0322],
          [-0.0037],
          [ 0.0314]],

         [[-0.0021],
          [-0.0090],
          [-0.0158],
          [ 0.0058],
          [-0.0137]],

         [[ 0.0299],
          [ 0.0246],
          [ 0.0078],
          [-0.0099],
          [ 0.0296]],

         ...,

         [[ 0.0113],
          [ 0.0218],
          [ 0.0322],
          [ 0.0083],
          [ 0.0522]],

         [[ 0.0197],
          [ 0.0331],
          [ 0.0095],
          [-0.0049],
          [-0.0041]],

         [[-0.0033],
          [ 0.0118],
          [-0.0314],
          [ 0.0094],
          [-0.0306]]],


        ...,


        [[[-0.0022],
          [ 0.0102],
          [-0.0389],
          [-0.0353],
          [-0.0202]],

         [[ 0.0440],
          [-0.0177],
          [ 0.0150],
          [-0.0524],
          [-0.0173]],

         [[-0.0018],
          [-0.0028],
          [-0.0296],
          [ 0.0249],
          [-0.0110]],

         ...,

         [[-0.0241],
          [ 0.0264],
          [ 0.0114],
          [ 0.0036],
          [ 0.0403]],

         [[-0.0236],
          [-0.0191],
          [ 0.0165],
          [ 0.0076],
          [ 0.0452]],

         [[-0.0406],
          [-0.0094],
          [-0.0010],
          [ 0.0229],
          [ 0.0472]]],


        [[[ 0.0155],
          [ 0.0354],
          [-0.0652],
          [-0.0159],
          [-0.0017]],

         [[ 0.0116],
          [ 0.0019],
          [-0.0368],
          [-0.0305],
          [ 0.0229]],

         [[ 0.0115],
          [ 0.0163],
          [ 0.0126],
          [ 0.0299],
          [ 0.0397]],

         ...,

         [[-0.0251],
          [-0.0046],
          [ 0.0102],
          [ 0.0291],
          [ 0.0565]],

         [[-0.0119],
          [ 0.0060],
          [ 0.0025],
          [ 0.0002],
          [-0.0074]],

         [[-0.0234],
          [-0.0295],
          [-0.0476],
          [ 0.0152],
          [ 0.0246]]],


        [[[ 0.0060],
          [-0.0172],
          [ 0.0304],
          [-0.0456],
          [-0.0139]],

         [[-0.0267],
          [-0.0030],
          [ 0.0280],
          [-0.0010],
          [ 0.0147]],

         [[-0.0017],
          [ 0.0177],
          [ 0.0075],
          [ 0.0163],
          [-0.0177]],

         ...,

         [[ 0.0278],
          [-0.0558],
          [-0.0363],
          [ 0.0163],
          [-0.0091]],

         [[-0.0193],
          [ 0.0073],
          [ 0.0061],
          [-0.0175],
          [-0.0226]],

         [[-0.0153],
          [-0.0222],
          [-0.0362],
          [-0.0617],
          [-0.0029]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-1.6928e-02,  6.9367e-03,  6.2995e-03, -2.9527e-02, -3.6983e-02]],

         [[ 2.7660e-03,  1.0467e-02, -5.3646e-03,  6.9480e-03, -3.8669e-02]],

         [[-4.1916e-02, -1.5912e-02,  8.7324e-04,  1.0698e-02, -6.2926e-03]],

         ...,

         [[-9.6712e-04,  5.9612e-03,  1.1967e-02,  5.9029e-03,  2.3778e-02]],

         [[ 1.4306e-02,  1.3642e-02, -5.4792e-03, -1.3252e-02, -1.2366e-02]],

         [[ 3.8746e-02,  3.4904e-02,  6.7872e-03,  1.2930e-02, -1.3819e-02]]],


        [[[-3.4779e-03, -2.0825e-03,  9.2969e-03, -2.7584e-03, -4.4391e-03]],

         [[-5.3557e-02, -2.1572e-02,  2.5083e-02,  8.8413e-03, -3.1445e-02]],

         [[ 8.9289e-05,  1.4889e-02, -3.3204e-02,  1.6465e-03,  3.4806e-02]],

         ...,

         [[-5.2004e-03, -8.7202e-03,  5.5759e-03,  2.1322e-03, -2.9526e-03]],

         [[ 2.0129e-02, -5.1137e-02, -1.5592e-04,  7.3632e-03,  3.9852e-03]],

         [[-8.6169e-03,  6.2325e-04,  1.8996e-03, -3.9304e-02,  2.7072e-03]]],


        [[[ 9.1276e-03,  2.9107e-03,  2.6563e-02,  2.6035e-02,  2.1749e-02]],

         [[ 3.1560e-02, -1.0744e-02, -2.9811e-02, -2.0808e-02, -3.4420e-02]],

         [[-3.5577e-02, -9.6495e-03, -1.0806e-02,  5.4162e-03, -1.3269e-02]],

         ...,

         [[ 1.7499e-02,  4.3027e-02,  2.0687e-02, -2.3131e-02, -3.5897e-02]],

         [[-3.1359e-02, -4.8424e-02, -4.6959e-03,  2.9135e-02,  1.3785e-02]],

         [[ 3.7970e-03, -1.5378e-02, -4.1614e-03, -4.4404e-03, -6.1807e-02]]],


        ...,


        [[[ 1.5693e-04, -1.5700e-02,  3.0103e-02, -1.6713e-02, -1.2249e-02]],

         [[-2.1655e-02, -3.8734e-02, -1.0045e-02,  4.9102e-04, -5.9097e-03]],

         [[-6.1014e-03,  3.9014e-02,  6.9962e-03, -1.1766e-02,  7.9952e-03]],

         ...,

         [[ 3.4226e-02, -4.5286e-03, -2.3506e-02, -2.1292e-02, -6.8307e-03]],

         [[-9.8605e-04,  2.0332e-02,  3.5968e-02,  9.8543e-03, -3.9574e-02]],

         [[-2.2409e-02, -6.3114e-02, -4.5878e-02,  1.3776e-03, -2.4969e-02]]],


        [[[ 1.9617e-02, -2.9659e-02, -1.1188e-02,  1.8580e-02,  2.6432e-03]],

         [[ 1.2354e-02, -1.2866e-02, -1.4015e-02,  1.6623e-02,  2.1753e-02]],

         [[-2.8434e-02,  8.8653e-03, -3.2515e-02,  4.3282e-02, -2.7422e-02]],

         ...,

         [[ 7.9051e-03, -4.6388e-03, -2.6091e-02, -3.3732e-02,  1.8845e-02]],

         [[-2.6477e-02,  6.7715e-03,  1.0920e-02,  2.4096e-02,  2.8867e-02]],

         [[-1.8789e-02, -9.2945e-03,  4.0415e-03,  2.4074e-02,  5.7014e-02]]],


        [[[-3.8024e-02,  8.6841e-04, -1.1312e-02,  2.9010e-02, -1.7249e-03]],

         [[-1.0857e-02, -3.5235e-02,  3.1278e-02,  7.3126e-03, -2.0868e-02]],

         [[-2.1397e-02,  3.3833e-03, -2.6426e-02,  5.8307e-03, -5.9484e-03]],

         ...,

         [[ 1.7041e-02,  3.5134e-02,  5.0922e-03,  1.2681e-03, -2.6647e-02]],

         [[ 1.4786e-02, -1.5931e-02, -3.6664e-03,  3.8967e-04, -2.6476e-03]],

         [[ 3.7138e-02, -1.1721e-02,  2.7944e-02,  2.8173e-02,  5.4233e-04]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[ 0.0183],
          [-0.0482],
          [-0.0065],
          [ 0.0558],
          [-0.0082]],

         [[-0.0284],
          [ 0.0343],
          [-0.0574],
          [ 0.0164],
          [-0.0170]],

         [[ 0.0172],
          [ 0.0135],
          [ 0.0111],
          [-0.0034],
          [-0.0287]],

         ...,

         [[ 0.0131],
          [ 0.0334],
          [-0.0223],
          [-0.0028],
          [ 0.0501]],

         [[-0.0196],
          [-0.0309],
          [ 0.0395],
          [ 0.0033],
          [ 0.0175]],

         [[-0.0218],
          [-0.0402],
          [ 0.0360],
          [-0.0452],
          [-0.0349]]],


        [[[ 0.0020],
          [-0.0146],
          [ 0.0402],
          [ 0.0131],
          [-0.0089]],

         [[-0.0200],
          [ 0.0222],
          [-0.0053],
          [-0.0176],
          [ 0.0356]],

         [[-0.0051],
          [-0.0179],
          [-0.0248],
          [ 0.0412],
          [-0.0065]],

         ...,

         [[-0.0118],
          [-0.0027],
          [ 0.0236],
          [-0.0090],
          [ 0.0110]],

         [[-0.0232],
          [-0.0303],
          [-0.0119],
          [-0.0028],
          [ 0.0389]],

         [[ 0.0234],
          [ 0.0368],
          [-0.0422],
          [ 0.0072],
          [ 0.0004]]],


        [[[ 0.0461],
          [-0.0035],
          [-0.0179],
          [-0.0098],
          [-0.0170]],

         [[-0.0210],
          [-0.0030],
          [ 0.0224],
          [-0.0270],
          [-0.0152]],

         [[-0.0576],
          [-0.0015],
          [-0.0111],
          [ 0.0230],
          [ 0.0063]],

         ...,

         [[-0.0369],
          [-0.0441],
          [-0.0508],
          [-0.0275],
          [ 0.0200]],

         [[-0.0186],
          [ 0.0010],
          [-0.0076],
          [-0.0037],
          [ 0.0398]],

         [[ 0.0038],
          [ 0.0387],
          [ 0.0083],
          [ 0.0208],
          [-0.0326]]],


        ...,


        [[[-0.0675],
          [-0.0024],
          [ 0.0043],
          [ 0.0226],
          [-0.0050]],

         [[-0.0218],
          [ 0.0138],
          [-0.0214],
          [ 0.0173],
          [ 0.0162]],

         [[-0.0063],
          [-0.0175],
          [-0.0207],
          [-0.0066],
          [ 0.0301]],

         ...,

         [[ 0.0015],
          [-0.0281],
          [-0.0242],
          [-0.0109],
          [ 0.0324]],

         [[ 0.0208],
          [ 0.0351],
          [-0.0236],
          [-0.0145],
          [-0.0152]],

         [[ 0.0140],
          [-0.0027],
          [ 0.0033],
          [ 0.0356],
          [-0.0209]]],


        [[[-0.0262],
          [ 0.0200],
          [ 0.0124],
          [ 0.0094],
          [-0.0159]],

         [[-0.0005],
          [-0.0442],
          [ 0.0125],
          [ 0.0204],
          [-0.0818]],

         [[-0.0100],
          [-0.0076],
          [-0.0139],
          [-0.0142],
          [ 0.0094]],

         ...,

         [[ 0.0027],
          [ 0.0413],
          [-0.0108],
          [-0.0180],
          [-0.0030]],

         [[ 0.0508],
          [ 0.0276],
          [-0.0064],
          [ 0.0009],
          [-0.0156]],

         [[-0.0049],
          [ 0.0172],
          [-0.0161],
          [ 0.0623],
          [ 0.0233]]],


        [[[-0.0073],
          [ 0.0033],
          [-0.0165],
          [-0.0257],
          [ 0.0325]],

         [[ 0.0158],
          [-0.0172],
          [ 0.0055],
          [-0.0311],
          [-0.0198]],

         [[-0.0417],
          [-0.0135],
          [-0.0399],
          [-0.0108],
          [-0.0094]],

         ...,

         [[ 0.0250],
          [ 0.0160],
          [ 0.0577],
          [-0.0194],
          [-0.0137]],

         [[-0.0265],
          [-0.0104],
          [-0.0221],
          [ 0.0109],
          [ 0.0296]],

         [[-0.0245],
          [ 0.0272],
          [ 0.0226],
          [-0.0278],
          [ 0.0136]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 3.9703e-02, -4.4247e-02,  2.3099e-02],
          [ 1.4706e-02,  1.4903e-02, -2.0032e-02],
          [ 2.5440e-02,  2.8112e-03, -7.3670e-03]],

         [[-3.3864e-02,  5.0905e-02, -3.1898e-02],
          [-1.2822e-02, -1.6139e-02, -2.3596e-02],
          [-1.4748e-02,  5.0153e-03,  1.2278e-02]],

         [[ 2.4769e-02, -2.6992e-04, -4.0044e-02],
          [ 2.3486e-02, -1.0810e-02,  5.7962e-02],
          [ 1.1984e-02, -2.3093e-02, -1.4938e-02]],

         ...,

         [[-2.5093e-02,  3.0847e-03, -2.7728e-03],
          [-1.2193e-02,  4.2381e-02, -5.0457e-02],
          [ 5.4760e-02,  8.0348e-02, -3.9198e-02]],

         [[ 1.2737e-02,  1.1733e-02,  3.3435e-02],
          [ 2.7361e-02,  3.6190e-02, -7.6529e-03],
          [-1.6844e-03,  2.4185e-02, -8.1157e-05]],

         [[-7.0411e-03, -7.3750e-03,  2.1016e-02],
          [-4.7714e-02, -2.6940e-02,  7.9444e-03],
          [-1.2043e-02,  1.0504e-03,  7.6647e-03]]],


        [[[ 7.6053e-03,  1.4877e-02, -9.0473e-03],
          [ 1.9066e-03,  2.1471e-03, -7.9099e-03],
          [-2.5370e-02, -4.0480e-03,  1.7045e-02]],

         [[ 6.7122e-02,  2.0537e-03, -3.3106e-02],
          [-6.2235e-02, -1.6796e-02,  1.7650e-02],
          [ 1.6739e-02,  1.2681e-02, -3.2981e-02]],

         [[-6.9342e-03, -6.1554e-02,  1.8865e-02],
          [ 6.2831e-02,  1.9063e-02,  2.5191e-02],
          [ 3.7319e-02, -4.3688e-02,  1.1743e-02]],

         ...,

         [[-2.4396e-02, -1.0244e-02, -4.3608e-03],
          [ 1.9145e-03,  6.9938e-02,  3.0432e-02],
          [ 1.0544e-02,  2.2808e-02, -2.0713e-02]],

         [[-6.1708e-03, -1.0979e-02,  3.7989e-02],
          [ 3.6371e-02, -2.8260e-02,  1.1507e-02],
          [ 3.1900e-02, -4.6451e-02,  1.3029e-02]],

         [[-3.7028e-02, -1.6844e-02, -8.9574e-03],
          [-7.3328e-02, -2.5730e-02, -1.8729e-02],
          [-3.3893e-03, -2.5630e-02, -8.4567e-04]]],


        [[[-5.0682e-02,  1.0422e-02,  2.0195e-03],
          [-6.9479e-03,  6.2416e-03,  6.8129e-03],
          [-2.1773e-02,  6.9998e-02, -2.0962e-02]],

         [[-1.1840e-03, -1.8172e-02,  8.3436e-04],
          [-1.3967e-02,  5.2868e-02, -5.5238e-02],
          [ 2.2359e-02, -2.5592e-03,  3.3364e-03]],

         [[ 2.0063e-02,  4.4100e-02, -2.4297e-02],
          [-3.0510e-03,  1.1766e-03, -5.3641e-02],
          [-5.5369e-04,  6.9426e-02,  6.0596e-03]],

         ...,

         [[-1.6029e-02, -4.4595e-02,  1.6649e-02],
          [-4.3867e-02, -4.1186e-02, -5.5280e-02],
          [-2.8355e-02,  3.5810e-02,  2.2698e-02]],

         [[-3.0415e-02,  5.6382e-02,  2.1412e-02],
          [-8.0768e-03, -3.1183e-02,  1.3800e-02],
          [ 2.1319e-02,  5.9599e-02,  2.3853e-02]],

         [[ 9.5718e-03, -1.2107e-02,  1.5082e-02],
          [ 1.1911e-02,  3.4563e-02,  3.8046e-02],
          [ 1.8358e-02,  2.2715e-02, -1.6468e-02]]],


        ...,


        [[[-4.3760e-03,  1.4221e-02, -8.5514e-03],
          [-1.6357e-02, -2.3746e-02, -3.0941e-02],
          [ 7.6969e-03,  3.3907e-02,  2.2555e-02]],

         [[-9.7311e-03,  1.2059e-02, -5.1124e-02],
          [-1.0712e-02,  6.2277e-03, -1.8763e-02],
          [-7.9981e-03, -6.8283e-02, -5.2357e-02]],

         [[-2.9920e-02,  2.4721e-03,  1.5478e-02],
          [-1.0586e-02, -4.0896e-02,  3.2997e-03],
          [-3.6100e-02,  5.3560e-03,  2.1385e-02]],

         ...,

         [[-5.7445e-02, -1.1816e-02, -1.5887e-02],
          [ 3.9294e-02,  2.0366e-02,  4.1519e-02],
          [ 4.4377e-02, -2.1420e-03, -1.8378e-02]],

         [[-5.2142e-03,  2.4387e-03,  2.7325e-04],
          [ 2.4750e-02,  1.1613e-02,  7.0896e-03],
          [-6.9609e-03, -2.7177e-02, -5.4234e-02]],

         [[ 9.9599e-02,  6.6829e-02, -6.6270e-04],
          [ 7.1711e-02,  4.1181e-02,  7.9777e-03],
          [ 2.5233e-02, -1.2363e-04, -3.2967e-02]]],


        [[[-5.3305e-02, -3.1922e-02,  5.6474e-03],
          [ 1.1205e-02, -2.4137e-02, -1.9844e-02],
          [ 2.6846e-03, -1.2204e-03,  3.6935e-02]],

         [[-1.2608e-02,  1.4432e-02, -3.3793e-02],
          [-2.7829e-02,  3.1811e-02, -6.8567e-03],
          [-1.6139e-03, -4.2916e-02, -2.0244e-02]],

         [[ 6.7747e-03, -1.0379e-02, -4.2713e-02],
          [-3.3205e-02,  3.7040e-02, -1.8158e-02],
          [ 3.0941e-02, -1.4637e-03, -2.4071e-02]],

         ...,

         [[-4.6890e-02,  5.0263e-03, -3.0308e-02],
          [-2.5876e-03, -1.5828e-02, -1.1221e-03],
          [ 9.1567e-03,  3.0527e-03, -3.4612e-03]],

         [[ 4.0516e-02, -1.8560e-02, -8.9946e-03],
          [-3.1736e-02, -1.4475e-02,  5.3029e-03],
          [-4.7540e-02, -7.1344e-02,  1.8387e-02]],

         [[ 1.4305e-02, -1.3032e-02,  2.4047e-02],
          [-3.9864e-03, -8.8185e-03, -1.1025e-02],
          [ 4.1179e-02, -2.9118e-02, -5.5644e-02]]],


        [[[-3.2645e-02,  2.9058e-03, -2.7548e-02],
          [-2.2456e-02, -1.1718e-03, -1.3376e-02],
          [ 6.0168e-02, -2.2571e-02, -3.9064e-02]],

         [[-5.5372e-03, -6.0554e-03, -2.3186e-02],
          [-4.6212e-02, -1.4499e-02, -3.3791e-02],
          [-1.2744e-02,  4.3474e-02, -4.2298e-02]],

         [[ 2.4816e-02, -2.3771e-02, -7.0109e-02],
          [-4.8059e-02, -3.2303e-02, -3.3662e-04],
          [ 1.3329e-02,  3.4879e-03,  2.1437e-02]],

         ...,

         [[-1.0804e-02, -7.2175e-03, -5.4054e-04],
          [ 1.9605e-02,  2.7792e-02, -4.0103e-03],
          [ 2.0698e-02,  1.5909e-02,  1.9520e-02]],

         [[ 2.3434e-02, -3.2584e-02, -1.0950e-02],
          [-1.3456e-02, -1.9795e-02, -6.3665e-03],
          [-9.3218e-03,  2.4006e-02, -2.6876e-02]],

         [[-1.3441e-02, -8.3814e-02,  3.6784e-03],
          [ 1.2603e-02, -8.3606e-03, -2.7403e-02],
          [ 5.1028e-03,  6.3633e-03, -7.7281e-04]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[ 1.0848e-02,  9.4079e-03, -8.4643e-03],
          [-1.2628e-02,  1.9794e-02,  1.3457e-03],
          [ 1.9548e-02, -1.4267e-02,  2.6416e-03]],

         [[ 4.3249e-03,  1.0333e-02, -1.1597e-03],
          [-3.4807e-03,  1.3493e-02,  4.3612e-03],
          [-1.5295e-02, -1.1330e-02, -1.7373e-02]],

         [[-6.4189e-03, -1.6279e-02,  2.0673e-02],
          [-6.3725e-03, -2.0199e-02,  1.7305e-02],
          [ 1.0067e-02, -1.1230e-02,  7.5568e-03]],

         ...,

         [[ 1.9511e-02,  1.6553e-02,  1.1861e-02],
          [-1.2022e-03, -7.4201e-03,  1.3975e-02],
          [-1.9665e-02, -5.4819e-03, -1.5064e-02]],

         [[-1.8139e-02,  2.0152e-02,  1.5721e-02],
          [ 5.7576e-03, -1.7382e-02, -1.1968e-03],
          [ 1.5884e-03, -1.6468e-02, -1.3498e-02]],

         [[ 1.5673e-03, -2.3821e-03, -1.5982e-02],
          [-2.0593e-02,  1.3377e-02, -9.7456e-03],
          [-1.1753e-02, -5.7586e-03,  1.4001e-02]]],


        [[[-1.8919e-02, -1.9463e-02, -8.3175e-03],
          [-1.4080e-02,  3.7476e-03, -1.4153e-02],
          [-3.8020e-03, -1.9516e-02, -8.8441e-04]],

         [[ 5.4977e-03, -2.0763e-02,  1.2271e-02],
          [ 1.4969e-02,  9.7841e-03,  5.0173e-03],
          [ 1.7202e-02,  2.4297e-03,  5.7308e-03]],

         [[-7.5226e-04,  1.6368e-02,  1.2848e-02],
          [-1.5742e-02,  6.9030e-03,  5.7350e-03],
          [ 2.5855e-03,  7.0109e-03,  1.2253e-02]],

         ...,

         [[ 1.9279e-02, -7.0885e-03,  8.8960e-03],
          [ 1.8330e-02,  1.4148e-02, -3.9048e-05],
          [ 1.5498e-03,  1.7860e-02,  7.4429e-03]],

         [[ 7.1346e-03,  1.3037e-02,  1.1401e-02],
          [ 1.7185e-02,  1.4732e-02,  1.6082e-02],
          [-1.1710e-02,  6.8759e-03, -3.0975e-03]],

         [[-1.7021e-02, -5.1440e-03, -8.2863e-03],
          [-1.4527e-03,  1.6774e-02, -2.0243e-02],
          [-1.1602e-02, -5.2471e-03,  1.4697e-02]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([-0.0159, -0.0199], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 6.0925e-03,  4.1637e-03, -6.4717e-03],
          [-1.9282e-02,  4.6291e-03, -3.1344e-02],
          [ 8.2409e-03,  4.4726e-02, -2.9338e-02]],

         [[ 4.9826e-02, -1.7761e-02,  3.8395e-02],
          [-4.4739e-02, -1.0601e-02, -1.6411e-02],
          [-1.3035e-03,  7.0476e-03, -5.2060e-04]],

         [[ 1.9274e-02,  1.6558e-02, -1.3358e-02],
          [-3.2684e-04, -2.4866e-02, -4.4042e-02],
          [-1.5683e-02,  6.0756e-02,  5.0878e-03]],

         ...,

         [[-6.5656e-02,  9.5385e-03,  4.5573e-02],
          [ 1.0903e-02, -1.6939e-02, -4.2326e-03],
          [-6.0297e-02,  1.8147e-02,  2.2895e-02]],

         [[ 3.0028e-02,  1.4919e-02, -2.6022e-02],
          [-2.4549e-02, -2.3850e-02, -2.6350e-03],
          [-7.0155e-02,  1.4141e-02,  2.0123e-02]],

         [[ 2.3625e-02, -1.2616e-03, -1.8133e-02],
          [ 2.3801e-02,  9.2069e-03, -3.9276e-02],
          [-3.0181e-03, -1.0992e-02, -2.2259e-02]]],


        [[[-6.7213e-02, -7.4164e-03, -3.1029e-02],
          [-3.8369e-02,  1.8044e-02,  6.8364e-03],
          [-2.4478e-03, -4.5313e-02, -1.7132e-02]],

         [[ 1.1911e-02, -1.1813e-02, -1.5162e-02],
          [-7.8483e-03, -6.6679e-03, -5.2923e-02],
          [-7.2748e-02, -6.3000e-03,  3.5433e-03]],

         [[ 2.9731e-03,  2.6075e-02,  1.6410e-02],
          [ 7.0284e-02,  2.8630e-02,  4.3787e-02],
          [-1.0048e-02, -3.8871e-02, -2.6854e-02]],

         ...,

         [[-4.2965e-02, -1.1790e-02,  2.0184e-02],
          [-1.5034e-02, -6.3863e-03, -1.6800e-02],
          [ 1.5736e-02,  4.3056e-02, -1.4669e-02]],

         [[-1.7250e-02,  2.7876e-02,  1.0724e-02],
          [ 1.0781e-02,  4.5776e-03, -1.0285e-02],
          [ 5.7880e-02,  3.6889e-02,  9.7258e-03]],

         [[ 1.4523e-02, -2.6792e-02,  4.8244e-02],
          [ 3.2514e-02, -4.1605e-03,  2.7696e-02],
          [ 6.6073e-04,  2.6645e-02, -9.9857e-03]]],


        [[[ 2.4010e-02,  1.9292e-02,  3.1970e-02],
          [-1.3978e-02,  5.9609e-03, -4.2062e-03],
          [-7.9963e-03, -3.7261e-03,  2.7446e-02]],

         [[ 1.6395e-02,  4.9234e-02,  2.7238e-02],
          [ 3.0589e-02,  3.7820e-03,  2.0386e-02],
          [-5.3391e-02, -1.9227e-02,  1.0588e-02]],

         [[ 4.3279e-04,  1.8604e-03,  2.0443e-02],
          [ 3.3323e-02, -5.1571e-03,  9.7626e-04],
          [ 6.1642e-02, -5.0408e-04,  3.5190e-02]],

         ...,

         [[ 1.0575e-02,  1.6592e-02, -4.9030e-02],
          [-4.2981e-03, -7.5611e-03, -2.4047e-02],
          [-1.7529e-03, -6.7996e-03,  8.3972e-02]],

         [[ 3.5089e-02, -4.3488e-02,  6.9649e-03],
          [ 2.2051e-02, -2.4622e-02, -1.1764e-02],
          [ 3.6999e-02, -5.0539e-03, -9.2128e-03]],

         [[ 1.1601e-02, -3.2522e-02,  1.9125e-03],
          [-7.5896e-03,  1.9848e-02,  3.4583e-02],
          [ 7.1400e-03, -3.4455e-02, -5.3284e-03]]],


        ...,


        [[[-5.1545e-03,  1.9304e-02,  2.4767e-02],
          [ 4.1861e-03, -5.2124e-02, -2.4427e-02],
          [-2.0881e-02, -2.9195e-02, -1.7798e-02]],

         [[-5.4206e-02, -2.7965e-02, -1.1954e-03],
          [-9.4457e-03, -2.1961e-02,  2.1558e-02],
          [ 8.6173e-03,  1.8233e-02, -3.6935e-02]],

         [[-5.2959e-02, -5.5744e-03,  6.5809e-03],
          [-7.1954e-03, -5.0979e-02, -7.2931e-03],
          [-8.6492e-03, -2.8563e-02,  4.1467e-02]],

         ...,

         [[-1.3729e-02, -1.4505e-02, -5.2966e-02],
          [ 2.7870e-02, -2.1878e-02,  3.1389e-02],
          [ 1.1141e-02, -4.3065e-02,  2.7329e-02]],

         [[-4.3472e-03,  8.2303e-03, -6.5355e-02],
          [-8.0176e-02,  1.6594e-02, -3.7381e-02],
          [ 1.6369e-02, -2.7624e-02,  3.2305e-02]],

         [[-1.4579e-02,  3.5331e-02,  2.4871e-02],
          [-2.6407e-02, -3.4154e-02, -1.3959e-03],
          [ 2.7572e-02,  5.3498e-02,  2.7639e-02]]],


        [[[-2.8874e-03, -1.9532e-02, -6.6429e-03],
          [-4.8023e-03,  3.9575e-02,  1.3619e-02],
          [ 4.0349e-02,  3.9495e-02,  5.0352e-03]],

         [[-1.3581e-02,  2.9020e-02, -1.7745e-02],
          [ 1.1188e-02,  1.2449e-02, -6.4765e-04],
          [ 3.7925e-02,  5.2361e-02,  1.3730e-03]],

         [[-4.9345e-02,  2.6276e-02,  1.5011e-02],
          [-7.1459e-02, -2.7441e-02, -6.6557e-03],
          [-3.0002e-05, -7.1622e-02, -6.9434e-03]],

         ...,

         [[ 3.6133e-02, -1.7586e-02, -2.0320e-02],
          [ 1.4839e-02,  4.9021e-02,  3.2412e-02],
          [-3.3247e-03, -4.4415e-02, -3.6953e-02]],

         [[ 2.8905e-02,  7.3526e-02,  2.4919e-02],
          [-2.7277e-02,  3.1538e-02, -8.6331e-03],
          [-4.5503e-02, -1.5886e-02, -4.0805e-02]],

         [[-2.8352e-02,  3.2491e-02,  7.2558e-03],
          [-1.8019e-02, -5.4514e-02,  1.9030e-02],
          [ 2.3535e-02, -4.1096e-02,  5.3789e-02]]],


        [[[-2.8341e-02,  1.2760e-03,  1.0905e-02],
          [-5.3269e-02, -1.8577e-02, -5.5093e-02],
          [-2.3827e-02,  1.4264e-02,  3.0646e-03]],

         [[ 5.7161e-02, -3.3187e-02,  3.8953e-03],
          [ 1.9328e-02,  1.2995e-02,  1.2806e-02],
          [-1.8710e-02,  1.7118e-02,  1.2897e-02]],

         [[ 2.7084e-02,  1.8411e-02,  1.5583e-02],
          [ 4.4446e-03,  1.2541e-02, -3.7497e-02],
          [-3.3447e-02,  3.0409e-02, -1.6887e-02]],

         ...,

         [[-8.4070e-03, -2.1203e-02, -1.0837e-01],
          [-7.5464e-02,  2.1335e-02, -2.9304e-02],
          [-2.4110e-02, -2.2950e-03,  3.7163e-02]],

         [[ 2.0100e-02,  1.1570e-02, -2.6162e-02],
          [-3.0400e-02,  2.9915e-02, -1.4769e-02],
          [-2.4069e-03, -4.2282e-03,  2.5578e-02]],

         [[-1.8025e-02,  7.0852e-03, -2.5901e-02],
          [ 8.0594e-03, -1.2240e-02,  2.7600e-03],
          [ 3.1009e-02,  2.2039e-02,  6.7985e-03]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0255]],

         [[ 0.0066]],

         [[-0.0127]],

         ...,

         [[ 0.0189]],

         [[ 0.0310]],

         [[ 0.0267]]],


        [[[ 0.0456]],

         [[ 0.0605]],

         [[-0.0048]],

         ...,

         [[-0.0412]],

         [[ 0.0114]],

         [[-0.0475]]],


        [[[ 0.0173]],

         [[ 0.0498]],

         [[-0.0119]],

         ...,

         [[-0.0179]],

         [[ 0.0296]],

         [[-0.0541]]],


        ...,


        [[[ 0.0290]],

         [[ 0.0064]],

         [[-0.0365]],

         ...,

         [[-0.0337]],

         [[-0.0036]],

         [[-0.0174]]],


        [[[-0.0293]],

         [[-0.0405]],

         [[ 0.0392]],

         ...,

         [[ 0.0127]],

         [[ 0.0253]],

         [[ 0.0259]]],


        [[[ 0.0535]],

         [[-0.0098]],

         [[ 0.0488]],

         ...,

         [[-0.0440]],

         [[ 0.0529]],

         [[-0.0269]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([ 0.0072,  0.0058, -0.0412,  0.0529,  0.0319, -0.0588, -0.0444, -0.0220,
        -0.0587,  0.0114, -0.0106, -0.0140,  0.0192, -0.0610, -0.0041,  0.0324,
         0.0315,  0.0607, -0.0263, -0.0457, -0.0015,  0.0131, -0.0280,  0.0275,
         0.0553, -0.0547, -0.0107,  0.0566, -0.0464,  0.0264, -0.0034, -0.0394,
        -0.0102, -0.0119,  0.0019, -0.0266,  0.0277,  0.0504,  0.0100,  0.0281,
        -0.0233, -0.0091,  0.0551,  0.0594, -0.0235, -0.0113, -0.0429,  0.0229,
         0.0006,  0.0068,  0.0057,  0.0221,  0.0122,  0.0045, -0.0486,  0.0409,
        -0.0225,  0.0624, -0.0216,  0.0197, -0.0621,  0.0450,  0.0178, -0.0492,
        -0.0389,  0.0498,  0.0480, -0.0407, -0.0239,  0.0600, -0.0162,  0.0245,
        -0.0097, -0.0168,  0.0276,  0.0378,  0.0516, -0.0622,  0.0578, -0.0074,
         0.0061, -0.0290, -0.0056,  0.0492,  0.0619,  0.0170, -0.0096, -0.0290,
         0.0110, -0.0436,  0.0244,  0.0003, -0.0483, -0.0063,  0.0360,  0.0077,
         0.0258, -0.0211, -0.0025, -0.0474,  0.0088, -0.0236,  0.0503,  0.0093,
         0.0034, -0.0079,  0.0093,  0.0617, -0.0453,  0.0171,  0.0206,  0.0158,
        -0.0064, -0.0108, -0.0321, -0.0549,  0.0268, -0.0186, -0.0062,  0.0174,
        -0.0492, -0.0534,  0.0225,  0.0064,  0.0523, -0.0099, -0.0197, -0.0009,
        -0.0321, -0.0525, -0.0123, -0.0472, -0.0273,  0.0109, -0.0083,  0.0587,
         0.0292, -0.0488, -0.0418, -0.0499, -0.0320, -0.0075, -0.0546, -0.0294,
        -0.0206,  0.0465,  0.0362,  0.0474,  0.0615,  0.0314,  0.0266,  0.0070,
        -0.0189,  0.0306,  0.0453,  0.0536, -0.0142, -0.0559,  0.0403,  0.0335,
         0.0307,  0.0538,  0.0413,  0.0346,  0.0185,  0.0190,  0.0353, -0.0044,
        -0.0589, -0.0009,  0.0222, -0.0027,  0.0605,  0.0543,  0.0553, -0.0145,
         0.0176, -0.0435, -0.0318,  0.0050,  0.0137, -0.0608, -0.0001,  0.0343,
        -0.0109,  0.0130,  0.0269, -0.0445,  0.0322,  0.0578,  0.0122,  0.0356,
        -0.0585,  0.0042,  0.0380, -0.0286, -0.0210,  0.0588, -0.0509, -0.0098,
         0.0587,  0.0182, -0.0269, -0.0625,  0.0509,  0.0406,  0.0585,  0.0475,
         0.0210, -0.0488,  0.0065, -0.0578,  0.0415, -0.0280, -0.0421,  0.0481,
        -0.0575,  0.0581,  0.0408, -0.0175, -0.0125, -0.0554, -0.0214,  0.0008,
        -0.0438, -0.0291,  0.0018,  0.0222, -0.0004,  0.0460,  0.0018, -0.0552,
         0.0379, -0.0024, -0.0056,  0.0375, -0.0072,  0.0208,  0.0066, -0.0604,
         0.0397, -0.0242, -0.0362,  0.0059, -0.0252, -0.0434, -0.0442,  0.0557,
         0.0256, -0.0173,  0.0523,  0.0269,  0.0520, -0.0143,  0.0143, -0.0289,
         0.0439,  0.0368, -0.0621,  0.0490, -0.0355,  0.0266,  0.0135,  0.0386,
        -0.0451, -0.0569, -0.0218, -0.0069,  0.0488,  0.0242,  0.0310, -0.0589,
         0.0041,  0.0512, -0.0272, -0.0095, -0.0098, -0.0139,  0.0455, -0.0346,
         0.0493, -0.0427, -0.0260,  0.0462,  0.0482, -0.0370,  0.0562,  0.0566,
         0.0208, -0.0364,  0.0361, -0.0317, -0.0439, -0.0112, -0.0308, -0.0282,
         0.0612,  0.0218, -0.0234,  0.0277,  0.0063, -0.0313,  0.0116, -0.0543,
        -0.0587, -0.0163, -0.0117, -0.0268,  0.0325,  0.0342, -0.0205, -0.0214,
        -0.0604,  0.0608, -0.0386,  0.0566, -0.0341,  0.0125, -0.0602,  0.0500,
        -0.0197, -0.0151, -0.0345, -0.0470, -0.0308, -0.0141,  0.0148,  0.0089,
         0.0547, -0.0561,  0.0221, -0.0454, -0.0174, -0.0553, -0.0044, -0.0198,
         0.0480,  0.0578, -0.0203, -0.0057,  0.0593,  0.0618,  0.0109,  0.0223,
         0.0450,  0.0319,  0.0179, -0.0585, -0.0118,  0.0102,  0.0270,  0.0016,
        -0.0043, -0.0343, -0.0348,  0.0451, -0.0555,  0.0109, -0.0220, -0.0546,
        -0.0568, -0.0380,  0.0491,  0.0230,  0.0036, -0.0295, -0.0313, -0.0191,
         0.0334, -0.0269, -0.0203, -0.0089, -0.0483, -0.0492, -0.0079, -0.0265,
        -0.0589,  0.0152, -0.0243,  0.0026,  0.0075, -0.0065,  0.0107,  0.0130,
        -0.0571,  0.0440,  0.0227, -0.0179, -0.0253, -0.0535,  0.0024, -0.0241,
        -0.0569,  0.0082,  0.0558,  0.0077,  0.0407, -0.0587, -0.0309, -0.0318,
         0.0573,  0.0172, -0.0419, -0.0264, -0.0518,  0.0154,  0.0623,  0.0229,
        -0.0326, -0.0445, -0.0250, -0.0421,  0.0026, -0.0057,  0.0501, -0.0017,
        -0.0110, -0.0340, -0.0383,  0.0334, -0.0069,  0.0470,  0.0166, -0.0382,
        -0.0479,  0.0508,  0.0399, -0.0135,  0.0560,  0.0346, -0.0497, -0.0560,
        -0.0510, -0.0393, -0.0052,  0.0083, -0.0461,  0.0495,  0.0354,  0.0033,
        -0.0080, -0.0610,  0.0105,  0.0558,  0.0401, -0.0264, -0.0149,  0.0232,
        -0.0565,  0.0582, -0.0063, -0.0269, -0.0433, -0.0319,  0.0097, -0.0487,
        -0.0256,  0.0619,  0.0456,  0.0023,  0.0380,  0.0160, -0.0614,  0.0570,
         0.0385, -0.0521,  0.0461, -0.0104, -0.0211,  0.0246, -0.0377, -0.0361,
        -0.0556, -0.0381,  0.0477, -0.0389, -0.0260, -0.0436, -0.0574,  0.0178,
        -0.0151,  0.0059,  0.0467, -0.0084, -0.0229,  0.0249,  0.0021, -0.0080,
        -0.0049, -0.0429,  0.0322,  0.0158, -0.0410,  0.0560, -0.0202, -0.0135,
        -0.0446,  0.0194, -0.0596, -0.0477, -0.0177, -0.0242, -0.0426, -0.0469,
         0.0032, -0.0524, -0.0341, -0.0293, -0.0268,  0.0118, -0.0109,  0.0578,
         0.0582, -0.0556,  0.0421,  0.0031,  0.0133,  0.0457,  0.0534,  0.0557,
         0.0593, -0.0056,  0.0254, -0.0084,  0.0372, -0.0037,  0.0234, -0.0354,
        -0.0378,  0.0070, -0.0035, -0.0374, -0.0495,  0.0288, -0.0170,  0.0011,
        -0.0286,  0.0399,  0.0340, -0.0464,  0.0097, -0.0027, -0.0033,  0.0169,
         0.0043,  0.0406, -0.0230, -0.0485, -0.0173,  0.0372,  0.0155,  0.0578,
        -0.0028,  0.0543, -0.0600, -0.0538,  0.0028,  0.0357,  0.0462,  0.0279,
        -0.0450, -0.0600,  0.0225,  0.0092,  0.0154, -0.0524,  0.0216, -0.0322,
        -0.0596,  0.0281, -0.0340, -0.0612,  0.0459,  0.0312, -0.0214, -0.0341],
       device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[-1.0293e-03,  8.2432e-03,  7.4107e-03,  ..., -7.0595e-03,
            7.9224e-03,  2.4091e-02],
          [-4.3689e-03, -4.0645e-02,  5.9525e-03,  ...,  2.2537e-02,
           -1.5924e-02, -2.4103e-02],
          [ 2.1777e-03, -4.0246e-03, -1.8312e-03,  ..., -5.5705e-02,
            1.3113e-02, -3.2354e-02],
          ...,
          [-8.3370e-03, -8.7929e-03, -2.2648e-02,  ...,  6.3628e-03,
           -2.7002e-02, -2.8536e-02],
          [-2.0178e-02,  3.3061e-03,  3.2295e-02,  ..., -3.4621e-03,
           -1.2109e-03, -2.0588e-02],
          [ 1.3597e-02,  1.4804e-02, -3.4911e-04,  ...,  1.0053e-02,
            1.8473e-02,  9.7207e-04]],

         [[-9.7758e-03, -1.2656e-02, -1.3782e-02,  ...,  2.9170e-02,
           -2.8778e-02, -1.4119e-02],
          [-4.3060e-02, -3.7035e-02,  1.3729e-02,  ...,  4.5159e-03,
            4.7825e-03,  2.8567e-03],
          [ 1.6042e-02,  8.3367e-03,  4.0916e-02,  ..., -1.7907e-02,
            1.7261e-02, -4.5349e-03],
          ...,
          [-1.1030e-02, -1.2702e-02, -2.9983e-02,  ...,  1.6612e-03,
           -7.1186e-04,  2.7519e-02],
          [ 5.9338e-02,  8.9823e-03,  2.9029e-02,  ...,  1.1663e-02,
           -1.2158e-02,  9.7840e-03],
          [ 1.2318e-02,  1.2754e-02, -8.2144e-03,  ..., -1.8731e-03,
            1.0879e-03, -1.6339e-02]],

         [[-3.9147e-03, -2.5788e-02,  2.3824e-02,  ...,  2.8841e-02,
            1.3321e-02, -2.1236e-02],
          [-1.3405e-02, -1.0363e-02,  4.8034e-02,  ..., -2.2295e-02,
           -6.4188e-03,  2.9686e-02],
          [-3.8292e-02, -8.4782e-03,  2.1808e-02,  ...,  1.7066e-02,
            1.3390e-03, -1.4441e-02],
          ...,
          [ 3.7443e-02, -9.9218e-03, -3.7787e-03,  ...,  4.4152e-02,
           -3.2784e-02, -2.4998e-02],
          [ 4.7583e-02,  3.2801e-02,  2.1336e-02,  ...,  3.1443e-02,
           -1.4097e-02, -4.9523e-03],
          [-2.9174e-02,  2.2328e-02, -1.7567e-02,  ...,  4.7019e-03,
            5.0470e-03, -2.0226e-02]]],


        [[[ 7.2091e-03, -8.4103e-03,  1.4732e-02,  ..., -4.6979e-02,
            6.4400e-03,  2.8904e-02],
          [ 1.6250e-02,  1.3651e-02,  1.0866e-02,  ...,  2.2896e-02,
           -2.7627e-02, -2.0380e-02],
          [-4.2874e-03,  1.3188e-02,  5.6002e-02,  ...,  1.4531e-02,
           -3.6373e-02,  1.4718e-02],
          ...,
          [-1.8288e-02, -2.9315e-02, -2.1606e-02,  ..., -9.1282e-03,
           -5.8628e-03,  2.7841e-02],
          [ 2.5472e-02, -9.5467e-03,  1.7910e-02,  ...,  5.2804e-02,
            1.6460e-02, -3.2568e-02],
          [ 6.0538e-02,  5.2825e-02, -1.4179e-02,  ..., -1.9711e-02,
           -2.2759e-02,  4.2829e-02]],

         [[ 2.3599e-02,  1.3105e-02, -1.5515e-02,  ..., -5.2272e-02,
            1.7371e-02,  5.1593e-02],
          [-1.5278e-02, -2.2221e-02, -9.9573e-03,  ...,  1.4146e-02,
           -5.2890e-03,  2.8415e-02],
          [ 2.0296e-02,  6.2886e-03,  8.9052e-03,  ...,  3.8949e-03,
           -2.7097e-02,  4.1680e-02],
          ...,
          [ 4.0601e-03,  1.9056e-02, -2.9331e-02,  ...,  4.0668e-02,
           -1.9083e-02, -1.7395e-02],
          [ 8.1408e-03,  9.8234e-03,  2.3204e-02,  ...,  1.3412e-02,
           -2.1918e-02, -1.5243e-02],
          [-9.5089e-03, -5.0955e-02, -8.0309e-03,  ...,  1.3662e-02,
            1.2470e-02,  2.3865e-02]],

         [[-3.6938e-02, -3.0125e-02,  2.1002e-03,  ...,  3.2634e-02,
            9.8915e-04,  4.8570e-02],
          [ 2.2933e-02,  2.6735e-03, -3.1782e-02,  ..., -1.4002e-02,
            2.6015e-02, -1.4468e-02],
          [ 9.8780e-03, -5.2945e-03, -7.7875e-03,  ...,  6.5309e-03,
           -4.8173e-04, -1.2449e-02],
          ...,
          [ 2.7437e-02,  2.2923e-02,  1.3914e-03,  ...,  8.0208e-03,
           -5.2944e-03,  1.0585e-02],
          [-2.1810e-02, -3.2059e-03, -4.3471e-02,  ..., -2.6494e-02,
           -5.8618e-03,  4.2660e-03],
          [ 7.8915e-03, -1.1578e-02, -1.7325e-03,  ..., -2.6321e-02,
            1.1771e-02, -3.3805e-03]]],


        [[[ 4.8924e-03,  5.3381e-02,  2.3432e-03,  ...,  3.9520e-02,
           -3.1483e-02, -1.3844e-03],
          [-2.1370e-02, -2.3765e-02, -7.0799e-04,  ..., -1.2477e-02,
            6.4860e-03,  9.2111e-03],
          [ 2.4182e-02,  3.0976e-02, -3.2721e-03,  ...,  3.4926e-02,
            1.1790e-02,  5.0445e-03],
          ...,
          [-3.1277e-02,  9.6008e-03,  1.1511e-02,  ...,  1.6153e-03,
           -2.4827e-02, -2.9086e-03],
          [-3.6445e-02, -1.5089e-02,  9.3971e-03,  ..., -2.3504e-02,
           -1.0307e-02,  1.5736e-02],
          [-1.4707e-02, -1.5626e-02,  1.6467e-02,  ...,  1.7959e-02,
           -2.3050e-02,  2.5492e-02]],

         [[-1.1201e-02, -4.3990e-02, -7.4646e-03,  ...,  3.6673e-03,
            1.6499e-02, -4.7007e-02],
          [ 8.0990e-03, -4.2616e-02,  7.0358e-03,  ..., -1.7759e-02,
            3.3706e-02,  1.1536e-02],
          [ 4.1109e-02, -3.1808e-02, -3.9563e-02,  ..., -2.8728e-02,
            1.8857e-02,  1.3827e-02],
          ...,
          [-1.1372e-02, -1.7424e-02, -2.3003e-02,  ..., -1.3856e-02,
            4.9664e-02, -1.0497e-02],
          [-1.0322e-02,  2.7649e-02,  1.1953e-02,  ..., -6.2082e-03,
           -1.1148e-03,  3.4921e-02],
          [-3.0570e-02, -3.0123e-03,  2.7743e-03,  ...,  5.5723e-03,
           -4.8874e-03, -1.6055e-04]],

         [[ 2.4923e-02,  2.0868e-02, -5.2651e-03,  ...,  1.6279e-02,
            2.2064e-02, -1.3076e-02],
          [-7.2745e-03, -4.2354e-02,  1.5418e-02,  ..., -1.1674e-03,
            1.0000e-02, -2.3384e-02],
          [ 2.4241e-02, -1.7611e-02,  7.1406e-03,  ..., -2.5418e-02,
           -3.4713e-02,  8.9039e-02],
          ...,
          [-1.6882e-02,  1.3639e-02, -2.4136e-02,  ..., -3.0827e-02,
           -1.3295e-02,  1.2300e-03],
          [-5.7769e-03, -3.0960e-02, -1.4906e-02,  ...,  6.0230e-04,
            2.4340e-02, -8.4780e-05],
          [-5.2281e-03, -2.8089e-03,  1.3347e-02,  ..., -3.1634e-02,
           -5.2016e-02,  1.1261e-02]]],


        ...,


        [[[-4.9362e-03,  5.4084e-02,  3.3374e-02,  ...,  1.7905e-02,
           -1.9728e-02, -3.1701e-02],
          [-3.0817e-02, -8.1362e-03, -2.7537e-02,  ..., -6.3569e-02,
           -2.0310e-02, -7.2052e-04],
          [-4.5635e-04,  3.0418e-02,  3.0518e-02,  ..., -3.4633e-02,
           -2.0791e-02, -2.6538e-02],
          ...,
          [-2.8322e-02,  3.7373e-02,  1.5667e-03,  ..., -2.0366e-02,
            2.5561e-02, -2.3891e-03],
          [-1.1880e-02, -2.4306e-02, -4.8566e-02,  ..., -1.7216e-02,
            2.2729e-02, -1.4182e-03],
          [-2.6608e-02,  1.8837e-02, -4.1405e-02,  ...,  2.3233e-02,
            3.5416e-02, -1.3448e-02]],

         [[ 3.6768e-03,  5.3128e-03,  4.1392e-03,  ..., -1.8476e-03,
           -3.9006e-03,  3.3954e-03],
          [-3.0200e-02,  6.9030e-03, -3.4584e-02,  ...,  4.8244e-03,
           -1.8161e-02, -6.1293e-03],
          [-2.8022e-02, -1.4891e-02, -2.2659e-02,  ..., -2.2900e-02,
            6.7330e-03, -1.9600e-02],
          ...,
          [ 9.1211e-03, -3.2383e-03,  4.3303e-02,  ...,  1.2189e-02,
           -2.9868e-02,  2.2345e-02],
          [-2.5615e-02,  3.5136e-02, -7.5517e-05,  ...,  2.9694e-03,
           -3.4913e-03,  4.7959e-03],
          [ 1.2944e-02,  2.7382e-02,  1.8912e-02,  ...,  2.0586e-02,
            3.3658e-02, -1.5339e-02]],

         [[-2.1386e-03,  1.8307e-02,  2.5376e-02,  ...,  9.4987e-04,
            4.0454e-03, -2.0127e-03],
          [ 1.2872e-02, -3.0387e-02, -2.3993e-02,  ...,  7.7148e-03,
           -5.3074e-02, -1.2678e-02],
          [-1.3112e-02,  5.1425e-03, -4.9520e-02,  ...,  4.6913e-03,
           -2.2104e-02, -5.3456e-04],
          ...,
          [ 1.6750e-02,  4.8536e-03,  1.4580e-02,  ..., -6.9482e-03,
           -4.2744e-02, -4.0523e-02],
          [ 1.6680e-02,  2.9945e-03,  4.3274e-02,  ..., -1.2001e-02,
            1.7178e-02,  5.8489e-02],
          [-2.1603e-03, -5.8656e-02, -9.4059e-03,  ..., -4.2243e-02,
            2.4269e-03,  1.2717e-02]]],


        [[[ 2.5915e-02,  3.2649e-02,  3.8395e-02,  ..., -4.3665e-02,
            2.3391e-02, -1.4028e-02],
          [ 8.1739e-03, -6.4968e-03,  2.9204e-02,  ..., -8.5413e-03,
           -2.1623e-02,  5.1130e-03],
          [ 7.8519e-03,  1.3435e-02,  7.7561e-04,  ..., -9.7008e-03,
            5.4110e-03, -9.2372e-03],
          ...,
          [-2.3275e-02,  3.2009e-02,  3.6138e-03,  ..., -2.8536e-02,
            4.1791e-02, -2.7498e-02],
          [ 1.0059e-02,  9.6014e-03, -3.6962e-03,  ..., -3.7531e-02,
            4.5322e-03,  1.3920e-02],
          [ 5.5040e-02, -1.9061e-04, -4.1243e-02,  ...,  8.9385e-03,
           -3.9604e-02, -6.6325e-03]],

         [[-2.2771e-02, -1.0692e-02, -2.6767e-02,  ..., -2.8779e-02,
           -4.7850e-02,  3.6392e-02],
          [ 9.4090e-03, -2.8967e-02,  3.0222e-03,  ...,  2.8676e-02,
           -3.6935e-02,  1.9896e-02],
          [-1.4398e-02, -3.4137e-02,  2.1017e-02,  ...,  1.6871e-02,
            6.5341e-03,  6.4937e-03],
          ...,
          [ 7.1507e-03, -1.9508e-02,  7.1291e-03,  ..., -3.5123e-02,
            4.4818e-03,  3.9480e-02],
          [-2.9854e-04, -4.0353e-02, -2.0663e-02,  ...,  1.0910e-02,
            2.6322e-02,  5.5001e-03],
          [-2.1403e-02, -1.5174e-02, -7.1800e-02,  ...,  1.3827e-02,
            3.0942e-02, -1.3484e-02]],

         [[ 2.7802e-02,  1.1777e-02, -5.1448e-04,  ...,  1.5261e-02,
            1.1572e-03,  9.8663e-03],
          [-4.9997e-02, -1.5921e-03,  3.7129e-02,  ...,  4.7443e-03,
            8.3763e-03, -6.9496e-02],
          [ 6.6009e-02,  2.1050e-02,  2.5048e-02,  ...,  1.0781e-02,
           -5.1852e-02,  1.2577e-02],
          ...,
          [ 4.4492e-02,  1.2210e-02,  2.9030e-02,  ..., -4.6604e-02,
            5.3351e-02, -4.0106e-02],
          [ 3.1685e-02, -8.3519e-04, -3.0599e-02,  ...,  2.8263e-02,
            6.9380e-04, -2.9322e-02],
          [-1.0121e-02, -3.9817e-02,  1.1384e-02,  ...,  8.0742e-03,
            2.5015e-02,  1.3404e-02]]],


        [[[ 1.6871e-02,  5.6997e-02,  1.0032e-02,  ..., -7.7560e-03,
            5.0926e-02, -2.5275e-02],
          [-1.0220e-02, -2.0097e-02, -3.4378e-02,  ..., -3.8438e-02,
           -1.3434e-02, -2.0003e-02],
          [-1.0793e-02, -1.3558e-02,  2.3113e-02,  ...,  1.7007e-02,
           -2.4922e-02,  5.8386e-03],
          ...,
          [ 8.0544e-03, -2.2394e-02, -1.7328e-02,  ...,  2.4695e-02,
            1.4935e-02,  3.5130e-02],
          [ 3.0019e-03, -1.3414e-02,  3.4724e-02,  ..., -1.2383e-02,
           -1.0382e-02, -1.3954e-02],
          [-1.7359e-02,  2.0736e-02,  2.4443e-02,  ...,  1.9802e-02,
           -2.6136e-02, -4.7788e-02]],

         [[ 6.0453e-02, -3.6757e-02, -1.0950e-02,  ..., -1.0203e-02,
           -6.8092e-03, -2.6935e-02],
          [-1.1775e-02, -3.2569e-02, -2.8808e-02,  ...,  1.0894e-02,
           -1.0003e-02,  3.9255e-04],
          [ 7.4434e-03, -9.4654e-03,  9.1455e-03,  ..., -2.9789e-02,
            8.6616e-03, -1.0145e-02],
          ...,
          [ 2.6996e-02,  1.8944e-02,  2.6264e-02,  ..., -4.2179e-03,
           -9.0789e-03,  1.4371e-02],
          [ 1.8090e-02,  1.5195e-02,  1.6836e-02,  ..., -2.8108e-02,
           -1.7183e-02,  1.0307e-02],
          [ 1.4960e-02, -2.0250e-02,  2.4621e-02,  ...,  1.2424e-02,
            3.1866e-03, -2.2336e-02]],

         [[ 9.5303e-03, -3.3409e-02,  4.3945e-02,  ...,  7.5880e-03,
            8.1003e-03,  3.4271e-03],
          [-1.7682e-02, -5.6425e-03, -2.7362e-02,  ...,  1.8802e-02,
           -8.1498e-03,  3.1211e-02],
          [-1.7878e-02, -3.9458e-03, -4.1848e-03,  ..., -8.0925e-03,
            7.7145e-02,  2.5273e-02],
          ...,
          [ 1.4489e-02, -3.7267e-02,  4.5815e-02,  ..., -3.8056e-02,
           -9.1176e-03,  1.4535e-02],
          [-4.5097e-03, -6.0162e-03, -1.5957e-02,  ..., -3.1264e-02,
           -5.1009e-02, -1.6873e-02],
          [-4.3461e-02, -3.5081e-02, -4.2223e-03,  ...,  3.9370e-03,
            3.1733e-03,  2.1845e-02]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0050, -0.0638,  0.0134],
          [-0.0293,  0.0197, -0.0532],
          [ 0.0178, -0.0084,  0.0636]],

         [[-0.0575, -0.0018,  0.0299],
          [-0.0028, -0.0755, -0.0260],
          [-0.0756, -0.0321, -0.0849]],

         [[-0.0039, -0.0599,  0.0165],
          [-0.1155, -0.0796, -0.0067],
          [-0.0637,  0.0172, -0.0037]],

         ...,

         [[-0.0529, -0.0713,  0.0032],
          [-0.0594, -0.0228,  0.0110],
          [ 0.0943, -0.0496,  0.0362]],

         [[ 0.0645, -0.0765, -0.1137],
          [-0.0964, -0.0240,  0.0096],
          [ 0.0457,  0.0264,  0.0090]],

         [[ 0.0740, -0.0519,  0.0532],
          [-0.0159,  0.0204,  0.0506],
          [-0.0380,  0.0024, -0.0969]]],


        [[[ 0.0544,  0.0099, -0.0477],
          [-0.0278,  0.0721, -0.0469],
          [-0.0113, -0.0208,  0.0168]],

         [[ 0.0349, -0.0251, -0.0546],
          [-0.1133,  0.0716,  0.0608],
          [ 0.0349,  0.0342,  0.0118]],

         [[-0.0229, -0.0263,  0.0382],
          [ 0.0150, -0.0003, -0.0300],
          [-0.0531,  0.0682, -0.1012]],

         ...,

         [[-0.0282, -0.0215, -0.0290],
          [ 0.1056,  0.0725,  0.0042],
          [-0.0322, -0.0165, -0.1589]],

         [[ 0.0237,  0.0063, -0.0302],
          [-0.0504, -0.0330,  0.0289],
          [-0.0625, -0.0192, -0.0007]],

         [[-0.0328,  0.0737,  0.0198],
          [ 0.0504,  0.0667,  0.0696],
          [-0.0190,  0.0048,  0.0324]]],


        [[[ 0.0326,  0.1463,  0.0410],
          [ 0.0412,  0.0367, -0.0470],
          [-0.1140, -0.0584,  0.0215]],

         [[-0.0040, -0.0555, -0.0111],
          [-0.0473,  0.0446,  0.0458],
          [ 0.0560, -0.0538,  0.0585]],

         [[ 0.0485, -0.0248, -0.0661],
          [ 0.0021, -0.0102, -0.0288],
          [ 0.0528,  0.0088,  0.0557]],

         ...,

         [[ 0.0848,  0.0656, -0.0093],
          [-0.0161,  0.0579,  0.0541],
          [-0.0844,  0.1121,  0.0414]],

         [[ 0.0796, -0.0319,  0.0939],
          [ 0.0443,  0.0201, -0.0468],
          [ 0.0496, -0.0109,  0.0845]],

         [[ 0.0277, -0.0544,  0.0018],
          [ 0.0711, -0.0814, -0.1087],
          [ 0.0056, -0.0455,  0.0703]]],


        ...,


        [[[ 0.0812,  0.0655,  0.0606],
          [-0.0315,  0.0102, -0.0016],
          [-0.0938, -0.0408,  0.0331]],

         [[ 0.1008,  0.1294,  0.0743],
          [ 0.1308,  0.0775,  0.0461],
          [-0.0104, -0.0532,  0.0409]],

         [[-0.0357,  0.0101,  0.1374],
          [ 0.0091,  0.0620,  0.0317],
          [-0.1085, -0.0289,  0.0364]],

         ...,

         [[ 0.0218,  0.0181,  0.0662],
          [ 0.0958,  0.0027, -0.0311],
          [ 0.0446, -0.0269, -0.0207]],

         [[-0.0379, -0.0110,  0.0336],
          [-0.0610,  0.0291,  0.0133],
          [-0.0054, -0.0389, -0.0094]],

         [[-0.0184, -0.0247,  0.0183],
          [ 0.0080, -0.0267, -0.0612],
          [ 0.1258,  0.0638, -0.0102]]],


        [[[-0.0425, -0.0630, -0.0154],
          [-0.0061,  0.0733, -0.0613],
          [ 0.0680,  0.0592,  0.0185]],

         [[ 0.0438,  0.0317,  0.0229],
          [ 0.0473,  0.0536, -0.0545],
          [-0.0285, -0.0488, -0.0124]],

         [[-0.0581,  0.0268,  0.0697],
          [ 0.0814, -0.0069,  0.1536],
          [-0.0293,  0.0129, -0.0880]],

         ...,

         [[-0.0034, -0.0219,  0.0645],
          [ 0.0730,  0.0745, -0.0870],
          [-0.0095,  0.0050,  0.1283]],

         [[-0.0351, -0.0363, -0.0435],
          [-0.0219, -0.0509,  0.0456],
          [-0.0117, -0.0074,  0.0010]],

         [[ 0.0170, -0.0844,  0.0990],
          [ 0.1091, -0.0432, -0.0648],
          [-0.0399,  0.0646,  0.0186]]],


        [[[-0.0803, -0.1054,  0.0921],
          [-0.0909, -0.0291, -0.0193],
          [-0.0452,  0.0490, -0.0280]],

         [[-0.0285,  0.0108,  0.1110],
          [ 0.0203,  0.0118, -0.0972],
          [ 0.0673, -0.0271, -0.1913]],

         [[ 0.0617,  0.0106, -0.0871],
          [ 0.0354, -0.0329, -0.0043],
          [ 0.0226, -0.0021, -0.0526]],

         ...,

         [[-0.0180, -0.0681,  0.0292],
          [ 0.0675,  0.0332, -0.0232],
          [ 0.0299,  0.0057,  0.0015]],

         [[ 0.1113,  0.0606,  0.0502],
          [ 0.1781, -0.0842,  0.0573],
          [-0.0860,  0.0324,  0.0575]],

         [[ 0.0376, -0.0389,  0.0173],
          [-0.0039,  0.0698, -0.0004],
          [-0.0288, -0.0671, -0.0087]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-3.7454e-02, -4.5778e-02, -1.6145e-01],
          [-9.0920e-03,  2.0839e-02,  1.5129e-02],
          [ 2.1112e-02,  1.5400e-02,  5.0955e-02]],

         [[ 6.7400e-02,  2.8226e-02, -6.5543e-02],
          [ 2.3341e-02, -2.2441e-02, -2.5141e-02],
          [-4.9849e-02,  1.1966e-01,  6.4568e-03]],

         [[-1.0396e-01,  1.0459e-01,  1.1305e-01],
          [-1.0557e-01,  1.2400e-02,  2.3269e-02],
          [-1.1777e-01, -3.2548e-02, -1.1523e-02]],

         ...,

         [[ 6.0683e-03, -2.2984e-02,  1.7210e-02],
          [ 8.2978e-02, -2.1037e-02,  9.4044e-02],
          [-6.2499e-02,  9.0232e-02,  4.1193e-02]],

         [[-7.3661e-02, -1.7893e-03, -7.9858e-02],
          [-3.9463e-02, -2.9953e-02, -9.7376e-03],
          [-1.8027e-03, -5.4420e-02, -4.1583e-02]],

         [[-1.2726e-02,  7.0310e-03, -2.0836e-02],
          [-5.0122e-02, -1.8683e-02, -1.9468e-02],
          [-1.5561e-02, -3.9554e-02,  4.6152e-02]]],


        [[[-7.3131e-02,  3.7353e-02, -4.3284e-02],
          [-7.1491e-02, -4.4596e-02,  4.1170e-02],
          [ 5.5902e-02, -5.1324e-03,  1.0334e-01]],

         [[ 4.4735e-02, -1.0651e-01, -8.2564e-02],
          [ 4.9752e-02,  7.2514e-02, -1.5112e-02],
          [ 5.3449e-02, -3.5923e-02, -1.5912e-02]],

         [[ 2.6167e-02, -3.0271e-02, -3.0215e-02],
          [-7.4615e-03,  3.1695e-02, -2.3027e-02],
          [-1.5300e-02, -2.1997e-03, -3.7482e-02]],

         ...,

         [[ 1.4038e-01, -1.9936e-02,  5.5558e-02],
          [-1.1592e-02, -5.4794e-02, -1.3637e-01],
          [-4.1873e-02,  5.0389e-02,  9.9416e-03]],

         [[ 9.9710e-02,  2.3597e-02, -2.5984e-02],
          [ 5.3532e-03,  7.0629e-02,  1.8709e-02],
          [ 5.7990e-02, -5.4218e-02,  6.2785e-02]],

         [[-2.3015e-02, -5.8277e-04, -5.8637e-02],
          [-1.2597e-02, -4.0155e-03,  3.0520e-03],
          [ 1.3583e-01, -1.2613e-01, -1.9233e-01]]],


        [[[-7.0698e-02,  3.6783e-02,  6.1339e-03],
          [-1.8869e-02, -2.1570e-02, -4.3862e-02],
          [-4.8323e-02, -1.0624e-01, -2.3372e-02]],

         [[ 1.1832e-01,  4.4725e-02,  9.8634e-02],
          [ 7.9120e-02,  3.7458e-03, -8.8858e-02],
          [-3.5066e-02,  9.6303e-02, -1.5523e-02]],

         [[-5.3715e-02,  3.4809e-02, -1.2114e-01],
          [-8.0892e-02, -3.5173e-02, -1.4692e-01],
          [ 8.5530e-02,  4.5796e-02,  2.2980e-02]],

         ...,

         [[-8.5383e-02,  2.1154e-02, -4.8185e-02],
          [ 5.8211e-02, -2.8806e-02, -4.3044e-02],
          [ 1.0241e-01, -2.0515e-02, -6.1804e-02]],

         [[-4.2321e-02, -2.3711e-02, -7.1056e-02],
          [-1.7129e-02,  1.9552e-02, -7.0388e-02],
          [ 1.6463e-02, -9.6002e-02, -1.2959e-01]],

         [[ 5.5983e-03, -3.0554e-02, -2.2294e-02],
          [ 5.7037e-02, -2.0208e-02,  4.1961e-02],
          [-3.6302e-02,  2.7168e-03, -6.4489e-02]]],


        ...,


        [[[-1.8531e-02, -6.5478e-02,  8.6115e-02],
          [ 3.1350e-02, -7.3005e-02,  3.8860e-02],
          [-1.5946e-03,  9.7061e-03, -4.6885e-02]],

         [[ 7.1627e-02,  2.2588e-02, -4.1137e-02],
          [ 7.1922e-02,  9.5685e-02,  4.0316e-02],
          [ 2.0100e-02,  5.3042e-02, -1.0922e-02]],

         [[ 6.7188e-02, -7.1083e-02, -7.3537e-04],
          [-1.1813e-01, -6.2200e-02,  2.0368e-04],
          [-6.6985e-02, -8.0367e-02, -1.5568e-02]],

         ...,

         [[-7.2570e-02, -7.7606e-02,  2.7437e-02],
          [ 7.9772e-03, -1.4895e-03, -5.0030e-03],
          [-2.6426e-02,  2.7353e-03,  1.4322e-01]],

         [[ 4.1229e-02, -2.7304e-02, -1.1771e-01],
          [-1.1620e-01,  2.3014e-01, -7.0119e-02],
          [-3.8080e-02, -7.5883e-02,  7.9950e-02]],

         [[ 8.8874e-02,  2.8091e-02, -4.1784e-02],
          [ 5.6488e-02,  4.8359e-02, -4.0518e-02],
          [ 3.8939e-03,  3.4643e-02,  4.5275e-03]]],


        [[[-4.3174e-02, -4.5421e-02, -6.0137e-02],
          [ 1.2601e-02, -1.2040e-02,  5.8902e-02],
          [ 3.0111e-02,  1.1352e-01,  1.3327e-01]],

         [[ 1.2859e-01,  2.2339e-02, -3.6167e-02],
          [ 1.3609e-01,  5.0124e-02, -1.4795e-02],
          [ 4.2278e-02,  4.3529e-02, -1.1695e-03]],

         [[ 1.9379e-01,  1.3867e-02, -4.9205e-02],
          [ 2.1904e-02,  3.7236e-02, -1.1023e-01],
          [ 3.5434e-02, -1.6416e-02, -3.1785e-02]],

         ...,

         [[-2.2035e-02,  6.1947e-02, -1.0864e-01],
          [-1.3198e-02, -6.0071e-03, -2.7337e-02],
          [-2.0149e-02,  5.1172e-02, -2.0034e-02]],

         [[-4.8441e-02, -2.8384e-02,  2.1272e-02],
          [-4.7410e-02, -5.5287e-02,  6.7227e-03],
          [-1.0117e-01, -6.8263e-02, -3.8647e-02]],

         [[-4.2996e-03,  5.5248e-02,  1.5910e-03],
          [-2.7602e-02, -3.6102e-03,  2.3559e-02],
          [ 4.0882e-02, -7.7130e-02,  7.7380e-03]]],


        [[[-7.7091e-02,  8.4093e-02, -6.2196e-03],
          [ 2.4345e-02,  6.6268e-03, -1.9569e-02],
          [ 3.4492e-02,  3.0254e-02,  8.1302e-02]],

         [[ 6.4701e-02, -6.5938e-02,  5.3169e-03],
          [ 4.1576e-02, -2.6386e-02,  8.6866e-02],
          [-4.1703e-02, -5.8688e-03,  1.4057e-01]],

         [[ 1.0358e-01, -1.1199e-01,  6.7928e-02],
          [ 1.9012e-02, -1.6403e-02, -5.1040e-02],
          [-5.4187e-02,  1.0682e-02,  4.3186e-02]],

         ...,

         [[ 2.1667e-02,  1.0694e-02, -7.7212e-02],
          [-3.0432e-02, -6.9133e-02, -8.6671e-02],
          [-1.1436e-02, -2.4477e-02,  1.5398e-02]],

         [[ 1.2645e-01,  9.2735e-02,  6.4343e-02],
          [ 2.7381e-02,  2.4422e-02, -8.1381e-02],
          [-7.3381e-03,  2.0972e-02,  1.5939e-03]],

         [[-2.8251e-03,  2.8000e-02,  5.5732e-02],
          [-2.1373e-03, -1.7597e-02,  2.0198e-02],
          [-2.2913e-02,  1.2979e-02,  5.6592e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-0.0166,  0.0065,  0.1597],
          [ 0.0149, -0.0139,  0.0567],
          [ 0.0856,  0.0426,  0.0298]],

         [[-0.0176, -0.0372, -0.0841],
          [-0.0152,  0.0419, -0.1124],
          [-0.0415,  0.0604,  0.0205]],

         [[ 0.0680, -0.0412,  0.0895],
          [ 0.0210, -0.0518, -0.0725],
          [ 0.1026, -0.0740, -0.0407]],

         ...,

         [[ 0.0861,  0.0090, -0.0162],
          [ 0.0614,  0.0787, -0.0035],
          [ 0.0574, -0.0145, -0.1676]],

         [[ 0.0251,  0.0152,  0.0196],
          [ 0.0169, -0.0580, -0.0066],
          [ 0.0584, -0.0919, -0.0574]],

         [[-0.1094,  0.0017, -0.0596],
          [ 0.0019,  0.0327,  0.0516],
          [-0.0037,  0.0536,  0.0262]]],


        [[[ 0.0928, -0.0237, -0.0506],
          [ 0.0455, -0.0351, -0.0278],
          [-0.0225, -0.1192,  0.0130]],

         [[ 0.1027, -0.0829,  0.0096],
          [-0.0700,  0.0619,  0.0126],
          [ 0.1757,  0.0759, -0.0330]],

         [[ 0.0832, -0.0650,  0.0236],
          [-0.0328,  0.0321, -0.0974],
          [ 0.0243, -0.0894, -0.0142]],

         ...,

         [[ 0.0059, -0.0209,  0.0364],
          [ 0.0447,  0.0383,  0.0379],
          [ 0.0228,  0.0242,  0.0438]],

         [[-0.0466,  0.0685, -0.0551],
          [-0.0138,  0.0715,  0.0590],
          [ 0.0518, -0.0390, -0.0203]],

         [[ 0.0992,  0.0441, -0.0678],
          [-0.0209,  0.0274,  0.1662],
          [ 0.0522, -0.0510, -0.0639]]],


        [[[ 0.0563,  0.0088,  0.0048],
          [ 0.0282, -0.0322, -0.0342],
          [ 0.0131, -0.0754,  0.0227]],

         [[ 0.0757,  0.0720,  0.0404],
          [ 0.0790, -0.0690,  0.0595],
          [ 0.0982,  0.0296, -0.0103]],

         [[-0.0376,  0.0050,  0.0017],
          [ 0.0953,  0.0764,  0.0222],
          [ 0.0368,  0.0678, -0.0722]],

         ...,

         [[ 0.0141, -0.0908,  0.1197],
          [-0.0403,  0.0180,  0.0801],
          [-0.0156, -0.0846,  0.0588]],

         [[-0.0548,  0.0217,  0.0013],
          [ 0.0180, -0.0237,  0.0580],
          [-0.0116,  0.0222,  0.0526]],

         [[ 0.0338,  0.0641, -0.0011],
          [ 0.0169,  0.0400, -0.0573],
          [-0.0752,  0.0564, -0.0233]]],


        ...,


        [[[ 0.0385,  0.0355, -0.1106],
          [-0.1093,  0.0832, -0.0905],
          [ 0.0300,  0.0136, -0.0193]],

         [[ 0.0403,  0.0884,  0.0712],
          [-0.0193, -0.0359,  0.0230],
          [ 0.0789, -0.0107,  0.0179]],

         [[ 0.0639, -0.0644,  0.0879],
          [ 0.0319,  0.0056,  0.1046],
          [ 0.1840, -0.0788,  0.0246]],

         ...,

         [[-0.1090, -0.0365,  0.0509],
          [ 0.0821,  0.1347, -0.0060],
          [ 0.0536,  0.0543, -0.0338]],

         [[-0.0274,  0.0890,  0.0314],
          [-0.0902,  0.0324,  0.0252],
          [-0.0219,  0.0241, -0.0776]],

         [[-0.0170,  0.0824,  0.0095],
          [ 0.0435, -0.1433, -0.0126],
          [ 0.0022, -0.0446,  0.0771]]],


        [[[ 0.0339,  0.0148, -0.0155],
          [ 0.0600, -0.0405, -0.0444],
          [ 0.1028,  0.0718,  0.0735]],

         [[ 0.0203,  0.0446, -0.0004],
          [ 0.0167, -0.0285,  0.0706],
          [-0.0635,  0.0484,  0.0125]],

         [[ 0.1337, -0.0753,  0.0255],
          [ 0.1470, -0.0666, -0.0356],
          [-0.0265,  0.0356, -0.0154]],

         ...,

         [[-0.0420, -0.1487,  0.0802],
          [ 0.0095, -0.0520,  0.0061],
          [-0.0240,  0.1489,  0.0459]],

         [[ 0.0636, -0.0729,  0.0986],
          [ 0.0470, -0.0279,  0.0577],
          [ 0.0473,  0.0240,  0.0302]],

         [[-0.0034,  0.0291,  0.0025],
          [-0.1033,  0.0335,  0.0375],
          [ 0.1015,  0.0225,  0.0253]]],


        [[[ 0.0021,  0.0185, -0.1022],
          [ 0.0045, -0.0626, -0.0169],
          [-0.0412,  0.0307,  0.0174]],

         [[ 0.0070, -0.0397, -0.0244],
          [ 0.1097, -0.0467, -0.0557],
          [-0.0585,  0.0841, -0.1212]],

         [[-0.0330,  0.0305,  0.0079],
          [ 0.0979,  0.0364, -0.0036],
          [-0.0060,  0.0063, -0.0198]],

         ...,

         [[ 0.0399, -0.0281,  0.0586],
          [ 0.0690, -0.0824, -0.0086],
          [ 0.0433, -0.0100,  0.0519]],

         [[ 0.0211,  0.0242,  0.0131],
          [ 0.0009, -0.0070, -0.0606],
          [ 0.0384,  0.0333, -0.0739]],

         [[ 0.1199, -0.0141, -0.0762],
          [ 0.0755,  0.0450, -0.0413],
          [-0.0002,  0.0341, -0.0444]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-0.0280, -0.0147, -0.0485],
          [ 0.0631,  0.0076,  0.0608],
          [-0.1039, -0.0639, -0.1164]],

         [[-0.0494, -0.0180, -0.0009],
          [ 0.0324, -0.0012,  0.0198],
          [ 0.0205, -0.0388,  0.0271]],

         [[ 0.0691, -0.0120,  0.0384],
          [-0.0718,  0.0159, -0.0223],
          [ 0.0365, -0.0063,  0.0133]],

         ...,

         [[ 0.0083,  0.0272,  0.0508],
          [-0.0361, -0.0496,  0.1175],
          [-0.0788,  0.0468, -0.0370]],

         [[ 0.0327,  0.0423,  0.0096],
          [-0.0291,  0.0157, -0.0339],
          [ 0.0783, -0.0566, -0.0650]],

         [[ 0.0567, -0.0745, -0.1048],
          [ 0.0515, -0.0036,  0.0297],
          [-0.0426,  0.0088,  0.0377]]],


        [[[-0.0144,  0.0019, -0.0142],
          [ 0.0316,  0.1161, -0.0319],
          [ 0.0877, -0.0933, -0.0546]],

         [[ 0.0599,  0.0268,  0.0347],
          [ 0.0584,  0.0327,  0.0352],
          [-0.0414,  0.0298,  0.0676]],

         [[ 0.0263,  0.0244, -0.0692],
          [-0.0889,  0.0479,  0.0616],
          [ 0.0493, -0.0401, -0.0472]],

         ...,

         [[-0.0641,  0.1029,  0.0308],
          [ 0.0130, -0.0098, -0.0042],
          [-0.0210, -0.0148,  0.0573]],

         [[-0.1503, -0.0525,  0.0120],
          [ 0.0169,  0.0514, -0.0088],
          [-0.0528,  0.0397, -0.0245]],

         [[ 0.1157, -0.0149,  0.0643],
          [ 0.0100,  0.0212, -0.0330],
          [-0.0311, -0.0924,  0.0179]]],


        [[[-0.0538, -0.0022,  0.0883],
          [ 0.0350, -0.0154, -0.0226],
          [-0.0694, -0.0243, -0.0385]],

         [[-0.0933, -0.0360, -0.0526],
          [ 0.0747,  0.0655,  0.0022],
          [-0.0169, -0.0249,  0.0352]],

         [[ 0.0129,  0.0017, -0.0560],
          [-0.0162, -0.0262, -0.0142],
          [ 0.0366,  0.0661,  0.0122]],

         ...,

         [[-0.1047,  0.0739, -0.0119],
          [-0.0006, -0.0487, -0.0142],
          [-0.0230, -0.0383,  0.0732]],

         [[ 0.0033, -0.0441, -0.0392],
          [ 0.0151, -0.0776,  0.0352],
          [-0.0671, -0.0904, -0.0058]],

         [[-0.0425,  0.0111,  0.1119],
          [ 0.0639,  0.0821,  0.1134],
          [-0.0830, -0.0246,  0.0461]]],


        ...,


        [[[-0.0400, -0.0013, -0.0302],
          [-0.0291, -0.0458,  0.0459],
          [-0.0026,  0.0745,  0.0701]],

         [[-0.0220, -0.0305,  0.0536],
          [ 0.1128,  0.0801,  0.0201],
          [ 0.1208, -0.1036, -0.0091]],

         [[ 0.0119, -0.0571, -0.0212],
          [ 0.0278, -0.0690,  0.0509],
          [-0.0085, -0.0240, -0.1554]],

         ...,

         [[-0.0664,  0.1094, -0.0646],
          [ 0.0969, -0.0421,  0.1554],
          [-0.0121, -0.0914, -0.0009]],

         [[ 0.0357, -0.0059,  0.1055],
          [ 0.0908,  0.1766, -0.0200],
          [-0.0285,  0.1219,  0.0377]],

         [[ 0.0693, -0.0794, -0.0116],
          [-0.0799,  0.0684,  0.0577],
          [-0.0182,  0.0014,  0.0052]]],


        [[[ 0.0966, -0.0218, -0.0641],
          [ 0.1317, -0.0199,  0.0076],
          [ 0.0272, -0.1035,  0.0474]],

         [[-0.0392, -0.0614, -0.0244],
          [ 0.0214, -0.0384, -0.0669],
          [ 0.0555, -0.0792, -0.0895]],

         [[ 0.0170,  0.0357,  0.0689],
          [-0.0015, -0.0829, -0.0324],
          [ 0.0128, -0.0541,  0.0366]],

         ...,

         [[ 0.0185,  0.0162,  0.0908],
          [ 0.0775,  0.0624,  0.0604],
          [ 0.0060, -0.0236, -0.0399]],

         [[-0.0009, -0.0948, -0.0235],
          [ 0.0182, -0.0518, -0.0513],
          [ 0.0124, -0.1105,  0.0636]],

         [[ 0.0410, -0.1003,  0.0263],
          [ 0.0263,  0.0152, -0.0136],
          [-0.0065,  0.0562, -0.0348]]],


        [[[-0.0369, -0.0694,  0.0041],
          [ 0.0703,  0.0832, -0.0742],
          [-0.0010, -0.0048, -0.0437]],

         [[ 0.0598, -0.0256, -0.0183],
          [-0.0893,  0.0016,  0.1120],
          [ 0.0460, -0.0396,  0.1304]],

         [[-0.0101,  0.0515, -0.0435],
          [ 0.0168,  0.0361, -0.0142],
          [ 0.0083,  0.0181,  0.0280]],

         ...,

         [[ 0.0929, -0.0077,  0.0374],
          [-0.0311,  0.1321,  0.0025],
          [ 0.0389,  0.0442, -0.0723]],

         [[ 0.0490, -0.0101, -0.1014],
          [-0.0256, -0.0528, -0.0106],
          [ 0.1019, -0.0903,  0.0781]],

         [[-0.0513, -0.0432, -0.0570],
          [-0.0312,  0.0402,  0.0423],
          [ 0.0027,  0.0932,  0.0955]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[-0.0913]],

         [[-0.0827]],

         [[-0.1330]],

         ...,

         [[ 0.0844]],

         [[ 0.1649]],

         [[ 0.1389]]],


        [[[ 0.0192]],

         [[ 0.1082]],

         [[-0.0638]],

         ...,

         [[ 0.0256]],

         [[-0.0488]],

         [[ 0.0659]]],


        [[[ 0.0080]],

         [[-0.2238]],

         [[ 0.0190]],

         ...,

         [[-0.1017]],

         [[-0.0994]],

         [[-0.1052]]],


        ...,


        [[[-0.0296]],

         [[-0.1569]],

         [[-0.0636]],

         ...,

         [[-0.1090]],

         [[ 0.1023]],

         [[ 0.0223]]],


        [[[-0.0475]],

         [[ 0.1050]],

         [[ 0.2109]],

         ...,

         [[-0.2145]],

         [[-0.0543]],

         [[-0.1555]]],


        [[[-0.1307]],

         [[-0.0506]],

         [[ 0.0338]],

         ...,

         [[-0.0565]],

         [[ 0.0386]],

         [[-0.0863]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-0.0198,  0.0261,  0.0181],
          [-0.0101,  0.0009, -0.0256],
          [ 0.0390, -0.0359,  0.0107]],

         [[ 0.0401, -0.0249,  0.0104],
          [ 0.0444, -0.0260,  0.0502],
          [-0.0282,  0.0517, -0.0368]],

         [[ 0.0099,  0.0518,  0.0058],
          [-0.0133, -0.0569, -0.0388],
          [-0.0468, -0.0147,  0.0041]],

         ...,

         [[-0.0210,  0.0173, -0.0269],
          [ 0.0096,  0.0494,  0.0009],
          [ 0.0148,  0.0274, -0.0110]],

         [[-0.0529, -0.0161,  0.0285],
          [ 0.0002, -0.0337, -0.0647],
          [ 0.0090, -0.0486, -0.0787]],

         [[-0.0075,  0.0220, -0.1114],
          [-0.0467, -0.1056,  0.0468],
          [ 0.0192, -0.0403, -0.0078]]],


        [[[ 0.1079, -0.0082, -0.0402],
          [ 0.0488,  0.0565, -0.0240],
          [ 0.1042,  0.0197, -0.0361]],

         [[ 0.0764, -0.0604, -0.0295],
          [-0.0181,  0.0714,  0.0457],
          [ 0.0424,  0.0401,  0.0335]],

         [[-0.0004, -0.0274, -0.0433],
          [-0.0647, -0.0575, -0.0945],
          [ 0.0416, -0.0875,  0.0070]],

         ...,

         [[-0.0218,  0.0753,  0.0124],
          [ 0.0662,  0.0131,  0.0364],
          [-0.0022, -0.0641, -0.0222]],

         [[ 0.0491, -0.0427, -0.0048],
          [-0.0036, -0.0207,  0.0385],
          [ 0.0380, -0.0906,  0.0242]],

         [[-0.0707,  0.1066,  0.0498],
          [ 0.0081,  0.0006, -0.0330],
          [-0.0068, -0.0081,  0.0429]]],


        [[[ 0.0984, -0.0333, -0.0643],
          [ 0.0775,  0.0428,  0.0133],
          [-0.0255,  0.0296, -0.0968]],

         [[ 0.0480, -0.0393,  0.0211],
          [-0.0493,  0.0740, -0.0605],
          [-0.0507, -0.0201, -0.0175]],

         [[-0.0885, -0.0298, -0.0584],
          [ 0.0124,  0.0123, -0.0565],
          [ 0.0116,  0.0531, -0.0679]],

         ...,

         [[-0.0121,  0.0797,  0.0058],
          [-0.0376,  0.0172,  0.0044],
          [ 0.1147,  0.0161, -0.0277]],

         [[-0.0252,  0.0468,  0.1731],
          [ 0.0136, -0.0035, -0.0373],
          [ 0.0902,  0.0861,  0.0553]],

         [[-0.0349,  0.0079, -0.0178],
          [ 0.0204,  0.0342, -0.0020],
          [ 0.0620,  0.0079, -0.0612]]],


        ...,


        [[[ 0.1347,  0.0099, -0.0361],
          [-0.0035, -0.0745, -0.0222],
          [-0.0056,  0.0411, -0.0986]],

         [[-0.0345, -0.0034,  0.0054],
          [-0.0157,  0.0622, -0.0807],
          [ 0.0761, -0.0118,  0.0143]],

         [[ 0.1413,  0.0505, -0.0979],
          [-0.1032, -0.0002,  0.0696],
          [ 0.0119, -0.0472,  0.0220]],

         ...,

         [[-0.0045, -0.0208,  0.0019],
          [-0.0622,  0.0289,  0.0916],
          [-0.0183, -0.0148, -0.0788]],

         [[ 0.0769, -0.0176, -0.0245],
          [ 0.0657, -0.0521, -0.0501],
          [ 0.0532,  0.0304,  0.0978]],

         [[ 0.1020, -0.0251, -0.0673],
          [-0.0059,  0.0004,  0.0555],
          [-0.0537, -0.0249,  0.0183]]],


        [[[ 0.0424, -0.0167,  0.0866],
          [-0.0606, -0.0311, -0.0526],
          [-0.0128,  0.0524,  0.0226]],

         [[-0.1122,  0.0613, -0.0398],
          [-0.0145, -0.0065,  0.0144],
          [ 0.0152, -0.0080,  0.0675]],

         [[ 0.0280,  0.0638,  0.0230],
          [ 0.0360, -0.0063, -0.0648],
          [ 0.0271,  0.0508,  0.0137]],

         ...,

         [[-0.0697,  0.0391,  0.0013],
          [ 0.0656, -0.0398, -0.0225],
          [-0.0236,  0.0840,  0.0036]],

         [[-0.0312, -0.0058,  0.1229],
          [-0.0547, -0.0417,  0.0012],
          [-0.0288, -0.0406, -0.0691]],

         [[-0.0714, -0.0006, -0.0323],
          [-0.0089, -0.0790, -0.0336],
          [ 0.0160,  0.0659,  0.0455]]],


        [[[-0.0112,  0.0604, -0.0273],
          [-0.0708, -0.0445,  0.0365],
          [ 0.0781, -0.0205, -0.0965]],

         [[-0.0517,  0.0066, -0.0007],
          [ 0.0375, -0.0864,  0.0011],
          [ 0.0374, -0.0602, -0.0259]],

         [[ 0.0124, -0.0304,  0.0862],
          [-0.0370,  0.0908,  0.0754],
          [-0.0489, -0.0019, -0.0399]],

         ...,

         [[ 0.0270, -0.0580, -0.0214],
          [ 0.0145, -0.0159, -0.0225],
          [-0.0283, -0.0213,  0.0277]],

         [[ 0.0157,  0.0083, -0.0028],
          [-0.0268,  0.0401,  0.0844],
          [-0.0017,  0.0732, -0.0111]],

         [[ 0.0829,  0.0710,  0.0648],
          [ 0.0115,  0.0046,  0.0504],
          [-0.0556,  0.0383,  0.0699]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 4.9042e-02,  1.6657e-03, -1.7041e-02],
          [ 9.8654e-03, -2.6194e-02,  7.4182e-02],
          [-6.2370e-03,  1.6072e-02, -8.5455e-03]],

         [[-5.5789e-02, -1.1928e-01,  5.3841e-02],
          [-1.6139e-02, -2.3253e-02, -4.3540e-02],
          [-5.1815e-02, -1.8207e-03, -2.2636e-02]],

         [[ 1.4521e-02,  5.2434e-02, -4.5872e-02],
          [ 5.6302e-02, -2.9346e-02,  2.2898e-02],
          [-2.3840e-04,  5.8432e-02,  1.9283e-02]],

         ...,

         [[ 8.4089e-03,  1.5047e-02, -4.1923e-02],
          [ 1.0501e-02, -6.3784e-02,  4.8130e-03],
          [-7.1981e-03,  2.7745e-02, -1.9624e-02]],

         [[ 6.4421e-02, -3.1620e-02, -1.5695e-02],
          [-9.5847e-03, -1.5443e-02, -2.5444e-02],
          [ 1.9359e-02,  1.7664e-03, -1.5064e-02]],

         [[ 1.2144e-01,  2.5688e-02, -1.8690e-02],
          [ 5.6899e-02, -3.8942e-02,  1.0707e-02],
          [-1.4571e-02,  1.9294e-02, -5.2543e-02]]],


        [[[-2.3331e-02,  3.9749e-02,  4.2693e-02],
          [ 2.2051e-03, -4.8333e-02, -2.8966e-02],
          [-3.2725e-02,  2.0308e-02, -5.6603e-02]],

         [[-2.8929e-02, -2.8019e-02, -3.9126e-02],
          [-2.0797e-02,  3.6291e-02,  2.1972e-02],
          [-1.7941e-02, -7.2156e-03, -4.1787e-02]],

         [[ 5.5106e-04,  1.9524e-02, -3.4518e-02],
          [-5.9798e-02,  1.4007e-02,  1.2895e-02],
          [ 1.5291e-02, -2.2689e-02,  1.6842e-02]],

         ...,

         [[ 3.1809e-03,  3.4934e-03, -6.8120e-02],
          [-4.8589e-02,  6.7790e-02,  1.4981e-01],
          [ 4.3387e-03, -6.6471e-03,  6.4403e-02]],

         [[ 6.1524e-02,  7.9351e-03, -7.3218e-02],
          [ 6.2383e-02,  1.5901e-03, -1.1730e-02],
          [-6.7008e-03,  3.7034e-02,  3.5987e-02]],

         [[ 2.5161e-02, -3.2962e-02, -2.8322e-02],
          [-1.0439e-02, -3.6891e-02,  3.0593e-02],
          [ 1.3517e-02, -2.4407e-02, -4.8886e-02]]],


        [[[-4.3038e-03,  5.1359e-03,  4.0507e-02],
          [-5.7544e-02,  5.1334e-02, -5.9006e-02],
          [ 6.0048e-02, -4.0634e-02, -3.4408e-02]],

         [[ 2.1706e-02, -1.3310e-02,  4.1460e-02],
          [ 9.5483e-02,  4.1099e-02,  1.7858e-02],
          [-3.8586e-02, -6.7982e-02, -4.3869e-02]],

         [[-5.1004e-02, -4.6299e-02, -3.7476e-02],
          [ 5.6979e-02,  1.4434e-02,  8.8826e-03],
          [ 1.1064e-02,  1.2085e-01,  7.2314e-02]],

         ...,

         [[ 6.2734e-02, -7.5188e-02, -2.5407e-02],
          [ 3.7323e-02, -4.5754e-02, -6.4386e-02],
          [-1.9294e-03, -1.0700e-01,  2.7790e-02]],

         [[ 1.9664e-02,  3.9895e-03,  2.1813e-02],
          [-9.3606e-02,  3.9950e-02, -6.2173e-02],
          [-4.1462e-02,  7.7772e-03, -3.7564e-03]],

         [[ 1.0034e-01,  2.3401e-02, -5.6493e-02],
          [ 3.1596e-02,  6.2349e-03, -1.9467e-03],
          [-3.9851e-02, -3.1031e-02,  1.5010e-01]]],


        ...,


        [[[-3.6732e-02,  1.7149e-02,  1.5600e-02],
          [ 9.6054e-03,  1.6406e-02,  8.0096e-03],
          [ 3.6872e-02,  3.3719e-02, -3.6099e-02]],

         [[ 1.7200e-02,  3.6350e-02, -7.7084e-03],
          [-1.2648e-02,  1.4771e-02, -2.3069e-02],
          [-6.5357e-02, -2.5401e-02,  4.2183e-02]],

         [[ 1.5940e-02,  2.3004e-02,  6.4117e-02],
          [ 2.4709e-02,  3.5857e-02,  5.7619e-02],
          [ 4.3446e-02,  6.7952e-02,  9.6440e-02]],

         ...,

         [[-7.1899e-02, -4.0816e-02,  2.5394e-02],
          [ 2.8548e-02,  7.0800e-02, -2.3175e-02],
          [-1.9793e-02, -4.3973e-02,  6.9869e-02]],

         [[-5.1370e-04,  2.0093e-02,  5.4843e-02],
          [-2.0843e-03, -1.0708e-03,  3.1126e-02],
          [-7.4696e-02,  7.1250e-02,  4.0064e-02]],

         [[ 7.3190e-02,  2.1180e-02,  2.1788e-02],
          [-4.1601e-02, -9.1493e-02, -2.9194e-02],
          [ 1.6139e-02,  1.9077e-02, -3.8649e-02]]],


        [[[-2.2096e-02,  3.2271e-02, -5.7786e-02],
          [-4.3089e-02, -9.3807e-02,  2.2653e-02],
          [-3.1783e-02,  1.7041e-02, -6.2810e-03]],

         [[-3.4280e-02, -1.3312e-02,  4.2958e-02],
          [-8.8460e-02,  5.0083e-03, -1.2559e-01],
          [ 2.5641e-02, -1.4769e-03, -4.2397e-02]],

         [[ 1.0843e-01,  1.3425e-02,  2.9391e-02],
          [-3.5678e-02,  5.4362e-02,  6.2343e-02],
          [ 9.8822e-02,  3.2363e-02,  2.6637e-02]],

         ...,

         [[-1.6089e-01, -9.3204e-04, -1.7518e-02],
          [ 2.7257e-02,  1.3083e-01,  3.0285e-02],
          [-2.1309e-04, -9.7390e-03,  7.3451e-03]],

         [[ 2.0837e-02,  7.8113e-03,  7.2550e-02],
          [ 2.9302e-02,  5.0305e-02,  2.5436e-02],
          [ 2.9590e-03, -3.1437e-02, -2.7125e-04]],

         [[ 6.6325e-02,  4.6958e-02, -2.8578e-02],
          [ 1.1746e-02,  3.5897e-02, -5.2955e-02],
          [ 9.3546e-03, -6.5438e-02, -2.2510e-02]]],


        [[[ 1.2285e-03, -3.0527e-02, -5.6617e-02],
          [-2.5464e-02, -5.2521e-02,  2.9531e-02],
          [-3.8564e-02, -2.2969e-03, -5.7100e-03]],

         [[ 5.9979e-03,  2.8011e-02, -6.0977e-02],
          [ 4.9948e-03, -4.7010e-02, -9.7302e-02],
          [-5.2735e-03, -7.4615e-02, -1.1718e-02]],

         [[ 3.1048e-02, -7.3331e-03, -3.7383e-02],
          [ 1.3267e-02,  3.6278e-05,  2.1864e-02],
          [-3.9097e-02,  2.3523e-02, -2.7310e-04]],

         ...,

         [[ 3.4190e-02,  1.6173e-02,  4.0947e-02],
          [ 4.7192e-02,  3.3964e-02,  4.7888e-03],
          [ 1.0455e-02, -2.0948e-02,  4.2205e-02]],

         [[ 7.3675e-02, -2.5056e-02, -5.1442e-02],
          [-1.9894e-02, -1.9875e-02,  3.7922e-02],
          [-7.7416e-02, -6.1713e-02, -5.3849e-02]],

         [[ 7.7153e-04,  1.2117e-02,  1.5797e-02],
          [ 3.9432e-02,  2.7186e-02, -1.0220e-02],
          [-1.6987e-02, -2.2401e-02,  1.2050e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0101]],

         [[-0.1104]],

         [[-0.2902]],

         ...,

         [[ 0.0288]],

         [[-0.1334]],

         [[-0.0933]]],


        [[[ 0.0562]],

         [[-0.0266]],

         [[-0.1835]],

         ...,

         [[ 0.1180]],

         [[-0.1095]],

         [[ 0.0879]]],


        [[[ 0.0072]],

         [[ 0.1190]],

         [[ 0.0670]],

         ...,

         [[-0.1493]],

         [[ 0.2096]],

         [[ 0.0366]]],


        ...,


        [[[-0.2327]],

         [[-0.0185]],

         [[-0.0209]],

         ...,

         [[ 0.0940]],

         [[-0.1396]],

         [[-0.0194]]],


        [[[ 0.0259]],

         [[-0.1715]],

         [[-0.0474]],

         ...,

         [[-0.0213]],

         [[ 0.1740]],

         [[-0.0097]]],


        [[[-0.3233]],

         [[ 0.1202]],

         [[-0.1416]],

         ...,

         [[ 0.1406]],

         [[-0.1187]],

         [[ 0.1939]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 7.7482e-02, -3.2772e-02,  1.3436e-02],
          [-9.3047e-02,  5.4128e-03, -6.8443e-03],
          [ 5.9066e-02,  2.7332e-02,  3.1851e-03]],

         [[ 3.8350e-02, -2.3364e-02, -2.7394e-03],
          [-8.0291e-02,  5.0701e-03, -4.7881e-02],
          [-7.2906e-03, -2.5102e-02, -5.8676e-02]],

         [[ 3.5323e-02, -5.3631e-02,  8.1815e-02],
          [ 4.1874e-02, -5.3624e-02, -1.2689e-02],
          [ 8.2405e-02, -5.6538e-02, -2.2922e-02]],

         ...,

         [[ 2.4202e-02, -1.6213e-02, -7.3386e-03],
          [ 1.0053e-01,  2.5068e-02, -2.0442e-02],
          [-2.4844e-02, -9.8827e-02, -5.0015e-03]],

         [[-6.0175e-02, -3.8229e-02,  1.1495e-01],
          [-5.4323e-03,  4.0294e-02,  1.2929e-02],
          [-5.6128e-02, -1.9500e-02,  6.5854e-02]],

         [[-2.7006e-02,  1.3499e-02, -2.5322e-02],
          [-2.5123e-02,  6.5722e-02, -1.0953e-02],
          [ 4.9218e-03, -5.1198e-03, -1.3628e-02]]],


        [[[ 1.8833e-02, -6.4306e-02, -3.0102e-02],
          [-1.0968e-01, -6.5076e-02,  4.2209e-02],
          [ 4.3059e-02,  6.3134e-02,  5.5581e-02]],

         [[-8.1924e-02,  4.6932e-02, -3.7861e-02],
          [-2.2170e-02, -4.5973e-02,  6.6189e-02],
          [ 6.5221e-02, -6.0161e-02, -2.3619e-02]],

         [[ 1.6418e-02, -1.6614e-02, -4.9871e-02],
          [ 6.7659e-02, -6.7723e-02,  3.2172e-02],
          [-9.9279e-03,  2.4633e-02,  1.5620e-02]],

         ...,

         [[-1.6886e-01, -1.0416e-02, -3.5972e-02],
          [ 3.7344e-02, -4.9438e-02, -3.1889e-02],
          [ 6.1951e-02,  9.0991e-02, -3.3834e-02]],

         [[-1.0140e-02, -4.4430e-03, -2.7304e-02],
          [-2.7023e-02,  1.3752e-03, -2.6137e-03],
          [-3.9481e-02, -3.4167e-02, -4.7630e-03]],

         [[ 8.7044e-02, -4.9541e-02, -5.8023e-02],
          [ 2.6432e-02,  2.8458e-02,  2.2683e-02],
          [-1.5440e-02,  2.0306e-03, -2.3548e-03]]],


        [[[-4.3967e-02, -3.0329e-02, -8.7684e-02],
          [ 3.1419e-02, -5.1985e-02, -3.8839e-02],
          [-1.6191e-02, -3.0288e-02,  5.0275e-02]],

         [[ 7.3984e-02,  5.2692e-02, -4.6539e-04],
          [-7.7309e-02, -2.9529e-03, -4.6520e-02],
          [ 1.2359e-02, -1.6792e-02, -1.0881e-02]],

         [[ 1.5819e-01, -1.5312e-02, -2.8347e-02],
          [-8.5184e-02,  2.7794e-02, -1.7487e-02],
          [-1.7909e-02, -5.8875e-02,  7.1977e-02]],

         ...,

         [[ 8.5243e-03, -1.6636e-03, -1.8675e-02],
          [-2.7096e-02,  1.0509e-02, -4.5137e-02],
          [ 3.4235e-03,  4.5451e-02,  9.9765e-03]],

         [[ 2.1390e-02, -8.5878e-03, -7.0013e-02],
          [ 2.2286e-02, -2.6468e-02,  1.0966e-02],
          [-4.3458e-02, -5.4777e-03, -4.9534e-02]],

         [[ 8.2652e-02,  2.7965e-02, -3.4934e-02],
          [-5.9632e-02, -4.9430e-03,  7.0895e-02],
          [-4.4294e-02, -2.0357e-02,  7.9629e-03]]],


        ...,


        [[[ 2.3523e-02, -6.8540e-03, -7.0818e-02],
          [-3.3728e-02,  1.9564e-02, -2.4975e-02],
          [-8.8420e-02,  5.4250e-03, -4.5348e-02]],

         [[ 4.3636e-02, -3.2232e-02, -1.0829e-01],
          [-6.1733e-02, -7.8269e-02, -8.5162e-03],
          [-9.0817e-04,  5.6631e-02, -4.5124e-03]],

         [[-9.1781e-02,  5.0239e-02,  1.9535e-02],
          [ 4.3977e-02, -7.2004e-02, -4.4284e-02],
          [-1.6439e-02, -6.6138e-02,  1.4884e-02]],

         ...,

         [[ 1.8858e-02, -4.7163e-02,  5.0386e-02],
          [ 1.0749e-01, -2.2150e-03,  2.6868e-02],
          [ 3.1604e-02,  6.2142e-02, -5.2725e-07]],

         [[-4.6438e-02,  2.8100e-03,  1.3149e-02],
          [ 9.4041e-04, -9.6427e-03,  5.7249e-02],
          [ 8.2912e-03, -4.1429e-02,  6.9890e-02]],

         [[-3.8168e-02, -1.5103e-02,  1.2292e-01],
          [ 3.7630e-02,  8.5337e-03,  3.9776e-02],
          [ 1.1086e-02,  9.1386e-02,  2.6190e-02]]],


        [[[ 1.1445e-01,  5.8475e-02, -1.6454e-02],
          [ 6.0148e-02, -1.2076e-02,  1.0674e-01],
          [ 2.2450e-02, -4.4420e-02,  1.0378e-01]],

         [[-1.4358e-02, -1.6566e-02,  3.4205e-02],
          [ 6.4895e-02,  2.6405e-02,  7.1268e-02],
          [-5.6206e-02, -6.7717e-02,  9.7573e-02]],

         [[ 6.7290e-02, -1.7601e-02,  5.7126e-03],
          [ 3.7523e-02, -2.5449e-02, -1.2112e-01],
          [-4.2084e-02, -1.9678e-02,  5.6403e-02]],

         ...,

         [[ 2.7654e-03,  9.0612e-03,  2.5370e-02],
          [-4.4975e-02,  2.7977e-02,  5.3208e-02],
          [-6.6919e-02, -7.4445e-02, -4.7083e-02]],

         [[ 4.0695e-02, -2.9304e-02, -5.9769e-03],
          [ 6.4050e-03, -4.1028e-02, -6.1483e-03],
          [ 4.7372e-02,  3.5639e-02,  7.1382e-02]],

         [[ 2.6144e-02, -9.6108e-04,  3.1931e-02],
          [-3.5960e-02, -2.2650e-02, -5.3865e-02],
          [ 5.5831e-02, -1.0207e-02,  7.8012e-02]]],


        [[[ 9.0539e-03,  1.7278e-02,  2.8123e-02],
          [ 2.6803e-02, -3.5417e-02, -1.1134e-01],
          [-4.3301e-02, -2.5846e-02,  3.5336e-02]],

         [[-7.0843e-02,  7.1372e-02, -1.8072e-02],
          [ 4.6609e-02,  4.8910e-03, -2.1021e-02],
          [ 2.7129e-02, -1.6285e-02, -5.0812e-02]],

         [[-1.7821e-02,  1.1113e-02,  1.0637e-01],
          [ 4.6561e-02, -6.1978e-02, -4.5173e-02],
          [-1.1941e-01, -1.8501e-02,  1.1462e-01]],

         ...,

         [[ 8.8360e-02,  3.1807e-02,  3.6124e-02],
          [ 5.7467e-02, -4.9678e-02,  1.7994e-02],
          [-2.9635e-02, -9.0508e-03, -1.8096e-02]],

         [[ 8.3354e-03,  5.3169e-02, -5.5556e-02],
          [-2.9734e-02, -3.7283e-02,  5.4622e-03],
          [ 2.7671e-02, -6.1607e-02, -2.2609e-03]],

         [[ 1.3681e-02, -2.3351e-02,  1.1192e-02],
          [ 1.4988e-01,  2.3344e-02, -5.6803e-02],
          [-1.7685e-02, -2.7458e-02,  8.0916e-02]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0882,  0.0019, -0.0492],
          [-0.0911, -0.1674,  0.0136],
          [ 0.0342,  0.0171, -0.0153]],

         [[-0.0342,  0.0014,  0.0325],
          [ 0.0115,  0.0027, -0.0237],
          [-0.1483,  0.0159,  0.0179]],

         [[-0.0369, -0.0088, -0.0697],
          [ 0.1316, -0.0367, -0.0742],
          [-0.0176, -0.0506,  0.0392]],

         ...,

         [[ 0.0779,  0.0027,  0.1129],
          [-0.1603,  0.0303, -0.0064],
          [-0.0338,  0.0370,  0.0505]],

         [[-0.0649, -0.0398,  0.0463],
          [-0.0609, -0.0596,  0.0122],
          [-0.0606, -0.0325, -0.0101]],

         [[-0.0413, -0.0516, -0.0313],
          [ 0.0758,  0.0335, -0.0587],
          [-0.0113, -0.0238, -0.0280]]],


        [[[-0.0015,  0.0095,  0.0417],
          [-0.0103,  0.0239,  0.0237],
          [ 0.0177,  0.0520, -0.0844]],

         [[ 0.0176, -0.0171, -0.0292],
          [ 0.0075, -0.0086, -0.0510],
          [ 0.0862,  0.1102,  0.0515]],

         [[ 0.0776, -0.0012, -0.0478],
          [-0.0220, -0.0014, -0.0126],
          [-0.0332, -0.0356,  0.0242]],

         ...,

         [[ 0.0908, -0.0068, -0.0231],
          [-0.0876,  0.0136,  0.0081],
          [ 0.0021,  0.0330,  0.0185]],

         [[ 0.0819, -0.0162,  0.0064],
          [ 0.0243,  0.0065,  0.0070],
          [-0.0064,  0.0686,  0.1223]],

         [[ 0.0102,  0.0375,  0.0858],
          [ 0.0168, -0.0664,  0.0114],
          [-0.0617,  0.0240,  0.0232]]],


        [[[-0.0186, -0.0303,  0.0308],
          [-0.0687, -0.0969, -0.0017],
          [-0.0711,  0.0220,  0.0508]],

         [[-0.0037,  0.0021,  0.0677],
          [-0.0383,  0.0381, -0.0129],
          [ 0.0750, -0.0265, -0.0713]],

         [[-0.1192,  0.0096,  0.0709],
          [-0.0375, -0.0792, -0.0382],
          [-0.0135,  0.0059,  0.0634]],

         ...,

         [[-0.0116, -0.0155,  0.0031],
          [ 0.0329, -0.0109, -0.0268],
          [-0.0507,  0.0084,  0.0570]],

         [[ 0.0283,  0.0891,  0.0211],
          [ 0.0498,  0.0063,  0.0082],
          [ 0.0723,  0.0074, -0.0159]],

         [[ 0.0132, -0.0408,  0.0022],
          [-0.0263, -0.0307,  0.0152],
          [-0.0295, -0.0574, -0.0173]]],


        ...,


        [[[-0.0188, -0.0187, -0.0397],
          [ 0.0409,  0.0294, -0.0686],
          [-0.0249,  0.0029, -0.0195]],

         [[ 0.0518, -0.0059,  0.0377],
          [ 0.0502, -0.0235,  0.0319],
          [ 0.0050, -0.0197, -0.0435]],

         [[-0.0199,  0.0114,  0.0316],
          [-0.0224, -0.0080,  0.0063],
          [ 0.0100, -0.0074, -0.0146]],

         ...,

         [[ 0.0626,  0.1069,  0.0327],
          [ 0.0505,  0.0738, -0.0427],
          [-0.0270, -0.0738,  0.0405]],

         [[ 0.0811, -0.0369, -0.1053],
          [ 0.0055, -0.0593, -0.0817],
          [-0.0342, -0.0039,  0.0010]],

         [[ 0.0656, -0.0056,  0.0617],
          [ 0.0227, -0.0451,  0.0070],
          [-0.0673, -0.0347,  0.0273]]],


        [[[ 0.0053,  0.0101, -0.0007],
          [-0.0319,  0.0152,  0.0568],
          [-0.0631,  0.0408, -0.0279]],

         [[ 0.0857, -0.0218, -0.0175],
          [-0.0738,  0.1073, -0.0068],
          [-0.0088,  0.0112, -0.0770]],

         [[-0.0328, -0.0160,  0.0376],
          [-0.0126, -0.0453, -0.0359],
          [ 0.0864, -0.0455, -0.0048]],

         ...,

         [[ 0.0544, -0.0296, -0.0856],
          [ 0.0025, -0.0535,  0.0254],
          [-0.0774, -0.0439,  0.0251]],

         [[ 0.0644,  0.0155,  0.0321],
          [ 0.1122,  0.0767, -0.0174],
          [ 0.0449, -0.0540,  0.0591]],

         [[ 0.0427,  0.0081, -0.0152],
          [ 0.0059,  0.0254,  0.0264],
          [ 0.0303,  0.0282,  0.0197]]],


        [[[-0.0067,  0.0132, -0.0331],
          [ 0.1332,  0.0092, -0.0027],
          [ 0.0299, -0.0709, -0.0137]],

         [[-0.0555, -0.0048,  0.0387],
          [-0.0336,  0.0236,  0.0074],
          [-0.0189, -0.0235, -0.0324]],

         [[ 0.0343, -0.0100,  0.0291],
          [-0.0157, -0.0641,  0.0416],
          [-0.0130, -0.0629, -0.0230]],

         ...,

         [[ 0.0057,  0.0267, -0.0826],
          [-0.0026,  0.0399,  0.0424],
          [-0.0921,  0.0377, -0.0517]],

         [[-0.1426,  0.0573,  0.0102],
          [-0.0348,  0.0047,  0.0482],
          [ 0.0820,  0.0073, -0.0849]],

         [[-0.0217, -0.0046,  0.0230],
          [ 0.0040,  0.0268,  0.0480],
          [-0.0132,  0.0641,  0.0943]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 0.0507,  0.0100, -0.0212],
          [-0.0659,  0.0073, -0.0195],
          [-0.0163,  0.0332,  0.0354]],

         [[ 0.0067,  0.0156,  0.0299],
          [-0.0447, -0.0092, -0.1049],
          [-0.0410, -0.0164, -0.0138]],

         [[ 0.0600, -0.0329, -0.0612],
          [ 0.0106,  0.0456,  0.0980],
          [ 0.0290, -0.0162, -0.0075]],

         ...,

         [[-0.0250, -0.0229,  0.0478],
          [ 0.0319,  0.0311, -0.1136],
          [-0.0311,  0.0281, -0.0925]],

         [[ 0.0297,  0.0580,  0.0157],
          [-0.0433, -0.1180, -0.0058],
          [ 0.0092,  0.0072,  0.0050]],

         [[ 0.0040, -0.0674,  0.0007],
          [-0.0362,  0.0127,  0.0364],
          [ 0.0370,  0.0110, -0.0629]]],


        [[[-0.0136,  0.0236,  0.0070],
          [-0.0176, -0.0505,  0.0346],
          [-0.1149,  0.0317,  0.0572]],

         [[-0.0835,  0.0181, -0.0328],
          [ 0.0028,  0.0477,  0.0647],
          [-0.0470, -0.0606, -0.0206]],

         [[-0.0304,  0.0105, -0.0420],
          [ 0.0165, -0.0223,  0.0486],
          [-0.0196, -0.0358, -0.0586]],

         ...,

         [[ 0.0519, -0.0458,  0.0473],
          [ 0.0165, -0.0149, -0.0356],
          [-0.0551, -0.0190,  0.0125]],

         [[-0.0451, -0.0088,  0.0769],
          [ 0.0170, -0.0327, -0.0016],
          [-0.0525, -0.0386,  0.0043]],

         [[-0.0151, -0.0155, -0.0288],
          [-0.0155, -0.0389, -0.0378],
          [ 0.0567,  0.0161, -0.0247]]],


        [[[-0.0475,  0.0265,  0.0121],
          [-0.0232,  0.0241, -0.0104],
          [ 0.0177, -0.0305, -0.0491]],

         [[-0.0135,  0.0061,  0.0353],
          [ 0.0468,  0.0370,  0.0281],
          [ 0.0445,  0.0558,  0.0723]],

         [[-0.0246, -0.0225,  0.0918],
          [-0.0067,  0.0354,  0.0633],
          [ 0.0108,  0.0537, -0.0185]],

         ...,

         [[ 0.0509,  0.0198, -0.0456],
          [-0.0568,  0.0452, -0.0629],
          [-0.0435,  0.0310,  0.0061]],

         [[ 0.1077,  0.0137,  0.0017],
          [ 0.0106,  0.0005,  0.0359],
          [ 0.0273,  0.0254, -0.0710]],

         [[-0.0236, -0.0828, -0.0210],
          [-0.0312, -0.0614,  0.0124],
          [ 0.0444, -0.0284,  0.0111]]],


        ...,


        [[[ 0.0149, -0.0252, -0.0142],
          [-0.0353,  0.0422,  0.1044],
          [ 0.0376,  0.1237, -0.0185]],

         [[-0.0372, -0.0207,  0.0065],
          [-0.0197,  0.0232, -0.0116],
          [-0.0596, -0.0049, -0.0242]],

         [[ 0.0341, -0.0114,  0.0163],
          [ 0.0207, -0.0186, -0.0312],
          [-0.0117, -0.0291,  0.0171]],

         ...,

         [[-0.0414,  0.0229, -0.0095],
          [-0.0205,  0.0614,  0.0540],
          [ 0.0405,  0.0283, -0.0451]],

         [[-0.0348, -0.0070,  0.0420],
          [-0.0275,  0.0834,  0.0538],
          [ 0.0260,  0.0131,  0.0058]],

         [[ 0.0203,  0.0478, -0.0910],
          [ 0.0118,  0.0630, -0.0329],
          [ 0.0833, -0.0417,  0.0122]]],


        [[[ 0.0012,  0.0200,  0.0174],
          [-0.0335, -0.0144,  0.0514],
          [-0.0064,  0.0842, -0.0430]],

         [[ 0.0401, -0.0293,  0.0271],
          [ 0.0501, -0.0747,  0.0668],
          [-0.0740, -0.0704, -0.0012]],

         [[ 0.0475,  0.0321, -0.0506],
          [-0.0679, -0.0143,  0.0060],
          [ 0.0326,  0.0316, -0.0373]],

         ...,

         [[-0.0406,  0.0148,  0.0003],
          [-0.0073, -0.0411,  0.0167],
          [-0.0455, -0.0165,  0.0056]],

         [[ 0.0045,  0.0494,  0.0494],
          [-0.0137,  0.0587, -0.0290],
          [-0.0228,  0.0483,  0.0343]],

         [[ 0.0131,  0.0259,  0.0578],
          [ 0.0441,  0.0782, -0.0194],
          [-0.0258, -0.0527, -0.0309]]],


        [[[-0.0036,  0.0252,  0.0039],
          [ 0.0108,  0.0077,  0.0781],
          [ 0.0100,  0.0312, -0.0212]],

         [[-0.0931,  0.0840, -0.0313],
          [ 0.0733, -0.0455, -0.0020],
          [-0.0126,  0.0374, -0.0378]],

         [[ 0.0190, -0.0529, -0.0092],
          [-0.0015,  0.0829, -0.0160],
          [-0.0287, -0.0514, -0.0250]],

         ...,

         [[-0.0113,  0.0303, -0.0158],
          [ 0.0494, -0.0264, -0.0012],
          [-0.0401, -0.0099,  0.0161]],

         [[ 0.0018, -0.0069, -0.0644],
          [-0.0114,  0.0177, -0.0207],
          [ 0.0108, -0.0216,  0.0240]],

         [[-0.0438, -0.0409,  0.0028],
          [-0.0318,  0.0786,  0.0572],
          [-0.0322, -0.0070, -0.0018]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 1.4861e-02, -1.7868e-02, -2.7989e-02],
          [ 6.1765e-03,  2.7030e-02,  3.8941e-02],
          [ 2.0611e-02, -2.1822e-02,  6.7293e-02]],

         [[-3.0803e-03, -9.2662e-02, -3.7662e-03],
          [-5.8159e-02, -3.5024e-03,  9.5573e-03],
          [ 5.6609e-02,  3.0001e-02,  5.4702e-03]],

         [[ 2.1504e-02,  2.3344e-02,  4.2307e-02],
          [ 3.8887e-02,  4.6291e-02,  1.5709e-02],
          [-2.5264e-02, -5.1103e-02,  3.9500e-02]],

         ...,

         [[ 6.0101e-03, -4.3006e-02, -1.2803e-02],
          [ 2.0851e-02,  4.5273e-02,  8.5952e-03],
          [ 9.5909e-03, -2.7047e-02, -5.1737e-02]],

         [[-2.9952e-02, -2.1630e-03,  5.1301e-02],
          [ 5.7609e-03, -7.8022e-03, -3.4077e-02],
          [ 2.9524e-02, -4.7082e-02,  9.5525e-03]],

         [[ 2.6345e-02,  5.8102e-02, -1.8617e-02],
          [-3.2520e-02, -4.7805e-02,  3.2156e-03],
          [ 6.0437e-02, -1.3866e-02,  4.0937e-02]]],


        [[[-5.6837e-02,  4.9689e-02,  2.5881e-02],
          [ 1.4440e-03,  3.8615e-02, -4.4392e-02],
          [-6.5601e-03,  2.0187e-03, -2.7673e-02]],

         [[-3.9225e-02, -1.1657e-02, -5.1015e-02],
          [ 5.2196e-02, -3.3144e-02,  6.9576e-02],
          [ 8.1682e-03,  5.3677e-03,  3.9149e-02]],

         [[-3.2388e-02, -1.5214e-02,  7.2095e-02],
          [-1.5014e-02, -5.6768e-02,  5.7490e-02],
          [ 4.8826e-02, -4.0525e-02, -6.6804e-03]],

         ...,

         [[-1.7169e-02,  5.4251e-02, -5.8239e-02],
          [-3.5474e-02,  2.7424e-03,  7.1513e-03],
          [-7.8097e-03, -5.6817e-02, -7.9544e-02]],

         [[ 5.2203e-03, -3.3264e-02,  1.0259e-02],
          [ 5.5242e-02, -3.2206e-02,  2.3106e-02],
          [ 3.4324e-02,  1.0721e-03, -2.2578e-02]],

         [[-1.7493e-02, -4.5155e-04,  5.3614e-02],
          [-1.2724e-02,  3.4044e-03, -7.2920e-02],
          [ 7.2558e-03,  3.3385e-02, -7.5455e-02]]],


        [[[ 4.3208e-02, -3.7412e-03, -1.5792e-03],
          [ 7.2148e-02, -7.1807e-02, -5.2187e-03],
          [ 5.1273e-02, -1.6667e-02, -3.1742e-02]],

         [[ 4.3146e-02, -2.6460e-02, -5.3118e-03],
          [ 5.0361e-02,  9.2468e-03, -7.3341e-02],
          [-4.9527e-03, -3.4839e-02, -1.0648e-02]],

         [[ 2.8718e-02,  1.7418e-02, -8.9727e-02],
          [ 1.0869e-02,  4.3243e-02, -3.9423e-03],
          [-8.1137e-03, -1.5635e-02,  6.8493e-03]],

         ...,

         [[ 5.0456e-02, -8.1636e-02,  8.4673e-03],
          [-7.3988e-02, -1.4341e-02, -2.1553e-02],
          [ 9.4471e-02,  8.1092e-03,  5.3094e-02]],

         [[-2.7586e-02, -4.4366e-02,  1.3453e-01],
          [-2.3965e-02,  1.7124e-02, -9.1613e-03],
          [-3.8394e-02,  2.2730e-02, -2.5219e-02]],

         [[-2.1385e-02,  6.9988e-02, -4.8319e-02],
          [-3.8267e-02, -3.8262e-02, -8.9346e-02],
          [ 6.2530e-03,  1.8615e-02, -4.6834e-02]]],


        ...,


        [[[-1.1295e-03,  1.3127e-02,  1.1077e-01],
          [-4.5735e-04, -2.5044e-02,  1.3294e-01],
          [ 9.0004e-03,  3.8369e-03, -8.4249e-02]],

         [[-3.0778e-02, -2.9627e-02, -8.4498e-03],
          [-2.3573e-02,  2.7742e-02,  3.2668e-02],
          [-5.2275e-03, -6.8839e-02,  3.5723e-02]],

         [[ 1.9545e-02,  6.2326e-02, -2.2195e-03],
          [ 3.9449e-02, -1.8606e-02, -4.4701e-02],
          [ 2.5525e-02,  2.8295e-02, -5.1776e-02]],

         ...,

         [[-1.6468e-02,  7.9753e-02, -2.0940e-02],
          [-3.3025e-02,  1.8954e-02, -6.5336e-03],
          [-9.3453e-03, -8.8873e-03, -3.8079e-02]],

         [[ 3.9092e-02,  3.3724e-03, -3.5414e-02],
          [-5.0731e-02,  1.0226e-01, -1.7912e-02],
          [-8.6620e-02, -5.3003e-02, -5.2774e-02]],

         [[ 6.5796e-02, -3.8859e-02, -2.6723e-02],
          [-3.3320e-02,  3.3768e-02, -3.1889e-03],
          [-4.9611e-02, -2.2800e-02, -7.8362e-02]]],


        [[[ 2.0862e-02, -4.2088e-02, -4.4525e-02],
          [-7.8547e-02, -9.3990e-03, -8.0599e-02],
          [-1.8578e-02, -4.7481e-02,  1.3137e-02]],

         [[-2.0450e-02, -7.0506e-02, -4.4943e-02],
          [ 4.3324e-03,  3.8655e-02, -6.1990e-02],
          [ 8.1081e-02,  5.2936e-02, -1.5965e-02]],

         [[ 6.1679e-02,  9.4316e-02,  5.9928e-02],
          [ 1.4784e-03,  1.8473e-02, -2.5740e-02],
          [-1.1783e-03, -2.5074e-02,  1.3021e-02]],

         ...,

         [[ 4.3446e-02, -1.7519e-02, -2.8013e-02],
          [ 7.2218e-02,  3.0655e-02,  2.8640e-02],
          [-9.9908e-03, -1.5277e-02, -5.4263e-02]],

         [[ 4.0952e-02,  3.0697e-02, -2.0190e-02],
          [-2.4237e-02, -2.9547e-02, -4.2514e-02],
          [-1.6754e-02, -2.9462e-02, -2.3324e-02]],

         [[ 3.7612e-02,  5.9120e-02,  3.0625e-02],
          [-1.2501e-02, -4.6465e-02, -3.8176e-02],
          [-4.5276e-02,  6.0221e-02, -9.1610e-02]]],


        [[[ 2.2773e-02,  3.5434e-02, -2.9526e-03],
          [-1.7113e-02,  3.3571e-02, -5.4735e-02],
          [ 1.7832e-02, -3.4594e-02,  2.8067e-02]],

         [[ 4.8104e-02,  3.3583e-02,  2.6378e-02],
          [ 7.1747e-03, -1.4317e-02, -4.9729e-02],
          [ 2.8385e-02,  3.2570e-02,  1.1548e-02]],

         [[-7.3958e-02,  4.2333e-02,  5.1638e-02],
          [-1.0105e-01,  1.9798e-02, -4.3208e-02],
          [-7.0332e-03, -4.8778e-03,  7.5147e-02]],

         ...,

         [[ 3.8139e-02, -2.7931e-02,  7.3756e-04],
          [-2.8521e-02, -2.0318e-02,  3.0311e-02],
          [ 1.1428e-02, -2.1530e-02,  3.7971e-02]],

         [[ 6.2773e-02, -7.2019e-03,  3.5029e-02],
          [-4.7143e-05, -6.7520e-02, -1.8709e-03],
          [-7.3100e-02, -4.7836e-02,  1.3552e-02]],

         [[ 1.1679e-02, -7.9520e-03,  2.3290e-02],
          [-2.5494e-02, -9.5124e-02, -2.1539e-03],
          [ 1.0433e-02, -6.3707e-02,  5.4611e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0793]],

         [[ 0.2594]],

         [[-0.0351]],

         ...,

         [[ 0.0475]],

         [[-0.1701]],

         [[ 0.1404]]],


        [[[-0.1817]],

         [[ 0.0629]],

         [[-0.0127]],

         ...,

         [[-0.0102]],

         [[-0.0363]],

         [[-0.0544]]],


        [[[ 0.1054]],

         [[ 0.2002]],

         [[ 0.1114]],

         ...,

         [[-0.0929]],

         [[-0.0472]],

         [[ 0.0064]]],


        ...,


        [[[ 0.0259]],

         [[ 0.0690]],

         [[ 0.0228]],

         ...,

         [[ 0.0225]],

         [[-0.0877]],

         [[ 0.0287]]],


        [[[ 0.0134]],

         [[-0.0508]],

         [[-0.1156]],

         ...,

         [[ 0.0162]],

         [[ 0.0812]],

         [[-0.2492]]],


        [[[-0.0541]],

         [[-0.1770]],

         [[-0.0693]],

         ...,

         [[ 0.3387]],

         [[-0.0320]],

         [[-0.0406]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-0.0312,  0.0473,  0.0212],
          [ 0.0158, -0.0138, -0.0663],
          [-0.0141, -0.0038,  0.0182]],

         [[-0.0056,  0.0607, -0.0239],
          [-0.0016,  0.0058, -0.0271],
          [ 0.0163,  0.0207, -0.0180]],

         [[ 0.0459,  0.0016, -0.0273],
          [-0.0074,  0.0103,  0.0410],
          [ 0.0685, -0.0194, -0.0263]],

         ...,

         [[ 0.0017,  0.0261,  0.0069],
          [ 0.0260, -0.0167,  0.0567],
          [ 0.0101,  0.0259,  0.0326]],

         [[-0.0296,  0.0302, -0.0391],
          [-0.0490, -0.0358,  0.0227],
          [ 0.0216, -0.0152, -0.0550]],

         [[ 0.0105, -0.0174, -0.0235],
          [-0.0220,  0.0321,  0.0339],
          [-0.0554, -0.0140,  0.0361]]],


        [[[-0.0238, -0.0001, -0.0316],
          [ 0.0005, -0.0309,  0.0106],
          [-0.0610, -0.0367,  0.0082]],

         [[ 0.0768,  0.0533, -0.0412],
          [-0.0483,  0.0012, -0.0143],
          [ 0.0246,  0.0198,  0.0260]],

         [[ 0.0144,  0.0391, -0.0148],
          [-0.0679,  0.0105, -0.0572],
          [ 0.0542,  0.0182, -0.0367]],

         ...,

         [[-0.0165, -0.0307, -0.0095],
          [ 0.0914,  0.0267,  0.0220],
          [-0.0507, -0.0112,  0.0116]],

         [[-0.0081,  0.0225,  0.0071],
          [-0.0086,  0.0271,  0.0105],
          [ 0.0069,  0.0125,  0.0506]],

         [[-0.0566,  0.0138, -0.0365],
          [-0.0382,  0.0207, -0.0372],
          [ 0.0476,  0.0080,  0.0486]]],


        [[[-0.0339,  0.1199,  0.0071],
          [-0.0791, -0.0595, -0.0287],
          [ 0.0441,  0.0828, -0.0420]],

         [[ 0.1081,  0.0021,  0.0493],
          [ 0.0464, -0.0043, -0.0082],
          [-0.0384, -0.0058, -0.0079]],

         [[ 0.0071,  0.0373, -0.0334],
          [ 0.0557,  0.0415, -0.0037],
          [-0.0635,  0.0696, -0.0186]],

         ...,

         [[-0.0259, -0.0423,  0.0053],
          [ 0.0250, -0.0323,  0.0023],
          [ 0.0251,  0.0444, -0.0939]],

         [[ 0.0483,  0.0698,  0.0158],
          [-0.0063,  0.0047,  0.1067],
          [-0.0387, -0.0173, -0.0158]],

         [[-0.0412,  0.0131,  0.0660],
          [ 0.0575,  0.0330,  0.0210],
          [-0.0748, -0.0286, -0.0182]]],


        ...,


        [[[ 0.0333, -0.0629, -0.0207],
          [ 0.0314,  0.0096, -0.0211],
          [-0.0041, -0.0250, -0.0298]],

         [[ 0.0211,  0.0143,  0.0242],
          [ 0.0819, -0.0214,  0.0418],
          [-0.0397,  0.0018,  0.0283]],

         [[-0.0525, -0.0051, -0.0023],
          [ 0.0369,  0.0346,  0.1058],
          [ 0.0316,  0.0717, -0.0320]],

         ...,

         [[ 0.0548, -0.0430,  0.0361],
          [-0.0158, -0.0519, -0.0232],
          [-0.0101, -0.0391, -0.0138]],

         [[-0.0211,  0.0411, -0.0619],
          [-0.0418, -0.0149, -0.0691],
          [ 0.0743, -0.0532,  0.0041]],

         [[ 0.0649, -0.0101, -0.0396],
          [-0.0213,  0.0077,  0.0181],
          [ 0.0120,  0.0448,  0.0231]]],


        [[[-0.0291,  0.0053,  0.0238],
          [ 0.0155, -0.0100, -0.0070],
          [-0.0369, -0.0369,  0.0334]],

         [[ 0.0347, -0.0334, -0.0040],
          [ 0.0325,  0.0412,  0.0405],
          [ 0.0181, -0.0991, -0.0008]],

         [[ 0.0025,  0.0036, -0.0155],
          [ 0.0090,  0.0425, -0.0088],
          [ 0.0534,  0.0685,  0.0068]],

         ...,

         [[ 0.0013, -0.0434,  0.0014],
          [ 0.0085, -0.0560, -0.0094],
          [-0.0607,  0.0304,  0.0283]],

         [[-0.0302, -0.0298,  0.0102],
          [ 0.0436, -0.0020, -0.0026],
          [-0.0675,  0.0225,  0.0361]],

         [[ 0.0438, -0.0314,  0.0045],
          [ 0.0021,  0.0136, -0.0420],
          [-0.0205, -0.0041, -0.0022]]],


        [[[ 0.0626,  0.0127,  0.0553],
          [-0.0394, -0.0300,  0.0179],
          [ 0.1046,  0.0362,  0.0494]],

         [[ 0.0233,  0.0307,  0.0138],
          [ 0.0020,  0.0039,  0.0670],
          [-0.0382,  0.0348, -0.0268]],

         [[-0.0257, -0.0110, -0.0791],
          [-0.0247, -0.0308,  0.0094],
          [ 0.0079, -0.0282,  0.0709]],

         ...,

         [[-0.0270, -0.0116, -0.0833],
          [-0.0382,  0.0457,  0.0063],
          [-0.0041, -0.0102, -0.1330]],

         [[ 0.0386, -0.0338, -0.0011],
          [-0.0487, -0.0750,  0.0237],
          [-0.0511,  0.0272,  0.0477]],

         [[-0.0278, -0.0104, -0.0438],
          [-0.0364,  0.0256,  0.0242],
          [-0.0189, -0.0352, -0.0568]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 0.0222,  0.0152,  0.0128],
          [ 0.0285, -0.0143,  0.0101],
          [-0.0199, -0.0346,  0.0103]],

         [[ 0.0650, -0.0250, -0.0819],
          [ 0.0314,  0.0439,  0.0312],
          [ 0.0643,  0.0103, -0.0246]],

         [[-0.0431, -0.0161, -0.0017],
          [ 0.0515,  0.0172, -0.0295],
          [-0.0466, -0.0284,  0.0789]],

         ...,

         [[-0.0520, -0.0615, -0.0494],
          [ 0.0536, -0.0254,  0.0229],
          [ 0.1628,  0.0224, -0.0112]],

         [[ 0.0621, -0.0440,  0.0315],
          [ 0.0425,  0.0068,  0.0206],
          [-0.0125,  0.0366,  0.0398]],

         [[-0.0552,  0.0515,  0.0060],
          [-0.0106,  0.0628,  0.0238],
          [ 0.0298,  0.0494, -0.0561]]],


        [[[-0.0695, -0.0035,  0.0220],
          [ 0.0102,  0.0543,  0.0076],
          [-0.0275, -0.0061,  0.0664]],

         [[ 0.0076,  0.0124,  0.0461],
          [ 0.0617,  0.0133, -0.0195],
          [ 0.0651, -0.0031,  0.0440]],

         [[ 0.0469, -0.0047,  0.0180],
          [ 0.0650, -0.0163,  0.0286],
          [-0.0450, -0.0792,  0.0339]],

         ...,

         [[-0.0442,  0.0278,  0.0516],
          [ 0.0462,  0.0627,  0.0937],
          [-0.0469, -0.0091,  0.0575]],

         [[ 0.0430,  0.0188,  0.0571],
          [ 0.0480, -0.0280,  0.0664],
          [ 0.0235,  0.0245, -0.0036]],

         [[-0.0508,  0.0961, -0.0206],
          [ 0.0651,  0.0565, -0.0124],
          [-0.0177, -0.0243,  0.0137]]],


        [[[ 0.0645,  0.0195,  0.0412],
          [ 0.0055,  0.0201, -0.0192],
          [-0.0154,  0.0107, -0.0471]],

         [[ 0.1031, -0.0815, -0.0164],
          [ 0.0254,  0.0116, -0.0691],
          [ 0.0326, -0.0200, -0.0421]],

         [[-0.0754, -0.0076,  0.0230],
          [ 0.0117, -0.0318, -0.0063],
          [ 0.0376, -0.0088,  0.0605]],

         ...,

         [[-0.0049,  0.0314, -0.0119],
          [-0.0151, -0.0544, -0.0653],
          [-0.0376,  0.1207,  0.0148]],

         [[ 0.0184,  0.0343, -0.0829],
          [ 0.0008, -0.0436,  0.0526],
          [-0.0323,  0.0646,  0.0068]],

         [[-0.0262,  0.0054, -0.0217],
          [ 0.0063,  0.0220, -0.0380],
          [ 0.0846, -0.0657,  0.0411]]],


        ...,


        [[[ 0.0661, -0.0184, -0.0725],
          [ 0.0606,  0.0352,  0.0462],
          [ 0.0606, -0.0019,  0.0382]],

         [[-0.0168, -0.0604, -0.0239],
          [-0.0100, -0.0559,  0.0427],
          [-0.0029,  0.0179, -0.0064]],

         [[ 0.0723,  0.0163, -0.0113],
          [ 0.0630, -0.0497,  0.0206],
          [-0.0303, -0.0545, -0.0144]],

         ...,

         [[-0.0424,  0.0242, -0.0156],
          [ 0.0093, -0.0382, -0.0164],
          [-0.0042,  0.0844, -0.0712]],

         [[-0.0038,  0.0423,  0.0076],
          [-0.0138, -0.0205,  0.0863],
          [-0.0199, -0.0339,  0.0444]],

         [[-0.0230, -0.0747, -0.0421],
          [ 0.0372, -0.0388,  0.0188],
          [-0.0494, -0.0525, -0.0326]]],


        [[[ 0.0550, -0.0495, -0.0134],
          [-0.0090, -0.0233, -0.0352],
          [-0.0077, -0.0248, -0.0100]],

         [[ 0.0387, -0.0178, -0.0087],
          [-0.0339,  0.0443,  0.0873],
          [-0.0172,  0.0418, -0.0330]],

         [[-0.0205, -0.0809,  0.0487],
          [ 0.0274,  0.0365,  0.0447],
          [-0.0075,  0.0081, -0.0640]],

         ...,

         [[-0.0065, -0.0122,  0.0414],
          [ 0.0136, -0.0199,  0.0187],
          [-0.0267, -0.0240, -0.0889]],

         [[-0.0427,  0.0339,  0.0499],
          [ 0.0020, -0.0626,  0.0174],
          [-0.0275, -0.0679, -0.0407]],

         [[-0.0629,  0.0250,  0.1126],
          [ 0.0281, -0.0205,  0.0257],
          [ 0.0045, -0.0082, -0.0103]]],


        [[[ 0.0277, -0.0118,  0.0043],
          [ 0.0059, -0.0295,  0.0113],
          [-0.0043, -0.0099,  0.0311]],

         [[-0.0448, -0.0012,  0.0749],
          [-0.0071, -0.0630, -0.0253],
          [ 0.0533, -0.0142,  0.0107]],

         [[ 0.0244, -0.0931,  0.0423],
          [ 0.0395, -0.0477,  0.0578],
          [-0.0452,  0.0065, -0.0020]],

         ...,

         [[ 0.0232,  0.0866, -0.0082],
          [ 0.0656, -0.0179, -0.0787],
          [ 0.0260, -0.0309, -0.0347]],

         [[ 0.0468, -0.0367,  0.0471],
          [ 0.0373, -0.0305,  0.0068],
          [ 0.0243, -0.0220,  0.0349]],

         [[-0.0134,  0.0469, -0.0146],
          [-0.0141, -0.0233, -0.0913],
          [-0.0095, -0.0144, -0.0467]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 17:06:30,758 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 6:20:32, time: 0.228, data_time: 0.017, memory: 1952, loss_flow: 26.9864, loss: 26.9864, grad_norm: 1.1119
2022-10-09 17:06:39,997 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 5:43:58, time: 0.185, data_time: 0.008, memory: 1952, loss_flow: 31.2436, loss: 31.2436, grad_norm: 1.2293
2022-10-09 17:06:49,422 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 5:33:46, time: 0.189, data_time: 0.009, memory: 1952, loss_flow: 29.7188, loss: 29.7188, grad_norm: 1.0685
2022-10-09 17:06:58,826 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 5:28:24, time: 0.188, data_time: 0.008, memory: 1952, loss_flow: 29.4372, loss: 29.4372, grad_norm: 1.0537
2022-10-09 17:07:04,554 - mmflow - INFO - Iter [250/100000]	lr: 1.097e-05, eta: 5:00:41, time: 0.115, data_time: 0.005, memory: 1952, loss_flow: 77.4663, loss: 77.4663, grad_norm: 4.1161
2022-10-09 17:07:09,786 - mmflow - INFO - Iter [300/100000]	lr: 1.217e-05, eta: 4:39:25, time: 0.105, data_time: 0.004, memory: 1952, loss_flow: 78.6675, loss: 78.6675, grad_norm: 3.8011
2022-10-09 17:07:15,187 - mmflow - INFO - Iter [350/100000]	lr: 1.337e-05, eta: 4:25:00, time: 0.108, data_time: 0.005, memory: 1952, loss_flow: 136.7251, loss: 136.7251, grad_norm: 5.6971
2022-10-09 17:07:20,799 - mmflow - INFO - Iter [400/100000]	lr: 1.457e-05, eta: 4:15:03, time: 0.112, data_time: 0.005, memory: 1952, loss_flow: 161.9557, loss: 161.9557, grad_norm: 5.9049
2022-10-09 17:07:26,323 - mmflow - INFO - Iter [450/100000]	lr: 1.577e-05, eta: 4:06:58, time: 0.110, data_time: 0.006, memory: 1952, loss_flow: 119.8969, loss: 119.8969, grad_norm: 4.3378
2022-10-09 17:07:31,776 - mmflow - INFO - Iter [500/100000]	lr: 1.697e-05, eta: 4:00:15, time: 0.109, data_time: 0.006, memory: 1952, loss_flow: 167.4361, loss: 167.4361, grad_norm: 7.3616
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 68, in __call__
    img1 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


