2022-10-09 16:40:15,086 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 16:40:15,088 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 16:40:15,142 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 16:40:15,143 - mmflow - INFO - Distributed training: False
2022-10-09 16:40:15,990 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=2,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09'
auto_resume = False
gpu_ids = [0]

2022-10-09 16:40:15,992 - mmflow - INFO - Set random seed to 1860729317, deterministic: False
2022-10-09 16:40:16,074 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:40:16,177 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:40:16,194 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 16:40:17,436 - mmflow - INFO - dataset size 1200
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 16:40:19,218 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 16:40:19,337 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09
2022-10-09 16:40:19,338 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 16:40:19,339 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 16:40:19,340 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-1.4932e-03,  4.3410e-02,  4.7673e-02,  ..., -6.6363e-03,
           -1.5215e-02,  1.3661e-02],
          [ 4.5681e-02, -2.4938e-03,  3.1813e-02,  ..., -4.3048e-02,
           -1.3944e-02,  2.5081e-02],
          [-6.5263e-03,  3.2229e-02, -6.3407e-03,  ..., -3.0263e-02,
            5.9742e-03, -1.6550e-02],
          ...,
          [-3.4242e-02, -7.1502e-03,  6.1963e-03,  ..., -3.8489e-02,
           -3.9204e-02, -9.6576e-03],
          [ 2.2458e-02, -9.4031e-03,  6.2339e-02,  ..., -1.2160e-02,
           -4.0967e-02,  4.7385e-02],
          [-4.9261e-02,  7.7659e-02,  1.8961e-03,  ...,  4.4711e-03,
           -2.2580e-02,  9.9707e-03]],

         [[-1.4630e-02, -6.2026e-03, -4.3180e-02,  ..., -8.6460e-03,
            1.5464e-02, -1.2845e-02],
          [ 3.5020e-02, -8.7257e-03, -2.8009e-02,  ...,  7.4708e-03,
            1.9743e-02, -2.4996e-02],
          [ 1.0729e-02,  2.7968e-03, -1.3492e-02,  ...,  1.9547e-02,
            2.5111e-02, -1.8601e-02],
          ...,
          [-2.1082e-02,  2.5185e-03, -4.6982e-02,  ...,  1.0231e-02,
           -1.9609e-02, -3.7947e-02],
          [ 3.8396e-02, -1.7133e-02,  2.2665e-02,  ..., -7.9638e-03,
           -1.4945e-03,  2.5964e-02],
          [ 6.2738e-02,  4.4572e-03, -8.2153e-03,  ...,  1.2718e-02,
            1.7437e-02,  1.3820e-02]],

         [[-5.4458e-03, -3.1251e-02, -3.2021e-02,  ...,  1.4123e-02,
           -1.5402e-02,  1.2583e-02],
          [ 9.6579e-03, -2.4894e-02,  2.2098e-02,  ..., -1.3892e-02,
           -1.4873e-02,  2.2865e-03],
          [ 4.2314e-03,  7.1556e-04, -2.3329e-02,  ...,  6.8519e-02,
           -1.7232e-02, -5.1855e-03],
          ...,
          [ 3.1320e-02,  1.7789e-02, -1.7120e-04,  ...,  3.3992e-02,
           -5.1437e-04,  2.1339e-02],
          [-2.0882e-02,  3.9369e-02, -7.0665e-05,  ..., -4.6725e-02,
            2.4536e-02,  2.1566e-02],
          [-2.8768e-02,  3.5006e-02,  7.3301e-03,  ...,  2.1036e-02,
           -2.7350e-03, -4.9377e-02]]],


        [[[ 4.9879e-02, -3.5178e-02,  3.4755e-02,  ..., -5.8314e-03,
           -8.5275e-04, -2.8130e-02],
          [-1.5857e-02, -4.5797e-03,  4.1121e-03,  ...,  2.8458e-02,
            1.0027e-02,  4.9941e-03],
          [-1.9812e-03, -1.7004e-02,  4.1469e-02,  ...,  1.5005e-02,
            3.3635e-02,  2.6568e-02],
          ...,
          [ 2.0728e-03,  2.1314e-03, -3.1488e-02,  ..., -6.6611e-03,
           -3.2380e-03, -1.9405e-02],
          [-3.6017e-02, -2.5381e-02, -3.7446e-03,  ...,  2.4859e-02,
           -7.3735e-03, -2.5495e-02],
          [-2.9243e-02, -1.6890e-02,  8.6138e-03,  ...,  1.0649e-02,
           -5.5675e-02,  2.4378e-02]],

         [[ 2.7972e-02, -1.8391e-02,  1.9598e-02,  ..., -4.6577e-02,
            4.5209e-02,  2.0546e-02],
          [ 7.1680e-03, -8.6673e-03, -5.0544e-03,  ...,  3.9658e-02,
           -2.9589e-02, -2.9445e-03],
          [-1.1575e-02,  3.7518e-03, -2.7324e-02,  ..., -4.2957e-02,
            1.0651e-02, -5.8201e-04],
          ...,
          [ 3.5921e-02, -6.6696e-03, -5.0381e-03,  ..., -3.0773e-03,
            1.1514e-02, -1.7244e-03],
          [-2.6747e-02, -1.8445e-02, -8.5251e-03,  ...,  3.0119e-02,
           -2.5385e-02,  2.8728e-02],
          [-2.1024e-02, -5.0587e-02,  9.4609e-03,  ...,  6.3267e-04,
            6.4276e-03, -1.5100e-02]],

         [[ 2.1767e-02, -2.5233e-02, -3.2981e-02,  ...,  1.6087e-02,
            5.6552e-03, -5.1985e-02],
          [ 3.3308e-02, -2.5756e-02, -2.9588e-02,  ...,  6.7801e-03,
            2.3651e-02, -4.5075e-03],
          [ 1.3273e-02, -1.8579e-02,  2.1845e-02,  ..., -1.0169e-02,
            2.2432e-02, -1.8258e-02],
          ...,
          [ 1.7226e-02,  4.2887e-03,  1.8740e-02,  ...,  2.1485e-02,
           -1.6247e-02,  2.3091e-02],
          [ 1.1288e-03, -2.2395e-02,  5.3628e-02,  ..., -6.1655e-03,
           -2.7172e-02, -7.5565e-03],
          [-3.5562e-03,  1.0522e-02,  2.6630e-02,  ...,  2.0823e-02,
            2.8839e-03,  2.6842e-02]]],


        [[[-2.5250e-02, -7.7302e-03,  1.5085e-03,  ...,  6.1746e-03,
           -2.3479e-02,  2.5053e-02],
          [-4.4341e-02,  1.5495e-02,  2.8238e-02,  ..., -6.5041e-03,
           -1.5227e-02,  4.8300e-02],
          [ 3.4741e-02,  1.3284e-02, -3.3129e-02,  ...,  2.4526e-02,
           -2.9446e-02,  2.8053e-02],
          ...,
          [ 3.1857e-03, -2.2349e-02, -5.4321e-03,  ..., -3.0866e-02,
           -1.8443e-02, -1.0987e-03],
          [ 5.6223e-03, -1.3857e-02, -4.8088e-03,  ..., -2.6567e-02,
            5.2181e-03,  2.9517e-02],
          [ 3.1212e-02,  2.5609e-02,  6.0690e-03,  ..., -5.5298e-03,
           -6.5519e-03, -1.2766e-02]],

         [[-9.4341e-03, -3.7113e-02,  2.7310e-03,  ..., -7.7017e-03,
            3.1814e-03,  2.3194e-02],
          [-2.0785e-02, -5.9393e-03,  2.4719e-02,  ..., -4.1969e-02,
            5.0160e-03,  2.1667e-02],
          [-1.6951e-02, -5.9900e-03, -1.2145e-02,  ..., -1.0301e-02,
            2.3763e-02,  3.2094e-04],
          ...,
          [ 4.2828e-02, -3.5301e-02, -2.6478e-02,  ..., -1.2621e-02,
           -4.2564e-02,  8.9923e-03],
          [ 9.2613e-03,  8.7605e-03,  3.1703e-02,  ..., -2.8955e-02,
            4.3632e-02,  1.5486e-02],
          [-3.1607e-03, -1.7662e-02, -1.1604e-03,  ..., -1.9688e-02,
            6.8839e-03, -2.2340e-02]],

         [[ 3.4187e-02, -8.6954e-03,  2.7705e-02,  ...,  1.1833e-02,
            1.6454e-02,  4.7818e-03],
          [ 1.5543e-02, -8.5222e-03, -9.3317e-03,  ..., -2.1110e-03,
           -3.3371e-02,  3.6099e-02],
          [-3.3719e-02, -1.4043e-02,  6.4695e-02,  ..., -3.9845e-02,
           -2.4958e-02, -3.5198e-02],
          ...,
          [ 3.9707e-02, -1.0537e-02, -8.5218e-03,  ..., -4.2023e-02,
            7.3073e-02, -2.5088e-03],
          [ 6.2741e-03, -5.0787e-03,  3.8139e-02,  ..., -2.5448e-02,
           -4.3935e-02,  2.3159e-02],
          [-3.4383e-02,  2.0026e-04, -9.6212e-03,  ...,  3.3428e-02,
            1.1905e-02, -9.9233e-03]]],


        ...,


        [[[ 1.3567e-02, -3.2591e-02, -5.4143e-03,  ...,  1.7868e-02,
           -2.0841e-02, -3.1914e-02],
          [ 3.6456e-03,  2.8729e-02,  5.7626e-03,  ..., -4.5815e-03,
           -4.1411e-03,  1.8551e-02],
          [ 3.5970e-02, -4.8212e-03, -1.2002e-02,  ..., -1.4520e-03,
            5.6775e-03,  1.4656e-02],
          ...,
          [-1.4654e-02,  2.4218e-02,  3.5126e-02,  ...,  3.1715e-02,
           -2.5049e-02,  8.5867e-03],
          [-2.6056e-02,  1.1051e-02, -5.5311e-03,  ..., -2.2192e-02,
           -4.6873e-02, -1.8180e-02],
          [-3.4800e-03, -2.3392e-03, -1.9868e-02,  ..., -2.0362e-02,
            2.3283e-03,  1.5309e-02]],

         [[ 2.1511e-02,  4.0802e-02,  3.3346e-02,  ..., -1.5380e-02,
            4.5210e-02,  3.4718e-02],
          [ 7.0484e-03,  2.8430e-02,  1.9317e-02,  ..., -3.6850e-02,
            4.3181e-02,  2.2556e-02],
          [-1.7576e-02, -3.7771e-03, -2.7150e-02,  ..., -3.1778e-02,
            6.2769e-03,  5.4867e-03],
          ...,
          [ 3.7943e-02, -1.4149e-02, -4.6315e-02,  ..., -3.4775e-03,
           -3.8104e-03,  5.7517e-02],
          [-2.8476e-02, -1.4702e-02, -2.3736e-02,  ...,  7.5069e-03,
            3.1641e-02,  1.0386e-03],
          [ 4.8516e-03,  1.0502e-02, -1.0171e-02,  ..., -2.7825e-02,
           -1.8325e-02, -5.5322e-02]],

         [[-3.3250e-02, -5.1918e-02,  1.1843e-02,  ..., -7.0756e-03,
           -1.0666e-02, -3.3146e-02],
          [ 3.6160e-02,  3.4136e-02,  2.9226e-02,  ..., -2.7078e-02,
           -9.9230e-03, -4.7970e-02],
          [ 3.9182e-02, -2.0124e-03,  6.1119e-03,  ...,  1.0451e-03,
            5.1647e-03, -3.8302e-02],
          ...,
          [-2.9411e-02, -1.4953e-02, -7.6160e-03,  ...,  1.7867e-02,
           -3.6515e-03,  1.8077e-03],
          [-2.5249e-02, -1.5592e-02,  4.4112e-02,  ...,  4.6254e-02,
           -1.6127e-02, -3.8317e-02],
          [ 2.3061e-02, -2.6878e-02,  3.3562e-02,  ..., -1.1730e-02,
            2.4219e-03,  1.6485e-02]]],


        [[[ 3.1304e-02,  4.0669e-03,  6.0181e-02,  ...,  5.8486e-03,
            6.1187e-04,  1.8263e-03],
          [-2.1276e-02,  4.2890e-02, -2.1571e-03,  ...,  8.1405e-03,
           -2.8698e-02,  9.0825e-04],
          [-2.4622e-02, -2.2321e-02,  4.6964e-02,  ...,  9.5800e-03,
            2.8332e-02,  2.0439e-02],
          ...,
          [ 1.1452e-02,  7.4966e-03,  8.9665e-03,  ...,  5.5059e-03,
           -1.8695e-02,  2.6862e-02],
          [ 4.3335e-02, -2.8802e-02,  3.1960e-02,  ...,  4.9106e-02,
           -2.8400e-02,  3.8698e-02],
          [ 7.6335e-03,  1.7651e-02, -2.7365e-02,  ..., -2.1616e-02,
            1.3081e-02,  1.2821e-03]],

         [[ 3.1055e-02, -4.1486e-02, -7.7345e-03,  ...,  2.8448e-02,
            2.8487e-02,  3.5336e-02],
          [-1.6708e-02, -2.6064e-02,  9.9753e-03,  ..., -2.3446e-03,
           -2.2059e-03, -1.1682e-02],
          [ 1.6381e-02, -2.7658e-02,  6.5181e-03,  ..., -2.5754e-02,
           -3.2698e-02, -9.9022e-03],
          ...,
          [ 1.6875e-02, -1.8544e-02,  3.5616e-02,  ..., -1.4389e-02,
           -1.8490e-02,  3.9145e-02],
          [-6.4859e-04,  6.2557e-03,  7.0508e-03,  ...,  1.4845e-02,
            4.2208e-02, -1.6484e-03],
          [-6.2765e-03,  3.0959e-02, -6.5315e-02,  ...,  4.9297e-03,
            3.7272e-02,  3.5661e-02]],

         [[ 3.7808e-02, -3.1352e-03,  2.9944e-02,  ..., -1.8769e-02,
            1.8447e-02,  4.9720e-03],
          [-1.9792e-02,  3.8235e-02, -3.0250e-02,  ...,  1.5937e-02,
           -1.3696e-02,  4.7630e-02],
          [ 1.1780e-02,  4.8223e-03,  1.5265e-02,  ...,  8.1076e-03,
           -4.6837e-03, -2.0448e-02],
          ...,
          [ 4.8176e-02, -3.3782e-02,  2.0351e-02,  ...,  3.9943e-03,
           -3.3183e-03,  1.8573e-02],
          [ 2.7445e-02,  9.8974e-03,  2.8474e-03,  ..., -1.1118e-02,
           -9.5251e-03,  8.0863e-03],
          [ 3.1847e-02, -5.3127e-03, -6.1300e-03,  ..., -8.0371e-04,
            8.3528e-03, -6.2378e-03]]],


        [[[ 1.2187e-02,  2.4000e-02,  2.2011e-02,  ..., -1.5336e-02,
            1.4772e-03, -1.3157e-02],
          [ 2.1681e-02, -1.0206e-02,  2.1665e-02,  ..., -8.6227e-04,
            2.0344e-02, -1.0941e-02],
          [ 3.1486e-02,  2.6818e-02, -3.8598e-02,  ...,  2.7052e-03,
            2.2190e-02, -4.0259e-02],
          ...,
          [ 4.6216e-02,  1.7921e-03,  3.5324e-02,  ..., -1.0132e-03,
           -8.4452e-03,  4.2915e-02],
          [ 2.6579e-02, -4.1074e-03,  2.3434e-02,  ..., -2.5496e-02,
            4.3092e-03, -1.1501e-02],
          [-4.2172e-02, -6.7483e-02,  1.5751e-02,  ...,  1.4954e-02,
            2.8232e-02, -2.2745e-02]],

         [[ 8.6118e-03, -1.8565e-02, -1.6641e-02,  ...,  1.7820e-02,
            1.5702e-03,  2.3592e-02],
          [-6.7469e-04,  2.7273e-02, -7.7123e-03,  ...,  6.6768e-03,
           -5.8841e-03,  4.5897e-02],
          [-2.7685e-02, -5.0663e-02, -1.6353e-02,  ...,  4.7226e-03,
            1.8469e-02,  9.9659e-03],
          ...,
          [ 3.2439e-04, -6.4177e-02, -5.7427e-03,  ..., -2.4673e-02,
            1.9552e-02, -9.8105e-03],
          [ 2.7012e-02,  4.4720e-02, -1.4217e-03,  ..., -1.5487e-02,
           -1.4458e-02,  4.0875e-02],
          [ 1.6770e-02,  4.2843e-03,  1.6514e-02,  ...,  6.0255e-02,
            1.2983e-02,  2.1877e-02]],

         [[-2.0524e-02,  7.3556e-02, -1.5000e-02,  ...,  1.4815e-02,
            2.3310e-02, -1.6741e-02],
          [ 3.2524e-02, -7.5834e-03,  3.1852e-02,  ..., -1.4989e-02,
            1.1410e-02, -3.4574e-02],
          [-3.5000e-02,  1.6361e-02,  4.1609e-03,  ...,  1.6379e-03,
            1.4429e-02,  6.5123e-03],
          ...,
          [-6.1111e-03, -2.8083e-02,  3.9378e-02,  ..., -1.7725e-02,
           -2.9033e-02, -4.6332e-02],
          [ 2.4605e-02,  1.5637e-02, -4.0644e-02,  ..., -3.4338e-02,
           -7.9182e-02, -2.4611e-03],
          [-4.5996e-03, -8.8626e-03,  2.7694e-03,  ..., -3.5045e-02,
           -4.4813e-02, -2.7965e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 2.3697e-02,  6.0868e-02,  1.3861e-02],
          [ 3.2525e-02,  5.1863e-02,  7.8848e-02],
          [ 7.1961e-02,  1.1485e-01, -1.6478e-02]],

         [[ 1.0027e-01, -1.5310e-02,  2.6751e-03],
          [-5.5039e-02, -4.2776e-03, -7.3947e-02],
          [-6.3481e-02,  6.2062e-02, -1.2193e-02]],

         [[-1.7983e-02, -5.5904e-02, -4.8598e-02],
          [ 1.9853e-02,  1.6118e-03,  8.3990e-02],
          [ 2.2687e-02,  1.0167e-01,  2.9676e-02]],

         ...,

         [[ 5.6991e-02, -9.5624e-02, -1.2583e-01],
          [-1.1263e-01,  4.3296e-02, -1.5478e-05],
          [ 8.9880e-02,  1.0837e-01,  2.2518e-02]],

         [[ 3.1348e-02,  2.9848e-02,  7.4761e-02],
          [ 9.1271e-03, -6.6795e-02,  5.2611e-02],
          [-4.8255e-02, -7.3624e-03, -1.2196e-03]],

         [[ 4.5495e-02, -5.7639e-02, -8.3449e-02],
          [ 1.2315e-02,  9.8355e-02,  1.0198e-02],
          [-2.2364e-04,  8.6431e-02,  3.0240e-02]]],


        [[[ 6.3919e-04, -4.8903e-02, -4.4948e-02],
          [-5.0362e-02,  9.6482e-02, -6.0615e-03],
          [ 4.1068e-02,  5.3282e-03, -1.3200e-02]],

         [[-5.8919e-02, -5.5324e-02,  3.3478e-02],
          [ 1.7458e-02, -1.6055e-03,  7.2504e-02],
          [ 9.8010e-02,  2.6525e-02, -1.6486e-02]],

         [[-4.0248e-02, -1.7676e-03,  6.8805e-02],
          [-2.8112e-02,  3.7265e-02, -5.3590e-02],
          [ 1.1924e-01,  4.4215e-02, -2.1584e-02]],

         ...,

         [[ 5.6186e-02,  9.0415e-02, -7.0035e-04],
          [-6.1642e-03, -1.6045e-01,  1.4433e-01],
          [ 8.7634e-03, -7.5239e-03,  5.1032e-03]],

         [[ 1.2075e-02, -2.5995e-02, -9.0986e-02],
          [ 4.0834e-02, -3.4017e-02,  2.1244e-02],
          [-9.1049e-02,  4.9312e-02, -7.2385e-02]],

         [[-1.2172e-02,  1.4544e-02,  1.6208e-02],
          [-4.2214e-03,  3.2319e-02,  9.0465e-02],
          [-7.9611e-02, -1.0613e-01,  1.2493e-01]]],


        [[[-3.8610e-02, -4.5149e-02, -1.1090e-01],
          [-3.5076e-02, -1.0786e-01,  1.6651e-02],
          [-7.2474e-02,  1.2404e-02,  5.3028e-02]],

         [[ 8.5070e-02, -4.3967e-02, -8.6541e-02],
          [ 5.9347e-02,  6.2733e-02, -2.6819e-02],
          [-2.4704e-02,  3.4848e-02, -1.0740e-02]],

         [[ 5.5158e-02,  8.8595e-02, -1.1699e-01],
          [-1.3990e-02, -4.9761e-02, -5.5443e-02],
          [ 4.7061e-02,  4.8649e-02, -7.2217e-02]],

         ...,

         [[ 1.2647e-01, -9.4205e-03,  5.7072e-02],
          [ 1.1021e-01,  4.1832e-02, -1.4074e-01],
          [-7.7327e-02, -7.5984e-02,  5.4424e-02]],

         [[-3.2271e-02,  5.2163e-02, -3.8792e-03],
          [ 1.6336e-01,  6.5467e-02,  3.0226e-02],
          [ 3.4328e-02,  5.7530e-02, -1.0515e-01]],

         [[ 9.7804e-02, -3.3708e-03, -3.5117e-02],
          [ 2.1965e-02,  2.4874e-02, -6.5632e-02],
          [-8.8662e-02,  3.1855e-02, -4.8872e-02]]],


        ...,


        [[[-7.5302e-02, -2.1594e-02,  9.0463e-02],
          [-6.8585e-02, -3.9663e-02,  3.7922e-02],
          [-9.7813e-03, -1.0318e-01,  5.8704e-02]],

         [[-4.2575e-02, -8.0400e-02,  9.5584e-03],
          [-1.4486e-02,  5.4782e-02,  3.3063e-03],
          [-6.6879e-02, -3.3599e-02, -2.6525e-02]],

         [[ 8.4552e-03,  1.8408e-03,  3.0925e-02],
          [ 1.3342e-01,  4.6810e-05, -5.5467e-02],
          [ 7.3652e-02, -1.2729e-01, -2.7093e-03]],

         ...,

         [[-2.6383e-02, -4.5243e-02,  4.1111e-02],
          [ 3.5105e-02, -1.1432e-01,  8.4941e-03],
          [-8.4279e-03,  1.9044e-02,  5.5983e-02]],

         [[ 4.1790e-02, -1.7334e-01,  1.3403e-01],
          [-1.5912e-02,  1.0881e-01,  3.3349e-02],
          [ 6.1480e-02,  5.2927e-02,  6.3133e-02]],

         [[ 8.1367e-02, -3.7701e-02, -6.3400e-02],
          [ 5.5271e-03,  8.5541e-02, -3.6111e-03],
          [-8.5602e-02, -5.2773e-02,  9.1398e-02]]],


        [[[ 4.2449e-02, -2.2098e-02, -6.2535e-02],
          [ 2.9493e-02, -2.9503e-03,  4.1230e-02],
          [-8.9919e-03, -2.3696e-03, -4.4369e-02]],

         [[ 1.9010e-03, -2.9801e-02,  1.5175e-02],
          [-5.6333e-02, -3.6393e-02,  3.5009e-02],
          [ 6.1830e-02,  5.3896e-03, -1.9362e-02]],

         [[-9.8799e-02, -4.0775e-02,  6.1412e-02],
          [-1.0840e-01,  8.3305e-02, -8.6539e-02],
          [ 6.5651e-02,  3.2110e-02, -2.0444e-02]],

         ...,

         [[ 2.3892e-02, -5.0121e-02,  7.6311e-03],
          [ 7.1143e-03, -6.2965e-03,  4.4914e-03],
          [ 6.7630e-03, -1.5671e-02, -3.5893e-02]],

         [[-1.0847e-01, -5.2642e-05, -3.0185e-02],
          [-9.8226e-03,  8.4325e-02,  4.5840e-02],
          [-5.5617e-02, -6.1036e-02,  6.6237e-02]],

         [[ 1.3932e-03, -5.1038e-02,  8.8688e-02],
          [ 1.3334e-02,  4.8697e-02,  4.2845e-03],
          [ 1.2954e-02, -3.2179e-02,  5.2022e-02]]],


        [[[-6.4261e-03,  3.9343e-02, -2.1828e-02],
          [ 7.4174e-04,  5.8903e-02,  2.2633e-02],
          [-7.3093e-02, -7.9421e-02, -8.3115e-02]],

         [[-2.4314e-02, -1.2511e-03,  1.6750e-03],
          [-2.7546e-02,  2.2128e-02,  6.2673e-02],
          [-6.6081e-02, -6.0573e-02, -8.7000e-02]],

         [[-7.0946e-02,  4.1048e-03, -2.5758e-02],
          [ 6.1040e-02, -8.5002e-03,  1.3897e-01],
          [-7.6724e-03,  6.1241e-02,  1.2156e-02]],

         ...,

         [[ 4.6992e-02,  6.6756e-02,  2.3390e-02],
          [ 7.6341e-02,  8.5882e-02,  6.1866e-03],
          [-5.6929e-02, -2.5610e-02,  6.7026e-02]],

         [[-4.3795e-02,  3.1012e-02,  4.5050e-02],
          [-1.0955e-01,  1.1866e-02, -7.5649e-02],
          [-5.8860e-02, -2.9268e-02, -1.1964e-01]],

         [[-5.3380e-02,  1.6906e-02, -9.0564e-02],
          [ 4.6380e-02, -3.9848e-02,  1.6891e-01],
          [ 1.4862e-02,  1.0470e-01,  2.8965e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-7.5337e-03, -2.5934e-02,  2.2659e-02],
          [-4.1806e-02, -4.7159e-02,  2.9762e-02],
          [ 2.3890e-02,  4.4520e-02, -3.2295e-02]],

         [[-3.2558e-02,  9.7376e-02,  6.8213e-02],
          [-1.8857e-02, -1.0722e-02,  3.4662e-02],
          [-9.9881e-02, -1.1391e-02,  8.4894e-02]],

         [[ 3.6276e-02,  5.9703e-02, -3.2979e-03],
          [-3.7782e-02,  4.8240e-02, -4.4170e-02],
          [-3.9182e-02,  3.5860e-02, -3.4382e-02]],

         ...,

         [[ 1.3762e-01, -1.0665e-01,  4.4227e-04],
          [ 4.0519e-02, -3.3111e-02,  4.3582e-02],
          [-4.5529e-02,  9.2953e-02, -6.5298e-02]],

         [[-2.0648e-02, -6.2302e-02, -4.0452e-02],
          [-2.7481e-02, -3.5146e-02,  6.8670e-02],
          [ 1.5630e-02, -1.5152e-02, -3.4981e-03]],

         [[-3.4038e-02, -5.9975e-02, -3.0227e-02],
          [-1.0124e-02,  4.1952e-02, -7.9527e-02],
          [ 8.1214e-02,  1.5696e-02, -3.4619e-02]]],


        [[[-4.7654e-02, -1.9596e-02,  2.4357e-02],
          [-3.9460e-02,  8.3734e-02,  5.7599e-02],
          [-7.2958e-02, -2.0074e-02, -1.6025e-02]],

         [[ 3.9431e-03,  8.6887e-03,  9.4293e-02],
          [ 1.6663e-02, -2.1731e-02, -2.6595e-04],
          [ 6.8377e-02, -1.9206e-02, -5.5327e-02]],

         [[-1.7005e-02, -2.1109e-02, -1.4648e-02],
          [ 4.3344e-02,  8.2694e-02, -6.1772e-02],
          [ 8.1262e-02, -1.0079e-01,  3.4908e-02]],

         ...,

         [[-9.5528e-02, -6.9588e-02, -1.2432e-01],
          [ 2.7435e-03,  4.1325e-03,  5.9492e-02],
          [ 1.7519e-02, -4.2039e-02,  1.6191e-02]],

         [[ 7.3975e-02,  3.9063e-02,  3.5580e-02],
          [-5.4447e-02,  6.9206e-02, -7.2109e-02],
          [-5.3338e-03,  5.1363e-02, -6.3725e-02]],

         [[ 1.6979e-02, -2.9197e-02,  2.8989e-03],
          [-8.8879e-03, -6.8200e-02,  1.7659e-02],
          [-1.4028e-02,  1.1406e-01,  9.0202e-02]]],


        [[[ 7.9170e-02, -7.6912e-02, -1.3345e-02],
          [ 8.4247e-02,  2.5549e-02,  3.9346e-02],
          [ 7.4386e-02,  7.1813e-02,  3.1091e-02]],

         [[ 1.4884e-03,  5.3839e-02,  2.1083e-02],
          [ 9.8376e-02,  4.7764e-02,  5.8544e-02],
          [-1.1672e-03, -3.1700e-02,  3.8015e-02]],

         [[-7.0216e-03,  7.9984e-02, -4.9724e-02],
          [ 1.5897e-02, -3.1819e-03,  5.3122e-02],
          [-1.8286e-02, -2.4316e-02,  2.5631e-02]],

         ...,

         [[-1.3079e-02,  6.3886e-02,  9.0830e-02],
          [-8.2333e-02, -8.3662e-02, -1.1033e-01],
          [ 2.6587e-02, -1.9079e-02, -3.2836e-02]],

         [[ 8.6386e-02, -2.2478e-02,  1.3625e-01],
          [-1.4778e-02, -1.7590e-03,  3.7977e-02],
          [ 1.9560e-02,  5.1584e-02, -1.8385e-02]],

         [[-1.5924e-02,  4.0233e-02,  3.4949e-02],
          [ 1.1232e-02,  1.9158e-02,  3.6158e-02],
          [-1.3444e-02, -1.4963e-02, -2.7755e-02]]],


        ...,


        [[[-3.5425e-02,  6.0111e-02, -6.4829e-02],
          [-3.2596e-02,  1.0971e-02, -6.0650e-02],
          [-1.1889e-01, -7.3504e-02,  9.1927e-02]],

         [[ 6.0980e-02,  1.2241e-02,  4.5800e-02],
          [-6.8266e-02, -6.5113e-02,  9.3784e-02],
          [-9.7259e-03,  5.1028e-03, -7.2779e-03]],

         [[-6.7476e-03,  1.0114e-02,  6.8553e-02],
          [ 7.4986e-02, -9.7588e-02, -1.3004e-02],
          [-4.2788e-03,  1.2204e-01,  7.0320e-02]],

         ...,

         [[ 3.7796e-02, -1.3359e-04,  4.8482e-02],
          [ 4.2382e-02,  8.3779e-02,  2.9618e-02],
          [ 2.4103e-02, -3.2374e-02,  2.2356e-03]],

         [[-9.4614e-02, -3.4450e-03,  4.3095e-02],
          [-3.0036e-04,  2.4161e-02, -2.7828e-02],
          [-2.8019e-03, -2.0258e-02, -4.1330e-02]],

         [[-8.7034e-02,  4.0180e-02,  6.3465e-02],
          [-3.2754e-02,  2.8889e-02, -1.3989e-01],
          [ 3.9585e-02,  5.3841e-02,  3.0053e-02]]],


        [[[-1.8921e-02, -5.7076e-04, -2.9390e-02],
          [-3.7429e-02, -4.9559e-02,  3.4140e-02],
          [ 5.7587e-02, -1.2080e-01, -6.2157e-02]],

         [[-1.0212e-01,  3.0063e-02, -2.8806e-02],
          [ 1.1313e-01, -3.8841e-03, -6.9959e-02],
          [ 5.6707e-03, -2.0297e-02,  1.0292e-01]],

         [[ 8.9113e-02, -6.3157e-02, -5.8675e-02],
          [-4.6295e-02, -1.9597e-02, -5.5327e-02],
          [ 2.4998e-02, -2.1320e-02,  5.9836e-02]],

         ...,

         [[ 6.1736e-02, -8.9062e-02, -8.3750e-02],
          [ 1.7885e-02,  1.5646e-01,  1.2782e-03],
          [ 7.3539e-02,  1.2490e-02, -5.6985e-02]],

         [[ 1.9951e-03,  1.0549e-03,  1.0094e-01],
          [ 4.4702e-02, -2.1299e-02,  4.8439e-02],
          [ 6.6624e-03,  5.2244e-02, -4.0414e-02]],

         [[-2.5679e-02,  6.4742e-02, -1.5539e-02],
          [-6.5423e-02,  4.0940e-02,  1.1963e-01],
          [ 7.6029e-03,  1.1776e-02, -1.4456e-01]]],


        [[[ 1.9569e-02, -5.3512e-02,  2.4907e-02],
          [-9.1845e-02, -1.9388e-02,  9.0924e-02],
          [-1.0165e-01, -2.1162e-02,  8.6294e-02]],

         [[-9.2914e-02, -3.0293e-02, -3.4208e-02],
          [-2.6566e-02, -1.1171e-01,  6.9218e-02],
          [-3.4104e-02, -3.2406e-02,  7.6319e-02]],

         [[-2.9426e-02,  1.7128e-02, -1.9874e-03],
          [-2.6398e-02, -1.6592e-02,  5.5736e-03],
          [-8.0071e-02,  1.2947e-02,  4.2269e-02]],

         ...,

         [[ 1.2710e-02, -4.0754e-02,  9.3377e-02],
          [ 3.0817e-02,  9.4004e-02, -2.5053e-02],
          [ 6.0613e-03,  2.4162e-02,  1.3526e-02]],

         [[ 1.8409e-02,  1.4807e-01,  2.7896e-02],
          [-2.0245e-02, -6.6361e-02,  5.0320e-02],
          [ 1.1262e-02,  6.8832e-03,  1.5426e-02]],

         [[ 2.9138e-02, -6.8984e-03, -9.4188e-02],
          [ 1.8728e-02,  1.7050e-02, -1.4582e-02],
          [ 5.3202e-02, -8.8981e-02, -7.6753e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 2.5017e-02,  2.2432e-03,  2.0930e-04],
          [ 1.1166e-01,  4.7156e-02,  2.2928e-02],
          [ 4.4358e-02,  4.0310e-02,  1.3320e-02]],

         [[-6.0196e-03, -8.3176e-02,  7.2774e-02],
          [ 2.1613e-03, -9.4944e-02,  4.8216e-02],
          [-1.4483e-01,  1.2245e-01,  6.0450e-02]],

         [[-1.9832e-02,  7.1718e-02, -3.7634e-02],
          [-3.3531e-02,  5.3919e-03,  1.8220e-02],
          [ 5.6881e-02, -4.1817e-02,  3.6279e-02]],

         ...,

         [[ 5.4820e-02, -8.7875e-02,  3.6330e-03],
          [ 4.0172e-02,  3.3569e-03, -1.0902e-01],
          [ 6.5840e-02, -3.9542e-02, -4.7096e-02]],

         [[-1.3727e-01, -2.1477e-02, -7.7895e-03],
          [-6.4108e-02,  3.4093e-02, -1.8623e-03],
          [ 1.0081e-01,  4.3064e-03, -1.1283e-01]],

         [[ 1.7906e-02,  2.5224e-02,  5.6864e-02],
          [-6.4581e-02, -1.8990e-02, -1.1008e-02],
          [-4.4752e-02, -7.6894e-03, -5.9549e-02]]],


        [[[-9.7036e-02,  2.8886e-02, -1.3464e-02],
          [-9.2054e-02, -1.2534e-02,  6.4073e-02],
          [-1.7261e-01,  8.6289e-03,  4.9062e-02]],

         [[-6.2188e-02, -2.8687e-02, -3.2379e-02],
          [ 3.7222e-02,  2.0878e-02, -6.5864e-02],
          [-6.7720e-02, -1.0792e-01,  2.4700e-02]],

         [[ 2.2014e-02,  3.2171e-02, -9.2809e-02],
          [-4.1895e-02,  5.0509e-02, -2.3851e-03],
          [-6.6458e-03, -3.5338e-02,  2.6647e-02]],

         ...,

         [[-1.8488e-03, -1.5698e-02,  7.4220e-02],
          [-2.4496e-02,  5.4049e-02, -3.6756e-02],
          [ 8.8787e-02,  1.5218e-02, -3.2301e-02]],

         [[-4.9100e-02,  2.0747e-02, -5.5772e-02],
          [ 4.7472e-02,  3.0197e-02,  2.2034e-04],
          [ 1.7200e-01,  9.3362e-02, -6.2962e-02]],

         [[ 7.5758e-02,  6.3312e-02, -6.9307e-02],
          [ 1.1763e-02, -9.3484e-02, -1.9333e-02],
          [ 2.3107e-02, -8.8925e-02,  5.4446e-02]]],


        [[[-6.1353e-02, -3.1890e-02, -2.4341e-02],
          [-7.7521e-03,  4.0172e-02,  6.2209e-02],
          [-7.2833e-02, -1.7516e-02,  3.7466e-02]],

         [[-1.2466e-01,  3.5801e-02,  7.1966e-02],
          [-7.7673e-03,  3.3251e-02, -1.8359e-02],
          [ 6.2908e-02,  8.3162e-02, -5.9357e-02]],

         [[-1.2788e-01, -3.5098e-02,  4.8445e-02],
          [-4.4123e-02, -3.5716e-02,  1.7536e-02],
          [ 4.9873e-02,  1.9415e-02, -8.2492e-02]],

         ...,

         [[ 7.7428e-02,  7.4516e-02,  8.4237e-02],
          [-2.3138e-02, -7.4088e-02,  2.6100e-02],
          [-1.4052e-02,  6.7660e-02, -1.2871e-02]],

         [[-1.9138e-02,  6.4566e-02, -4.4997e-02],
          [-9.4965e-03,  1.2233e-02, -1.0201e-01],
          [ 6.9758e-02, -2.5118e-02, -1.7278e-02]],

         [[-3.9298e-02,  4.4832e-02,  1.3859e-02],
          [ 5.2582e-02, -2.0501e-02,  4.1784e-02],
          [ 2.4298e-02,  7.4865e-03,  6.9002e-02]]],


        ...,


        [[[-2.3326e-02,  1.7765e-02, -2.6623e-02],
          [ 6.3638e-02, -8.9721e-02, -4.0802e-02],
          [ 2.4054e-02, -6.8307e-02,  9.3533e-02]],

         [[ 1.8230e-02,  4.8108e-02, -9.5051e-02],
          [-6.3600e-02,  2.6141e-02,  3.1561e-02],
          [-7.6783e-02,  8.0188e-02, -7.7034e-02]],

         [[ 1.2438e-02, -1.3659e-01, -7.6583e-03],
          [-9.6457e-02,  7.3811e-02,  8.3959e-02],
          [ 5.8156e-02,  2.3843e-02, -6.5471e-02]],

         ...,

         [[ 1.6126e-01, -4.4917e-03, -1.1921e-01],
          [ 1.3120e-03,  3.9294e-02,  6.0254e-02],
          [-2.6313e-02,  1.9306e-02,  7.2713e-02]],

         [[-5.1050e-03, -5.1452e-05, -1.8791e-02],
          [-1.2741e-02,  2.2549e-02,  1.7063e-02],
          [-3.6655e-02,  9.1084e-03,  9.4975e-02]],

         [[-2.4954e-02,  4.3918e-02, -1.0762e-02],
          [ 1.6899e-02, -9.0699e-02, -6.9186e-02],
          [ 3.7395e-02, -4.4678e-02, -9.3061e-02]]],


        [[[-5.0908e-02,  1.4998e-01, -9.6817e-03],
          [-8.3591e-02, -2.6660e-02,  1.8110e-02],
          [-1.2000e-02, -1.6020e-02,  5.7753e-03]],

         [[ 2.1500e-02, -4.1681e-02, -2.9551e-02],
          [ 7.6959e-03, -9.6950e-02,  2.3303e-02],
          [ 3.8143e-02,  4.2048e-02, -5.8079e-02]],

         [[-4.5707e-02,  5.3593e-02,  3.3711e-02],
          [-1.1125e-01, -1.4759e-02,  1.1191e-02],
          [-7.3481e-02, -2.2696e-02, -1.0563e-02]],

         ...,

         [[ 3.0023e-02,  1.3086e-03,  1.0152e-01],
          [ 2.9349e-02, -9.8785e-02,  6.6403e-02],
          [ 1.4411e-01,  2.3676e-02, -5.5182e-03]],

         [[-3.5939e-03,  3.7288e-02, -1.6852e-02],
          [-5.6757e-02,  8.1400e-02, -4.3620e-02],
          [ 7.2296e-02,  6.5007e-02,  6.9252e-02]],

         [[-4.6523e-02, -2.1918e-02, -2.4739e-02],
          [ 1.7428e-02,  2.0070e-02,  4.8346e-02],
          [-1.3629e-01, -4.0997e-02,  3.1789e-02]]],


        [[[-4.4758e-02,  5.1874e-02,  7.2259e-02],
          [ 8.8035e-02, -6.7887e-02,  6.4033e-02],
          [-1.8410e-02,  2.5785e-02, -9.6141e-02]],

         [[ 2.4107e-02,  4.3055e-02,  1.0716e-02],
          [-9.1499e-04, -3.3250e-02, -1.6792e-02],
          [ 1.5487e-02, -1.9108e-02, -8.2356e-02]],

         [[-1.2143e-02, -5.4068e-02, -8.9452e-03],
          [-3.9151e-02,  2.2098e-02, -3.5144e-02],
          [ 3.4378e-02, -9.7574e-02, -9.5073e-03]],

         ...,

         [[-1.0476e-03, -1.0153e-02, -1.0858e-03],
          [-1.0280e-01,  1.4013e-01,  3.1268e-02],
          [ 2.4785e-02, -3.2324e-02, -3.5455e-02]],

         [[-1.0030e-02,  1.1541e-01,  5.5223e-03],
          [-3.3307e-04, -2.1153e-02, -4.4470e-02],
          [ 5.8180e-03,  5.1165e-02,  3.6822e-02]],

         [[-1.4298e-01, -4.2393e-03,  8.2270e-02],
          [ 9.5466e-03,  1.0059e-01, -4.5828e-02],
          [ 4.5979e-02, -3.9636e-02,  4.0923e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 6.8524e-02,  9.1070e-02,  1.9105e-02],
          [ 1.1032e-01, -2.9972e-03, -8.4093e-03],
          [ 1.4592e-02, -3.7274e-02, -3.6103e-02]],

         [[-4.1600e-02, -2.8540e-02,  2.3684e-02],
          [-3.1380e-02,  1.0929e-02, -7.9164e-03],
          [-1.7392e-02, -2.7111e-02, -7.6186e-02]],

         [[ 2.1655e-02, -9.3474e-02, -4.5882e-02],
          [ 3.0574e-02, -1.5875e-02,  1.8739e-02],
          [-2.9521e-02,  1.2997e-02,  4.6087e-03]],

         ...,

         [[ 1.9224e-02, -2.0071e-02, -1.0824e-02],
          [ 2.2375e-02,  2.1616e-02,  1.1519e-01],
          [ 6.8476e-02, -9.6838e-05, -3.0999e-02]],

         [[ 4.1950e-02,  1.0899e-01, -6.7786e-02],
          [ 5.0393e-02,  7.7341e-02,  1.5247e-02],
          [ 7.5189e-02,  2.5918e-02,  3.4136e-02]],

         [[-5.2640e-03, -3.5379e-02,  7.5342e-03],
          [ 1.7817e-02,  4.0393e-02, -7.3933e-03],
          [-3.3425e-03, -1.8749e-01,  6.5285e-02]]],


        [[[ 3.3047e-02,  3.9360e-02,  2.2055e-02],
          [-3.0788e-03,  2.5237e-02,  8.7699e-02],
          [ 7.2180e-02,  3.1428e-02, -1.6506e-02]],

         [[ 3.9167e-02,  1.4915e-02,  4.0440e-02],
          [-2.1401e-02, -3.9233e-02, -4.8944e-03],
          [ 1.0233e-01, -3.8407e-02,  4.2904e-02]],

         [[ 5.1017e-02,  6.9084e-02, -6.1487e-02],
          [-3.0511e-02,  5.0091e-02, -5.7539e-02],
          [-6.3056e-02, -4.0498e-02,  8.1184e-02]],

         ...,

         [[ 5.9680e-02, -1.3657e-02,  8.9086e-03],
          [-3.0858e-02,  3.1072e-02, -1.2879e-01],
          [-6.1175e-02,  8.7599e-02, -1.2748e-01]],

         [[-2.8369e-02,  7.5348e-03, -3.9200e-02],
          [ 7.6303e-02,  8.2537e-03,  5.8700e-02],
          [-3.8539e-02, -7.3292e-02,  3.1634e-03]],

         [[-5.4399e-02,  1.2192e-02, -1.0143e-01],
          [ 1.5036e-01, -9.5673e-02,  4.2358e-02],
          [ 4.3942e-02,  3.9021e-02, -1.6959e-02]]],


        [[[-4.2847e-02,  2.8334e-02, -5.8091e-02],
          [-5.5901e-02, -4.8498e-02,  4.4781e-02],
          [-1.6627e-02,  3.9810e-02,  4.5611e-02]],

         [[ 3.6608e-02,  3.1658e-03,  2.9247e-02],
          [-1.1658e-01,  4.8439e-02, -1.9785e-02],
          [ 1.3493e-05, -9.3013e-02, -6.2001e-02]],

         [[ 7.7508e-02,  3.4439e-02,  4.5965e-02],
          [ 4.5101e-02, -3.7516e-02,  3.4463e-02],
          [ 3.9334e-03,  5.8606e-02,  2.8024e-02]],

         ...,

         [[-1.1517e-01, -2.9105e-02, -8.1744e-02],
          [-3.8655e-02, -4.2853e-02,  9.0442e-03],
          [-5.7710e-02, -3.6223e-02, -5.7407e-02]],

         [[-9.8178e-02, -1.0954e-01,  3.6557e-02],
          [ 5.9535e-02,  1.1534e-01,  2.2734e-02],
          [-7.2851e-02,  9.7418e-02, -4.5429e-03]],

         [[-1.0510e-01, -7.6409e-02, -6.5621e-02],
          [-3.9981e-02, -7.0371e-04,  2.9440e-02],
          [-7.0653e-02, -1.7955e-01,  1.2590e-01]]],


        ...,


        [[[-8.4256e-03,  2.7898e-02,  4.3587e-02],
          [ 7.8748e-03,  6.1708e-03,  1.9026e-02],
          [ 4.7535e-02,  7.7869e-02, -3.1359e-02]],

         [[ 1.3805e-02,  4.0337e-02,  1.0421e-02],
          [-1.2050e-02, -6.8804e-03,  2.9808e-04],
          [ 1.1303e-01, -4.0723e-02,  5.8651e-02]],

         [[-3.4459e-02, -5.5573e-02, -6.3595e-02],
          [-2.8216e-02, -1.4086e-02, -3.1822e-02],
          [ 4.5881e-02, -9.0230e-02,  7.3126e-02]],

         ...,

         [[ 2.1365e-02, -3.2842e-02,  2.7071e-02],
          [-9.7061e-02, -1.0786e-01, -5.6239e-02],
          [-6.9514e-02,  2.5971e-02,  4.2441e-03]],

         [[ 1.5268e-02, -2.9920e-02, -9.4221e-03],
          [-3.7372e-02,  7.3079e-02,  5.5095e-02],
          [-6.3931e-02,  7.6501e-02,  9.3025e-02]],

         [[ 5.5885e-02,  5.4634e-02, -5.6524e-02],
          [-6.0466e-02, -6.3321e-02, -4.3019e-02],
          [-4.4222e-02,  9.4022e-02, -2.4604e-02]]],


        [[[-2.1115e-02,  3.6666e-02,  3.3649e-04],
          [ 8.0125e-03,  1.1870e-02,  8.2799e-03],
          [ 3.4187e-02, -1.2980e-01, -8.6736e-02]],

         [[-5.9919e-02, -1.3993e-02,  4.7504e-02],
          [ 4.3542e-02,  5.6329e-02,  6.0418e-02],
          [ 1.2407e-02,  2.1770e-02,  1.1698e-01]],

         [[-4.4158e-02,  3.6027e-02, -3.2194e-03],
          [ 7.7169e-02,  3.0958e-02, -6.5177e-02],
          [-8.3983e-02, -7.1531e-02, -9.4784e-02]],

         ...,

         [[ 7.6411e-02, -9.7517e-02, -3.1475e-02],
          [-9.9955e-02,  1.0743e-01,  5.7348e-03],
          [ 1.6088e-02, -7.1276e-02, -1.4538e-01]],

         [[-2.5655e-02,  5.8865e-02, -8.1976e-02],
          [ 5.3494e-02,  1.2358e-02,  6.0044e-02],
          [ 5.7400e-02,  2.3022e-02,  4.9239e-02]],

         [[-1.0379e-01, -2.2398e-02,  6.9418e-02],
          [-4.1749e-03, -6.6849e-02,  2.8729e-03],
          [ 2.0268e-02, -2.8170e-02,  7.5321e-02]]],


        [[[ 2.9556e-02, -5.3154e-02,  2.5002e-02],
          [-3.3806e-02, -5.3471e-02, -1.0891e-02],
          [ 1.2547e-02, -7.8861e-02,  5.8335e-02]],

         [[ 1.1291e-02,  5.5685e-02,  6.0490e-02],
          [-4.3878e-02, -1.9471e-02,  3.8312e-02],
          [-9.7399e-02, -7.7521e-02,  8.4201e-02]],

         [[ 6.3759e-02, -5.7669e-02,  3.0509e-02],
          [ 1.9675e-02,  8.3571e-02,  1.0807e-01],
          [-6.8730e-02,  5.6160e-02,  7.9551e-02]],

         ...,

         [[-1.4586e-01,  1.9874e-02,  9.4132e-02],
          [ 6.5356e-02, -1.3543e-02,  4.4966e-02],
          [ 7.6518e-02, -4.3754e-02, -2.7586e-02]],

         [[-8.8638e-03,  5.0526e-02,  2.7835e-02],
          [ 6.4015e-03, -1.4722e-02, -1.4191e-02],
          [ 4.7247e-03, -4.2857e-02,  1.5720e-02]],

         [[ 2.6669e-02, -2.0380e-02,  9.2702e-02],
          [-7.1873e-02, -7.1939e-02, -3.0124e-02],
          [ 6.2890e-02,  2.4407e-02,  3.7980e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.1070]],

         [[ 0.0294]],

         [[-0.0183]],

         ...,

         [[ 0.0426]],

         [[-0.0326]],

         [[-0.0153]]],


        [[[ 0.0437]],

         [[ 0.0849]],

         [[-0.0984]],

         ...,

         [[ 0.1157]],

         [[-0.0386]],

         [[-0.0274]]],


        [[[ 0.1538]],

         [[ 0.1257]],

         [[ 0.0460]],

         ...,

         [[ 0.1059]],

         [[ 0.0225]],

         [[-0.0503]]],


        ...,


        [[[-0.0136]],

         [[ 0.0284]],

         [[-0.0188]],

         ...,

         [[ 0.2230]],

         [[-0.1089]],

         [[-0.1009]]],


        [[[ 0.1106]],

         [[-0.0018]],

         [[ 0.0770]],

         ...,

         [[-0.0338]],

         [[-0.0054]],

         [[ 0.1277]]],


        [[[ 0.1894]],

         [[ 0.1485]],

         [[-0.0155]],

         ...,

         [[ 0.0012]],

         [[-0.0021]],

         [[-0.0577]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 0.0806,  0.1687, -0.0092],
          [ 0.0130, -0.0726, -0.0321],
          [ 0.0066, -0.0677,  0.0390]],

         [[ 0.0561, -0.0225, -0.0933],
          [ 0.0308,  0.0136, -0.0276],
          [ 0.0072, -0.0048, -0.0196]],

         [[-0.0357,  0.0126,  0.0021],
          [ 0.0742, -0.0370, -0.0052],
          [-0.0325,  0.0357, -0.0766]],

         ...,

         [[ 0.0563, -0.0105, -0.0632],
          [-0.0430, -0.0207, -0.0112],
          [ 0.0676, -0.0288,  0.0159]],

         [[ 0.0491, -0.0369,  0.0363],
          [ 0.0183,  0.0542, -0.1464],
          [-0.0441,  0.0063,  0.0178]],

         [[-0.0585, -0.0320, -0.0638],
          [-0.0296,  0.0129, -0.0507],
          [-0.0044,  0.0508, -0.0661]]],


        [[[ 0.0536,  0.0326, -0.0359],
          [ 0.0446, -0.0239, -0.0178],
          [ 0.0645, -0.0171, -0.0832]],

         [[ 0.0368, -0.0192,  0.0635],
          [ 0.0044, -0.0614,  0.0410],
          [-0.0240, -0.0577,  0.1239]],

         [[ 0.0576,  0.0442,  0.0136],
          [-0.0559,  0.0591,  0.0431],
          [-0.0563, -0.0336,  0.0067]],

         ...,

         [[-0.0056, -0.0109,  0.0456],
          [-0.0865,  0.1066,  0.0007],
          [ 0.0173, -0.0330, -0.0347]],

         [[-0.0729, -0.0049, -0.0209],
          [ 0.0032, -0.0404,  0.0248],
          [-0.0279, -0.0449, -0.0211]],

         [[ 0.0086,  0.0335, -0.0213],
          [ 0.0464,  0.0092, -0.0598],
          [ 0.1001,  0.0600,  0.0004]]],


        [[[-0.0398,  0.0095,  0.0361],
          [ 0.0093,  0.0468, -0.0891],
          [ 0.0845,  0.0411,  0.0170]],

         [[-0.0493,  0.0102,  0.0125],
          [-0.0326,  0.0223,  0.0114],
          [-0.0536, -0.0366,  0.0724]],

         [[-0.1114, -0.0532,  0.0131],
          [ 0.0426,  0.0291,  0.0125],
          [ 0.0431, -0.0293, -0.0680]],

         ...,

         [[-0.0722, -0.0054, -0.0972],
          [ 0.0136, -0.0631,  0.0530],
          [ 0.0329,  0.0462, -0.0130]],

         [[ 0.0247,  0.0274,  0.0090],
          [ 0.0689, -0.0580, -0.0058],
          [-0.0885,  0.0392, -0.0287]],

         [[-0.0191,  0.0178, -0.0225],
          [ 0.0547, -0.0878,  0.0624],
          [ 0.0165, -0.0012, -0.0846]]],


        ...,


        [[[-0.0653, -0.0141,  0.0435],
          [ 0.0374,  0.0159,  0.0125],
          [ 0.0096,  0.0280,  0.0746]],

         [[-0.0076,  0.0066,  0.0143],
          [-0.0545, -0.0227, -0.0256],
          [-0.0371, -0.0566,  0.0164]],

         [[-0.1211, -0.0402,  0.0257],
          [ 0.0638, -0.0147,  0.0117],
          [-0.0548,  0.0309,  0.1059]],

         ...,

         [[-0.1093,  0.0170,  0.0083],
          [ 0.0131,  0.0081,  0.0296],
          [-0.0088, -0.0564,  0.0040]],

         [[-0.0620, -0.0227,  0.0062],
          [-0.0693,  0.0461,  0.0792],
          [-0.0254, -0.0649,  0.0663]],

         [[-0.0685,  0.0141, -0.0724],
          [-0.0396,  0.0424, -0.0032],
          [-0.0385, -0.0057,  0.0883]]],


        [[[ 0.0352, -0.0669, -0.0696],
          [-0.0720, -0.0762, -0.0051],
          [-0.0358, -0.0436,  0.0523]],

         [[ 0.0174, -0.0400, -0.0787],
          [ 0.0740, -0.0809,  0.0132],
          [-0.0277,  0.0466,  0.0138]],

         [[-0.0493,  0.0253, -0.0490],
          [-0.0420, -0.0643,  0.0695],
          [-0.0328, -0.0841, -0.0625]],

         ...,

         [[-0.0339, -0.0441,  0.0694],
          [ 0.1010,  0.0109, -0.0295],
          [-0.0371, -0.0085, -0.0172]],

         [[-0.0200,  0.0472, -0.0321],
          [ 0.0448, -0.0468,  0.0082],
          [ 0.0414, -0.0168,  0.0446]],

         [[-0.0493, -0.0464,  0.0194],
          [-0.0502, -0.0037, -0.0065],
          [-0.0622, -0.0232, -0.0806]]],


        [[[ 0.0400, -0.0287, -0.0200],
          [ 0.0200,  0.0722,  0.1067],
          [-0.0396,  0.0125,  0.0188]],

         [[-0.1102,  0.0917, -0.0289],
          [-0.0017,  0.0456, -0.0311],
          [ 0.0744,  0.1178, -0.0002]],

         [[ 0.0168, -0.0126, -0.0115],
          [ 0.0097,  0.0512,  0.0487],
          [ 0.0002,  0.0168, -0.0441]],

         ...,

         [[ 0.0665, -0.0099, -0.0707],
          [-0.0359, -0.0346,  0.0958],
          [ 0.0498, -0.0679, -0.0378]],

         [[-0.0133, -0.0152, -0.0153],
          [ 0.0463,  0.0383,  0.0712],
          [-0.0200, -0.0123, -0.0180]],

         [[ 0.0579,  0.1062, -0.0667],
          [-0.0004,  0.0157, -0.0633],
          [-0.0046, -0.0430, -0.0350]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-2.5968e-03, -5.4800e-02, -4.1515e-02],
          [ 4.9870e-02,  6.6071e-02, -5.3370e-02],
          [ 4.2675e-02, -2.3051e-02,  1.1303e-01]],

         [[ 2.0588e-02,  4.4668e-03, -6.0310e-02],
          [-1.0168e-02,  3.9977e-02,  3.3954e-02],
          [ 2.2456e-02,  3.3880e-02,  6.9570e-02]],

         [[-4.6286e-02,  9.7088e-02,  1.5439e-02],
          [ 7.0000e-02,  6.6228e-02,  3.3515e-02],
          [ 9.4262e-02, -2.8703e-02, -3.0579e-02]],

         ...,

         [[ 5.3635e-02,  6.9644e-02, -6.6330e-02],
          [ 1.7964e-02, -1.8179e-02,  1.1312e-01],
          [ 5.1541e-02, -2.3921e-02,  2.0870e-02]],

         [[-1.0376e-01,  7.3318e-02,  4.5291e-03],
          [-4.9461e-02,  6.3925e-02,  6.0997e-02],
          [-1.6102e-02, -5.8059e-03, -1.7079e-02]],

         [[-1.4553e-02,  7.2080e-02,  4.5849e-02],
          [-3.9058e-02, -3.3425e-02, -1.4194e-02],
          [-7.6241e-02,  9.2094e-02,  7.2418e-02]]],


        [[[ 4.1847e-02,  8.6220e-03,  1.8618e-02],
          [-6.5174e-02, -2.8660e-02, -1.1032e-02],
          [-5.6303e-02,  6.2745e-02,  2.7796e-03]],

         [[-4.2905e-02,  9.7694e-02, -1.4337e-02],
          [-3.2231e-02, -3.2804e-02, -1.6068e-02],
          [ 3.5966e-02, -4.8432e-02, -4.9076e-02]],

         [[-8.8531e-02, -2.3375e-04,  2.5544e-02],
          [ 1.0679e-02,  1.5019e-02, -9.5985e-04],
          [ 3.1356e-02,  9.0788e-03,  1.4112e-02]],

         ...,

         [[-3.5310e-02, -1.1631e-04,  1.7274e-02],
          [-1.1318e-03,  1.3575e-02,  1.8175e-03],
          [-4.7360e-02,  1.4676e-02,  2.3936e-02]],

         [[-4.0976e-02, -9.0729e-03, -2.3511e-02],
          [-2.9117e-02,  5.3006e-02,  2.8699e-02],
          [ 7.2140e-02,  1.6134e-02, -4.5657e-02]],

         [[-4.6987e-03,  2.2412e-02,  1.6207e-03],
          [-4.1236e-02, -2.5994e-02,  3.5654e-02],
          [-6.0922e-02,  2.1286e-02,  1.3607e-02]]],


        [[[-3.4683e-02,  1.2976e-02, -1.6528e-02],
          [-4.4347e-02,  4.4231e-02,  1.4151e-02],
          [ 4.2837e-02, -1.4772e-02, -7.3642e-02]],

         [[ 1.6727e-02, -3.0868e-02,  2.1302e-02],
          [ 8.7075e-02,  6.8228e-02,  4.8287e-02],
          [-9.8526e-03, -6.6393e-02,  1.4605e-03]],

         [[-2.1472e-03,  2.4049e-02, -6.2818e-02],
          [-3.4095e-02,  7.3978e-02,  2.1175e-02],
          [ 6.6577e-03,  8.0267e-02, -4.9244e-02]],

         ...,

         [[ 1.3829e-03, -2.8494e-02, -2.0714e-02],
          [-4.4379e-02,  1.0560e-02,  8.3986e-03],
          [-5.7643e-02, -2.1554e-02, -1.3950e-01]],

         [[-4.0592e-02, -6.3540e-02, -4.4630e-02],
          [ 1.4754e-02, -1.1087e-02,  7.1968e-02],
          [-3.4522e-02, -4.8192e-03,  1.3535e-02]],

         [[ 1.0950e-01, -5.7423e-02,  5.3803e-02],
          [ 6.6220e-03, -3.6178e-02, -2.5706e-03],
          [-8.7085e-03, -1.1619e-02,  2.3188e-02]]],


        ...,


        [[[-1.6853e-02,  6.0154e-02,  1.4485e-02],
          [-4.1931e-02,  7.4031e-02, -7.1044e-02],
          [ 1.0974e-02, -9.1674e-02, -1.0700e-02]],

         [[ 2.5982e-02,  2.2300e-02, -3.0060e-02],
          [-2.6925e-02,  2.4754e-02,  1.7023e-02],
          [-6.6587e-03, -3.8093e-02,  5.5890e-02]],

         [[ 2.8054e-02,  5.7640e-02,  4.1950e-02],
          [ 5.3849e-03,  5.7366e-02, -6.3996e-02],
          [-2.5041e-02, -3.7824e-02,  7.3008e-02]],

         ...,

         [[-2.5982e-02,  3.6996e-03, -1.4189e-02],
          [-2.3317e-02, -8.9444e-02,  7.1220e-02],
          [-3.8045e-02,  4.4122e-02,  9.3346e-03]],

         [[ 6.8842e-02, -6.7935e-04,  5.4394e-02],
          [ 8.7920e-02, -7.1147e-02, -6.4568e-02],
          [-2.1037e-02,  6.4950e-02,  1.8228e-02]],

         [[-4.1687e-02, -3.7124e-02,  8.7648e-02],
          [-2.5058e-02,  2.5665e-02,  1.7811e-02],
          [ 5.5921e-02,  3.1165e-02, -7.2629e-03]]],


        [[[-4.4269e-02,  2.2756e-02,  6.1637e-02],
          [ 5.9357e-03, -5.5695e-02, -3.8722e-02],
          [ 3.7050e-02, -4.7846e-02,  1.3175e-02]],

         [[ 4.2720e-02,  3.8792e-02, -7.2495e-02],
          [ 2.0780e-02, -4.5882e-02, -3.0113e-02],
          [ 2.0623e-02, -5.7371e-02, -2.4519e-02]],

         [[ 2.5421e-02,  1.4105e-02, -8.6500e-02],
          [-4.3561e-02,  3.1396e-02, -8.7543e-03],
          [-1.2396e-02,  1.1069e-01,  3.7215e-02]],

         ...,

         [[ 4.2336e-02,  3.8360e-02,  6.6041e-03],
          [ 4.1988e-02,  1.1043e-01, -6.2655e-02],
          [ 1.9068e-02,  5.8894e-02, -4.0808e-02]],

         [[ 3.7606e-02,  3.5322e-02,  2.1906e-02],
          [ 6.8702e-02, -2.3573e-02,  4.5084e-03],
          [-6.9071e-03,  1.3957e-03, -2.5513e-02]],

         [[-9.1997e-02,  2.3460e-02,  2.1314e-02],
          [-2.4812e-02,  3.3011e-02, -3.5788e-02],
          [ 3.3645e-02,  7.4435e-02, -5.1902e-03]]],


        [[[-8.3535e-03,  1.5357e-02, -1.3347e-02],
          [ 2.0175e-02,  7.6969e-03,  1.4010e-02],
          [ 2.6353e-02, -6.3240e-03,  1.9767e-02]],

         [[ 2.4383e-02,  9.1588e-02,  6.3007e-02],
          [-4.4634e-02, -2.5498e-02, -8.0415e-02],
          [ 2.8787e-02, -2.7223e-02,  4.9694e-03]],

         [[-4.1204e-02,  2.1904e-02, -5.3005e-02],
          [-2.0117e-02,  4.6081e-02, -9.4000e-03],
          [ 9.9470e-03,  2.3854e-02,  2.7291e-02]],

         ...,

         [[ 5.2843e-03,  3.4293e-02,  3.2039e-02],
          [-5.6093e-02, -9.8324e-02, -3.3995e-02],
          [ 3.8812e-02,  3.1241e-02, -4.3859e-02]],

         [[ 7.0870e-02, -7.4473e-02,  8.3695e-02],
          [ 6.3691e-02, -2.8131e-02, -4.2310e-02],
          [ 2.1286e-02,  3.6887e-02,  6.5004e-02]],

         [[-1.4984e-02, -3.9404e-03, -3.7620e-03],
          [ 2.9222e-02,  7.7171e-02,  9.7728e-02],
          [-3.8737e-02, -4.6557e-03,  4.0510e-03]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0694]],

         [[ 0.1031]],

         [[-0.0351]],

         ...,

         [[ 0.2463]],

         [[ 0.1156]],

         [[ 0.0891]]],


        [[[ 0.1420]],

         [[ 0.0889]],

         [[-0.0122]],

         ...,

         [[-0.0318]],

         [[-0.2544]],

         [[-0.0937]]],


        [[[-0.0304]],

         [[ 0.0527]],

         [[-0.1595]],

         ...,

         [[-0.0315]],

         [[ 0.2570]],

         [[ 0.1764]]],


        ...,


        [[[-0.0253]],

         [[ 0.0600]],

         [[ 0.0539]],

         ...,

         [[-0.0185]],

         [[-0.0206]],

         [[ 0.1255]]],


        [[[ 0.0729]],

         [[ 0.0950]],

         [[ 0.0626]],

         ...,

         [[ 0.0963]],

         [[ 0.2531]],

         [[ 0.2133]]],


        [[[-0.0706]],

         [[ 0.0382]],

         [[ 0.1114]],

         ...,

         [[-0.0694]],

         [[-0.0646]],

         [[-0.0651]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0056,  0.0428, -0.0089],
          [ 0.0432, -0.0142, -0.0279],
          [ 0.0206, -0.0130,  0.0033]],

         [[-0.0481, -0.0226, -0.0684],
          [ 0.0259, -0.0701,  0.0171],
          [ 0.0289, -0.0522, -0.0799]],

         [[ 0.0029,  0.0572,  0.0181],
          [-0.0298,  0.0578, -0.0537],
          [-0.0191, -0.0483, -0.0113]],

         ...,

         [[-0.0631, -0.0693, -0.0080],
          [-0.0475,  0.0301, -0.0963],
          [-0.0086,  0.0256,  0.0384]],

         [[ 0.0209, -0.0346, -0.0711],
          [-0.0061, -0.0281,  0.0932],
          [-0.0314, -0.0032,  0.0075]],

         [[ 0.0538,  0.0379,  0.0364],
          [-0.0081, -0.0514, -0.0923],
          [-0.0724,  0.0758, -0.0444]]],


        [[[-0.0144, -0.0221, -0.0580],
          [-0.0143, -0.0651,  0.0264],
          [ 0.0138,  0.0635, -0.0359]],

         [[-0.0205, -0.0499, -0.0217],
          [ 0.0327, -0.0267, -0.0090],
          [-0.0103, -0.0757,  0.1295]],

         [[ 0.0557, -0.1412, -0.0396],
          [-0.0011, -0.0175,  0.0018],
          [ 0.0523,  0.0230, -0.0644]],

         ...,

         [[ 0.0173, -0.0140, -0.0978],
          [ 0.0099,  0.1381, -0.0398],
          [-0.1349,  0.0409, -0.0531]],

         [[ 0.0182, -0.0166,  0.0254],
          [-0.0157,  0.0137, -0.0339],
          [ 0.0120, -0.0343,  0.0955]],

         [[ 0.0064,  0.0621, -0.0305],
          [ 0.0122, -0.0469,  0.0469],
          [-0.0855,  0.0392,  0.0389]]],


        [[[ 0.0406, -0.0416,  0.0535],
          [-0.0335,  0.0624, -0.0354],
          [ 0.0412,  0.0463,  0.0333]],

         [[ 0.0462,  0.1049, -0.0410],
          [-0.0670, -0.0741, -0.0282],
          [-0.0552, -0.0583,  0.0296]],

         [[-0.0872, -0.0576,  0.0389],
          [-0.0194,  0.0165, -0.0465],
          [-0.0411, -0.0685, -0.0809]],

         ...,

         [[ 0.0751, -0.0210, -0.0053],
          [-0.1137, -0.0663, -0.0424],
          [ 0.0205,  0.0034, -0.0072]],

         [[-0.0520, -0.0322, -0.0034],
          [-0.1021, -0.0133,  0.0313],
          [ 0.0509, -0.1629, -0.0121]],

         [[ 0.0029,  0.0885,  0.0206],
          [-0.0622, -0.0266, -0.0366],
          [-0.0322,  0.0186,  0.0529]]],


        ...,


        [[[ 0.0083, -0.0318,  0.0572],
          [-0.0474,  0.0329, -0.0569],
          [ 0.0075, -0.0506,  0.0529]],

         [[-0.0924,  0.0257, -0.0224],
          [-0.0039, -0.0216, -0.0206],
          [ 0.0197,  0.0230, -0.0208]],

         [[-0.0200,  0.0210, -0.0097],
          [ 0.0110,  0.0571,  0.0347],
          [-0.0701,  0.0261,  0.0322]],

         ...,

         [[ 0.0651,  0.0159, -0.0143],
          [-0.0157, -0.0420, -0.0685],
          [ 0.0398,  0.0277, -0.0572]],

         [[-0.0263, -0.0562, -0.0315],
          [ 0.0223, -0.0465,  0.0133],
          [ 0.0290,  0.0149,  0.0120]],

         [[-0.0106,  0.0175, -0.0954],
          [-0.0422, -0.0722,  0.0556],
          [-0.0222,  0.1019, -0.0362]]],


        [[[ 0.0504, -0.0341, -0.0099],
          [ 0.0169,  0.0348, -0.0051],
          [ 0.0922,  0.0482,  0.0634]],

         [[-0.0256, -0.0274, -0.0488],
          [ 0.0651, -0.0358,  0.0719],
          [-0.1072,  0.0060,  0.0163]],

         [[-0.0099, -0.0027, -0.0314],
          [ 0.0422,  0.0931, -0.0528],
          [-0.0110,  0.0053, -0.0141]],

         ...,

         [[-0.0904, -0.0208,  0.0028],
          [-0.0142, -0.0460,  0.0315],
          [ 0.0650,  0.0262,  0.0158]],

         [[ 0.0334, -0.0427, -0.0234],
          [ 0.0396, -0.0637,  0.0653],
          [ 0.0370,  0.0440,  0.0157]],

         [[-0.0073, -0.0428, -0.0192],
          [ 0.0864,  0.0063, -0.0303],
          [-0.0686,  0.0857,  0.0091]]],


        [[[-0.0486,  0.0346,  0.0488],
          [ 0.0086,  0.0955,  0.0634],
          [ 0.0085,  0.0239, -0.0386]],

         [[ 0.0279,  0.0006, -0.0613],
          [ 0.0484, -0.0055, -0.0773],
          [-0.0314, -0.0353, -0.0192]],

         [[-0.0529,  0.0461,  0.0066],
          [-0.0594,  0.0408,  0.0173],
          [-0.0084,  0.0167, -0.0184]],

         ...,

         [[ 0.0230,  0.0152, -0.0473],
          [ 0.0279, -0.0195, -0.0315],
          [ 0.0602,  0.0693, -0.0098]],

         [[-0.0186,  0.0168, -0.0643],
          [ 0.0602, -0.0664,  0.0526],
          [-0.0774,  0.0431, -0.0116]],

         [[-0.0648, -0.0025, -0.0192],
          [-0.0454, -0.0678,  0.0042],
          [-0.0478, -0.0331,  0.0723]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-0.0037,  0.0583, -0.0121],
          [ 0.0399, -0.0230,  0.0165],
          [-0.0590, -0.0586, -0.0056]],

         [[-0.0314,  0.0371,  0.0673],
          [ 0.0059, -0.0555,  0.0160],
          [-0.0535, -0.0277, -0.0579]],

         [[ 0.0339, -0.0438,  0.0245],
          [-0.0795,  0.0335, -0.0349],
          [-0.0025, -0.0950, -0.0562]],

         ...,

         [[-0.0303, -0.0161,  0.0551],
          [-0.0629,  0.0009,  0.0531],
          [ 0.0383,  0.0626, -0.0321]],

         [[ 0.0132,  0.0353, -0.0300],
          [-0.0263,  0.0817, -0.0249],
          [-0.0288, -0.0056, -0.0330]],

         [[-0.0214,  0.0423,  0.0026],
          [ 0.0282,  0.0459,  0.0260],
          [-0.1011, -0.0322, -0.0393]]],


        [[[-0.0547, -0.0569, -0.0088],
          [ 0.0099, -0.0048, -0.0771],
          [ 0.0249,  0.0167,  0.0470]],

         [[-0.0045,  0.0181,  0.0097],
          [-0.0076,  0.0588,  0.0363],
          [ 0.0061, -0.0485,  0.0163]],

         [[ 0.0405,  0.0457,  0.0103],
          [ 0.0043,  0.0228, -0.0964],
          [ 0.0071,  0.0641,  0.0007]],

         ...,

         [[-0.0278,  0.0055,  0.0647],
          [ 0.0329, -0.0755, -0.0638],
          [ 0.0375, -0.0397,  0.0466]],

         [[-0.0300,  0.0524, -0.0666],
          [-0.0020,  0.0747, -0.0035],
          [-0.0301, -0.0982, -0.0162]],

         [[-0.0503, -0.0742, -0.0510],
          [ 0.0620,  0.0183, -0.0412],
          [ 0.0408,  0.0060, -0.0210]]],


        [[[ 0.0316,  0.0200, -0.0226],
          [ 0.0192,  0.0602,  0.0859],
          [-0.0125,  0.0590, -0.0474]],

         [[-0.0248, -0.1190,  0.1074],
          [ 0.0482, -0.0280,  0.0147],
          [ 0.0464, -0.0328,  0.0342]],

         [[ 0.0055, -0.0257, -0.0122],
          [ 0.0007,  0.0081,  0.0574],
          [-0.0377, -0.0538, -0.0715]],

         ...,

         [[-0.0781,  0.0404, -0.0173],
          [-0.0538,  0.0227, -0.0179],
          [ 0.0160,  0.0267,  0.0004]],

         [[ 0.0383, -0.0520,  0.0247],
          [ 0.0192, -0.0066,  0.0639],
          [ 0.0686, -0.0170, -0.0161]],

         [[ 0.0503, -0.0844,  0.0669],
          [ 0.0090, -0.0300, -0.0377],
          [-0.0170, -0.1088,  0.0523]]],


        ...,


        [[[ 0.0392, -0.0110, -0.0561],
          [ 0.0103,  0.0071,  0.0367],
          [ 0.0111, -0.0479,  0.0529]],

         [[ 0.0033, -0.0003, -0.0036],
          [-0.0307, -0.0740,  0.0826],
          [-0.0171,  0.0271, -0.0249]],

         [[-0.0215,  0.0117, -0.0418],
          [-0.0046, -0.0284,  0.0170],
          [ 0.0253,  0.0485,  0.0396]],

         ...,

         [[ 0.0159, -0.0138, -0.0986],
          [ 0.0390,  0.0215,  0.0205],
          [ 0.0197,  0.0288, -0.0264]],

         [[ 0.0178, -0.0540,  0.0379],
          [-0.0361, -0.0353,  0.0595],
          [ 0.0172,  0.0574,  0.0598]],

         [[ 0.0600,  0.0277, -0.0989],
          [-0.0226, -0.0108, -0.0567],
          [-0.0309,  0.0048,  0.0583]]],


        [[[-0.0185,  0.0252, -0.0345],
          [ 0.0151, -0.0031,  0.0233],
          [-0.0620, -0.0762,  0.0887]],

         [[ 0.0623, -0.0466,  0.0362],
          [ 0.0218, -0.0038,  0.0024],
          [ 0.0347,  0.0091, -0.0587]],

         [[ 0.0069, -0.0159,  0.0486],
          [-0.0526, -0.0052,  0.0340],
          [-0.0448,  0.0730,  0.0309]],

         ...,

         [[-0.0393, -0.0221, -0.0148],
          [-0.0044,  0.0484, -0.0282],
          [-0.0216, -0.0765,  0.0657]],

         [[-0.0631,  0.0980, -0.0009],
          [ 0.1128,  0.0733, -0.0923],
          [ 0.0031, -0.0315, -0.0166]],

         [[ 0.0365, -0.0248, -0.0329],
          [ 0.0152,  0.0686, -0.0464],
          [ 0.0213, -0.0303,  0.1013]]],


        [[[ 0.1080, -0.0477, -0.0320],
          [ 0.0415, -0.0392, -0.0386],
          [ 0.0165, -0.0326, -0.0452]],

         [[-0.0581,  0.0498,  0.0082],
          [-0.0464,  0.0179, -0.0020],
          [ 0.0123, -0.0344,  0.0008]],

         [[-0.0452, -0.0640, -0.0299],
          [-0.0393, -0.0239,  0.0641],
          [-0.0667,  0.0574,  0.0443]],

         ...,

         [[ 0.0257,  0.0487,  0.0055],
          [-0.0575,  0.0447, -0.0035],
          [-0.0270, -0.0540, -0.0597]],

         [[ 0.0576, -0.0352, -0.0468],
          [ 0.0222,  0.0723, -0.1054],
          [-0.0106, -0.0493, -0.0344]],

         [[ 0.0010, -0.0229, -0.0191],
          [-0.0155, -0.0327,  0.0820],
          [ 0.0704, -0.0219,  0.0375]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-0.0093,  0.0725, -0.0485],
          [-0.0060, -0.0128, -0.0115],
          [-0.0497, -0.0578, -0.0482]],

         [[ 0.0524,  0.0250,  0.0382],
          [ 0.0229, -0.0026,  0.0149],
          [-0.0023,  0.0517, -0.0123]],

         [[ 0.0241, -0.1169,  0.0322],
          [ 0.0177,  0.0070, -0.0153],
          [-0.0183,  0.0145, -0.0302]],

         ...,

         [[-0.0300, -0.0192,  0.0062],
          [ 0.0095, -0.1319, -0.0303],
          [-0.0085, -0.0654,  0.0517]],

         [[-0.0371, -0.0467, -0.0084],
          [-0.0562,  0.0074,  0.0151],
          [-0.0449, -0.0399,  0.0680]],

         [[ 0.0358, -0.0473,  0.0041],
          [-0.0395,  0.0401, -0.0380],
          [ 0.0617, -0.0750, -0.0061]]],


        [[[ 0.0316, -0.0102,  0.0516],
          [-0.0376, -0.0409, -0.0518],
          [-0.0240,  0.0490,  0.0225]],

         [[-0.0531,  0.0010, -0.0275],
          [ 0.0074, -0.0532, -0.0522],
          [-0.0076,  0.0100,  0.0495]],

         [[ 0.0458,  0.0476,  0.0049],
          [ 0.0245,  0.0302,  0.0262],
          [-0.0168,  0.0331, -0.0278]],

         ...,

         [[ 0.0116, -0.0255,  0.0046],
          [ 0.0321,  0.0305, -0.0132],
          [-0.0156, -0.0084, -0.0318]],

         [[-0.0575, -0.0608, -0.0107],
          [-0.0497,  0.0122,  0.0383],
          [-0.0073, -0.0477, -0.0400]],

         [[-0.0311, -0.0365, -0.0469],
          [ 0.0051, -0.0478, -0.0659],
          [ 0.0280,  0.0206, -0.0055]]],


        [[[-0.0471, -0.0109, -0.0669],
          [ 0.0064, -0.0722,  0.0583],
          [ 0.0137,  0.0496,  0.0046]],

         [[ 0.1035,  0.0084, -0.0616],
          [-0.0063, -0.0036, -0.0421],
          [-0.0032, -0.0823, -0.0126]],

         [[ 0.1101, -0.0037,  0.0334],
          [-0.0428, -0.0303,  0.0074],
          [-0.0319,  0.0207,  0.0322]],

         ...,

         [[ 0.0104,  0.0413, -0.0334],
          [ 0.0293, -0.0101,  0.0524],
          [ 0.0039, -0.0988,  0.0258]],

         [[ 0.0464,  0.1085, -0.0297],
          [-0.0105, -0.0274,  0.0037],
          [ 0.0485, -0.0250,  0.0184]],

         [[ 0.0114,  0.0382, -0.0356],
          [ 0.0447, -0.0221, -0.0174],
          [ 0.0146,  0.0159, -0.0137]]],


        ...,


        [[[-0.0313,  0.0714, -0.0302],
          [-0.0561,  0.0399,  0.0075],
          [ 0.0189, -0.0010,  0.0165]],

         [[-0.0498,  0.0241,  0.0166],
          [ 0.1047,  0.0415, -0.0496],
          [-0.0037, -0.0203,  0.0168]],

         [[-0.0294,  0.0014, -0.0535],
          [ 0.0495,  0.0579,  0.0476],
          [-0.0121,  0.0805,  0.0113]],

         ...,

         [[ 0.0502, -0.0315,  0.0727],
          [ 0.1357,  0.0243,  0.0446],
          [-0.0067,  0.0165, -0.0597]],

         [[ 0.0342, -0.0089, -0.0055],
          [-0.0501,  0.0219, -0.0026],
          [-0.0037, -0.0235,  0.0680]],

         [[ 0.0085,  0.0215,  0.0075],
          [-0.0423,  0.0217, -0.0272],
          [-0.0628,  0.0417, -0.0078]]],


        [[[ 0.0219,  0.0318, -0.0822],
          [ 0.0069,  0.0267,  0.0076],
          [-0.0071, -0.0323, -0.0062]],

         [[ 0.0932, -0.0229, -0.0532],
          [-0.0135, -0.0185,  0.0489],
          [ 0.0576, -0.0252, -0.0298]],

         [[-0.0439, -0.0036, -0.0018],
          [ 0.0069,  0.0086, -0.0405],
          [ 0.0665, -0.0111,  0.0044]],

         ...,

         [[ 0.0083, -0.0403, -0.0333],
          [-0.0501,  0.0081,  0.0590],
          [ 0.0241,  0.0247, -0.0225]],

         [[-0.0052, -0.0335,  0.0601],
          [ 0.0206, -0.0102,  0.0621],
          [-0.0293, -0.0247, -0.0387]],

         [[-0.0549,  0.0604,  0.0495],
          [ 0.0341,  0.0223, -0.0052],
          [-0.0114, -0.0069, -0.0881]]],


        [[[-0.0078, -0.0688, -0.0501],
          [-0.0029, -0.0941,  0.0007],
          [-0.0019,  0.0052, -0.0234]],

         [[ 0.0313, -0.0268, -0.0155],
          [ 0.0555,  0.0271,  0.0124],
          [-0.0208,  0.0598, -0.0415]],

         [[-0.0098,  0.0667, -0.0015],
          [ 0.0192,  0.0491,  0.0762],
          [-0.0055,  0.0245, -0.0323]],

         ...,

         [[ 0.0531,  0.0121, -0.0617],
          [-0.0530, -0.0242,  0.0132],
          [-0.0107,  0.0384,  0.0003]],

         [[ 0.0529, -0.0019,  0.0118],
          [ 0.0324, -0.0571, -0.0237],
          [-0.0149,  0.0026, -0.0629]],

         [[-0.0260,  0.0405, -0.0522],
          [ 0.0520,  0.0186, -0.0139],
          [ 0.0525, -0.0589,  0.0341]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 0.0076,  0.0179, -0.0199],
          [-0.0393, -0.0386,  0.0272],
          [-0.0471, -0.0653, -0.0567]],

         [[ 0.0298, -0.0151,  0.0168],
          [-0.0144, -0.0663, -0.0176],
          [ 0.0056,  0.0349,  0.0345]],

         [[ 0.0194, -0.0190,  0.0659],
          [ 0.0260,  0.0010, -0.0644],
          [-0.0747,  0.0509,  0.0143]],

         ...,

         [[-0.0134,  0.0360,  0.0125],
          [ 0.0323,  0.0083, -0.0065],
          [-0.0116,  0.0082, -0.0227]],

         [[-0.0202,  0.0547, -0.0573],
          [ 0.0301, -0.0169, -0.0048],
          [-0.0332,  0.0382,  0.0405]],

         [[ 0.0004, -0.0592,  0.0768],
          [-0.0049, -0.0249, -0.0011],
          [-0.0560,  0.0040,  0.0467]]],


        [[[ 0.0031,  0.0154, -0.0607],
          [ 0.0164,  0.0950,  0.0046],
          [ 0.0363, -0.0133,  0.0298]],

         [[-0.0683,  0.0301, -0.0626],
          [ 0.0205, -0.0076, -0.0032],
          [-0.0261,  0.0500,  0.0143]],

         [[ 0.0445, -0.0240, -0.0008],
          [ 0.0177,  0.0489, -0.0709],
          [-0.0421, -0.0077,  0.0084]],

         ...,

         [[-0.1141, -0.0402,  0.0299],
          [ 0.0342, -0.0672,  0.0211],
          [-0.0259,  0.0810, -0.0157]],

         [[-0.0305, -0.0347, -0.0200],
          [-0.0007,  0.0089,  0.0402],
          [-0.0392,  0.0502,  0.0374]],

         [[ 0.0307, -0.0514, -0.0635],
          [-0.0058, -0.0004,  0.0445],
          [-0.0301, -0.0480,  0.0363]]],


        [[[-0.0313, -0.0530, -0.0055],
          [-0.0171,  0.0643,  0.0571],
          [ 0.0797,  0.0339,  0.0259]],

         [[-0.0592,  0.0006, -0.0068],
          [ 0.0267, -0.0140, -0.0003],
          [ 0.0329,  0.0510,  0.0250]],

         [[ 0.0408, -0.0261, -0.0032],
          [-0.0086, -0.0269,  0.0550],
          [-0.0507, -0.0591, -0.0322]],

         ...,

         [[ 0.0449,  0.0034, -0.0055],
          [-0.0355,  0.0951,  0.0483],
          [-0.0301,  0.0340,  0.0089]],

         [[-0.0661, -0.0303,  0.0243],
          [-0.0060,  0.0301,  0.0250],
          [ 0.1076,  0.0358,  0.0185]],

         [[-0.0250,  0.0570,  0.0536],
          [ 0.0631,  0.0067, -0.0118],
          [-0.0271,  0.0173, -0.0223]]],


        ...,


        [[[ 0.0090,  0.0310,  0.0418],
          [ 0.0428,  0.0007, -0.0251],
          [-0.0320, -0.0380, -0.0395]],

         [[-0.0209,  0.0475,  0.0308],
          [-0.0244, -0.0203,  0.0127],
          [ 0.0779, -0.0759, -0.0553]],

         [[ 0.0775,  0.0614, -0.0398],
          [ 0.0340, -0.0383,  0.0430],
          [-0.0008,  0.0396, -0.0470]],

         ...,

         [[ 0.0414, -0.0772,  0.0253],
          [ 0.0262,  0.0470,  0.0609],
          [-0.0069,  0.0374, -0.0004]],

         [[ 0.0749, -0.0285,  0.0466],
          [ 0.0134,  0.0385,  0.0405],
          [-0.0277,  0.1112, -0.0089]],

         [[-0.0355, -0.0022,  0.0459],
          [ 0.0309, -0.0216, -0.0063],
          [-0.0208,  0.0196,  0.0592]]],


        [[[-0.0121, -0.0719, -0.0689],
          [-0.0140, -0.0296, -0.1028],
          [ 0.0465, -0.0653,  0.0411]],

         [[-0.0025,  0.0201,  0.0155],
          [ 0.0103,  0.0122, -0.0411],
          [ 0.0204, -0.0029,  0.0111]],

         [[ 0.0158, -0.0328, -0.0398],
          [-0.0009,  0.0117,  0.0005],
          [-0.0794, -0.0513, -0.0054]],

         ...,

         [[-0.0890, -0.0521, -0.0412],
          [-0.0787,  0.0148,  0.0179],
          [-0.0786,  0.0158,  0.0424]],

         [[-0.0035,  0.0353,  0.0241],
          [-0.0172,  0.0618,  0.0134],
          [ 0.0029, -0.0064,  0.0333]],

         [[-0.0406,  0.0418, -0.0537],
          [-0.0254,  0.0463, -0.0017],
          [ 0.0120,  0.0544,  0.0707]]],


        [[[ 0.0035, -0.0864,  0.0026],
          [-0.0174, -0.0050,  0.0137],
          [ 0.0783, -0.0237, -0.0218]],

         [[ 0.0041, -0.0195, -0.0204],
          [ 0.0298, -0.0437,  0.0027],
          [-0.0078,  0.0049,  0.0183]],

         [[-0.0032, -0.0427, -0.0325],
          [-0.0162, -0.0401,  0.0140],
          [-0.0351, -0.0179,  0.0514]],

         ...,

         [[ 0.0233, -0.0117,  0.0298],
          [-0.0046, -0.0561, -0.0264],
          [-0.0543,  0.0399,  0.0826]],

         [[-0.0202, -0.0301, -0.0399],
          [-0.0285,  0.0488, -0.0678],
          [-0.0172,  0.0152,  0.0060]],

         [[ 0.0136,  0.0539, -0.0724],
          [ 0.0006, -0.0296,  0.0500],
          [ 0.0107,  0.0253, -0.0025]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.2742]],

         [[ 0.0071]],

         [[ 0.0996]],

         ...,

         [[ 0.0960]],

         [[ 0.1749]],

         [[ 0.1022]]],


        [[[-0.0481]],

         [[-0.1946]],

         [[ 0.2936]],

         ...,

         [[-0.0203]],

         [[ 0.0178]],

         [[-0.1891]]],


        [[[ 0.1458]],

         [[ 0.3117]],

         [[-0.0189]],

         ...,

         [[-0.0109]],

         [[ 0.0769]],

         [[-0.0058]]],


        ...,


        [[[-0.0581]],

         [[ 0.0341]],

         [[-0.1202]],

         ...,

         [[ 0.3759]],

         [[-0.0038]],

         [[ 0.3105]]],


        [[[ 0.1699]],

         [[-0.0396]],

         [[ 0.1317]],

         ...,

         [[-0.1755]],

         [[-0.0009]],

         [[ 0.0812]]],


        [[[ 0.0294]],

         [[ 0.0901]],

         [[-0.1294]],

         ...,

         [[-0.1357]],

         [[-0.1740]],

         [[ 0.0251]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-0.0364, -0.0279,  0.0173],
          [-0.0233,  0.0664,  0.0127],
          [-0.0151,  0.0255, -0.0934]],

         [[-0.0117, -0.0248,  0.0184],
          [-0.0045,  0.0546, -0.0056],
          [-0.0458,  0.0339,  0.0107]],

         [[ 0.0713,  0.0111,  0.0102],
          [ 0.0168,  0.0487,  0.0010],
          [-0.0675, -0.0519,  0.0187]],

         ...,

         [[-0.0218, -0.0025,  0.1224],
          [-0.0170, -0.0377,  0.0180],
          [ 0.0374, -0.0032, -0.0038]],

         [[ 0.0631,  0.0122,  0.0275],
          [ 0.0523, -0.0146,  0.0301],
          [ 0.0064,  0.0314, -0.0050]],

         [[-0.0425, -0.0487, -0.0256],
          [ 0.0195,  0.0181, -0.0256],
          [-0.0019,  0.0225,  0.0022]]],


        [[[-0.0234,  0.0290, -0.0561],
          [-0.0317,  0.0198, -0.0264],
          [ 0.0402, -0.0180, -0.0592]],

         [[ 0.0197,  0.0186, -0.0545],
          [ 0.0288, -0.0014, -0.0107],
          [ 0.0969, -0.0100, -0.0245]],

         [[-0.0312, -0.1063, -0.0484],
          [ 0.0603,  0.0203,  0.0100],
          [ 0.0204,  0.0018, -0.0032]],

         ...,

         [[-0.0412,  0.0361, -0.0946],
          [-0.0041,  0.0117, -0.0938],
          [-0.0211, -0.0313,  0.0319]],

         [[-0.0287, -0.0701,  0.0184],
          [-0.0699,  0.0016,  0.0039],
          [-0.0565,  0.0464, -0.0439]],

         [[-0.0753, -0.0118,  0.0870],
          [ 0.0123,  0.0048, -0.0219],
          [ 0.0296, -0.0682,  0.0279]]],


        [[[ 0.0192,  0.0235,  0.0018],
          [ 0.0044, -0.0589,  0.0517],
          [ 0.0202,  0.0368, -0.0460]],

         [[ 0.0101, -0.0096,  0.0666],
          [-0.0003, -0.0623,  0.0351],
          [ 0.0099,  0.0125, -0.0124]],

         [[ 0.0109,  0.0120, -0.0185],
          [ 0.0077, -0.0154, -0.0379],
          [ 0.0573,  0.0319,  0.0466]],

         ...,

         [[-0.0131, -0.0002,  0.0663],
          [ 0.0428, -0.0510,  0.0281],
          [ 0.0350, -0.0268, -0.0919]],

         [[ 0.0257,  0.0249,  0.0172],
          [-0.0344, -0.0263,  0.0427],
          [-0.0444, -0.0174,  0.0759]],

         [[-0.0518, -0.0617,  0.0156],
          [ 0.0669,  0.1036,  0.0041],
          [-0.0308,  0.0317,  0.0128]]],


        ...,


        [[[ 0.0578,  0.0293, -0.0188],
          [-0.0134,  0.0105,  0.0099],
          [-0.0695,  0.0037,  0.0204]],

         [[ 0.0390, -0.0080,  0.0487],
          [ 0.0355,  0.0056,  0.0243],
          [ 0.0585, -0.0099,  0.0161]],

         [[ 0.0226, -0.0586, -0.0755],
          [-0.0083,  0.0026, -0.0496],
          [ 0.0534,  0.0188,  0.0158]],

         ...,

         [[-0.0199, -0.0923, -0.0321],
          [ 0.0510,  0.0241,  0.0126],
          [ 0.0182,  0.0553,  0.0738]],

         [[-0.0169, -0.0163, -0.0251],
          [-0.0397,  0.0053,  0.0203],
          [-0.0568, -0.0054,  0.0222]],

         [[ 0.0175, -0.0080, -0.0842],
          [-0.0174,  0.0431, -0.0433],
          [-0.0258, -0.0291,  0.0185]]],


        [[[-0.0859,  0.0020, -0.0819],
          [ 0.0602,  0.0083, -0.0353],
          [-0.0200, -0.0103, -0.0227]],

         [[ 0.0049, -0.0042,  0.0185],
          [ 0.0347,  0.0239, -0.0259],
          [-0.0012, -0.0675, -0.0257]],

         [[ 0.0637, -0.0345,  0.0289],
          [ 0.0519, -0.0484,  0.0174],
          [ 0.0695, -0.0112,  0.0304]],

         ...,

         [[ 0.0049,  0.0627, -0.0234],
          [-0.0385,  0.0143,  0.0077],
          [ 0.0621, -0.0030,  0.0398]],

         [[ 0.0086, -0.0423,  0.0007],
          [-0.0474,  0.0562, -0.0235],
          [-0.0398, -0.0240, -0.0641]],

         [[ 0.0067, -0.0731,  0.0032],
          [ 0.0827,  0.0512,  0.0595],
          [ 0.0304, -0.0054, -0.0283]]],


        [[[-0.0312,  0.0269,  0.0247],
          [ 0.0160, -0.0592,  0.0085],
          [-0.0153, -0.0461,  0.0360]],

         [[-0.0138,  0.0161, -0.0593],
          [ 0.0422,  0.0898,  0.0165],
          [-0.0666,  0.0659,  0.0587]],

         [[ 0.0489,  0.0041,  0.0447],
          [-0.0089,  0.0748, -0.0302],
          [ 0.0184, -0.0090, -0.0376]],

         ...,

         [[ 0.0229,  0.0708,  0.0044],
          [-0.0879,  0.0462,  0.0205],
          [-0.0053,  0.0099,  0.0112]],

         [[ 0.0306,  0.0217,  0.0555],
          [ 0.0121,  0.0489,  0.0742],
          [-0.0698, -0.0174,  0.0015]],

         [[ 0.0571,  0.0607,  0.0172],
          [ 0.0076,  0.0206,  0.0398],
          [ 0.0431,  0.0177, -0.0391]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-0.0072,  0.0652,  0.0297],
          [-0.0215, -0.0110, -0.0518],
          [-0.0079,  0.0524,  0.0189]],

         [[ 0.0231,  0.0354, -0.0201],
          [-0.0530, -0.0474, -0.0049],
          [-0.0128, -0.0023,  0.0407]],

         [[ 0.0929, -0.0430, -0.0053],
          [ 0.0072, -0.0144, -0.0050],
          [-0.0132, -0.0064, -0.0047]],

         ...,

         [[-0.0567,  0.1069, -0.0322],
          [-0.0481,  0.0937, -0.0312],
          [ 0.0582, -0.0213, -0.0030]],

         [[ 0.0058,  0.0505,  0.0462],
          [ 0.0218, -0.0180,  0.0212],
          [ 0.0243,  0.0245,  0.0169]],

         [[ 0.0199,  0.0111, -0.0448],
          [ 0.0577,  0.0373, -0.0743],
          [ 0.0175,  0.0071,  0.0203]]],


        [[[ 0.0549,  0.0067,  0.0066],
          [ 0.0002,  0.0266, -0.0604],
          [ 0.0348, -0.0531,  0.0626]],

         [[ 0.0444,  0.0444, -0.0088],
          [ 0.0700, -0.0145,  0.0394],
          [-0.0491,  0.0595,  0.0338]],

         [[-0.0358, -0.0122, -0.0847],
          [ 0.0432,  0.0153, -0.1070],
          [-0.0269, -0.0087, -0.0096]],

         ...,

         [[-0.0563, -0.0567, -0.0520],
          [ 0.0376, -0.0023, -0.0501],
          [ 0.0449, -0.0617, -0.0148]],

         [[-0.1197,  0.0193, -0.0598],
          [ 0.0705, -0.0396, -0.0365],
          [-0.0182, -0.0218, -0.0812]],

         [[ 0.0162,  0.0291, -0.0283],
          [ 0.0549,  0.0048, -0.0843],
          [ 0.0271,  0.0183, -0.0439]]],


        [[[-0.0125,  0.0019, -0.0117],
          [-0.0131, -0.0523,  0.0159],
          [ 0.0347,  0.0780, -0.0189]],

         [[ 0.0142,  0.0083,  0.0285],
          [-0.0504,  0.0271, -0.0120],
          [ 0.0187, -0.0133,  0.0188]],

         [[ 0.0582, -0.0668, -0.0020],
          [ 0.0236,  0.0540, -0.0741],
          [-0.0076,  0.0253, -0.0147]],

         ...,

         [[ 0.0162,  0.0316, -0.0132],
          [ 0.0199, -0.0745,  0.0106],
          [ 0.0222,  0.0256,  0.0772]],

         [[ 0.0353,  0.0534, -0.0183],
          [-0.0236, -0.0789, -0.0134],
          [-0.0613, -0.0904,  0.0380]],

         [[ 0.0034,  0.0263, -0.0149],
          [-0.0675, -0.0115, -0.0629],
          [ 0.0615, -0.0431, -0.0314]]],


        ...,


        [[[ 0.0428,  0.0136,  0.0438],
          [-0.0501, -0.0067,  0.0065],
          [ 0.0573, -0.0153,  0.0330]],

         [[-0.0323,  0.0003, -0.0037],
          [ 0.0065, -0.0281, -0.0373],
          [ 0.0252, -0.0100, -0.0066]],

         [[ 0.0604, -0.0328,  0.0655],
          [-0.0248,  0.0925, -0.0088],
          [-0.0474,  0.0424, -0.0004]],

         ...,

         [[-0.0188, -0.0491, -0.0273],
          [ 0.0243, -0.0230, -0.0277],
          [ 0.0432, -0.0136, -0.0233]],

         [[-0.0086, -0.0017,  0.0994],
          [ 0.0097, -0.0182,  0.0618],
          [-0.0385, -0.0299,  0.0489]],

         [[ 0.0182, -0.0685,  0.0524],
          [-0.0255,  0.0095,  0.0702],
          [-0.0535, -0.0434, -0.0170]]],


        [[[-0.0073,  0.0129,  0.0058],
          [-0.0546,  0.0103, -0.0208],
          [-0.0594, -0.0295, -0.0584]],

         [[ 0.0191,  0.0321,  0.0752],
          [-0.0262,  0.0551,  0.0073],
          [-0.0171,  0.0206,  0.0203]],

         [[-0.0295,  0.0009,  0.0236],
          [-0.0429,  0.0268,  0.0936],
          [ 0.0198, -0.0282, -0.0896]],

         ...,

         [[ 0.0502,  0.0176,  0.0345],
          [ 0.0211,  0.0250,  0.0214],
          [ 0.0306,  0.0247,  0.0534]],

         [[ 0.0050,  0.0106, -0.0111],
          [ 0.0028, -0.0033,  0.0144],
          [ 0.0175, -0.0015, -0.0350]],

         [[ 0.0099, -0.0405, -0.0160],
          [-0.0164,  0.0226,  0.0140],
          [-0.0047,  0.0316, -0.0136]]],


        [[[-0.1305, -0.0047, -0.0223],
          [ 0.0764, -0.0263, -0.0115],
          [-0.0378, -0.0430,  0.1094]],

         [[-0.0346, -0.0031,  0.0026],
          [-0.0069, -0.0130, -0.0664],
          [ 0.0513,  0.0245, -0.0135]],

         [[-0.0842, -0.0220, -0.0240],
          [-0.0054, -0.0214,  0.0173],
          [ 0.0592,  0.0483,  0.0164]],

         ...,

         [[ 0.0517,  0.0204,  0.0037],
          [-0.0714, -0.0437,  0.0584],
          [-0.0177,  0.0045, -0.0397]],

         [[-0.0068, -0.0123,  0.0764],
          [-0.0094,  0.0237,  0.0918],
          [ 0.0268,  0.0463,  0.0176]],

         [[-0.0388,  0.0318, -0.0004],
          [-0.0573,  0.0207, -0.0082],
          [-0.0065,  0.1017,  0.0396]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 0.1240]],

         [[ 0.1286]],

         [[-0.0594]],

         ...,

         [[ 0.0224]],

         [[ 0.0935]],

         [[ 0.1073]]],


        [[[ 0.0908]],

         [[-0.0235]],

         [[-0.0319]],

         ...,

         [[-0.0799]],

         [[ 0.1299]],

         [[ 0.0686]]],


        [[[-0.1571]],

         [[ 0.1407]],

         [[-0.1236]],

         ...,

         [[ 0.0216]],

         [[ 0.0683]],

         [[ 0.0445]]],


        ...,


        [[[-0.0966]],

         [[-0.0150]],

         [[-0.0436]],

         ...,

         [[-0.0350]],

         [[ 0.2017]],

         [[ 0.2377]]],


        [[[ 0.0858]],

         [[-0.0284]],

         [[-0.0017]],

         ...,

         [[ 0.1292]],

         [[-0.1608]],

         [[-0.1052]]],


        [[[ 0.0850]],

         [[-0.0356]],

         [[-0.0059]],

         ...,

         [[ 0.0369]],

         [[ 0.0478]],

         [[ 0.0500]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[-0.0136, -0.0069, -0.0362],
          [-0.0017, -0.0013, -0.0165],
          [-0.0588,  0.0534,  0.0256]],

         [[ 0.0175,  0.0013, -0.0550],
          [-0.0031, -0.0576, -0.0355],
          [-0.0545,  0.0133,  0.0348]],

         [[ 0.0590, -0.0004,  0.0310],
          [-0.0677,  0.0490,  0.0068],
          [ 0.0399, -0.0176, -0.0823]],

         ...,

         [[ 0.0125,  0.0284,  0.0368],
          [ 0.0414, -0.0384, -0.0169],
          [ 0.0008, -0.0097, -0.0370]],

         [[ 0.0518, -0.0322,  0.0287],
          [ 0.0387,  0.0332,  0.0228],
          [-0.0262,  0.0083,  0.0470]],

         [[ 0.0207,  0.0225, -0.0299],
          [ 0.0225, -0.0006, -0.0302],
          [ 0.0147,  0.0504,  0.0010]]],


        [[[-0.0837,  0.0031, -0.0320],
          [-0.0367, -0.0604,  0.0186],
          [ 0.0053,  0.0005,  0.0400]],

         [[-0.0120,  0.0134,  0.0139],
          [-0.0080, -0.0307, -0.0022],
          [-0.0439,  0.0139, -0.0062]],

         [[-0.0406,  0.0812, -0.0417],
          [ 0.0279, -0.0838,  0.0342],
          [ 0.0036, -0.0831, -0.0199]],

         ...,

         [[ 0.0391, -0.0377, -0.0026],
          [-0.0067, -0.0102,  0.0010],
          [ 0.0034, -0.0074,  0.0160]],

         [[ 0.0102, -0.0225, -0.0135],
          [ 0.0107, -0.0256, -0.0458],
          [-0.0559,  0.0547,  0.0198]],

         [[ 0.0875, -0.0163, -0.0048],
          [-0.0100, -0.0179,  0.0824],
          [ 0.0530, -0.0250, -0.0240]]],


        [[[ 0.0135, -0.0609, -0.0152],
          [ 0.0248,  0.0218,  0.0134],
          [-0.0549, -0.0293,  0.0258]],

         [[-0.0179, -0.0162,  0.0615],
          [-0.0351,  0.0682,  0.0099],
          [-0.0275,  0.0194, -0.0192]],

         [[-0.0116,  0.0173,  0.0328],
          [-0.0470,  0.0408, -0.0745],
          [ 0.0025, -0.0126,  0.0615]],

         ...,

         [[-0.0007,  0.0089,  0.0088],
          [-0.0166,  0.0015,  0.0019],
          [-0.0629,  0.0064, -0.0149]],

         [[-0.0313,  0.0309, -0.0373],
          [-0.0498,  0.0194, -0.0189],
          [ 0.0391,  0.0138, -0.0097]],

         [[ 0.0235,  0.0079, -0.0214],
          [-0.0014, -0.0348,  0.0342],
          [ 0.0134, -0.0271,  0.0480]]],


        ...,


        [[[-0.0534, -0.0381, -0.0181],
          [ 0.0169, -0.0337, -0.0069],
          [ 0.0121,  0.0271,  0.0062]],

         [[ 0.0016, -0.0586, -0.0494],
          [-0.0341, -0.0122, -0.0095],
          [ 0.0055,  0.0478, -0.0044]],

         [[ 0.0343,  0.0638,  0.0414],
          [-0.0297,  0.0055,  0.0200],
          [-0.0017, -0.0303, -0.0070]],

         ...,

         [[ 0.0248, -0.0075,  0.0287],
          [ 0.0143,  0.0360, -0.0390],
          [ 0.0564,  0.0204, -0.0055]],

         [[ 0.0506, -0.0795,  0.0148],
          [ 0.0142,  0.0022, -0.0328],
          [-0.0068, -0.0144,  0.0086]],

         [[ 0.0219,  0.0648,  0.0064],
          [ 0.0130, -0.0082, -0.0283],
          [ 0.0073, -0.0171, -0.0159]]],


        [[[ 0.0178, -0.0095, -0.0355],
          [-0.0145,  0.0249,  0.0001],
          [ 0.0018, -0.0128, -0.0527]],

         [[-0.0135, -0.0065,  0.0185],
          [ 0.0535,  0.0313,  0.0227],
          [-0.0169,  0.0089,  0.0342]],

         [[-0.0013, -0.0567,  0.0369],
          [-0.0498, -0.0357,  0.0287],
          [-0.0227,  0.0216,  0.0357]],

         ...,

         [[ 0.0078, -0.1161, -0.0005],
          [-0.0201,  0.0507,  0.0105],
          [ 0.0313,  0.0050, -0.0616]],

         [[-0.0244, -0.0029,  0.0330],
          [-0.0035,  0.0458, -0.0058],
          [-0.0412,  0.0210, -0.0044]],

         [[-0.0219,  0.0376,  0.0179],
          [-0.0165,  0.0233, -0.0027],
          [-0.0010,  0.0369,  0.0061]]],


        [[[-0.0132,  0.0508, -0.0097],
          [-0.0480,  0.0175,  0.0584],
          [-0.0032,  0.0201, -0.0099]],

         [[-0.0462,  0.0586,  0.0362],
          [-0.0413,  0.0024, -0.0010],
          [-0.0066, -0.0319, -0.0107]],

         [[ 0.0052,  0.0205,  0.0488],
          [ 0.0789,  0.0491,  0.0145],
          [ 0.0666,  0.0432, -0.0100]],

         ...,

         [[ 0.0289,  0.0156, -0.0480],
          [ 0.0306, -0.0543,  0.0316],
          [-0.0532,  0.0071,  0.0339]],

         [[-0.0733, -0.0159, -0.0676],
          [-0.0084,  0.0065,  0.0409],
          [ 0.0097, -0.0506,  0.0367]],

         [[ 0.0105, -0.0308, -0.0301],
          [-0.0238,  0.0344, -0.0322],
          [-0.0162,  0.0045, -0.0182]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 7.3926e-03,  2.6541e-03, -4.9390e-03,  ..., -2.4107e-03,
           -5.4232e-03,  1.7445e-02],
          [ 2.2790e-02,  1.3153e-02, -8.9614e-03,  ..., -1.3073e-02,
           -1.6629e-02,  1.0310e-02],
          [-1.8872e-03,  1.6378e-02, -1.3896e-04,  ...,  9.3357e-04,
           -9.9038e-03, -1.3419e-02],
          ...,
          [ 1.8094e-02, -2.0693e-02, -7.6480e-03,  ..., -1.3368e-02,
            2.6113e-02, -3.3128e-02],
          [ 2.0259e-02,  3.4628e-02, -3.2312e-02,  ...,  1.5042e-02,
            3.3923e-02, -1.1349e-02],
          [-2.3514e-03, -1.0643e-02, -1.3285e-02,  ..., -1.1764e-02,
            2.0355e-02, -9.0503e-03]],

         [[ 2.3226e-02,  1.6516e-02, -9.0078e-03,  ..., -5.5035e-03,
            1.0394e-02,  3.0761e-03],
          [-1.9293e-02, -9.7906e-03,  2.4255e-02,  ..., -5.3450e-03,
            3.3270e-02,  4.2608e-03],
          [-4.0529e-03, -5.2323e-02,  3.0769e-02,  ...,  2.2626e-02,
            1.5322e-03,  1.4911e-02],
          ...,
          [-1.5785e-02,  5.5308e-03, -8.7183e-03,  ...,  2.3006e-02,
            1.0395e-02, -6.6672e-03],
          [ 3.4975e-02, -8.3947e-03, -2.3314e-02,  ...,  2.0732e-02,
           -1.4670e-02, -1.5775e-02],
          [-2.1984e-02,  2.1083e-02, -4.8709e-02,  ..., -1.0440e-02,
            2.3220e-02, -3.7039e-02]]],


        [[[-7.7323e-03,  1.4480e-02,  9.4669e-03,  ...,  1.0865e-02,
           -1.0236e-02,  4.7353e-04],
          [-3.1027e-02, -2.5507e-03, -1.4192e-02,  ...,  9.0381e-03,
            4.3010e-03, -9.8159e-03],
          [-1.4763e-05, -4.6601e-03, -7.6808e-03,  ..., -2.5014e-02,
            2.2215e-02, -3.7819e-02],
          ...,
          [-1.6078e-02, -3.7587e-02, -4.5855e-03,  ...,  5.8885e-04,
            5.5869e-03, -7.1591e-03],
          [-3.2582e-03, -1.0466e-02,  2.4140e-02,  ...,  5.2308e-03,
            1.3796e-02,  2.5726e-02],
          [ 1.4824e-02,  1.6647e-02, -3.4736e-02,  ..., -3.4575e-02,
            6.4666e-03,  3.1268e-02]],

         [[ 4.4895e-03, -6.8507e-03, -2.1328e-02,  ...,  1.0830e-02,
           -3.0100e-02, -8.0528e-03],
          [ 3.4631e-02,  9.9332e-03,  4.3329e-02,  ..., -1.7123e-02,
           -6.1142e-03,  1.5412e-02],
          [-1.6415e-03,  2.3857e-02,  5.2023e-03,  ...,  1.3604e-02,
            5.5941e-03,  8.5502e-03],
          ...,
          [-5.1233e-03,  1.3152e-02,  2.3443e-02,  ..., -1.0303e-02,
           -3.0835e-03, -2.0302e-02],
          [-2.7436e-02,  1.9984e-02,  2.9765e-02,  ...,  1.0622e-02,
            9.4542e-03,  6.6826e-03],
          [-4.8141e-03,  1.3259e-02,  1.9927e-02,  ...,  8.6334e-03,
           -1.4963e-02,  3.5543e-02]]],


        [[[ 1.9801e-02,  6.4724e-03, -2.6235e-02,  ...,  9.1019e-03,
            1.1457e-02, -1.1314e-02],
          [-1.4298e-02,  1.4659e-02, -1.5823e-02,  ...,  3.5932e-02,
           -1.3291e-03, -1.4470e-02],
          [ 1.1704e-02, -6.8819e-03,  2.2534e-02,  ...,  4.1506e-03,
            1.5923e-02,  2.6848e-02],
          ...,
          [ 5.5124e-03,  8.7965e-03,  7.8666e-03,  ..., -1.8009e-02,
           -2.2745e-02, -2.0431e-02],
          [-1.8986e-02, -7.1881e-03, -1.7879e-02,  ...,  6.4382e-03,
           -1.0637e-02,  2.7704e-03],
          [-3.4607e-02,  9.7400e-03, -2.0120e-02,  ...,  1.0186e-02,
            1.1469e-03,  1.4825e-02]],

         [[-4.1163e-03, -5.7597e-03,  1.4551e-03,  ...,  1.1287e-02,
            9.0783e-03, -1.1790e-02],
          [-1.1692e-03,  9.2533e-03, -1.7440e-02,  ..., -2.1763e-03,
           -1.3361e-02, -7.7930e-04],
          [-7.1640e-03,  4.3695e-03,  9.5206e-03,  ..., -1.7007e-02,
           -1.9630e-02,  9.4210e-04],
          ...,
          [ 5.0312e-03, -1.1905e-02, -6.3198e-03,  ..., -2.0846e-02,
           -4.0410e-02, -2.0526e-02],
          [ 1.3033e-02,  2.6744e-04, -1.0155e-02,  ...,  3.8073e-02,
            2.6608e-02, -3.2065e-02],
          [-1.7642e-02,  6.8293e-03, -1.3046e-02,  ...,  1.6598e-02,
            3.9746e-03,  1.5204e-02]]],


        ...,


        [[[ 4.5749e-03,  1.1680e-02,  5.6937e-03,  ...,  2.7800e-03,
            2.8368e-02,  3.3024e-02],
          [ 8.8121e-03,  1.5452e-02, -1.1110e-02,  ...,  5.6142e-04,
           -4.3043e-03, -1.9437e-02],
          [ 3.0897e-02, -3.3814e-02,  5.3245e-03,  ...,  7.0404e-03,
           -1.8709e-02,  2.5915e-02],
          ...,
          [-9.4352e-03,  4.4805e-03,  5.0717e-02,  ..., -8.0236e-03,
           -1.1149e-02, -6.1348e-04],
          [ 2.1872e-02, -2.9924e-02, -3.4323e-03,  ..., -2.0323e-02,
           -4.3923e-03,  4.2416e-03],
          [ 6.4550e-03, -2.6323e-03,  1.4570e-02,  ...,  2.3825e-03,
            3.0647e-03, -7.6024e-03]],

         [[ 3.8779e-03,  5.0173e-03, -2.0479e-03,  ...,  1.6692e-02,
            1.6442e-02,  1.1579e-02],
          [ 1.5304e-02,  1.1818e-02, -9.1382e-03,  ..., -2.0996e-02,
           -1.2454e-02,  1.9595e-02],
          [-6.3099e-03,  9.0932e-03,  2.3970e-02,  ...,  1.7607e-02,
           -1.3561e-02, -7.1304e-03],
          ...,
          [ 9.3401e-03, -1.0528e-02,  1.1003e-02,  ...,  3.4073e-03,
            2.5097e-02,  2.3890e-03],
          [-4.9664e-03,  8.2310e-03,  8.9590e-03,  ...,  1.7617e-02,
           -6.7693e-03,  1.0682e-02],
          [-4.5509e-03,  2.2516e-02,  5.3098e-03,  ...,  2.7945e-03,
            1.4983e-03,  2.6832e-02]]],


        [[[-1.4382e-02, -3.2084e-03, -1.4186e-02,  ...,  1.3057e-02,
            1.6562e-02, -9.0420e-03],
          [-1.5546e-02,  6.5824e-03,  3.6597e-02,  ..., -9.8674e-03,
            8.4897e-04, -6.6371e-03],
          [ 1.9419e-02,  1.3473e-02,  1.6697e-02,  ...,  7.3366e-04,
            1.0584e-02,  2.2783e-02],
          ...,
          [-9.2319e-04, -2.4654e-02, -6.9601e-03,  ...,  1.6331e-02,
            8.2632e-03, -1.7193e-02],
          [ 6.0617e-03,  9.4929e-03,  7.5670e-03,  ...,  5.0314e-02,
           -1.4176e-02,  1.0663e-02],
          [-9.4022e-03, -5.0571e-03, -2.1807e-02,  ...,  1.3979e-02,
            1.6043e-02,  1.5914e-03]],

         [[-5.6679e-04,  1.3058e-04, -3.0007e-02,  ..., -6.7045e-03,
           -1.3622e-02, -1.1158e-02],
          [-5.5669e-04, -1.6358e-02,  1.9004e-02,  ...,  1.9192e-02,
            3.6040e-03, -1.7430e-02],
          [ 7.8799e-03, -3.3065e-04, -1.5880e-02,  ...,  1.0997e-03,
            7.5718e-03,  4.8816e-03],
          ...,
          [-7.2833e-03, -1.3099e-03, -1.7834e-03,  ...,  1.6640e-02,
           -8.8457e-03, -1.5473e-02],
          [-1.2033e-02,  1.1227e-02, -1.5770e-03,  ..., -7.8121e-03,
           -7.5239e-03, -8.7090e-03],
          [-4.0231e-03, -1.7491e-03,  9.9744e-03,  ..., -1.2627e-02,
            7.2461e-03, -1.3460e-02]]],


        [[[ 1.5832e-02, -1.4704e-02,  7.9699e-03,  ..., -3.0820e-02,
           -1.1044e-02,  1.4194e-02],
          [-2.4262e-02,  4.5678e-03, -2.7481e-02,  ..., -1.6758e-02,
            2.4061e-02, -1.7390e-02],
          [ 1.7371e-02,  4.0616e-02,  1.3663e-03,  ..., -1.2673e-02,
           -7.6553e-03,  6.9031e-03],
          ...,
          [ 3.4362e-03,  3.7248e-03, -6.8645e-03,  ...,  7.2955e-03,
            2.1024e-02, -1.2208e-02],
          [ 7.2783e-03,  1.8825e-02, -2.3991e-02,  ...,  1.0421e-02,
            1.5089e-03,  2.0298e-03],
          [ 2.0370e-03,  1.1907e-02,  6.9393e-03,  ..., -1.6164e-02,
           -3.2107e-02,  1.6158e-02]],

         [[-1.5260e-02, -2.1314e-02, -1.4664e-02,  ..., -2.8448e-03,
           -6.2387e-03,  7.5517e-03],
          [-8.3429e-03,  7.2234e-03,  1.4574e-02,  ...,  2.0396e-02,
            9.0054e-03,  2.9878e-03],
          [-1.7546e-05,  8.7571e-03, -1.5529e-02,  ...,  1.7832e-03,
            3.3117e-02, -5.3594e-03],
          ...,
          [ 3.1464e-02, -1.1568e-02, -3.4944e-02,  ..., -7.4437e-03,
           -5.5065e-03,  2.8942e-02],
          [ 5.4964e-03,  4.7915e-02, -1.4401e-03,  ..., -1.8980e-03,
            4.1822e-03, -1.5891e-03],
          [ 1.2428e-02,  2.7417e-02,  2.4696e-02,  ...,  1.6048e-02,
           -3.0588e-02,  8.6212e-03]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[ 5.4874e-02, -1.9066e-03,  8.3502e-02],
          [ 1.4296e-03, -2.2661e-02, -3.6677e-02],
          [ 8.6521e-02, -3.0962e-02, -1.0827e-01]],

         [[ 3.1856e-02,  6.6496e-02,  1.6809e-01],
          [-4.0702e-02, -1.0877e-02,  4.9193e-02],
          [ 8.8800e-02, -1.1604e-01,  7.1128e-02]],

         [[ 3.5903e-02,  3.7366e-02, -7.7640e-02],
          [ 2.4899e-02, -3.7666e-02,  6.1908e-02],
          [ 6.5891e-02, -2.3430e-02, -1.6768e-02]],

         ...,

         [[ 4.2251e-02, -3.7777e-02, -4.0247e-02],
          [ 4.5675e-03, -1.3765e-01,  1.6065e-01],
          [-1.9305e-02,  8.7642e-02, -8.7906e-03]],

         [[ 1.0615e-01,  7.1438e-02, -6.0999e-02],
          [-8.3293e-02,  1.6850e-02,  4.9725e-02],
          [-8.9489e-02, -9.9219e-03, -9.0152e-02]],

         [[-5.3971e-02,  6.3514e-02, -8.2299e-02],
          [ 8.0482e-03, -7.1619e-02, -3.5381e-02],
          [ 7.0322e-02,  3.0497e-02, -9.3377e-02]]],


        [[[-3.4336e-02,  6.1961e-02,  7.2122e-02],
          [-1.0257e-02,  1.0240e-02, -7.1909e-02],
          [-6.6610e-02,  1.2122e-01, -3.0912e-02]],

         [[ 3.2039e-02,  9.7057e-02,  7.7195e-02],
          [ 1.1392e-01, -6.3975e-02, -4.3020e-02],
          [-6.1240e-02,  2.0164e-02,  1.2469e-02]],

         [[-7.3976e-02,  2.7328e-02, -3.5581e-03],
          [ 7.2865e-02, -4.7578e-02, -5.0586e-02],
          [ 2.4128e-02,  4.9991e-02,  1.0186e-02]],

         ...,

         [[-6.6049e-02, -8.8238e-03,  4.5900e-02],
          [ 8.4528e-02,  8.3278e-03,  4.3723e-02],
          [-4.1187e-02, -8.8530e-03, -4.2311e-02]],

         [[ 1.1113e-02,  6.1323e-02, -1.3659e-02],
          [-1.9349e-02,  3.2582e-02,  1.0498e-01],
          [ 7.8875e-02, -8.4636e-02,  3.0534e-02]],

         [[-9.7901e-02,  5.1768e-02, -8.3499e-02],
          [ 4.6305e-02, -5.0061e-02, -1.0769e-01],
          [-5.1815e-02,  2.3234e-02,  2.6760e-03]]],


        [[[ 6.1100e-02, -6.1263e-02,  6.3282e-03],
          [ 1.1315e-01,  5.6059e-02, -1.1470e-01],
          [ 3.4525e-02,  1.7231e-02, -5.9742e-02]],

         [[ 1.6423e-03,  1.9480e-02,  2.3859e-02],
          [ 3.5726e-02, -5.4321e-02,  8.0291e-02],
          [ 1.7334e-02,  2.7414e-02, -8.9200e-03]],

         [[-1.9936e-02,  5.8452e-02,  1.5707e-02],
          [ 7.5985e-02,  5.2969e-02, -1.9526e-02],
          [ 6.3955e-02,  8.5888e-02, -8.1775e-02]],

         ...,

         [[-2.8347e-02, -3.8021e-03,  3.9710e-02],
          [ 6.5382e-02,  7.9935e-02, -1.1424e-02],
          [ 6.1270e-03, -1.4888e-02, -3.1897e-02]],

         [[ 2.1601e-02, -3.5365e-02, -5.9554e-02],
          [-5.5994e-02,  4.9285e-02,  1.0537e-01],
          [ 5.5147e-02, -5.9071e-02,  9.0554e-02]],

         [[ 6.1496e-02,  2.0508e-02,  6.3038e-02],
          [-5.5672e-02, -5.6985e-03, -8.9193e-02],
          [ 2.6603e-02,  6.4450e-02, -5.4901e-03]]],


        ...,


        [[[-4.3796e-04,  3.5849e-02, -4.7611e-02],
          [ 5.9469e-04, -1.1036e-01,  1.1540e-01],
          [-5.1363e-02,  5.1624e-02, -9.8151e-03]],

         [[-6.4258e-02,  5.7347e-02, -2.8575e-02],
          [ 2.5683e-02,  9.4367e-02,  1.0149e-01],
          [-2.7747e-02, -3.7336e-02,  3.9482e-02]],

         [[ 8.0197e-03, -1.0703e-01,  4.4076e-02],
          [ 1.9963e-02, -1.7262e-02,  1.2370e-01],
          [ 1.1185e-01,  8.9251e-04,  6.1360e-02]],

         ...,

         [[-6.2215e-02, -1.1798e-01,  2.7943e-02],
          [-8.1576e-03, -5.4901e-02, -8.6326e-02],
          [ 2.4619e-02,  1.4098e-01, -4.7421e-03]],

         [[ 2.6391e-02, -1.6203e-01,  8.8213e-02],
          [ 6.8875e-02, -6.1263e-02,  7.1338e-02],
          [-2.6022e-02,  6.0298e-02, -1.8759e-02]],

         [[ 3.1375e-02,  1.7715e-02,  2.3143e-02],
          [-2.5136e-02, -1.9490e-02,  3.6184e-02],
          [ 1.4540e-01, -3.8273e-02, -5.3011e-02]]],


        [[[-1.0912e-02,  1.0400e-01, -6.5380e-02],
          [ 5.7568e-02,  1.0518e-02, -4.3117e-02],
          [-5.2099e-02, -3.3113e-02, -7.1066e-02]],

         [[-5.1741e-02,  7.4581e-02, -2.8547e-02],
          [-2.0994e-02, -3.8335e-02,  5.1444e-02],
          [ 1.1588e-01,  1.2240e-01,  3.4267e-02]],

         [[ 9.3233e-02, -2.6074e-02, -3.4213e-02],
          [-2.8578e-03, -4.7700e-02,  8.2823e-03],
          [-8.6069e-03,  2.6719e-02,  2.9857e-02]],

         ...,

         [[ 3.4718e-02,  1.0134e-01,  2.5561e-02],
          [ 4.0165e-02,  2.5735e-02,  3.8588e-02],
          [ 2.0798e-02, -1.5325e-02,  2.1617e-02]],

         [[ 1.5618e-02,  1.0409e-02,  5.6397e-02],
          [-5.5983e-02,  2.2994e-02,  4.4148e-02],
          [ 5.9475e-02, -4.9039e-02,  5.9237e-02]],

         [[-1.7803e-02, -2.6899e-03,  2.6078e-02],
          [ 4.0345e-02, -2.1813e-02,  1.0544e-01],
          [ 1.0617e-02,  1.8161e-02,  4.7916e-03]]],


        [[[ 1.0290e-01,  9.7581e-02, -5.6433e-02],
          [ 2.4699e-02, -8.5710e-03,  5.2810e-02],
          [ 4.9081e-02,  1.8277e-02,  3.6153e-02]],

         [[ 9.2187e-03, -4.4075e-02,  1.1765e-02],
          [-4.4719e-03,  2.3268e-02, -5.7714e-02],
          [ 8.3375e-02,  9.3867e-02,  6.6463e-02]],

         [[ 1.1134e-01, -2.0731e-02, -2.3226e-02],
          [-5.6946e-02, -1.6379e-02,  2.0845e-02],
          [-2.4710e-03, -3.7776e-02, -7.4205e-03]],

         ...,

         [[ 4.0799e-03,  1.6723e-04,  2.2057e-02],
          [-1.0336e-02, -1.4788e-01, -3.5281e-02],
          [ 1.6722e-02,  2.4891e-02,  9.6074e-02]],

         [[-2.3966e-02,  3.6559e-02, -6.8883e-02],
          [ 2.3418e-02,  4.2340e-02,  8.4818e-02],
          [-6.4060e-02,  8.7941e-02,  5.7568e-02]],

         [[-9.1375e-04, -2.7087e-02,  3.3620e-02],
          [ 2.7182e-02, -1.9049e-03, -1.3584e-02],
          [ 1.3923e-02, -8.3722e-03, -4.9690e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-0.0149, -0.0228, -0.0483],
          [ 0.0553,  0.0129,  0.0082],
          [ 0.0448,  0.0612, -0.0337]],

         [[ 0.0261, -0.0271, -0.0031],
          [-0.0121,  0.0327,  0.0088],
          [-0.0785, -0.0174,  0.0133]],

         [[-0.0054,  0.0087, -0.0022],
          [ 0.0046, -0.0153, -0.0708],
          [ 0.0704,  0.0203, -0.0994]],

         ...,

         [[-0.0598, -0.0050, -0.0002],
          [ 0.0555,  0.0213, -0.0569],
          [ 0.0608,  0.1062, -0.0178]],

         [[ 0.0287,  0.0105,  0.0933],
          [-0.0240,  0.0307,  0.0029],
          [ 0.0368, -0.0458,  0.0121]],

         [[-0.0060,  0.0316,  0.0376],
          [ 0.0490,  0.0350,  0.0907],
          [ 0.0036, -0.0008, -0.0314]]],


        [[[ 0.0615, -0.0830,  0.0255],
          [ 0.0326,  0.0238, -0.0534],
          [ 0.0295, -0.0543, -0.0520]],

         [[-0.0042, -0.0439,  0.0394],
          [-0.0148, -0.0907, -0.0684],
          [ 0.0284,  0.0133,  0.0106]],

         [[ 0.0004,  0.0194,  0.0372],
          [-0.0765,  0.0425,  0.0163],
          [-0.0687, -0.0208, -0.0086]],

         ...,

         [[-0.0286,  0.0419,  0.0057],
          [ 0.0023, -0.0390, -0.0904],
          [ 0.0343,  0.0210,  0.0386]],

         [[-0.0300,  0.0450,  0.0356],
          [-0.0154,  0.0067,  0.0032],
          [-0.0482,  0.0654,  0.0873]],

         [[-0.0285, -0.0272,  0.0911],
          [ 0.0133,  0.0011,  0.0356],
          [-0.0114, -0.0386,  0.0438]]],


        [[[-0.0440,  0.0076,  0.0412],
          [ 0.0369, -0.0486,  0.0144],
          [-0.0467, -0.0212, -0.0646]],

         [[ 0.0514,  0.0249,  0.0254],
          [ 0.0225, -0.0559,  0.0269],
          [-0.0502,  0.0559, -0.0333]],

         [[ 0.0009, -0.0162,  0.0094],
          [-0.0403,  0.0531,  0.0093],
          [ 0.0420, -0.1595,  0.0650]],

         ...,

         [[ 0.0094, -0.1010, -0.0339],
          [ 0.0054,  0.0352,  0.0036],
          [ 0.0273,  0.0392,  0.0015]],

         [[-0.0067,  0.0413, -0.0646],
          [-0.0281,  0.0283,  0.0111],
          [ 0.0880,  0.0653,  0.0651]],

         [[-0.0422, -0.0117,  0.0343],
          [ 0.0897, -0.0982, -0.0413],
          [ 0.0557,  0.0243,  0.0207]]],


        ...,


        [[[ 0.0401,  0.0058, -0.0017],
          [-0.0134,  0.0139, -0.0341],
          [ 0.0235, -0.0059, -0.0450]],

         [[-0.0418,  0.0179,  0.0202],
          [-0.0552, -0.0119,  0.0351],
          [ 0.0302,  0.0341, -0.0122]],

         [[-0.0430,  0.0392, -0.0132],
          [-0.0429,  0.0172, -0.0347],
          [ 0.0223,  0.0114, -0.0471]],

         ...,

         [[-0.0816, -0.0547, -0.0408],
          [-0.0198,  0.0162,  0.0358],
          [-0.0284,  0.0657, -0.0325]],

         [[-0.0556,  0.0182,  0.0289],
          [-0.0237,  0.0071, -0.0666],
          [-0.0182,  0.0144,  0.0622]],

         [[-0.0101,  0.0384, -0.0070],
          [-0.0917,  0.0467, -0.0530],
          [ 0.0533, -0.0734,  0.0581]]],


        [[[-0.0196, -0.0557,  0.0011],
          [-0.0066,  0.0206,  0.0379],
          [-0.0250, -0.0431,  0.0299]],

         [[ 0.1181, -0.0638, -0.0680],
          [-0.0342,  0.0393,  0.0398],
          [ 0.0305, -0.0218, -0.0532]],

         [[-0.0247,  0.0503,  0.0216],
          [-0.0739, -0.0434, -0.0804],
          [ 0.0011, -0.0352, -0.0203]],

         ...,

         [[ 0.0326,  0.0748, -0.0165],
          [ 0.0628, -0.0282,  0.0094],
          [-0.0531,  0.0482,  0.0281]],

         [[-0.0014,  0.0340, -0.0116],
          [ 0.0020, -0.0143, -0.0753],
          [ 0.0396,  0.0118,  0.0109]],

         [[-0.0618,  0.0707,  0.0698],
          [-0.0047,  0.0387,  0.0670],
          [ 0.0214, -0.0709,  0.0082]]],


        [[[ 0.0210, -0.0193,  0.0089],
          [-0.0059, -0.0028, -0.0038],
          [ 0.0197, -0.0839, -0.0083]],

         [[-0.0484, -0.0509,  0.0710],
          [-0.0854, -0.0347, -0.0262],
          [-0.0114, -0.0583,  0.0611]],

         [[-0.0351, -0.0602,  0.0005],
          [ 0.0254,  0.0377,  0.0437],
          [ 0.0526,  0.0136, -0.0519]],

         ...,

         [[-0.0580, -0.0474, -0.0290],
          [ 0.0998, -0.0566, -0.0523],
          [ 0.0446, -0.0085, -0.0221]],

         [[-0.0438,  0.0875, -0.0333],
          [-0.0489,  0.0834, -0.0251],
          [ 0.0366,  0.0770, -0.0441]],

         [[-0.0660, -0.0185,  0.0140],
          [ 0.0355,  0.0466, -0.0084],
          [-0.0188,  0.0368,  0.0097]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[ 0.0010,  0.0072,  0.0158,  0.0057,  0.0103]],

         [[-0.0477,  0.0100, -0.0079,  0.0096,  0.0394]],

         [[-0.0192, -0.0265, -0.0123, -0.0038, -0.0154]],

         ...,

         [[ 0.0121,  0.0331, -0.0026, -0.0249, -0.0331]],

         [[-0.0452, -0.0080, -0.0048,  0.0213,  0.0012]],

         [[ 0.0024,  0.0066, -0.0110, -0.0070,  0.0068]]],


        [[[ 0.0192, -0.0023,  0.0422, -0.0187, -0.0227]],

         [[-0.0064, -0.0170,  0.0059,  0.0358,  0.0138]],

         [[-0.0119,  0.0218, -0.0369,  0.0288,  0.0125]],

         ...,

         [[-0.0198,  0.0100, -0.0210, -0.0206, -0.0186]],

         [[-0.0041,  0.0038,  0.0137,  0.0202, -0.0117]],

         [[-0.0047,  0.0154,  0.0348,  0.0018,  0.0744]]],


        [[[ 0.0453,  0.0076,  0.0115, -0.0197,  0.0075]],

         [[-0.0128, -0.0315,  0.0415, -0.0519, -0.0156]],

         [[ 0.0071, -0.0202,  0.0444, -0.0195,  0.0072]],

         ...,

         [[-0.0340,  0.0189,  0.0122,  0.0413,  0.0256]],

         [[-0.0068, -0.0042, -0.0201, -0.0120,  0.0102]],

         [[ 0.0181,  0.0150, -0.0501,  0.0275, -0.0020]]],


        ...,


        [[[ 0.0224, -0.0073, -0.0461, -0.0064,  0.0201]],

         [[ 0.0298, -0.0275, -0.0017, -0.0298,  0.0026]],

         [[ 0.0301, -0.0160,  0.0164,  0.0318, -0.0184]],

         ...,

         [[ 0.0432, -0.0017, -0.0512,  0.0086,  0.0022]],

         [[ 0.0165,  0.0089, -0.0429, -0.0044, -0.0211]],

         [[-0.0225, -0.0154, -0.0063,  0.0354,  0.0006]]],


        [[[ 0.0411,  0.0127, -0.0236, -0.0009, -0.0151]],

         [[-0.0389,  0.0004,  0.0053, -0.0487, -0.0488]],

         [[ 0.0229,  0.0135,  0.0016, -0.0091, -0.0257]],

         ...,

         [[ 0.0068,  0.0462, -0.0185, -0.0235,  0.0616]],

         [[ 0.0338, -0.0140, -0.0468, -0.0097, -0.0023]],

         [[-0.0589, -0.0009,  0.0060,  0.0319,  0.0108]]],


        [[[-0.0099, -0.0166, -0.0109,  0.0022,  0.0246]],

         [[-0.0025, -0.0371,  0.0012, -0.0346,  0.0095]],

         [[ 0.0070, -0.0088,  0.0211, -0.0335, -0.0022]],

         ...,

         [[ 0.0223, -0.0272, -0.0158,  0.0433,  0.0448]],

         [[-0.0009, -0.0008, -0.0203,  0.0132,  0.0109]],

         [[-0.0351, -0.0116, -0.0105, -0.0232, -0.0078]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 2.6159e-03],
          [ 3.0685e-02],
          [-1.5233e-02],
          [-3.7567e-03],
          [ 2.9593e-02]],

         [[ 1.0202e-02],
          [ 8.9436e-03],
          [ 1.2910e-02],
          [ 7.4830e-03],
          [ 2.5305e-02]],

         [[ 2.4758e-02],
          [ 1.6611e-02],
          [ 1.2322e-02],
          [ 1.6933e-02],
          [-5.0740e-02]],

         ...,

         [[-1.9875e-02],
          [ 4.2632e-03],
          [-4.4303e-02],
          [ 1.4139e-02],
          [-5.7645e-03]],

         [[ 2.0065e-02],
          [ 5.7057e-02],
          [ 1.9786e-02],
          [-2.7404e-03],
          [ 2.8161e-03]],

         [[ 2.1802e-02],
          [ 3.4064e-03],
          [ 7.3938e-03],
          [ 1.3392e-02],
          [-5.7108e-02]]],


        [[[-2.2261e-02],
          [ 2.7430e-02],
          [ 1.2314e-02],
          [-1.0900e-02],
          [-3.2070e-02]],

         [[-6.7571e-04],
          [-1.2195e-02],
          [-3.7042e-03],
          [ 2.4964e-02],
          [ 1.4661e-02]],

         [[ 2.1132e-02],
          [-9.0488e-03],
          [-1.0859e-02],
          [-7.6757e-03],
          [ 4.3203e-02]],

         ...,

         [[ 2.0679e-02],
          [-6.4998e-03],
          [ 2.3461e-02],
          [-3.8543e-02],
          [ 2.2412e-02]],

         [[-3.1278e-03],
          [-1.8597e-02],
          [ 9.2225e-03],
          [ 2.0034e-02],
          [-2.6954e-02]],

         [[-7.4738e-04],
          [-4.8154e-02],
          [-1.5746e-02],
          [-3.5659e-02],
          [-5.8706e-03]]],


        [[[-1.8558e-02],
          [ 6.4431e-03],
          [-1.4810e-02],
          [-3.3186e-02],
          [-2.5952e-02]],

         [[-4.7265e-02],
          [ 1.7832e-02],
          [ 2.2866e-03],
          [-4.5141e-03],
          [ 7.6653e-03]],

         [[ 2.3937e-02],
          [-3.8628e-02],
          [-2.9120e-02],
          [ 3.3579e-02],
          [-1.5030e-02]],

         ...,

         [[ 1.7822e-02],
          [ 2.6240e-02],
          [-1.0935e-02],
          [-1.5725e-02],
          [ 6.9628e-03]],

         [[-6.5317e-03],
          [ 9.3093e-03],
          [-2.6045e-02],
          [-1.0055e-02],
          [ 3.0559e-03]],

         [[ 3.0202e-02],
          [ 3.9247e-02],
          [-1.0850e-02],
          [ 3.7705e-02],
          [-8.0798e-03]]],


        ...,


        [[[ 3.7929e-03],
          [-3.1420e-02],
          [-1.3394e-02],
          [ 4.9060e-02],
          [-9.2088e-03]],

         [[ 2.6007e-02],
          [ 4.8973e-03],
          [ 1.4251e-03],
          [ 3.0775e-02],
          [ 2.9405e-02]],

         [[-3.2278e-04],
          [-1.1766e-02],
          [ 2.1038e-02],
          [ 1.7449e-02],
          [-1.4268e-02]],

         ...,

         [[-3.4545e-03],
          [-9.5538e-04],
          [ 4.6425e-02],
          [-1.1367e-03],
          [ 1.5634e-02]],

         [[-3.2663e-02],
          [-2.3611e-03],
          [-1.0429e-02],
          [-7.9193e-03],
          [ 2.4334e-02]],

         [[ 2.2136e-02],
          [-3.8429e-02],
          [-8.3780e-03],
          [-5.0273e-03],
          [ 1.3669e-03]]],


        [[[-2.5452e-02],
          [ 1.5139e-02],
          [-6.7139e-04],
          [-1.9494e-02],
          [ 4.9195e-03]],

         [[ 1.5298e-02],
          [-2.6836e-02],
          [ 2.3272e-02],
          [-2.2796e-02],
          [ 8.5323e-03]],

         [[-7.3686e-03],
          [ 1.2025e-02],
          [ 1.1827e-02],
          [ 6.6580e-03],
          [-1.4490e-02]],

         ...,

         [[-2.1360e-02],
          [-2.4831e-02],
          [ 3.0945e-02],
          [ 7.4078e-02],
          [ 8.6787e-03]],

         [[-2.2226e-03],
          [-8.6563e-03],
          [ 5.2816e-04],
          [-1.0793e-02],
          [-3.0918e-02]],

         [[ 2.3046e-02],
          [-1.2781e-03],
          [ 2.8785e-02],
          [-1.5972e-02],
          [ 1.1880e-02]]],


        [[[ 8.3372e-03],
          [-1.3538e-02],
          [-4.5560e-02],
          [-2.1733e-02],
          [-9.1682e-05]],

         [[ 1.3144e-02],
          [ 2.3764e-02],
          [-4.9019e-02],
          [ 3.4810e-02],
          [ 1.6351e-02]],

         [[ 3.8460e-02],
          [ 3.2950e-02],
          [ 1.4592e-02],
          [-4.2816e-02],
          [ 3.8353e-02]],

         ...,

         [[-1.4870e-02],
          [ 1.4741e-02],
          [-4.0744e-03],
          [-3.5725e-02],
          [ 2.6490e-02]],

         [[ 2.9430e-02],
          [-9.2295e-03],
          [-7.1820e-03],
          [ 1.7224e-02],
          [ 2.1325e-02]],

         [[ 1.7342e-02],
          [ 3.3337e-03],
          [ 4.8239e-02],
          [ 2.0674e-02],
          [ 1.5486e-02]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-0.0250, -0.0103,  0.0329,  0.0075, -0.0181]],

         [[-0.0245, -0.0386, -0.0270, -0.0332,  0.0125]],

         [[ 0.0103, -0.0222,  0.0026,  0.0028,  0.0162]],

         ...,

         [[-0.0244,  0.0484,  0.0013,  0.0063, -0.0273]],

         [[ 0.0261, -0.0532, -0.0242, -0.0019,  0.0159]],

         [[-0.0119, -0.0274, -0.0113, -0.0251,  0.0245]]],


        [[[ 0.0118, -0.0173,  0.0811, -0.0070, -0.0466]],

         [[-0.0010,  0.0434,  0.0276, -0.0277,  0.0257]],

         [[ 0.0147,  0.0007, -0.0029, -0.0176, -0.0031]],

         ...,

         [[-0.0184, -0.0007, -0.0093,  0.0199, -0.0249]],

         [[-0.0444,  0.0033,  0.0064, -0.0250, -0.0378]],

         [[-0.0050,  0.0160, -0.0018,  0.0164, -0.0202]]],


        [[[-0.0358,  0.0010, -0.0053,  0.0022, -0.0137]],

         [[-0.0296,  0.0023,  0.0224, -0.0085, -0.0576]],

         [[ 0.0229,  0.0096, -0.0147, -0.0372, -0.0354]],

         ...,

         [[ 0.0032,  0.0256, -0.0013, -0.0054, -0.0255]],

         [[ 0.0029,  0.0025,  0.0185,  0.0208,  0.0218]],

         [[-0.0262,  0.0039, -0.0137, -0.0068, -0.0187]]],


        ...,


        [[[-0.0122,  0.0097,  0.0319,  0.0114, -0.0104]],

         [[-0.0271, -0.0137, -0.0005, -0.0220,  0.0008]],

         [[-0.0218,  0.0065,  0.0088,  0.0066,  0.0125]],

         ...,

         [[ 0.0030, -0.0129,  0.0397, -0.0098,  0.0068]],

         [[ 0.0291,  0.0004, -0.0012,  0.0174,  0.0227]],

         [[-0.0084, -0.0066,  0.0154, -0.0085,  0.0502]]],


        [[[-0.0587, -0.0295, -0.0108,  0.0017, -0.0002]],

         [[ 0.0059,  0.0196, -0.0044, -0.0006,  0.0211]],

         [[ 0.0262,  0.0601,  0.0084,  0.0128, -0.0190]],

         ...,

         [[ 0.0664, -0.0128,  0.0005, -0.0028,  0.0257]],

         [[-0.0218,  0.0016, -0.0186, -0.0132, -0.0003]],

         [[-0.0228, -0.0103, -0.0023,  0.0048, -0.0199]]],


        [[[ 0.0180,  0.0026, -0.0100, -0.0272,  0.0034]],

         [[ 0.0291, -0.0165,  0.0251,  0.0250,  0.0198]],

         [[ 0.0012, -0.0589,  0.0012, -0.0178,  0.0133]],

         ...,

         [[-0.0246,  0.0176,  0.0189, -0.0055, -0.0379]],

         [[-0.0126, -0.0113,  0.0028,  0.0128, -0.0194]],

         [[-0.0344,  0.0346,  0.0342,  0.0078, -0.0289]]]], device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[-4.1353e-03],
          [-1.7959e-02],
          [ 1.2394e-02],
          [ 5.5951e-03],
          [-1.3165e-02]],

         [[ 2.7645e-02],
          [ 3.8310e-02],
          [-8.6308e-03],
          [-2.5239e-02],
          [-1.9380e-02]],

         [[-1.3012e-02],
          [ 3.1935e-02],
          [-2.6089e-02],
          [ 2.0979e-02],
          [ 9.1925e-03]],

         ...,

         [[ 8.1236e-03],
          [-2.6426e-02],
          [ 7.8823e-03],
          [-1.3281e-03],
          [-5.2111e-02]],

         [[-1.3936e-02],
          [-1.4056e-02],
          [ 3.8495e-02],
          [-3.6568e-02],
          [-4.5713e-02]],

         [[ 1.6190e-02],
          [ 2.6753e-02],
          [-2.6727e-03],
          [-6.5269e-02],
          [-1.8672e-03]]],


        [[[-3.5092e-02],
          [-2.2597e-02],
          [-2.7863e-02],
          [-2.0066e-02],
          [-2.2196e-03]],

         [[-3.6218e-04],
          [-2.6869e-02],
          [-2.6762e-03],
          [-1.3310e-02],
          [ 9.0121e-03]],

         [[-1.1098e-02],
          [ 1.8457e-02],
          [-7.6683e-03],
          [ 2.8568e-03],
          [ 1.8437e-02]],

         ...,

         [[ 1.5309e-02],
          [ 2.4966e-02],
          [-6.0145e-02],
          [ 1.0460e-02],
          [ 5.9180e-03]],

         [[ 1.6870e-03],
          [-3.0416e-02],
          [ 2.0086e-02],
          [ 1.0520e-02],
          [-1.0187e-02]],

         [[ 2.9284e-02],
          [-1.6135e-02],
          [-1.4760e-02],
          [-4.1622e-02],
          [-3.7999e-03]]],


        [[[-1.0405e-02],
          [ 1.2162e-02],
          [ 1.9118e-02],
          [ 2.1195e-02],
          [-1.9387e-02]],

         [[ 1.0742e-02],
          [ 1.4873e-02],
          [-3.6478e-03],
          [-2.0334e-02],
          [ 1.8109e-02]],

         [[-1.6848e-02],
          [-2.8464e-02],
          [-9.8386e-03],
          [-1.0775e-02],
          [-1.8555e-02]],

         ...,

         [[-1.4463e-02],
          [ 2.2528e-02],
          [ 1.7363e-02],
          [-1.8328e-02],
          [ 3.6712e-02]],

         [[ 1.6560e-02],
          [-2.2431e-02],
          [ 2.5175e-02],
          [ 3.1151e-02],
          [ 1.6619e-02]],

         [[-1.3788e-02],
          [ 1.7136e-03],
          [ 1.0527e-02],
          [-1.7410e-02],
          [ 2.3869e-02]]],


        ...,


        [[[ 4.9487e-02],
          [ 4.0251e-03],
          [ 1.8178e-02],
          [ 2.7251e-02],
          [ 1.3301e-02]],

         [[ 6.2234e-03],
          [-1.0147e-02],
          [-2.7562e-02],
          [ 2.5379e-02],
          [ 3.2188e-02]],

         [[ 3.7758e-03],
          [-2.2159e-02],
          [ 6.9592e-03],
          [-1.8968e-02],
          [ 7.1783e-03]],

         ...,

         [[-4.7331e-02],
          [ 1.3225e-02],
          [-2.2273e-02],
          [ 4.5238e-03],
          [-5.0990e-03]],

         [[-1.3236e-02],
          [-5.9136e-02],
          [ 3.4419e-02],
          [-6.3345e-04],
          [-5.4200e-03]],

         [[ 4.0284e-02],
          [ 8.4501e-03],
          [-1.2657e-02],
          [-1.0448e-02],
          [-4.1517e-03]]],


        [[[ 9.8750e-04],
          [ 2.7470e-02],
          [ 2.6542e-02],
          [-1.6851e-02],
          [ 1.5969e-02]],

         [[-8.4440e-04],
          [-2.5098e-02],
          [-2.5577e-02],
          [ 1.5242e-02],
          [ 1.2363e-02]],

         [[ 1.1569e-04],
          [ 6.1326e-02],
          [-1.9869e-02],
          [-1.4826e-02],
          [-1.1764e-02]],

         ...,

         [[-1.4179e-02],
          [-3.1253e-02],
          [ 6.1354e-03],
          [-3.2866e-02],
          [ 1.0150e-02]],

         [[-4.0431e-02],
          [ 2.9393e-02],
          [ 4.0289e-04],
          [-1.7459e-02],
          [-8.3968e-03]],

         [[-4.3164e-03],
          [ 4.8845e-03],
          [-4.4474e-02],
          [ 4.2093e-02],
          [ 9.9270e-04]]],


        [[[ 6.2860e-03],
          [-4.1614e-02],
          [ 4.5333e-03],
          [-2.2409e-02],
          [ 4.1565e-02]],

         [[ 4.6829e-02],
          [ 4.3033e-03],
          [ 1.1897e-02],
          [-3.1658e-02],
          [-2.3023e-02]],

         [[-2.5155e-02],
          [ 3.3132e-02],
          [ 4.1771e-02],
          [-2.2734e-04],
          [ 1.1282e-02]],

         ...,

         [[-1.4389e-02],
          [-9.4698e-03],
          [ 1.8921e-02],
          [-2.3268e-02],
          [ 4.3830e-03]],

         [[-1.6942e-03],
          [ 3.2018e-02],
          [ 3.2840e-02],
          [ 6.4273e-05],
          [ 1.1056e-02]],

         [[-5.4850e-03],
          [-9.7001e-03],
          [ 2.5611e-02],
          [ 3.6547e-02],
          [-3.5300e-03]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-0.0001,  0.0375, -0.0092, -0.0044,  0.0161]],

         [[ 0.0007,  0.0172, -0.0089, -0.0060, -0.0180]],

         [[ 0.0318,  0.0329,  0.0159, -0.0101, -0.0100]],

         ...,

         [[ 0.0484,  0.0185, -0.0045, -0.0101,  0.0212]],

         [[-0.0229,  0.0069, -0.0288,  0.0179, -0.0357]],

         [[-0.0105, -0.0084, -0.0111, -0.0192, -0.0364]]],


        [[[ 0.0285,  0.0112,  0.0236, -0.0004, -0.0013]],

         [[-0.0029,  0.0082,  0.0096, -0.0180,  0.0096]],

         [[-0.0328, -0.0170,  0.0174, -0.0298, -0.0053]],

         ...,

         [[-0.0250,  0.0357,  0.0110,  0.0214, -0.0261]],

         [[ 0.0140, -0.0246, -0.0458, -0.0072,  0.0224]],

         [[ 0.0036,  0.0130,  0.0187,  0.0105, -0.0218]]],


        [[[ 0.0300, -0.0083, -0.0254,  0.0140, -0.0161]],

         [[ 0.0031, -0.0207, -0.0318, -0.0166, -0.0144]],

         [[ 0.0013, -0.0372, -0.0013,  0.0216,  0.0278]],

         ...,

         [[ 0.0304,  0.0510, -0.0396,  0.0135, -0.0424]],

         [[-0.0283, -0.0467,  0.0128, -0.0420,  0.0169]],

         [[ 0.0204,  0.0235, -0.0568,  0.0203, -0.0317]]],


        ...,


        [[[-0.0265, -0.0108, -0.0203, -0.0127, -0.0181]],

         [[-0.0267, -0.0211,  0.0200,  0.0106,  0.0074]],

         [[ 0.0199,  0.0334, -0.0012, -0.0007, -0.0038]],

         ...,

         [[-0.0510, -0.0145,  0.0257,  0.0162,  0.0129]],

         [[ 0.0081,  0.0442,  0.0296, -0.0197, -0.0152]],

         [[-0.0279, -0.0331, -0.0007, -0.0103, -0.0078]]],


        [[[-0.0105,  0.0441, -0.0309, -0.0224, -0.0251]],

         [[-0.0338,  0.0003,  0.0207, -0.0338, -0.0365]],

         [[ 0.0055,  0.0152, -0.0116, -0.0068, -0.0039]],

         ...,

         [[-0.0106, -0.0097,  0.0183,  0.0042, -0.0291]],

         [[-0.0335, -0.0232, -0.0186, -0.0056,  0.0159]],

         [[ 0.0090, -0.0157,  0.0396,  0.0085, -0.0002]]],


        [[[ 0.0010, -0.0063, -0.0256, -0.0078,  0.0171]],

         [[-0.0080, -0.0015,  0.0010,  0.0207, -0.0213]],

         [[-0.0015,  0.0029, -0.0241, -0.0145,  0.0383]],

         ...,

         [[-0.0169,  0.0364, -0.0103,  0.0398, -0.0271]],

         [[-0.0380, -0.0358,  0.0034, -0.0350,  0.0067]],

         [[-0.0206,  0.0113, -0.0184,  0.0406,  0.0405]]]], device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[ 7.8746e-03],
          [ 9.3878e-03],
          [-5.9455e-02],
          [-9.5838e-03],
          [ 2.1153e-02]],

         [[-2.9861e-02],
          [ 1.2308e-03],
          [-1.8499e-02],
          [ 6.8211e-03],
          [-1.2733e-02]],

         [[-4.6751e-02],
          [-6.2289e-05],
          [-1.1434e-02],
          [-3.2615e-02],
          [ 1.7518e-02]],

         ...,

         [[-3.5033e-03],
          [ 1.9697e-02],
          [-7.9737e-05],
          [ 1.4637e-02],
          [ 3.3289e-02]],

         [[-2.5039e-03],
          [ 1.5507e-02],
          [-2.6588e-02],
          [-1.4384e-02],
          [ 4.6740e-03]],

         [[ 2.5164e-03],
          [-6.6788e-03],
          [-2.5986e-02],
          [ 2.0633e-02],
          [-3.0548e-03]]],


        [[[ 5.7457e-03],
          [ 3.6083e-03],
          [-2.3996e-02],
          [-3.0974e-03],
          [-2.4220e-02]],

         [[-2.9427e-03],
          [-1.9777e-02],
          [-2.2364e-02],
          [ 3.6905e-02],
          [-4.2827e-02]],

         [[-3.7497e-03],
          [ 7.8789e-03],
          [-9.0656e-03],
          [-7.2861e-03],
          [ 2.5351e-02]],

         ...,

         [[ 1.9821e-02],
          [-3.1806e-02],
          [ 3.0706e-03],
          [ 3.1000e-02],
          [-4.5818e-03]],

         [[ 1.4362e-03],
          [-1.2499e-02],
          [ 3.6878e-02],
          [ 5.4217e-03],
          [ 2.1474e-02]],

         [[-2.2568e-02],
          [ 1.4419e-03],
          [-1.3086e-02],
          [ 1.8921e-03],
          [-1.7979e-02]]],


        [[[ 6.7948e-03],
          [ 2.1874e-02],
          [-1.1362e-02],
          [ 2.8370e-02],
          [ 1.5569e-02]],

         [[-1.6105e-02],
          [-4.9702e-04],
          [-1.6929e-02],
          [-2.7772e-02],
          [ 2.0586e-02]],

         [[ 8.5569e-03],
          [ 8.4620e-03],
          [-2.0404e-03],
          [-3.1950e-03],
          [ 2.0944e-02]],

         ...,

         [[-3.1754e-02],
          [-7.7704e-03],
          [ 2.9091e-02],
          [-3.3390e-02],
          [ 3.9699e-04]],

         [[ 1.0612e-02],
          [-1.5761e-02],
          [ 2.0380e-02],
          [-1.2788e-02],
          [-8.4921e-03]],

         [[ 1.4711e-02],
          [-4.2209e-02],
          [ 4.4423e-03],
          [ 4.9342e-03],
          [ 2.3972e-02]]],


        ...,


        [[[ 3.0927e-02],
          [ 2.7410e-04],
          [-1.4008e-03],
          [-1.1277e-02],
          [ 3.4256e-02]],

         [[ 3.1740e-02],
          [ 4.0819e-03],
          [-6.0667e-02],
          [ 2.3273e-02],
          [ 1.4481e-02]],

         [[ 3.3611e-02],
          [ 1.6472e-02],
          [ 1.5931e-02],
          [-1.7708e-02],
          [ 2.6871e-03]],

         ...,

         [[-7.2978e-03],
          [ 1.2162e-02],
          [-2.4129e-02],
          [ 1.5179e-02],
          [-2.9563e-02]],

         [[-3.3172e-02],
          [ 5.3621e-03],
          [-2.5572e-02],
          [-2.1223e-02],
          [ 3.6883e-04]],

         [[ 5.8737e-03],
          [-2.7110e-02],
          [ 2.3587e-02],
          [ 6.8672e-03],
          [-2.5202e-02]]],


        [[[-2.9039e-02],
          [ 1.4659e-02],
          [-1.7871e-02],
          [ 3.2949e-02],
          [-1.3540e-02]],

         [[-3.1877e-03],
          [ 3.1123e-02],
          [ 3.6240e-02],
          [ 2.5357e-02],
          [ 5.0149e-03]],

         [[ 5.5300e-03],
          [-1.7549e-02],
          [ 4.4866e-03],
          [-1.9368e-02],
          [-4.8955e-03]],

         ...,

         [[ 5.1977e-02],
          [ 2.9673e-02],
          [ 3.8057e-02],
          [ 7.1760e-03],
          [-2.2684e-02]],

         [[-2.3684e-02],
          [ 6.8940e-03],
          [-4.7446e-03],
          [-8.2217e-03],
          [ 1.7087e-03]],

         [[ 2.6809e-03],
          [ 2.3300e-02],
          [-2.5177e-02],
          [-1.4219e-02],
          [-1.7314e-02]]],


        [[[-5.3276e-02],
          [-3.1851e-04],
          [ 2.6231e-02],
          [ 3.0281e-02],
          [ 2.0165e-02]],

         [[-1.2804e-02],
          [ 1.5342e-02],
          [-8.9487e-03],
          [-2.6623e-02],
          [ 1.5750e-02]],

         [[ 2.3878e-03],
          [ 5.4150e-03],
          [ 2.2006e-02],
          [ 4.5059e-03],
          [ 4.5954e-02]],

         ...,

         [[ 2.6747e-02],
          [ 4.1538e-02],
          [ 1.4681e-02],
          [ 9.4781e-03],
          [-4.8066e-03]],

         [[ 1.0416e-02],
          [-3.1451e-02],
          [-1.0911e-02],
          [-4.0407e-02],
          [ 3.1589e-02]],

         [[-5.7922e-03],
          [ 2.1185e-03],
          [ 5.8189e-03],
          [ 1.8508e-02],
          [ 1.9722e-02]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 1.5229e-02, -1.7940e-02, -1.2020e-02],
          [ 9.9494e-03, -2.8029e-02,  4.2481e-02],
          [-1.4107e-02, -2.6097e-02,  1.5356e-02]],

         [[-1.0903e-02, -7.5277e-04,  9.5919e-03],
          [ 3.6158e-02,  1.6684e-02,  2.2740e-02],
          [-2.1467e-02, -1.8897e-02,  8.2038e-03]],

         [[-6.3380e-03,  3.0709e-02, -5.0856e-03],
          [-2.2906e-02, -2.5601e-02,  4.8308e-03],
          [ 1.9484e-02,  2.4699e-02, -5.2582e-02]],

         ...,

         [[ 8.7607e-02,  4.1263e-02, -6.3733e-03],
          [ 5.9804e-03, -2.1979e-02, -1.4855e-02],
          [-6.9628e-03,  3.6792e-02, -4.1030e-02]],

         [[-3.0567e-02,  1.3074e-02, -2.2066e-02],
          [ 1.7521e-02,  1.1897e-02, -1.8077e-02],
          [ 1.5392e-02,  3.8142e-02, -4.6782e-02]],

         [[ 7.5623e-03, -1.8634e-04, -6.8519e-03],
          [ 4.9831e-03, -3.0704e-02, -6.6574e-02],
          [ 1.3193e-02, -2.3410e-02, -2.6018e-02]]],


        [[[-1.0033e-02,  1.3567e-02,  4.2298e-02],
          [ 3.8767e-02,  6.1550e-03,  1.2570e-02],
          [ 1.8176e-02,  1.7355e-02,  9.1986e-03]],

         [[ 4.2528e-02, -6.2598e-02, -1.2330e-02],
          [-3.3788e-02, -1.1184e-02,  1.9883e-02],
          [ 4.8966e-03, -1.5243e-02,  1.8265e-02]],

         [[ 1.9754e-02,  3.2713e-02, -5.3161e-03],
          [ 7.8228e-03, -4.7542e-02, -1.4015e-02],
          [-8.3066e-04, -2.6120e-02, -2.6334e-02]],

         ...,

         [[-1.9718e-02,  2.0311e-02, -3.0757e-02],
          [-1.9613e-02, -5.1013e-02,  2.7780e-02],
          [-4.5852e-02, -3.8106e-02, -1.2018e-02]],

         [[ 4.8547e-03, -1.6766e-02,  1.8535e-02],
          [ 2.3931e-03,  1.7315e-02, -5.3913e-02],
          [-8.7202e-03, -6.4632e-03,  1.1430e-02]],

         [[-1.9413e-02, -2.1165e-03,  1.4098e-02],
          [-1.3091e-03,  4.7802e-02,  2.4465e-02],
          [ 1.1694e-02,  4.9532e-02,  7.9937e-03]]],


        [[[-2.9834e-02,  2.5437e-02,  1.9459e-02],
          [-2.5748e-02, -1.8141e-02, -1.1511e-02],
          [ 2.5385e-02,  1.3332e-02, -1.3665e-02]],

         [[ 1.6695e-02,  3.8367e-03, -8.2126e-03],
          [ 1.3503e-02,  2.7960e-03, -4.3111e-02],
          [ 2.8467e-02,  1.5921e-02, -4.6495e-02]],

         [[-6.1450e-04,  4.7339e-03,  2.4540e-02],
          [-1.6961e-02, -6.5316e-03, -5.1235e-02],
          [ 4.2115e-03, -1.0481e-02, -5.0706e-02]],

         ...,

         [[-3.8227e-02,  5.0522e-03,  3.4965e-02],
          [ 6.9217e-03, -3.2446e-02, -1.8643e-02],
          [ 1.8950e-02,  1.4245e-02, -2.3759e-02]],

         [[ 1.2247e-02,  2.1074e-02,  3.0013e-02],
          [-8.3867e-02, -3.2397e-02, -2.8644e-02],
          [-2.4460e-02,  3.7412e-02,  3.8719e-02]],

         [[-1.4261e-02, -3.2614e-02, -1.4361e-02],
          [ 5.0362e-02, -2.5384e-02,  4.3953e-02],
          [-3.2786e-03,  1.7907e-03, -4.6874e-02]]],


        ...,


        [[[-1.7049e-02, -2.4878e-02,  3.2239e-02],
          [ 4.9631e-02, -1.0010e-02,  6.4366e-03],
          [-5.8465e-02,  3.5764e-03, -3.2056e-03]],

         [[-8.4450e-03,  2.9544e-03,  4.3486e-02],
          [-1.2870e-02, -1.9887e-02, -8.4379e-03],
          [ 1.3710e-02,  4.4899e-02,  1.1765e-02]],

         [[-1.8757e-02,  1.6643e-02, -2.8672e-02],
          [-7.5527e-02, -3.6589e-02,  5.7854e-02],
          [-3.5482e-02,  3.7289e-02,  3.7658e-02]],

         ...,

         [[ 8.2810e-03, -2.3771e-02,  1.6840e-02],
          [-1.8610e-02,  1.5028e-02,  7.5023e-04],
          [-1.4931e-02, -1.5635e-02, -3.5382e-02]],

         [[ 3.5048e-02,  5.0292e-03, -1.6523e-02],
          [-1.9069e-02,  4.5587e-02, -4.7048e-03],
          [ 1.1065e-03,  3.8670e-02,  6.9477e-04]],

         [[-8.7494e-03,  1.6216e-02, -2.6795e-02],
          [-1.0472e-02,  5.0423e-02,  3.3600e-02],
          [ 1.5989e-03, -4.3207e-02,  6.9156e-03]]],


        [[[-3.6389e-02, -2.8661e-03, -3.0132e-02],
          [ 8.8361e-02, -1.7001e-02, -5.9190e-02],
          [-3.0925e-02,  5.8497e-02,  6.3164e-02]],

         [[ 8.8820e-03, -1.2995e-02,  1.4349e-02],
          [ 1.1596e-02, -3.2282e-02, -5.9576e-03],
          [-2.4209e-02,  1.2262e-02,  2.0742e-02]],

         [[ 2.2358e-03,  7.6571e-03, -2.4747e-02],
          [ 1.6885e-02,  1.3720e-02, -3.9630e-02],
          [-9.0406e-03,  4.7475e-02, -1.6076e-02]],

         ...,

         [[-3.1004e-02,  5.1472e-02,  5.5754e-02],
          [ 7.3477e-03, -1.5282e-02, -1.6443e-02],
          [-1.4267e-02,  2.8067e-02, -1.2305e-02]],

         [[-2.9295e-02, -6.6986e-02, -2.2760e-02],
          [ 5.0399e-02, -3.0602e-02, -1.7803e-02],
          [-2.6256e-03,  7.9377e-03, -5.6892e-02]],

         [[ 5.1371e-03,  2.3571e-02, -1.6339e-02],
          [ 6.7250e-03, -1.8279e-02, -7.6242e-03],
          [-1.5227e-02, -1.2933e-02, -1.3680e-03]]],


        [[[-6.8550e-03, -9.3440e-03, -4.0547e-03],
          [-4.1977e-02, -1.4298e-02, -8.7675e-02],
          [ 3.4680e-02, -2.5479e-02, -3.1354e-02]],

         [[-1.7013e-02,  5.0540e-02, -5.9020e-02],
          [ 2.1873e-02,  3.1065e-02,  2.2792e-02],
          [-5.5351e-03, -1.4847e-02,  2.3394e-02]],

         [[-2.3069e-02, -3.4025e-02, -5.5622e-02],
          [ 4.2439e-02,  3.2383e-02, -5.8070e-02],
          [-2.8973e-02,  5.7222e-02,  7.2261e-03]],

         ...,

         [[-2.4213e-02,  1.7855e-02,  5.6351e-02],
          [-4.6072e-02, -4.3348e-02, -1.4988e-02],
          [ 2.4665e-02, -3.2764e-02,  1.7820e-02]],

         [[-1.9171e-02,  3.4691e-03,  1.0245e-02],
          [ 6.1634e-03,  2.7421e-02,  1.2856e-02],
          [ 1.5620e-02, -2.9340e-02,  6.3136e-05]],

         [[ 1.7386e-04,  8.7901e-03,  2.5786e-03],
          [ 1.0097e-02, -2.6469e-02, -2.0098e-03],
          [ 4.0693e-02,  4.6265e-02, -5.4712e-02]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0081, -0.0159,  0.0002],
          [-0.0044, -0.0084,  0.0015],
          [ 0.0101,  0.0112, -0.0198]],

         [[-0.0109, -0.0183, -0.0105],
          [ 0.0193, -0.0096, -0.0072],
          [ 0.0065,  0.0185, -0.0133]],

         [[-0.0065,  0.0005,  0.0033],
          [ 0.0032, -0.0019,  0.0106],
          [-0.0102,  0.0052, -0.0203]],

         ...,

         [[-0.0060,  0.0002, -0.0101],
          [ 0.0154,  0.0108, -0.0035],
          [-0.0015,  0.0089, -0.0049]],

         [[ 0.0156, -0.0012,  0.0019],
          [ 0.0196, -0.0076, -0.0129],
          [ 0.0179, -0.0090, -0.0096]],

         [[ 0.0078,  0.0195,  0.0033],
          [ 0.0199, -0.0078, -0.0129],
          [-0.0137, -0.0106, -0.0019]]],


        [[[-0.0087, -0.0155,  0.0182],
          [-0.0050, -0.0052,  0.0020],
          [-0.0052, -0.0193,  0.0175]],

         [[-0.0085,  0.0003,  0.0152],
          [ 0.0109,  0.0039,  0.0151],
          [ 0.0081,  0.0013, -0.0111]],

         [[ 0.0002, -0.0076, -0.0149],
          [-0.0136,  0.0168, -0.0163],
          [-0.0203, -0.0104, -0.0100]],

         ...,

         [[-0.0043, -0.0008,  0.0118],
          [-0.0082, -0.0116, -0.0056],
          [-0.0080, -0.0138,  0.0104]],

         [[ 0.0152,  0.0081,  0.0116],
          [-0.0146, -0.0021,  0.0149],
          [-0.0193,  0.0117, -0.0073]],

         [[-0.0190, -0.0043,  0.0068],
          [-0.0077, -0.0099, -0.0177],
          [ 0.0116,  0.0189,  0.0157]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([-0.0073,  0.0088], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 1.7218e-02, -9.2856e-03,  1.5197e-02],
          [ 4.6313e-03, -3.3785e-02,  6.9786e-03],
          [-4.8651e-02,  6.3729e-03, -1.0278e-02]],

         [[-5.6391e-02, -2.1248e-02,  1.1434e-02],
          [-2.0538e-02,  5.1720e-03,  8.2000e-03],
          [ 1.4798e-02, -3.9184e-02,  2.3338e-02]],

         [[ 1.1062e-02, -7.5908e-04, -4.2448e-02],
          [-1.9566e-02, -6.6822e-04, -2.4955e-02],
          [-2.5004e-02, -1.1638e-02,  3.7206e-02]],

         ...,

         [[-8.1204e-02,  3.1201e-02,  4.2647e-02],
          [-5.6764e-02, -2.3772e-02,  4.5095e-03],
          [ 4.8692e-02,  2.7117e-02,  1.8875e-02]],

         [[ 4.4930e-02, -3.5549e-03, -1.7757e-02],
          [ 2.8175e-02, -4.8128e-02, -1.7708e-02],
          [-1.0819e-03,  1.2885e-02,  1.1611e-02]],

         [[ 7.3542e-02,  1.3854e-02, -2.5768e-02],
          [-1.2923e-02,  1.4671e-02, -4.2930e-02],
          [ 5.6144e-02, -4.5572e-02,  1.6192e-02]]],


        [[[ 2.1234e-02, -8.8971e-03, -5.0086e-03],
          [-1.6140e-02, -3.9681e-03,  2.5475e-02],
          [-8.9266e-03,  4.3625e-02, -4.5987e-02]],

         [[ 3.2780e-02,  1.0017e-03,  2.7018e-02],
          [ 2.9708e-02, -1.2747e-02,  2.8037e-02],
          [ 1.5289e-02, -1.7141e-03,  3.3090e-02]],

         [[-5.7839e-03,  2.4810e-02, -3.1243e-02],
          [-6.6294e-02,  3.3680e-03, -2.5175e-02],
          [-4.3447e-02, -3.7662e-02,  1.8321e-02]],

         ...,

         [[ 2.0052e-03,  1.2246e-02, -6.9931e-02],
          [ 7.4473e-03,  9.4816e-03,  4.3809e-02],
          [-2.3997e-02, -1.1878e-02, -4.7582e-02]],

         [[-2.6155e-02,  4.2459e-03, -1.4943e-02],
          [-1.0686e-03,  6.4670e-02,  2.8408e-02],
          [ 1.5985e-02, -1.1101e-02,  3.0761e-02]],

         [[ 2.3588e-02, -4.0631e-04, -4.3578e-02],
          [ 5.7885e-02, -3.5187e-02,  1.1012e-02],
          [ 2.0470e-02, -1.5115e-02,  1.7932e-02]]],


        [[[-1.5118e-02, -3.4700e-02,  4.5656e-02],
          [-1.3345e-02, -3.8702e-02,  3.8596e-02],
          [-2.5660e-02,  4.2725e-02,  1.1932e-02]],

         [[-4.3920e-02, -1.8099e-02, -4.7025e-02],
          [-3.7817e-02,  2.6342e-02,  5.6533e-02],
          [-8.0055e-03,  1.4481e-03,  8.6067e-03]],

         [[-2.0342e-02, -4.2857e-02, -2.3690e-06],
          [-3.6016e-02,  2.3902e-02,  4.1873e-02],
          [-3.5867e-02,  2.6936e-02,  1.6857e-02]],

         ...,

         [[ 2.1026e-02,  2.0319e-02,  2.5102e-02],
          [-2.1801e-02,  3.0479e-04, -1.5905e-02],
          [ 1.3747e-02,  1.4465e-02, -4.4133e-03]],

         [[ 2.7120e-02, -6.4273e-02, -6.6200e-03],
          [-5.2692e-03,  2.9068e-03,  1.0052e-02],
          [ 4.3738e-02,  4.0670e-02,  1.0834e-02]],

         [[ 5.5001e-03,  1.4716e-02, -6.6544e-02],
          [ 2.2430e-02,  4.5836e-03, -4.6173e-03],
          [-2.7044e-02, -7.9541e-03, -5.5594e-02]]],


        ...,


        [[[-2.2843e-03,  2.8946e-02, -6.6778e-02],
          [-3.9049e-03, -2.2690e-02,  2.3898e-02],
          [ 3.0175e-03, -5.2809e-02,  2.8806e-02]],

         [[-4.5260e-02,  3.7461e-02, -1.9864e-03],
          [-3.3171e-02, -1.6367e-02,  1.0431e-02],
          [ 1.8261e-02, -2.4293e-02,  4.0186e-02]],

         [[ 4.5194e-02,  2.8834e-02, -1.7964e-02],
          [ 5.9278e-03,  4.8651e-02, -3.2416e-02],
          [ 5.7977e-02,  9.3042e-03,  1.8698e-03]],

         ...,

         [[ 2.0628e-02,  2.4902e-02,  2.2067e-02],
          [-3.5769e-02, -1.9801e-02,  1.8836e-02],
          [ 2.5329e-02, -4.3117e-02, -3.6972e-02]],

         [[ 5.7292e-02,  1.5325e-02,  3.8362e-02],
          [ 8.2127e-03,  1.5201e-02, -3.6548e-02],
          [ 2.4673e-02,  2.0491e-02, -3.4919e-02]],

         [[-4.1064e-02, -3.1386e-02, -2.0952e-02],
          [ 5.3904e-02, -4.4554e-03,  6.9283e-02],
          [-5.9141e-03,  3.7447e-02,  4.4139e-02]]],


        [[[ 4.6993e-02, -4.1220e-02, -3.2301e-02],
          [-2.5885e-02, -3.3536e-03, -2.9851e-03],
          [ 2.7603e-02, -5.5955e-03, -1.9249e-02]],

         [[-2.4488e-02,  4.8540e-02,  3.8832e-02],
          [ 1.6417e-02, -2.3492e-02,  1.6760e-02],
          [-3.7913e-02,  2.3363e-02, -2.0608e-02]],

         [[ 2.4200e-02, -9.2606e-03, -7.0154e-03],
          [ 2.5531e-03, -1.9334e-02, -5.5907e-03],
          [-1.9426e-03,  3.7487e-03,  1.7900e-02]],

         ...,

         [[-3.2930e-02,  6.3199e-02,  4.7580e-02],
          [ 1.5987e-02, -1.9580e-02,  7.3423e-03],
          [ 1.2969e-02, -2.0561e-04,  6.2012e-02]],

         [[-7.0576e-02,  3.3770e-02,  3.0465e-02],
          [ 7.1326e-02,  2.9464e-02, -8.6892e-03],
          [-2.1631e-02,  1.4537e-02,  5.4316e-02]],

         [[-7.8015e-03,  2.6985e-03, -7.4215e-02],
          [ 6.5560e-02, -6.8085e-04, -1.8916e-02],
          [ 3.9726e-02, -2.6402e-02,  3.3427e-02]]],


        [[[-1.4619e-02, -3.8825e-02,  1.5691e-02],
          [-3.3904e-02,  1.5900e-02, -2.0944e-02],
          [ 1.5875e-02,  2.4607e-02,  4.0187e-02]],

         [[-3.0281e-02, -1.5062e-02, -4.9487e-02],
          [-3.5107e-02,  1.1106e-02, -2.8997e-02],
          [ 4.3244e-02, -1.4158e-02,  3.8447e-03]],

         [[-9.8408e-03, -4.3801e-02, -1.4288e-02],
          [ 4.5166e-02, -2.7669e-02,  4.5076e-03],
          [ 9.6846e-03,  2.8730e-02,  9.3763e-03]],

         ...,

         [[ 9.4245e-03,  2.5761e-02,  5.0444e-04],
          [ 7.3105e-03,  6.7988e-03,  6.1760e-02],
          [ 1.9499e-02,  8.7916e-03,  3.5690e-02]],

         [[-1.3585e-02, -1.6292e-02,  6.4109e-03],
          [-5.1441e-02, -3.7769e-02,  1.6141e-03],
          [-9.7056e-02, -1.2183e-02,  3.7020e-02]],

         [[-3.1878e-02,  3.2678e-02, -1.6407e-02],
          [ 2.3512e-03,  3.6895e-02, -2.7047e-03],
          [-4.1612e-02,  2.2189e-02, -3.1960e-02]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0341]],

         [[ 0.0050]],

         [[ 0.0385]],

         ...,

         [[ 0.0323]],

         [[-0.0512]],

         [[-0.0445]]],


        [[[ 0.0131]],

         [[-0.0390]],

         [[ 0.0040]],

         ...,

         [[-0.0250]],

         [[-0.0334]],

         [[ 0.0242]]],


        [[[ 0.0165]],

         [[-0.0107]],

         [[-0.0124]],

         ...,

         [[-0.0365]],

         [[ 0.0325]],

         [[ 0.0019]]],


        ...,


        [[[ 0.0457]],

         [[-0.0039]],

         [[ 0.0135]],

         ...,

         [[-0.0532]],

         [[-0.0262]],

         [[ 0.0464]]],


        [[[-0.0171]],

         [[ 0.0439]],

         [[ 0.0330]],

         ...,

         [[-0.0129]],

         [[ 0.0348]],

         [[-0.0237]]],


        [[[ 0.0505]],

         [[-0.0097]],

         [[-0.0359]],

         ...,

         [[-0.0156]],

         [[ 0.0554]],

         [[-0.0459]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([-0.0260,  0.0516,  0.0596,  0.0165, -0.0434, -0.0456,  0.0490,  0.0595,
        -0.0267,  0.0082, -0.0158,  0.0052,  0.0392, -0.0581, -0.0069, -0.0344,
         0.0539, -0.0145, -0.0015, -0.0145,  0.0083,  0.0540,  0.0604, -0.0134,
         0.0096, -0.0297, -0.0281,  0.0346,  0.0473, -0.0243, -0.0259, -0.0085,
        -0.0147, -0.0206, -0.0604,  0.0227,  0.0451, -0.0176, -0.0121,  0.0530,
         0.0247, -0.0540, -0.0519,  0.0544,  0.0373,  0.0089,  0.0231,  0.0037,
        -0.0362,  0.0423,  0.0438, -0.0127, -0.0515,  0.0316, -0.0616, -0.0360,
         0.0338,  0.0178,  0.0278, -0.0457,  0.0609, -0.0371, -0.0422,  0.0220,
         0.0366,  0.0152,  0.0549,  0.0222, -0.0445, -0.0013,  0.0248, -0.0370,
         0.0017,  0.0183,  0.0010,  0.0352, -0.0339, -0.0267, -0.0213, -0.0290,
        -0.0448,  0.0239,  0.0458, -0.0278,  0.0380,  0.0010,  0.0600, -0.0606,
        -0.0524, -0.0186, -0.0329, -0.0116, -0.0617, -0.0235, -0.0222, -0.0435,
        -0.0387,  0.0031, -0.0531, -0.0222,  0.0320, -0.0564,  0.0003, -0.0188,
         0.0023, -0.0587,  0.0107,  0.0581,  0.0557, -0.0404,  0.0314,  0.0475,
        -0.0003,  0.0538, -0.0263,  0.0420,  0.0565, -0.0228,  0.0333,  0.0023,
         0.0485,  0.0009,  0.0266, -0.0462,  0.0175, -0.0244,  0.0075, -0.0478,
         0.0123, -0.0176, -0.0270, -0.0288, -0.0009,  0.0545, -0.0129, -0.0162,
        -0.0592,  0.0118, -0.0298,  0.0271, -0.0373, -0.0111,  0.0558,  0.0195,
        -0.0468, -0.0421, -0.0463, -0.0038, -0.0434, -0.0564, -0.0486,  0.0546,
         0.0335, -0.0269,  0.0373,  0.0174,  0.0547,  0.0363, -0.0594, -0.0279,
         0.0094,  0.0359, -0.0493,  0.0190, -0.0491,  0.0546, -0.0403, -0.0185,
         0.0103, -0.0010, -0.0503, -0.0476,  0.0616, -0.0487, -0.0415,  0.0351,
        -0.0328,  0.0031,  0.0039,  0.0204, -0.0026,  0.0183,  0.0269, -0.0131,
        -0.0450,  0.0517, -0.0171, -0.0612, -0.0250, -0.0071,  0.0541,  0.0380,
        -0.0014, -0.0502, -0.0060, -0.0218, -0.0566, -0.0504, -0.0493,  0.0164,
         0.0216, -0.0012, -0.0282,  0.0171, -0.0446, -0.0101, -0.0050, -0.0179,
         0.0257, -0.0471,  0.0023, -0.0356, -0.0307,  0.0421,  0.0547, -0.0069,
        -0.0260, -0.0523, -0.0405,  0.0165, -0.0117,  0.0365,  0.0193,  0.0440,
        -0.0477, -0.0290,  0.0282, -0.0148,  0.0360,  0.0020,  0.0196, -0.0498,
         0.0306,  0.0417,  0.0004,  0.0422,  0.0514,  0.0305,  0.0302,  0.0099,
        -0.0301,  0.0365,  0.0090, -0.0618, -0.0513, -0.0467,  0.0095,  0.0145,
         0.0068, -0.0546, -0.0173, -0.0187,  0.0551, -0.0460, -0.0603,  0.0301,
        -0.0428,  0.0601,  0.0602,  0.0310, -0.0232, -0.0285, -0.0080,  0.0404,
         0.0507, -0.0561, -0.0503,  0.0274, -0.0121,  0.0161, -0.0522, -0.0330,
        -0.0292, -0.0042, -0.0015,  0.0018,  0.0257,  0.0532, -0.0261, -0.0448,
         0.0542, -0.0368, -0.0256, -0.0307, -0.0311,  0.0012,  0.0505,  0.0336,
         0.0092, -0.0234, -0.0532,  0.0417, -0.0431,  0.0404,  0.0104, -0.0103,
         0.0167,  0.0138, -0.0398, -0.0103, -0.0357, -0.0189, -0.0471, -0.0518,
        -0.0292,  0.0224,  0.0445, -0.0409,  0.0467, -0.0267, -0.0235,  0.0328,
         0.0362,  0.0479, -0.0163,  0.0248,  0.0101,  0.0454, -0.0199,  0.0535,
         0.0363, -0.0523, -0.0052,  0.0611, -0.0496,  0.0467,  0.0249, -0.0028,
         0.0532, -0.0595,  0.0349, -0.0045, -0.0485, -0.0459, -0.0002, -0.0023,
         0.0245, -0.0258, -0.0484, -0.0251,  0.0081,  0.0174,  0.0107,  0.0321,
         0.0121,  0.0341,  0.0343,  0.0517, -0.0187,  0.0162,  0.0548, -0.0412,
         0.0389, -0.0387, -0.0306,  0.0061, -0.0311, -0.0486,  0.0495,  0.0347,
        -0.0354,  0.0474, -0.0058, -0.0410,  0.0410,  0.0027, -0.0433, -0.0168,
         0.0443, -0.0410,  0.0585,  0.0149,  0.0387, -0.0304, -0.0162,  0.0011,
        -0.0134,  0.0298, -0.0302,  0.0210, -0.0267,  0.0210,  0.0498, -0.0140,
        -0.0386, -0.0015, -0.0547,  0.0240, -0.0145, -0.0623,  0.0212,  0.0332,
        -0.0602, -0.0226,  0.0207,  0.0388,  0.0533, -0.0578,  0.0529,  0.0398,
         0.0579, -0.0498,  0.0491,  0.0314,  0.0270, -0.0477,  0.0272, -0.0378,
        -0.0502,  0.0106,  0.0213, -0.0535, -0.0579, -0.0309,  0.0571, -0.0052,
         0.0447, -0.0503,  0.0075, -0.0354, -0.0241,  0.0548, -0.0619,  0.0480,
        -0.0045, -0.0540,  0.0181,  0.0184,  0.0016,  0.0523,  0.0412, -0.0050,
         0.0431, -0.0177, -0.0081,  0.0616, -0.0075, -0.0157, -0.0302,  0.0539,
         0.0325,  0.0202,  0.0369,  0.0506, -0.0122, -0.0450,  0.0283,  0.0519,
        -0.0146,  0.0484,  0.0557, -0.0125, -0.0295, -0.0270, -0.0123,  0.0486,
         0.0257, -0.0507, -0.0426, -0.0259,  0.0197, -0.0520, -0.0047,  0.0432,
         0.0334,  0.0314, -0.0012,  0.0613,  0.0469,  0.0383,  0.0286, -0.0512,
        -0.0274, -0.0008,  0.0316,  0.0187, -0.0007,  0.0304, -0.0350, -0.0040,
        -0.0593, -0.0069, -0.0447,  0.0353, -0.0351,  0.0131,  0.0606, -0.0342,
        -0.0203, -0.0048, -0.0474,  0.0343,  0.0287,  0.0199, -0.0309, -0.0253,
         0.0249,  0.0410, -0.0550,  0.0557, -0.0252,  0.0341, -0.0333,  0.0407,
        -0.0172, -0.0473, -0.0360,  0.0589,  0.0033,  0.0223, -0.0031, -0.0034,
         0.0097,  0.0246,  0.0524,  0.0478,  0.0540, -0.0268,  0.0392,  0.0477,
        -0.0223, -0.0580, -0.0056,  0.0266, -0.0540,  0.0221, -0.0142, -0.0443,
        -0.0205, -0.0119, -0.0480,  0.0541,  0.0575,  0.0241,  0.0041, -0.0537,
        -0.0054, -0.0574, -0.0346, -0.0180, -0.0366,  0.0614,  0.0022,  0.0104,
         0.0292, -0.0277,  0.0099,  0.0514, -0.0103, -0.0189, -0.0465,  0.0171,
         0.0564,  0.0266,  0.0618,  0.0485,  0.0317,  0.0181,  0.0230, -0.0374,
        -0.0370,  0.0115,  0.0321,  0.0438, -0.0089, -0.0446, -0.0450,  0.0087,
         0.0068,  0.0220,  0.0171, -0.0010,  0.0277, -0.0180,  0.0483, -0.0186],
       device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[ 3.4984e-02, -2.3040e-02, -3.8279e-02,  ..., -1.8790e-02,
            1.9899e-02, -5.0290e-02],
          [ 2.3731e-02,  2.4728e-02, -1.1841e-02,  ...,  1.9801e-03,
           -2.3632e-02,  4.9888e-02],
          [-5.9322e-03, -5.3002e-02,  1.1009e-02,  ...,  1.3763e-02,
            3.1892e-03, -2.8090e-02],
          ...,
          [-4.2523e-03,  1.6964e-02,  2.1981e-02,  ...,  7.2753e-03,
            3.8063e-02, -2.7480e-02],
          [-1.3827e-03,  8.1316e-03,  9.7243e-03,  ...,  8.9616e-03,
            5.5708e-02,  2.9534e-02],
          [-2.1124e-02,  2.0455e-02, -1.8366e-02,  ..., -1.7164e-02,
           -7.3148e-03,  6.9332e-03]],

         [[ 2.7515e-02, -2.1007e-03, -5.7727e-02,  ..., -4.0262e-02,
            8.8591e-03, -1.9517e-02],
          [ 1.6609e-02, -3.9859e-03, -3.9641e-02,  ..., -1.2470e-02,
           -1.0303e-02, -1.1246e-02],
          [ 3.6120e-02,  5.9673e-03,  2.6827e-03,  ..., -1.6317e-02,
           -4.7043e-02, -1.6565e-03],
          ...,
          [ 6.4291e-03,  1.8780e-02,  2.8638e-02,  ..., -3.0561e-03,
           -1.7231e-02, -3.9396e-02],
          [ 1.8660e-02,  4.0786e-03,  1.2232e-02,  ..., -4.3631e-03,
           -2.7681e-02, -3.5667e-02],
          [-1.3821e-02, -3.9931e-02, -3.4849e-02,  ..., -3.4928e-03,
            5.7600e-02, -9.6392e-03]],

         [[ 1.4930e-02, -5.2280e-03, -3.4783e-03,  ...,  3.8848e-02,
            8.6377e-03, -5.9750e-02],
          [-1.4737e-02, -6.8712e-03,  6.8721e-02,  ..., -1.8577e-02,
            3.0050e-02, -2.6116e-02],
          [ 8.0858e-03, -4.5130e-03,  4.0409e-02,  ..., -6.1930e-02,
           -2.5599e-02, -1.5463e-02],
          ...,
          [ 1.0363e-02, -2.0407e-02,  8.7253e-03,  ..., -2.2279e-02,
           -9.4994e-03,  3.4671e-03],
          [-1.9402e-05, -1.1628e-02, -2.6723e-02,  ..., -3.6471e-02,
           -3.9775e-03,  9.8578e-03],
          [ 2.1022e-03, -6.5668e-03,  2.4187e-02,  ...,  2.3701e-02,
            2.2093e-02,  1.5555e-02]]],


        [[[-2.4186e-02,  1.8666e-04, -8.9456e-03,  ...,  1.2501e-02,
            2.1157e-02,  4.8414e-02],
          [ 2.9194e-03, -2.4762e-02, -4.9695e-02,  ...,  2.5696e-02,
            4.2775e-02, -1.4429e-02],
          [-1.1765e-03, -5.4305e-03,  1.2005e-02,  ...,  6.8674e-03,
            6.3917e-03,  4.2080e-02],
          ...,
          [ 3.3745e-02, -6.1901e-04,  1.7439e-02,  ...,  1.3587e-02,
           -3.6308e-03,  4.2957e-02],
          [-2.3327e-03, -2.7693e-02, -3.7827e-03,  ..., -9.2194e-03,
            3.5207e-02, -1.5934e-02],
          [-7.9109e-03, -1.1814e-03,  8.1982e-02,  ...,  2.3420e-02,
           -1.2239e-02,  9.9717e-03]],

         [[-1.1433e-02, -2.2050e-02,  8.2415e-03,  ...,  3.9574e-03,
           -3.9861e-02, -5.8313e-02],
          [ 1.9604e-02,  1.8846e-02, -1.4969e-02,  ...,  9.7325e-03,
            1.9839e-02,  3.2765e-03],
          [-2.8648e-02,  5.5995e-03, -1.0688e-02,  ..., -2.4243e-02,
           -4.8077e-02, -2.4550e-02],
          ...,
          [-3.0750e-02, -6.5498e-02, -4.0797e-02,  ...,  1.3321e-02,
           -2.9937e-02,  4.5373e-02],
          [-5.4947e-02, -2.1828e-03, -6.4582e-03,  ...,  3.5357e-02,
            2.3949e-02,  1.4169e-02],
          [ 9.2554e-03,  1.2735e-02, -3.3456e-02,  ..., -4.7201e-02,
           -3.0078e-02,  2.1666e-02]],

         [[-1.4589e-02, -6.3677e-02,  7.2374e-03,  ..., -1.8373e-02,
            3.7109e-03, -3.2870e-02],
          [ 2.2444e-02, -9.9917e-03, -4.4585e-02,  ..., -2.8292e-02,
           -2.4987e-04,  3.0615e-02],
          [-1.1260e-02, -1.1710e-02, -5.4362e-02,  ...,  2.8468e-04,
            3.5393e-02, -1.7769e-02],
          ...,
          [ 6.7420e-02, -3.0202e-02,  4.3072e-03,  ..., -7.9064e-04,
           -1.0153e-02,  1.5110e-02],
          [ 4.0654e-03, -1.5636e-03, -5.5779e-02,  ..., -1.9344e-02,
           -5.6415e-02, -1.4607e-02],
          [ 2.6231e-02,  2.0826e-02, -2.6230e-02,  ..., -1.8590e-02,
            5.4998e-03,  4.4323e-02]]],


        [[[-1.3245e-02,  1.3307e-02,  4.7407e-03,  ..., -1.0884e-02,
           -3.4600e-02,  1.5456e-02],
          [-1.2922e-02,  2.5160e-03,  3.6758e-02,  ...,  1.9838e-04,
            1.0832e-02, -2.0263e-02],
          [-1.0853e-02, -1.0201e-02,  4.7552e-02,  ..., -2.4921e-02,
            5.9515e-03,  3.2209e-02],
          ...,
          [ 1.6072e-02, -3.1767e-02,  4.0766e-02,  ...,  1.3461e-02,
           -8.4286e-03,  1.9203e-02],
          [ 7.5307e-03,  2.7600e-02,  5.4311e-03,  ...,  2.2896e-02,
            1.4155e-02,  1.0121e-02],
          [-1.4526e-02, -4.4254e-02, -2.4786e-02,  ..., -2.3819e-02,
            6.6570e-03, -2.8211e-03]],

         [[-2.0634e-02, -1.8570e-02, -4.2484e-02,  ..., -4.0657e-03,
            2.4482e-02,  3.0626e-02],
          [-5.3640e-02,  2.7423e-02, -1.7225e-02,  ..., -1.8937e-02,
            4.5320e-03, -5.7096e-02],
          [-2.6288e-02,  3.2263e-02,  3.7315e-03,  ..., -3.6071e-03,
            3.5289e-03,  7.9006e-03],
          ...,
          [-1.0341e-02, -8.9453e-03, -3.3866e-02,  ...,  2.4962e-02,
           -4.3700e-02, -2.0731e-03],
          [ 3.6322e-02, -2.2011e-02,  1.3661e-02,  ..., -1.1437e-02,
            2.7741e-02,  8.6290e-03],
          [ 8.1898e-04,  3.8973e-05, -1.4591e-02,  ..., -1.2415e-02,
            2.3826e-02, -1.8955e-02]],

         [[ 4.0351e-02, -1.0779e-02, -3.6325e-02,  ...,  4.8754e-02,
           -1.2993e-02, -2.9346e-02],
          [-1.7655e-02,  9.6149e-03, -9.4013e-03,  ...,  2.2759e-02,
            1.2746e-03,  2.8104e-02],
          [ 3.3753e-04,  7.6424e-02,  1.8096e-02,  ..., -1.9936e-02,
            6.3279e-02,  2.0459e-02],
          ...,
          [ 4.6940e-05,  1.9715e-03, -1.7637e-02,  ..., -2.7188e-02,
           -1.2654e-02, -2.1671e-02],
          [ 3.3495e-02, -1.3537e-04,  3.1873e-02,  ..., -9.4946e-03,
            3.2536e-02, -3.4277e-03],
          [-4.0647e-03,  1.0463e-02,  7.7054e-03,  ...,  5.8592e-03,
            7.5730e-03, -5.6794e-02]]],


        ...,


        [[[-2.0353e-04,  5.2953e-02, -3.6578e-02,  ..., -2.2536e-02,
            7.6255e-03, -3.9966e-02],
          [-2.7203e-02, -1.9672e-02, -9.2889e-04,  ..., -1.7360e-02,
            3.5844e-02, -3.6269e-02],
          [-1.7468e-02,  4.5668e-02, -1.7605e-02,  ..., -1.3896e-02,
            3.6235e-02,  3.5045e-02],
          ...,
          [-4.8735e-02, -5.4680e-03,  3.4515e-02,  ..., -5.0494e-03,
            4.7259e-02,  3.2844e-02],
          [ 4.3291e-02,  2.3651e-02,  3.4887e-02,  ..., -7.0274e-03,
           -1.3009e-02,  1.5761e-02],
          [ 1.5539e-02, -1.2449e-02, -1.3411e-02,  ..., -2.9519e-02,
            1.2850e-02,  8.5635e-03]],

         [[-1.2867e-02,  4.1148e-02, -1.5385e-02,  ...,  2.0249e-02,
            6.0209e-03, -1.6473e-02],
          [-6.0737e-03,  1.2456e-02, -2.0779e-03,  ...,  2.9630e-02,
           -2.8783e-02,  4.2589e-04],
          [-3.7166e-02,  1.1563e-02, -3.9360e-02,  ...,  1.9087e-02,
            2.1141e-03, -6.8239e-02],
          ...,
          [ 1.5399e-02, -2.2198e-02,  9.6409e-03,  ...,  3.0591e-02,
            1.1758e-02,  3.8628e-03],
          [-2.8719e-03,  1.0740e-02,  1.8327e-02,  ..., -1.6775e-02,
           -4.3559e-03,  4.0094e-02],
          [-5.3309e-02,  8.1723e-03,  5.3697e-03,  ..., -4.9851e-02,
            1.8080e-02, -1.6758e-02]],

         [[-7.9727e-03, -2.9888e-02, -1.5653e-02,  ...,  5.5451e-04,
           -5.6231e-02,  2.0690e-02],
          [ 1.0511e-02,  3.2101e-02, -1.2706e-02,  ..., -2.4864e-02,
           -1.3872e-02, -2.3326e-02],
          [-3.5632e-02, -1.9165e-02, -1.3976e-02,  ..., -2.7677e-02,
           -2.8040e-02, -5.4952e-02],
          ...,
          [-1.6868e-02,  3.3073e-02, -1.0250e-02,  ...,  4.9612e-02,
            3.2841e-03, -5.6617e-03],
          [-2.1094e-02,  3.2697e-02,  1.4372e-02,  ..., -2.5279e-02,
           -1.0500e-02, -2.4501e-03],
          [ 2.0192e-02, -2.7079e-02, -4.7101e-04,  ...,  4.1750e-03,
           -2.7512e-02, -3.6900e-02]]],


        [[[ 1.4902e-02,  1.0987e-03,  7.3707e-03,  ..., -4.7090e-02,
            2.6620e-02,  4.6115e-02],
          [ 2.7915e-02,  3.9959e-02,  1.6581e-02,  ..., -1.5151e-02,
            2.9059e-02, -2.6308e-03],
          [ 5.1241e-02,  4.1210e-03,  3.0201e-02,  ...,  3.4836e-02,
           -1.0516e-03,  2.4976e-02],
          ...,
          [ 3.6556e-02,  1.1739e-02, -3.9371e-02,  ...,  1.0497e-02,
           -3.5422e-02,  6.8634e-03],
          [-1.0105e-03, -3.4007e-02, -1.3993e-02,  ..., -6.7748e-03,
            1.7016e-02, -5.9787e-04],
          [-2.1765e-03,  8.2956e-03, -7.8898e-03,  ..., -3.8012e-03,
            3.2450e-02,  8.0034e-03]],

         [[ 3.6739e-02, -1.1755e-02,  1.6254e-02,  ..., -2.5534e-02,
            1.4238e-02, -8.9463e-04],
          [ 3.0782e-02, -8.1724e-03,  1.1952e-02,  ...,  1.1288e-04,
           -4.1412e-03, -1.5428e-02],
          [ 2.2764e-02, -2.9951e-02,  3.5030e-03,  ..., -2.3531e-03,
           -1.4140e-02, -6.7728e-03],
          ...,
          [-8.6330e-03,  1.5153e-02, -3.9406e-02,  ..., -6.4502e-04,
           -3.1574e-02, -5.5155e-02],
          [ 2.9324e-02, -7.9309e-03,  2.5879e-03,  ...,  1.6078e-02,
           -1.3246e-02,  3.2514e-03],
          [-3.5948e-02, -4.7266e-02, -3.7277e-02,  ...,  2.5070e-02,
            2.0091e-02, -1.1209e-02]],

         [[ 1.5784e-02, -2.9907e-02,  1.7725e-02,  ...,  1.8785e-02,
           -4.2846e-02,  4.2192e-02],
          [-3.2023e-02, -2.1084e-03,  4.6675e-03,  ...,  3.2954e-02,
            1.9417e-02, -1.7190e-02],
          [ 2.3215e-02, -1.7605e-02, -1.9778e-02,  ...,  1.7655e-02,
            3.6355e-02, -4.5630e-02],
          ...,
          [-1.3809e-02, -1.8240e-02,  3.7561e-03,  ...,  1.1110e-02,
            1.9004e-02, -2.4605e-02],
          [ 1.9180e-02, -4.7347e-03, -5.4157e-02,  ...,  1.6309e-02,
            3.2887e-05, -1.3402e-02],
          [ 2.5388e-02, -4.1408e-02,  3.4596e-03,  ..., -1.8814e-02,
           -2.2924e-02,  2.4047e-02]]],


        [[[-3.7944e-02, -1.1694e-03,  1.8765e-02,  ..., -3.2753e-02,
            2.6966e-03, -4.3253e-03],
          [ 6.6788e-03,  9.7113e-03,  1.1453e-02,  ...,  2.8064e-02,
            1.9970e-02, -1.3236e-02],
          [-1.1029e-02,  2.9010e-02, -9.3507e-03,  ...,  1.4261e-02,
            1.3733e-02, -1.2481e-02],
          ...,
          [-1.2318e-02,  1.4291e-02, -7.6976e-03,  ..., -2.9126e-02,
           -2.2593e-02, -3.2294e-02],
          [ 2.0300e-02, -6.3294e-02, -5.1619e-03,  ...,  3.6850e-02,
           -2.7469e-02, -2.8765e-02],
          [-5.0589e-03,  5.1201e-02,  1.0064e-02,  ...,  4.7266e-02,
           -1.6403e-02,  1.7681e-02]],

         [[-4.1921e-02,  5.4406e-03,  3.3586e-02,  ..., -3.3138e-02,
           -7.2020e-03,  1.6851e-02],
          [-1.3656e-02, -1.3488e-02, -9.8322e-03,  ...,  1.0683e-02,
           -1.8307e-02,  2.6201e-02],
          [ 1.9239e-03,  1.6718e-02, -5.4686e-02,  ..., -2.0487e-02,
            2.6590e-02,  3.6886e-03],
          ...,
          [ 3.1662e-02, -3.4539e-03,  1.5939e-02,  ...,  4.9804e-02,
           -1.4954e-02,  4.5411e-02],
          [-2.2525e-03, -7.7255e-02,  6.1900e-03,  ..., -1.5236e-02,
            1.8882e-02, -1.1835e-02],
          [ 3.6859e-02, -1.1719e-02,  2.1247e-03,  ...,  3.0818e-02,
            1.8460e-02,  1.9915e-02]],

         [[ 1.1766e-02,  6.7368e-03, -2.8181e-02,  ..., -2.9480e-02,
            1.4825e-02, -1.7058e-02],
          [ 3.0315e-02,  1.8566e-02,  1.0134e-02,  ..., -1.7619e-02,
           -1.5790e-02, -4.6244e-03],
          [-3.2380e-02,  3.1545e-03, -1.4637e-02,  ...,  5.3869e-02,
            2.4041e-02, -4.2334e-02],
          ...,
          [ 2.9543e-02,  1.9558e-02,  3.5223e-03,  ...,  4.2807e-03,
            1.5552e-02, -1.6512e-02],
          [ 4.8333e-02, -6.5866e-05,  1.7205e-02,  ..., -2.0227e-02,
            5.1629e-02, -4.1421e-03],
          [-8.5577e-03,  5.3149e-02, -9.6851e-03,  ..., -5.5932e-03,
           -2.2091e-02,  3.6842e-03]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[ 5.7338e-02,  9.3049e-02,  4.0528e-03],
          [-6.1056e-02,  4.6610e-04, -9.2465e-03],
          [-7.9383e-02, -3.7129e-02,  6.0993e-02]],

         [[-1.0707e-01, -5.3138e-02,  1.9510e-03],
          [-3.1768e-02,  6.1229e-02,  4.4079e-02],
          [-5.0731e-02,  1.9595e-02, -3.2466e-02]],

         [[-3.6563e-02, -6.5109e-02,  8.8866e-03],
          [ 1.2573e-01,  2.7475e-02, -8.1491e-02],
          [-1.4714e-02,  1.2331e-01,  1.1416e-02]],

         ...,

         [[-1.7102e-03, -3.8889e-02,  3.4161e-03],
          [-7.5887e-02,  4.7271e-02, -4.2173e-02],
          [-5.0522e-02,  4.2455e-02,  1.5818e-02]],

         [[-2.4225e-02,  2.1791e-02, -1.0012e-02],
          [-3.6557e-02,  5.7493e-02, -4.7845e-02],
          [-7.4949e-03,  6.9509e-02,  8.6587e-03]],

         [[ 3.4728e-03,  3.0751e-02, -3.1269e-02],
          [-7.0325e-03,  1.1278e-02,  2.5111e-02],
          [ 4.1684e-02,  8.7468e-02,  4.1365e-02]]],


        [[[ 3.3427e-03,  4.1833e-02, -7.0586e-02],
          [-7.1621e-02, -1.0760e-01,  7.3473e-02],
          [-1.2845e-02, -1.2380e-02,  4.1332e-02]],

         [[ 1.7775e-01,  3.1228e-02,  1.0095e-01],
          [-2.9109e-02, -1.1986e-02,  5.6600e-02],
          [ 1.4950e-01,  6.4321e-02,  3.6616e-03]],

         [[ 6.9819e-02, -3.9477e-02,  1.0539e-01],
          [ 5.4792e-02, -7.0762e-02, -1.4960e-02],
          [ 3.7265e-02, -4.8966e-02, -2.7858e-02]],

         ...,

         [[-1.0457e-01, -5.0716e-02, -3.4137e-02],
          [ 4.1033e-02,  6.3474e-02, -2.9493e-02],
          [-5.9062e-02, -1.2057e-02,  1.2547e-02]],

         [[ 1.1295e-01, -6.2572e-02, -2.3304e-02],
          [-4.1645e-02, -8.2786e-03,  6.2462e-02],
          [ 4.5489e-02, -3.0285e-02, -1.0456e-01]],

         [[-2.0470e-03,  7.4479e-02,  1.3771e-02],
          [-6.5468e-02,  1.3557e-02,  8.3801e-02],
          [ 2.5394e-02,  7.3390e-02,  2.8839e-02]]],


        [[[-2.2747e-02, -3.8575e-02, -2.2267e-03],
          [ 2.0064e-02, -7.7652e-04, -1.8426e-02],
          [ 3.2881e-02,  7.0634e-03, -9.3431e-02]],

         [[-1.3504e-02, -1.2749e-01,  1.4967e-02],
          [-6.1985e-02, -5.5985e-02,  3.0329e-02],
          [ 3.4378e-02,  5.1087e-02,  4.6343e-02]],

         [[-1.2999e-02,  8.1077e-02,  7.4300e-03],
          [-5.4584e-02, -3.2982e-02,  2.6658e-02],
          [ 5.9565e-02,  9.7526e-02,  3.0946e-02]],

         ...,

         [[-2.2848e-03, -4.1835e-02, -2.4686e-02],
          [-1.4235e-04, -2.8478e-02,  3.5677e-02],
          [ 1.0309e-01,  4.6948e-02, -4.2619e-02]],

         [[ 8.9782e-03,  4.7936e-03, -6.6021e-02],
          [ 5.1990e-02, -4.8593e-02, -2.6605e-02],
          [-6.9351e-02, -5.7939e-02, -9.9323e-02]],

         [[-2.3059e-02,  4.5281e-02,  3.4224e-02],
          [-8.0442e-03,  8.2277e-02,  4.5873e-02],
          [ 2.8603e-02, -1.2669e-01, -4.6457e-02]]],


        ...,


        [[[-5.6917e-02, -1.6685e-02, -1.6281e-02],
          [-1.4680e-02, -3.1429e-02, -2.9119e-02],
          [ 8.7919e-02, -6.0604e-02, -9.7642e-02]],

         [[-1.2767e-02,  2.7456e-02,  2.1064e-02],
          [-2.4505e-02,  7.9963e-02, -3.4476e-02],
          [ 7.6777e-02,  5.4404e-02, -9.3944e-02]],

         [[-7.0699e-02,  5.5225e-02,  4.6679e-02],
          [ 2.4542e-02, -1.3001e-03,  8.3373e-02],
          [ 1.8718e-02, -7.3985e-02, -8.3444e-04]],

         ...,

         [[-6.3810e-02, -6.3481e-02,  2.2312e-02],
          [-1.5008e-02,  7.9643e-03, -2.2535e-03],
          [ 1.5788e-02,  7.4838e-02, -2.8052e-04]],

         [[ 1.5366e-02, -6.5416e-02, -1.4257e-02],
          [ 5.7099e-02, -4.3876e-02, -1.7349e-02],
          [-8.1454e-03, -1.0660e-02,  3.6390e-02]],

         [[-8.3233e-02,  4.2521e-02,  7.5564e-03],
          [-8.2737e-03,  9.0783e-02,  9.3887e-02],
          [-6.8541e-02,  5.1736e-02,  9.3905e-03]]],


        [[[ 5.3915e-03, -9.0311e-03,  5.1983e-02],
          [ 4.3950e-03, -5.7929e-02,  7.3626e-02],
          [ 1.1121e-01,  3.2005e-02,  1.4844e-01]],

         [[-3.8414e-02,  7.3885e-02,  3.2226e-02],
          [ 5.8244e-02,  2.0846e-02,  3.4311e-02],
          [-2.6549e-02, -6.5321e-02, -1.2810e-02]],

         [[ 1.1751e-02, -2.1745e-02,  1.1207e-01],
          [-6.7602e-03,  6.5171e-02, -6.6680e-02],
          [-7.7913e-02,  3.6180e-02, -1.5028e-02]],

         ...,

         [[-5.6681e-02,  6.4358e-02,  2.7208e-02],
          [ 2.9831e-02, -7.1536e-02,  1.4043e-02],
          [-3.1107e-02,  7.5026e-03, -8.3417e-02]],

         [[-8.4167e-02,  1.0050e-01,  8.2239e-02],
          [ 2.9681e-02,  1.7623e-02, -2.7193e-02],
          [-1.8863e-02, -8.4861e-02,  5.6272e-02]],

         [[ 6.4981e-02,  2.7237e-03,  4.3885e-02],
          [-2.0948e-02,  6.0456e-02, -6.6491e-03],
          [ 4.4117e-02, -1.8758e-02,  5.3308e-03]]],


        [[[ 4.4358e-02,  3.8946e-02,  9.6630e-02],
          [-3.9730e-03, -7.4219e-02,  1.8632e-01],
          [ 9.5125e-02, -7.0138e-02,  5.5459e-02]],

         [[-5.0637e-03,  7.2597e-03,  4.4616e-02],
          [-9.8727e-02, -3.8112e-03,  1.1358e-01],
          [ 6.3283e-02, -2.4997e-02,  3.6119e-02]],

         [[-2.1575e-02, -3.1272e-02, -3.1640e-02],
          [ 1.7787e-02, -8.8562e-02, -6.5748e-02],
          [-7.9094e-03,  7.2891e-02, -1.0866e-01]],

         ...,

         [[ 3.2925e-02, -3.3605e-02,  1.2806e-02],
          [ 8.9276e-02,  5.2669e-02, -4.9738e-04],
          [ 5.1780e-02,  3.4159e-03, -3.7963e-02]],

         [[ 8.2257e-02, -1.4743e-02, -5.8093e-03],
          [ 3.4744e-03, -5.0117e-02, -6.1078e-02],
          [-1.5339e-02,  4.2654e-02, -3.6586e-02]],

         [[ 1.0122e-01,  9.8582e-02,  7.2430e-03],
          [-2.8010e-02, -5.0414e-02, -1.3789e-02],
          [-6.7410e-02, -2.6157e-02, -1.0938e-01]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 2.4182e-02,  2.8470e-02,  1.0550e-02],
          [ 3.3330e-02, -2.8492e-03,  4.6756e-02],
          [ 6.5733e-02,  2.9137e-02,  7.4529e-02]],

         [[ 1.4680e-01,  2.9355e-02,  9.0224e-02],
          [ 4.9911e-02, -1.1161e-01, -6.5941e-02],
          [ 9.0370e-02, -5.6792e-02, -9.3543e-02]],

         [[ 9.2867e-03, -1.2384e-02,  9.5531e-02],
          [ 5.1583e-02, -5.2004e-02, -1.9944e-02],
          [-1.9906e-02, -1.1417e-01, -3.9532e-03]],

         ...,

         [[ 3.1527e-02, -7.3613e-02, -7.0730e-02],
          [-3.6543e-02, -9.2918e-02, -9.0627e-02],
          [ 8.4540e-02, -5.8671e-02,  1.4933e-02]],

         [[ 5.1762e-02, -8.1477e-02,  1.0210e-01],
          [ 6.8127e-02, -2.0019e-02, -4.0422e-02],
          [-1.4530e-01, -6.2856e-02, -1.5992e-02]],

         [[-1.1432e-02,  4.3673e-02,  1.1356e-02],
          [-9.3563e-02, -9.1363e-02,  9.8244e-03],
          [-1.9580e-02, -9.2903e-03, -6.2937e-02]]],


        [[[ 1.0870e-01, -8.8928e-02,  3.2872e-02],
          [-3.2975e-02, -8.4959e-02,  1.0921e-01],
          [ 7.1466e-02, -2.3939e-02, -4.8807e-02]],

         [[-3.1614e-02, -3.5468e-02, -5.5591e-02],
          [ 7.3782e-03,  1.3244e-01,  5.7082e-03],
          [ 4.9176e-03, -1.3182e-02, -3.8617e-02]],

         [[-3.2371e-02,  4.2234e-02,  6.0290e-02],
          [-1.0713e-01,  1.0183e-02, -2.8131e-02],
          [ 8.0715e-03, -5.1684e-02,  7.3322e-02]],

         ...,

         [[-1.0019e-01, -6.1938e-02, -8.0154e-02],
          [-5.0303e-02,  2.7817e-02,  8.4316e-02],
          [-9.3004e-02,  8.1096e-02,  5.8239e-02]],

         [[ 1.3817e-02, -2.5213e-02,  1.0005e-01],
          [ 7.0155e-03, -9.8737e-02, -2.6142e-02],
          [ 1.0547e-01, -5.5303e-02,  4.3775e-02]],

         [[ 8.5989e-03, -8.2696e-02,  1.4227e-02],
          [ 1.2368e-02,  8.3633e-02, -3.6496e-02],
          [ 3.7624e-02,  3.6710e-02, -8.6392e-02]]],


        [[[-2.6549e-02,  9.6167e-02, -9.2409e-02],
          [-2.1511e-02, -4.4345e-02,  5.4938e-02],
          [-4.2790e-02, -7.1239e-02,  4.6786e-02]],

         [[-3.2950e-02,  9.6036e-02,  1.3202e-01],
          [-9.0847e-02, -3.7115e-02, -5.8286e-02],
          [ 4.6013e-02, -5.3957e-02,  6.7468e-02]],

         [[-1.3020e-02, -2.6766e-02, -8.4277e-02],
          [ 1.1510e-02, -1.3471e-02,  3.9216e-02],
          [ 2.5388e-02,  2.4598e-02,  4.4363e-02]],

         ...,

         [[-1.7944e-02,  9.1127e-03,  1.4554e-01],
          [ 7.7591e-02, -5.1698e-02,  1.1865e-01],
          [ 1.6949e-01, -1.7228e-02, -1.4562e-02]],

         [[-8.9698e-02,  1.1988e-02, -1.1792e-02],
          [ 7.5387e-02,  4.5503e-02, -1.3116e-03],
          [ 6.5994e-02, -1.2299e-01,  2.5099e-02]],

         [[-1.2226e-01, -6.7585e-03,  1.2574e-01],
          [-2.9858e-02,  6.1190e-02,  9.3089e-03],
          [ 5.4634e-02, -9.6439e-03,  3.8010e-02]]],


        ...,


        [[[-4.3180e-02, -1.4757e-05,  2.8390e-02],
          [-6.1477e-02, -5.7255e-02,  9.1368e-02],
          [-7.4649e-02,  1.2073e-01, -4.5235e-02]],

         [[-5.8727e-02, -5.2970e-02, -3.0410e-02],
          [-5.0152e-02,  3.9294e-02, -8.7446e-02],
          [-1.3336e-01, -1.8229e-01, -1.3227e-04]],

         [[-4.2746e-02, -5.1452e-02, -9.4355e-02],
          [ 6.2366e-02,  4.3929e-02,  1.2708e-02],
          [ 3.9026e-02,  2.8476e-02, -1.8611e-02]],

         ...,

         [[ 3.5334e-02,  1.0503e-01, -4.5815e-02],
          [ 4.4929e-02,  1.0611e-02, -7.3739e-02],
          [-2.8797e-02,  3.9574e-02, -5.6910e-02]],

         [[ 7.5383e-03,  7.8970e-02, -1.2618e-02],
          [ 4.4957e-02,  9.2150e-02, -8.7778e-02],
          [ 5.9487e-02, -1.4490e-02,  3.4742e-02]],

         [[ 8.7355e-02, -2.0684e-02, -2.5920e-02],
          [-8.9849e-02, -5.6966e-02, -9.8277e-02],
          [-7.9810e-02, -9.5182e-02, -3.6606e-02]]],


        [[[-7.9094e-03, -1.0510e-01,  5.8491e-02],
          [-1.7553e-02,  4.8369e-03,  1.6455e-01],
          [-4.0808e-02,  2.8718e-02,  2.0668e-02]],

         [[ 4.6764e-02, -5.3287e-02, -1.9231e-02],
          [ 4.1405e-02,  2.6387e-02,  5.8587e-02],
          [-1.3309e-01,  3.8248e-02,  1.4154e-02]],

         [[ 1.6297e-02, -5.3461e-02,  8.5080e-02],
          [ 2.2275e-02,  4.4356e-02, -1.2676e-02],
          [-3.7245e-03, -5.6003e-02, -4.1370e-02]],

         ...,

         [[ 5.2468e-02,  4.7045e-02,  6.0147e-02],
          [-5.6553e-03, -5.3058e-02, -1.1912e-01],
          [-6.9508e-02,  4.4632e-02, -2.9520e-03]],

         [[-2.7536e-02,  5.7802e-03, -4.6171e-02],
          [ 3.9829e-02, -6.1081e-02,  6.0217e-03],
          [ 8.3578e-02,  1.3491e-01,  3.4408e-02]],

         [[ 7.2160e-02, -4.0100e-02, -3.0671e-02],
          [-4.5489e-03,  8.4506e-02,  7.4904e-03],
          [ 8.5293e-02, -6.7389e-03,  6.2759e-02]]],


        [[[ 2.7471e-02, -1.3398e-03,  1.8819e-02],
          [-4.1558e-02,  5.9057e-02, -8.3896e-02],
          [-5.4111e-02, -3.1084e-02,  2.4155e-02]],

         [[-9.7759e-02, -4.5606e-02, -2.1487e-02],
          [-2.0785e-02, -7.6419e-02, -6.7509e-02],
          [ 7.6947e-02, -7.0680e-02,  7.3718e-03]],

         [[-1.8335e-02, -8.8821e-02,  4.3569e-02],
          [-8.2842e-02,  6.7970e-02, -3.1447e-02],
          [ 7.8872e-03, -2.8985e-02,  1.8127e-02]],

         ...,

         [[ 6.1882e-02, -6.8695e-02, -4.9104e-02],
          [-6.3079e-02, -4.5942e-02,  8.7760e-03],
          [-7.1152e-02, -2.3453e-02, -6.4660e-03]],

         [[-4.9433e-03,  4.6593e-03,  4.8520e-02],
          [-2.8231e-02, -7.7711e-02, -5.3479e-02],
          [-1.5846e-02, -1.3280e-01, -4.8492e-02]],

         [[ 2.4930e-02,  3.3968e-02, -5.5559e-02],
          [-4.1335e-02,  6.6525e-02,  2.7697e-02],
          [ 4.1022e-02, -5.2595e-02,  1.0957e-01]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-2.4926e-02, -1.8594e-02, -1.6212e-02],
          [-2.0891e-02,  1.7482e-02,  1.3253e-02],
          [ 5.5526e-02,  4.0042e-02, -4.3102e-02]],

         [[ 2.3249e-02, -1.4136e-02, -1.3309e-03],
          [-8.1861e-03, -4.6758e-02, -1.0070e-02],
          [-6.0457e-03, -3.5187e-02, -3.0252e-02]],

         [[-4.5692e-02,  3.8337e-02, -7.0435e-02],
          [-3.3025e-02,  4.2778e-02,  7.4164e-02],
          [-4.1830e-02, -9.3426e-02, -1.1362e-02]],

         ...,

         [[ 3.5626e-02, -8.9760e-03,  3.2525e-02],
          [ 1.8877e-02, -1.6200e-02,  9.2807e-02],
          [-2.0028e-02,  1.1682e-01,  3.6101e-02]],

         [[-7.3633e-02, -1.0526e-01, -4.4483e-02],
          [-3.4027e-02, -2.1956e-02,  6.7205e-02],
          [-8.4432e-02,  7.3568e-02, -1.2714e-01]],

         [[-8.2124e-02,  3.7796e-02,  4.4081e-02],
          [ 1.6497e-02,  1.2562e-02,  9.6275e-05],
          [ 5.0422e-02, -3.2768e-02, -3.9846e-02]]],


        [[[-7.9235e-02, -4.7967e-02,  2.4955e-02],
          [-1.0186e-01,  1.1251e-02, -1.7293e-02],
          [ 5.1868e-02, -5.1231e-03, -2.1164e-02]],

         [[-3.3211e-02, -9.4455e-02,  4.3336e-02],
          [ 9.9479e-02,  2.2593e-02,  4.8630e-02],
          [-8.6717e-02, -5.6098e-02, -4.1425e-03]],

         [[ 7.9385e-02, -9.4441e-02, -5.0530e-03],
          [-7.7955e-02, -1.0893e-01,  9.3438e-03],
          [ 7.5947e-02,  6.3242e-02, -4.4714e-02]],

         ...,

         [[-2.1657e-03, -2.8966e-03, -3.6239e-02],
          [ 9.9309e-03,  5.4793e-02,  2.4135e-02],
          [ 6.0642e-02, -5.5113e-02,  3.2173e-02]],

         [[ 4.8848e-02, -1.0213e-01, -1.6324e-02],
          [-3.0253e-02, -5.3705e-02, -6.8018e-02],
          [-1.3967e-02,  1.5524e-02, -7.0112e-02]],

         [[-1.1947e-02,  6.2295e-02, -2.2233e-02],
          [-3.7808e-02, -1.2011e-02,  4.1401e-02],
          [ 1.8153e-02,  4.6719e-02, -5.6375e-02]]],


        [[[-9.3410e-02, -2.2683e-02, -5.2881e-02],
          [-3.7943e-02,  7.9069e-02, -2.0012e-02],
          [-7.3748e-02, -3.6025e-03,  5.8978e-02]],

         [[-2.0398e-02,  7.0769e-03, -1.1101e-01],
          [-1.9895e-02,  7.0240e-02,  4.4619e-02],
          [-1.9489e-03, -1.5039e-02, -1.4118e-02]],

         [[-1.6335e-01,  4.7782e-03,  5.0812e-02],
          [-1.6959e-02, -1.1463e-02, -1.5572e-02],
          [ 1.3829e-01,  1.1660e-01,  5.9153e-02]],

         ...,

         [[-5.2636e-02, -4.6537e-02, -6.9720e-02],
          [-1.7201e-02, -3.0739e-03, -1.6890e-02],
          [-1.2373e-01,  4.6863e-03,  2.4448e-02]],

         [[ 7.6476e-02, -2.7847e-02,  5.7948e-02],
          [ 2.9543e-02, -1.8741e-02, -9.6447e-02],
          [-4.2920e-02,  1.6783e-02,  8.3445e-02]],

         [[ 7.2925e-03, -6.0184e-02,  1.6683e-02],
          [ 9.0889e-02,  2.1026e-02,  5.4097e-02],
          [ 4.7215e-02,  8.3079e-02,  2.1588e-02]]],


        ...,


        [[[ 1.7209e-02, -7.8918e-03, -1.1335e-02],
          [-9.9611e-02, -3.9474e-03, -3.1479e-02],
          [-4.1055e-02,  3.1734e-02,  1.1483e-01]],

         [[ 4.0661e-02, -6.2716e-03, -8.0454e-03],
          [ 7.4420e-03,  4.7648e-02, -2.6374e-02],
          [-3.0498e-02, -8.2983e-02, -4.2607e-02]],

         [[ 4.5641e-02, -6.4812e-02,  1.5141e-02],
          [-7.1103e-02,  3.3537e-04, -8.6851e-02],
          [-3.9779e-03, -2.9310e-02,  4.2891e-02]],

         ...,

         [[ 4.4869e-02,  6.8233e-02,  1.0071e-02],
          [ 2.2703e-02, -8.1220e-02,  3.0710e-02],
          [-1.6519e-03,  6.6974e-03,  1.9326e-02]],

         [[-4.0922e-03,  2.3073e-02,  4.3627e-02],
          [ 7.2708e-02, -9.2690e-02,  2.6402e-02],
          [ 9.6356e-02, -6.9362e-02,  3.3501e-03]],

         [[-6.4752e-02, -5.3968e-02,  1.0071e-01],
          [ 2.2323e-02, -3.6657e-02, -1.5739e-02],
          [ 9.3640e-03, -6.8761e-02,  2.1887e-02]]],


        [[[-3.1544e-02, -3.3564e-02, -7.4108e-02],
          [-1.0499e-02,  4.9974e-02, -2.4073e-02],
          [-3.6307e-02,  8.6916e-02, -6.1910e-02]],

         [[-4.8747e-02, -3.7580e-02, -1.7648e-01],
          [-2.6671e-02, -8.3607e-03, -6.3540e-02],
          [ 4.0539e-02,  5.3625e-02,  1.0255e-02]],

         [[-4.7583e-02, -1.0921e-01, -2.0379e-02],
          [ 1.0607e-01, -1.0980e-01,  1.0931e-01],
          [-2.6846e-02,  2.3263e-02,  3.5298e-02]],

         ...,

         [[ 9.2062e-02,  4.8599e-02,  1.0707e-01],
          [ 5.9287e-02, -4.8625e-02,  3.1236e-03],
          [ 9.7077e-03, -2.6244e-02, -1.4612e-04]],

         [[ 7.0045e-02, -1.1330e-01, -4.4565e-02],
          [ 6.7437e-02, -5.1687e-03, -1.5820e-01],
          [-1.3825e-02,  6.2954e-02,  8.0441e-02]],

         [[-5.4419e-02,  5.7250e-02, -2.5784e-02],
          [ 4.0554e-03,  8.8949e-03,  8.0246e-03],
          [-1.8200e-02, -5.2877e-02, -7.7133e-02]]],


        [[[ 2.0968e-02,  3.5489e-02,  3.3964e-02],
          [ 1.4795e-03,  1.0365e-01, -5.7834e-02],
          [ 7.8343e-02, -4.4699e-02, -2.1414e-02]],

         [[-7.9563e-03,  8.9583e-02,  2.6877e-02],
          [ 4.7688e-02, -3.4768e-02, -2.8886e-02],
          [-1.7547e-02, -1.6497e-02, -6.2520e-03]],

         [[ 5.6393e-02,  4.7449e-02,  7.5421e-02],
          [ 1.2202e-02, -6.9067e-02,  5.4715e-02],
          [ 9.1819e-03, -2.9188e-02, -4.4451e-02]],

         ...,

         [[ 1.5505e-02,  6.2452e-02, -1.4299e-02],
          [-4.6744e-02, -8.2361e-02, -3.4626e-02],
          [ 4.3032e-02,  3.7510e-03,  2.9086e-02]],

         [[-3.5688e-02, -1.0272e-02, -1.8650e-02],
          [ 4.6978e-02, -4.1607e-02, -6.8830e-02],
          [ 8.4639e-02,  1.3798e-02, -2.6024e-02]],

         [[ 1.2806e-01, -2.5969e-02, -9.5789e-03],
          [ 3.3975e-03,  1.0519e-02,  1.1842e-02],
          [ 4.5484e-02,  1.6804e-02,  3.9798e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 4.6775e-02, -2.7793e-02, -1.2852e-02],
          [-1.2326e-02,  4.3047e-02, -1.6229e-01],
          [-2.9556e-02, -1.7663e-02,  4.6843e-03]],

         [[ 1.8923e-02,  6.6695e-02, -1.0303e-01],
          [ 3.2276e-02,  1.8693e-03,  1.4185e-03],
          [ 2.9733e-02,  8.2223e-02, -6.6672e-02]],

         [[-2.4494e-02,  8.8612e-02,  1.6842e-02],
          [ 5.2538e-02, -2.6293e-02, -2.5171e-02],
          [-6.8924e-02,  1.0670e-01,  9.9746e-03]],

         ...,

         [[-8.6224e-02, -6.5146e-02, -9.2453e-02],
          [-9.4014e-02,  4.8683e-02,  3.6039e-02],
          [ 8.4201e-02, -2.8725e-02, -6.1182e-02]],

         [[ 6.1570e-03, -2.2432e-02, -6.4595e-02],
          [-3.8238e-02,  6.0039e-02,  9.2783e-02],
          [-7.7693e-02, -4.0639e-02,  6.6333e-02]],

         [[-7.5789e-03,  5.4846e-02,  3.9796e-02],
          [ 7.6224e-03, -2.4095e-02, -7.7473e-02],
          [-5.6886e-03,  3.5136e-02, -9.6406e-02]]],


        [[[ 3.0438e-02,  6.2574e-03, -8.8671e-02],
          [ 8.9797e-02,  4.7297e-02, -1.1715e-02],
          [-5.8147e-02, -5.0005e-02,  5.4647e-02]],

         [[ 5.1647e-03, -1.6427e-02, -2.4739e-02],
          [ 5.1854e-02,  4.4251e-02, -2.7425e-03],
          [-4.0716e-02,  1.9102e-03, -1.3381e-02]],

         [[ 3.7451e-02, -1.0595e-02,  7.9820e-03],
          [ 8.5151e-02,  1.1771e-02,  2.4457e-02],
          [ 7.0616e-03,  2.6985e-02,  8.6208e-02]],

         ...,

         [[-2.9443e-02, -1.7041e-02, -2.5823e-02],
          [ 1.0567e-02, -6.6886e-02, -2.2126e-02],
          [ 2.7295e-02,  5.0935e-02, -2.4548e-02]],

         [[-7.8434e-02, -1.6592e-02, -5.5338e-02],
          [-6.1458e-02,  3.7749e-02, -3.9198e-02],
          [ 3.4313e-02,  2.5944e-02,  2.1896e-03]],

         [[ 7.5914e-02, -1.1379e-02, -6.8111e-02],
          [-9.0000e-03,  7.0221e-02, -3.8007e-02],
          [ 1.0162e-01,  5.4196e-03, -3.2134e-02]]],


        [[[ 8.8393e-02,  1.6833e-04,  2.2436e-02],
          [-4.6048e-02,  9.6786e-02, -7.2315e-02],
          [ 1.4497e-02,  6.3263e-02, -2.6839e-03]],

         [[ 3.7274e-02,  5.6283e-02, -3.8487e-02],
          [-3.1509e-02,  3.1410e-02,  5.6357e-02],
          [-2.7144e-02,  9.3759e-02, -1.0219e-02]],

         [[ 6.7715e-02, -7.7549e-02, -1.2905e-01],
          [ 7.6667e-02,  4.5627e-02, -6.7131e-02],
          [-1.3449e-02,  1.3066e-02,  2.4815e-02]],

         ...,

         [[-5.9375e-02,  5.9315e-02,  1.0039e-01],
          [ 2.2520e-02,  7.3166e-02, -1.8338e-01],
          [-7.3360e-02, -3.6555e-02, -7.7153e-02]],

         [[-1.9234e-02, -3.2334e-02,  3.1315e-02],
          [ 8.8360e-02, -3.6924e-02, -1.0444e-02],
          [-1.6796e-01,  5.2916e-02, -1.8864e-02]],

         [[-4.9608e-02, -9.4170e-03,  8.6014e-02],
          [ 2.3159e-02,  4.1719e-02, -4.7693e-02],
          [ 5.1547e-02, -3.8381e-02,  9.9877e-03]]],


        ...,


        [[[ 6.9755e-03, -1.6067e-02, -1.3309e-02],
          [ 2.2991e-02, -2.1192e-02, -7.2704e-02],
          [-7.7257e-02, -2.2485e-02,  8.7523e-03]],

         [[ 8.8017e-02,  3.4858e-02, -8.2565e-02],
          [ 3.9600e-02,  7.4385e-02,  7.7820e-02],
          [-5.9682e-03,  3.8920e-02,  2.9001e-02]],

         [[ 4.0227e-03, -4.5540e-03, -8.0426e-02],
          [ 2.2422e-02,  2.7343e-02,  3.3477e-02],
          [ 5.8411e-02, -1.0072e-01,  4.7030e-02]],

         ...,

         [[ 5.1208e-02, -4.1199e-03, -4.0730e-02],
          [-5.3960e-03,  2.8874e-02, -8.8625e-02],
          [-4.6486e-03,  5.9652e-02, -2.4210e-02]],

         [[ 5.1866e-03,  6.1135e-02,  9.2071e-02],
          [ 1.0113e-01,  1.0555e-01,  3.2770e-02],
          [ 2.1558e-02, -3.8773e-02,  1.5759e-01]],

         [[ 3.7169e-02,  1.4154e-01, -3.3273e-02],
          [-3.0947e-02,  2.5038e-02, -1.5756e-02],
          [-8.2801e-02,  2.3989e-03, -4.5816e-02]]],


        [[[ 3.9629e-02,  1.7357e-03,  1.4087e-02],
          [-4.3922e-02,  2.6505e-02,  7.2325e-02],
          [-2.4646e-02, -1.3880e-02, -1.9817e-01]],

         [[-8.2619e-02, -8.5328e-02, -1.7229e-02],
          [-9.5875e-02, -1.5931e-01, -1.5109e-01],
          [ 4.5528e-02,  6.7301e-02,  2.3354e-02]],

         [[-5.7605e-02, -4.0925e-02,  2.9037e-02],
          [ 2.3586e-02, -4.5768e-02, -7.7578e-02],
          [-2.7008e-02, -6.4047e-02, -5.0558e-02]],

         ...,

         [[-1.2467e-02, -2.3296e-02, -1.6708e-01],
          [ 2.9640e-02,  9.9496e-02,  3.4208e-02],
          [ 5.2300e-02, -2.2456e-02, -1.6820e-02]],

         [[ 2.7270e-02, -7.6210e-02, -4.3245e-02],
          [ 4.7002e-02,  5.0392e-02,  2.6953e-02],
          [-1.5436e-01, -1.1246e-01, -9.7113e-02]],

         [[ 3.1443e-02,  2.1877e-02, -8.9317e-02],
          [ 7.0231e-02, -1.8712e-02, -1.0325e-01],
          [-6.3128e-02,  4.7328e-02,  3.4764e-02]]],


        [[[-2.0646e-02, -1.3320e-03,  5.6132e-03],
          [ 8.8335e-03,  2.6878e-02, -1.2988e-01],
          [ 1.0331e-01, -1.1391e-01,  2.2670e-02]],

         [[-4.4194e-02,  4.2387e-02,  4.9052e-02],
          [ 1.1507e-01, -1.5730e-02, -2.4864e-02],
          [ 8.5591e-02,  6.4496e-03,  1.5902e-02]],

         [[-5.4661e-02,  5.2365e-02,  3.9562e-02],
          [-1.6327e-02,  6.0401e-02,  5.9414e-02],
          [ 4.6387e-02, -8.4872e-02, -2.1214e-02]],

         ...,

         [[-5.0978e-02,  4.2776e-02,  3.6607e-02],
          [ 4.0139e-03,  7.4468e-03,  5.2955e-02],
          [ 1.0816e-01, -4.9577e-02,  1.1272e-02]],

         [[-2.1580e-02,  9.8165e-03, -9.6843e-02],
          [-4.7075e-02, -6.7877e-02, -2.9367e-02],
          [-6.9393e-02, -8.0036e-03,  1.5221e-02]],

         [[-2.7639e-02,  6.9333e-03, -2.1567e-02],
          [ 6.6559e-02,  5.1382e-03, -1.4413e-02],
          [ 8.0059e-02, -9.4452e-02,  5.4241e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[-0.0007]],

         [[-0.1481]],

         [[ 0.1038]],

         ...,

         [[-0.0944]],

         [[ 0.0574]],

         [[-0.0020]]],


        [[[-0.0041]],

         [[-0.0209]],

         [[ 0.0297]],

         ...,

         [[-0.2345]],

         [[ 0.0025]],

         [[-0.0301]]],


        [[[ 0.0059]],

         [[-0.0769]],

         [[-0.1246]],

         ...,

         [[-0.0602]],

         [[-0.0460]],

         [[-0.0866]]],


        ...,


        [[[ 0.0150]],

         [[-0.0058]],

         [[ 0.0855]],

         ...,

         [[ 0.0606]],

         [[-0.0545]],

         [[ 0.0631]]],


        [[[ 0.0757]],

         [[ 0.0931]],

         [[ 0.0229]],

         ...,

         [[ 0.1334]],

         [[-0.0973]],

         [[-0.0851]]],


        [[[-0.1144]],

         [[ 0.0007]],

         [[ 0.1445]],

         ...,

         [[ 0.0534]],

         [[-0.0564]],

         [[-0.0256]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-0.0202,  0.0368,  0.0582],
          [-0.0030, -0.0300,  0.1100],
          [ 0.0296,  0.0195, -0.0441]],

         [[ 0.0276,  0.0439,  0.0799],
          [-0.0918, -0.0525, -0.0208],
          [-0.0503,  0.0293,  0.0970]],

         [[ 0.0040,  0.0726,  0.0577],
          [-0.0832,  0.0837,  0.0138],
          [ 0.0578,  0.0050, -0.0245]],

         ...,

         [[-0.0003,  0.0516, -0.0527],
          [-0.0664, -0.0101,  0.0603],
          [ 0.0844,  0.0378, -0.0730]],

         [[ 0.0748, -0.0420,  0.0640],
          [ 0.0039, -0.0367,  0.0082],
          [ 0.0213,  0.0494,  0.0747]],

         [[-0.0554, -0.0110, -0.0710],
          [-0.0925, -0.0442, -0.0186],
          [-0.0277, -0.0054, -0.0858]]],


        [[[ 0.0940,  0.0473, -0.0851],
          [ 0.0879, -0.0112,  0.0062],
          [-0.0243,  0.0311,  0.0261]],

         [[ 0.0163, -0.0222,  0.0256],
          [ 0.0120,  0.0639, -0.0355],
          [-0.0537, -0.0042, -0.0085]],

         [[ 0.1419,  0.0130,  0.1189],
          [ 0.0222, -0.1119,  0.0274],
          [-0.0319, -0.0213,  0.0462]],

         ...,

         [[-0.0043,  0.0026, -0.1164],
          [-0.0550,  0.0348,  0.0353],
          [ 0.0462,  0.0363, -0.0853]],

         [[-0.0424, -0.0900, -0.0819],
          [-0.0737, -0.0420, -0.0031],
          [ 0.0293, -0.0356, -0.0076]],

         [[ 0.0133,  0.0396, -0.0116],
          [-0.0523,  0.0673,  0.0315],
          [ 0.0069,  0.0966, -0.0201]]],


        [[[ 0.0398,  0.0053,  0.0290],
          [-0.0117, -0.0443,  0.0571],
          [ 0.0040,  0.0610, -0.0241]],

         [[ 0.0267,  0.0039, -0.0817],
          [ 0.0478,  0.0263,  0.0279],
          [ 0.0425,  0.0340, -0.0124]],

         [[ 0.0085,  0.0387,  0.0771],
          [-0.0329, -0.0873, -0.0485],
          [ 0.0295, -0.0787,  0.0938]],

         ...,

         [[-0.0419,  0.0359,  0.0507],
          [-0.0148, -0.0471, -0.0463],
          [-0.0230,  0.0702,  0.0042]],

         [[-0.0794,  0.0105, -0.0257],
          [-0.0076, -0.0763, -0.1206],
          [ 0.0055,  0.0080, -0.0448]],

         [[ 0.0077, -0.0566, -0.0362],
          [ 0.0150,  0.0758, -0.0645],
          [-0.0587,  0.0092, -0.0128]]],


        ...,


        [[[-0.0352,  0.0495, -0.0171],
          [ 0.0415, -0.0652,  0.0182],
          [ 0.0227,  0.0944, -0.0510]],

         [[ 0.0195, -0.0051, -0.0647],
          [-0.0069, -0.0051,  0.0583],
          [ 0.0182, -0.0007,  0.0087]],

         [[ 0.0407, -0.1110,  0.0598],
          [ 0.0449,  0.0032,  0.0725],
          [ 0.0008, -0.0623,  0.0586]],

         ...,

         [[-0.0197,  0.0244, -0.0185],
          [-0.0117,  0.0789, -0.0209],
          [ 0.0056,  0.0801, -0.1230]],

         [[ 0.0463,  0.0139, -0.0277],
          [ 0.0435,  0.0384,  0.0493],
          [ 0.0085, -0.0003, -0.0017]],

         [[-0.0060,  0.0345,  0.0456],
          [-0.0016,  0.0355,  0.0014],
          [-0.0670, -0.0317, -0.0354]]],


        [[[-0.0820, -0.0425,  0.1107],
          [ 0.0032, -0.0514,  0.0893],
          [ 0.0606,  0.0506,  0.0064]],

         [[-0.0367, -0.0094,  0.0279],
          [-0.0318, -0.0569,  0.0338],
          [ 0.0173,  0.0114,  0.0578]],

         [[ 0.0087, -0.0336, -0.0530],
          [ 0.0169, -0.0481, -0.0179],
          [ 0.0088,  0.0429,  0.0121]],

         ...,

         [[-0.0011, -0.0138,  0.0441],
          [-0.0497, -0.0300, -0.0066],
          [-0.0076, -0.0118,  0.0114]],

         [[-0.0869, -0.0410, -0.0601],
          [ 0.0558, -0.0077, -0.0002],
          [ 0.0201, -0.0429, -0.0015]],

         [[ 0.0210,  0.0881, -0.0144],
          [-0.0116,  0.0220,  0.0338],
          [ 0.0202, -0.1352,  0.0168]]],


        [[[-0.0104, -0.0552,  0.0414],
          [-0.0619,  0.0315, -0.0054],
          [-0.0434, -0.0101,  0.0022]],

         [[-0.0443, -0.0048, -0.0585],
          [-0.0233, -0.0581,  0.0710],
          [-0.0512,  0.0902, -0.0502]],

         [[-0.0377,  0.0285, -0.0932],
          [ 0.0122,  0.0184,  0.0699],
          [ 0.0174, -0.0262, -0.0318]],

         ...,

         [[ 0.0279,  0.0215,  0.0415],
          [-0.0257,  0.0756,  0.0027],
          [-0.0254, -0.0840, -0.0041]],

         [[-0.0077,  0.0041,  0.0132],
          [-0.0344, -0.0279,  0.0092],
          [-0.0231, -0.0055, -0.0180]],

         [[-0.0239,  0.0241, -0.0469],
          [ 0.0161,  0.0135, -0.0559],
          [ 0.0678, -0.0248,  0.1098]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-2.4678e-02, -5.0097e-02, -1.1447e-02],
          [-6.2155e-02,  4.6663e-02,  3.9978e-02],
          [ 2.6029e-02,  4.4475e-03, -3.4253e-02]],

         [[ 1.5839e-02,  6.3106e-02, -3.0413e-02],
          [-3.2859e-02, -6.4488e-03,  4.8770e-02],
          [-6.2953e-03, -3.2516e-02, -5.5580e-02]],

         [[ 1.1610e-02,  1.1662e-01,  8.4386e-03],
          [-3.1815e-02, -1.5310e-03, -1.3751e-02],
          [ 7.3929e-02, -1.1515e-02, -2.7067e-02]],

         ...,

         [[-2.1819e-02,  8.7471e-02,  1.2119e-02],
          [ 5.5351e-02,  7.8115e-02, -1.5096e-03],
          [ 7.9502e-02,  2.4640e-02,  6.2449e-02]],

         [[ 3.9532e-02,  1.8029e-02, -1.0435e-01],
          [-7.5856e-03, -5.7609e-02, -1.0409e-02],
          [-2.2511e-02, -5.3268e-02, -6.9056e-02]],

         [[ 4.1861e-02, -4.6242e-02, -9.8541e-03],
          [-2.5703e-05, -4.3996e-02, -4.5811e-02],
          [-3.0739e-02,  2.1513e-02,  2.7433e-02]]],


        [[[-6.7707e-02, -7.5435e-02,  1.1803e-02],
          [ 1.5317e-03,  4.5525e-02,  2.2515e-02],
          [ 4.1542e-02, -5.0961e-02, -8.1439e-02]],

         [[ 4.5263e-02, -2.4599e-02,  1.8573e-02],
          [ 1.9441e-02, -2.2015e-02,  1.5730e-02],
          [ 4.1952e-02, -1.5041e-02,  6.5292e-02]],

         [[ 4.4677e-02,  4.7750e-02, -1.1211e-01],
          [ 4.9481e-02, -3.5307e-02,  5.4377e-02],
          [-6.2875e-02, -2.8791e-02,  3.3179e-02]],

         ...,

         [[-1.7075e-02, -3.3642e-02, -3.4027e-02],
          [ 9.8623e-02, -1.2206e-02, -2.9546e-02],
          [ 1.8157e-02, -5.6722e-03, -4.6185e-02]],

         [[ 7.9403e-03,  5.1549e-03, -5.0089e-02],
          [-8.3474e-02,  5.7937e-02,  1.8031e-02],
          [ 4.3836e-02,  1.7602e-02, -5.4739e-02]],

         [[ 2.7739e-02,  5.1243e-02, -3.2022e-02],
          [-8.9806e-03, -1.1294e-01,  3.3560e-02],
          [-8.2494e-02,  8.0980e-02, -1.4922e-02]]],


        [[[-5.9502e-02, -6.5688e-02,  1.7001e-02],
          [-6.5898e-03, -1.1794e-02,  8.7871e-03],
          [-4.3083e-02, -6.6415e-03, -5.7827e-03]],

         [[-7.7559e-02,  8.5706e-02, -4.0208e-02],
          [-5.7197e-02,  9.1760e-02, -4.4101e-02],
          [-5.7035e-02, -9.7028e-02, -6.4097e-02]],

         [[ 2.2193e-02,  1.7880e-03, -3.6097e-02],
          [ 6.5340e-02,  3.4636e-02,  3.7279e-02],
          [-1.1978e-01,  7.7441e-02, -2.6662e-02]],

         ...,

         [[-2.0181e-02, -8.6982e-03, -2.5507e-02],
          [-1.0570e-02,  9.4960e-02, -6.7991e-02],
          [-5.4238e-02,  1.3371e-02,  4.1191e-02]],

         [[-5.5068e-03, -1.0835e-02, -1.8408e-02],
          [ 5.2072e-02,  1.5663e-03, -6.3487e-02],
          [ 1.5887e-02, -4.2076e-02, -3.0115e-02]],

         [[-1.5827e-02,  1.1941e-02, -5.4215e-02],
          [-1.8609e-02,  1.1298e-01, -2.1188e-03],
          [-1.7316e-02,  4.0345e-03,  3.1080e-02]]],


        ...,


        [[[-2.0697e-02, -1.0800e-02, -4.4223e-02],
          [ 1.8210e-02,  8.3477e-02, -3.6920e-02],
          [-2.7903e-02,  2.4865e-02,  4.5160e-02]],

         [[-2.2406e-02,  3.7098e-02, -7.1439e-02],
          [-9.9106e-02, -4.1855e-02,  2.2717e-03],
          [ 5.9764e-02,  4.8832e-02, -4.8062e-02]],

         [[-3.4612e-02,  6.7160e-02, -1.5707e-02],
          [-1.5298e-02, -4.5074e-02,  1.0629e-01],
          [-3.9781e-03, -5.7719e-03,  2.6632e-02]],

         ...,

         [[-3.5320e-02, -2.2594e-02, -1.4271e-02],
          [ 2.3991e-02,  4.0143e-02,  7.2015e-02],
          [-6.2770e-02, -3.8851e-02,  5.3707e-02]],

         [[-6.5540e-02,  1.7401e-02,  5.2539e-02],
          [ 6.7441e-03,  1.1264e-02,  7.7581e-02],
          [-3.0683e-03,  1.5153e-02,  5.2006e-02]],

         [[ 4.4509e-02,  6.7276e-02,  2.0791e-03],
          [ 4.8429e-02,  2.0210e-02, -1.3891e-03],
          [ 2.8764e-02, -3.4985e-02, -1.9213e-02]]],


        [[[-1.2877e-02,  1.0047e-02, -2.5246e-03],
          [ 2.3504e-02, -7.9592e-02,  1.0210e-01],
          [ 2.9992e-02,  2.3566e-02, -1.6898e-02]],

         [[-1.8930e-02, -2.3477e-02,  4.0716e-02],
          [-4.5705e-03, -1.1995e-01, -7.9033e-04],
          [-4.1215e-02, -1.1788e-01,  2.4782e-02]],

         [[ 7.9103e-02,  8.6335e-02, -6.7314e-02],
          [-2.9340e-02,  2.4039e-02,  5.3230e-02],
          [ 4.9155e-02,  3.0406e-02,  3.1278e-02]],

         ...,

         [[ 1.5575e-02, -2.6950e-02,  2.9222e-02],
          [-1.9425e-02, -5.1593e-02, -6.6345e-02],
          [-1.6158e-02,  3.2025e-02,  3.2852e-03]],

         [[ 1.8359e-02,  1.4320e-02, -1.9121e-02],
          [-3.3837e-02,  1.1313e-02, -2.4142e-02],
          [-6.2200e-02, -4.5361e-02, -4.1864e-02]],

         [[ 1.4983e-02,  2.2567e-02,  1.1696e-02],
          [ 6.5338e-02, -1.4047e-02,  5.2072e-02],
          [ 1.5092e-02,  7.9891e-03,  6.2611e-03]]],


        [[[ 6.3722e-02, -1.3264e-02, -9.6955e-03],
          [ 4.0311e-03,  3.4618e-02,  1.6406e-01],
          [-2.7282e-02, -1.0102e-03,  8.5295e-02]],

         [[ 3.6706e-02, -6.4880e-02, -1.6246e-02],
          [-4.3939e-02, -6.5259e-03, -4.3208e-02],
          [-2.1636e-02, -4.9491e-03, -3.5420e-02]],

         [[ 2.4177e-02, -1.1491e-02,  5.0368e-02],
          [-2.0730e-02,  3.5605e-03, -3.4164e-02],
          [ 8.3470e-03,  2.1126e-02,  2.3854e-02]],

         ...,

         [[ 1.2935e-01, -7.5774e-03,  2.2141e-02],
          [-1.6635e-02, -6.3710e-02, -5.7358e-02],
          [-6.3766e-04,  4.0680e-02,  9.7231e-03]],

         [[-2.8124e-02,  5.7975e-02, -3.0667e-02],
          [ 5.5707e-02, -1.1982e-02, -8.0628e-03],
          [-3.0182e-02, -2.0637e-02, -7.9499e-02]],

         [[ 2.6911e-02,  8.6680e-02,  2.1353e-03],
          [-2.7196e-02, -2.5939e-02, -6.3110e-02],
          [ 1.8336e-02,  9.9762e-03,  3.7823e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0795]],

         [[-0.0883]],

         [[ 0.0591]],

         ...,

         [[-0.1772]],

         [[-0.2288]],

         [[ 0.1315]]],


        [[[ 0.2207]],

         [[ 0.0158]],

         [[-0.2048]],

         ...,

         [[ 0.1236]],

         [[-0.0361]],

         [[ 0.0319]]],


        [[[-0.0688]],

         [[ 0.0962]],

         [[-0.1833]],

         ...,

         [[ 0.1098]],

         [[-0.1295]],

         [[-0.0425]]],


        ...,


        [[[ 0.1064]],

         [[ 0.1178]],

         [[ 0.2035]],

         ...,

         [[ 0.0387]],

         [[-0.0793]],

         [[-0.0855]]],


        [[[-0.2071]],

         [[ 0.0626]],

         [[-0.1203]],

         ...,

         [[ 0.2069]],

         [[ 0.0336]],

         [[ 0.0725]]],


        [[[ 0.0238]],

         [[-0.0973]],

         [[ 0.1420]],

         ...,

         [[ 0.0449]],

         [[ 0.1981]],

         [[-0.0079]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0160,  0.0286,  0.0360],
          [ 0.0474,  0.0721,  0.0376],
          [-0.0301, -0.0391,  0.0559]],

         [[ 0.0228, -0.0449, -0.0790],
          [ 0.0003, -0.0208, -0.0104],
          [-0.0180,  0.0518, -0.0633]],

         [[ 0.0423, -0.0132,  0.0549],
          [-0.0053,  0.0120,  0.0162],
          [-0.0189, -0.0568, -0.0205]],

         ...,

         [[ 0.1246,  0.0283, -0.0204],
          [ 0.0905,  0.0150,  0.0268],
          [ 0.0645, -0.0518, -0.0678]],

         [[-0.0371, -0.0353,  0.0103],
          [ 0.0046,  0.0452, -0.0282],
          [-0.0543,  0.0296, -0.0063]],

         [[ 0.0273, -0.0537, -0.0118],
          [-0.0419,  0.0442, -0.0857],
          [ 0.0654,  0.0008,  0.0245]]],


        [[[-0.0939,  0.0301,  0.0305],
          [ 0.0312,  0.0569,  0.0143],
          [-0.0166,  0.0293, -0.0838]],

         [[-0.0344,  0.0132, -0.0104],
          [-0.0177,  0.0246, -0.0334],
          [ 0.0073,  0.0747,  0.0660]],

         [[ 0.0410,  0.0432,  0.0162],
          [ 0.0082, -0.0455,  0.0174],
          [-0.0392,  0.0366, -0.0611]],

         ...,

         [[-0.0118, -0.0055,  0.0097],
          [-0.0237, -0.0233,  0.0318],
          [ 0.0214, -0.0486, -0.0180]],

         [[-0.0305, -0.0341,  0.0008],
          [ 0.0263, -0.0367, -0.0550],
          [ 0.0091, -0.0207, -0.0556]],

         [[-0.0052,  0.0499, -0.0302],
          [-0.0093,  0.0446,  0.0465],
          [ 0.0175, -0.0908,  0.0251]]],


        [[[ 0.0178, -0.0554,  0.1000],
          [ 0.0283, -0.0333,  0.0395],
          [-0.0201, -0.0050,  0.0768]],

         [[-0.0187, -0.0990,  0.0831],
          [ 0.0704,  0.0433,  0.0470],
          [ 0.0294,  0.0122, -0.0388]],

         [[-0.0277, -0.0867,  0.0631],
          [-0.0223,  0.0428, -0.0983],
          [ 0.0172,  0.0030, -0.0564]],

         ...,

         [[ 0.0264,  0.0653, -0.0177],
          [-0.0287,  0.0812,  0.0011],
          [ 0.0175,  0.0026, -0.0216]],

         [[ 0.0408, -0.0727, -0.0476],
          [-0.0307, -0.1617, -0.0420],
          [ 0.0320,  0.0046,  0.0007]],

         [[-0.0624,  0.0273,  0.0069],
          [-0.0477, -0.0365, -0.0313],
          [-0.0912,  0.0524,  0.0094]]],


        ...,


        [[[ 0.0245, -0.0185, -0.0586],
          [ 0.0004,  0.0191, -0.0297],
          [ 0.0179, -0.1210, -0.0679]],

         [[ 0.0479, -0.0448, -0.0130],
          [ 0.0643, -0.0133,  0.0003],
          [-0.0055,  0.0024,  0.0645]],

         [[-0.0135,  0.0767, -0.0248],
          [ 0.0132, -0.0409,  0.0280],
          [ 0.0215,  0.0321,  0.0025]],

         ...,

         [[ 0.0484, -0.0073,  0.0159],
          [ 0.0349,  0.0911, -0.0470],
          [ 0.0859, -0.0012, -0.0556]],

         [[-0.0236,  0.0840,  0.0753],
          [ 0.0885,  0.0688, -0.0873],
          [ 0.0617, -0.0212,  0.0119]],

         [[-0.0566,  0.0322,  0.0271],
          [ 0.0829,  0.0954, -0.0139],
          [-0.0039,  0.0167,  0.0215]]],


        [[[-0.0382, -0.0197,  0.0921],
          [ 0.0521, -0.0077, -0.0475],
          [ 0.0081, -0.0291, -0.0609]],

         [[-0.0105,  0.0798,  0.0742],
          [-0.0013,  0.0498, -0.0918],
          [-0.0535, -0.0511, -0.0324]],

         [[ 0.0715, -0.0306,  0.0246],
          [ 0.0262, -0.0684,  0.0191],
          [ 0.0009, -0.0904,  0.0544]],

         ...,

         [[ 0.0242, -0.0562,  0.0901],
          [-0.0850, -0.0316,  0.0257],
          [-0.0317,  0.0422, -0.0472]],

         [[-0.0555, -0.0614, -0.0274],
          [-0.0557, -0.0004,  0.0130],
          [ 0.0485,  0.0526, -0.0309]],

         [[-0.0479, -0.0350, -0.0113],
          [ 0.0226,  0.0188,  0.1049],
          [ 0.0530, -0.0522, -0.0051]]],


        [[[ 0.0181,  0.0428, -0.1063],
          [ 0.0758, -0.0698,  0.0183],
          [-0.0002,  0.0198,  0.0580]],

         [[-0.0042, -0.0969,  0.1302],
          [ 0.0473,  0.0278, -0.0212],
          [ 0.0527, -0.0329, -0.0106]],

         [[-0.0592, -0.0293,  0.0406],
          [-0.0023, -0.0062, -0.0096],
          [ 0.0516,  0.0078,  0.0011]],

         ...,

         [[ 0.0157,  0.0868,  0.0529],
          [-0.0357,  0.0611,  0.0476],
          [-0.0032, -0.0297,  0.0228]],

         [[-0.0304, -0.0310,  0.0247],
          [ 0.0490,  0.0150, -0.0090],
          [-0.0324, -0.0913,  0.0525]],

         [[-0.0677, -0.0009,  0.0177],
          [ 0.0307, -0.0068,  0.0522],
          [-0.1111, -0.0407, -0.0153]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 0.0401, -0.0277,  0.0415],
          [-0.0141,  0.0332,  0.0059],
          [ 0.0502, -0.0185,  0.0368]],

         [[-0.0667, -0.0610, -0.0034],
          [ 0.0498,  0.0656,  0.0824],
          [-0.0673, -0.0002, -0.0518]],

         [[-0.0476, -0.0257,  0.0178],
          [ 0.0170,  0.0872, -0.0363],
          [-0.0241, -0.0536, -0.0129]],

         ...,

         [[-0.0142,  0.0463, -0.0629],
          [ 0.0013, -0.0031, -0.0669],
          [ 0.0492,  0.0270,  0.0002]],

         [[ 0.0212,  0.0127,  0.0168],
          [ 0.0375, -0.0804,  0.0176],
          [-0.0359,  0.0013,  0.0207]],

         [[-0.0776,  0.0565, -0.0439],
          [ 0.0451, -0.0160, -0.0269],
          [-0.0950, -0.0593, -0.0015]]],


        [[[ 0.0046,  0.0974, -0.0533],
          [ 0.0018, -0.0727, -0.0273],
          [-0.0945, -0.0095, -0.1604]],

         [[-0.0221,  0.0545, -0.0486],
          [-0.0348,  0.0139, -0.0355],
          [-0.0502,  0.0185, -0.0498]],

         [[-0.0202, -0.0646, -0.1062],
          [-0.0388, -0.0088, -0.0148],
          [-0.0470,  0.0544, -0.0138]],

         ...,

         [[ 0.0802,  0.0235,  0.0645],
          [ 0.0168,  0.0156,  0.0166],
          [-0.0002, -0.0171,  0.0061]],

         [[-0.0826, -0.0788, -0.0334],
          [ 0.0394, -0.0625,  0.0415],
          [ 0.0558, -0.0702,  0.0487]],

         [[ 0.0466,  0.0226,  0.0011],
          [-0.0359, -0.0261, -0.0008],
          [-0.0208,  0.0320,  0.0493]]],


        [[[-0.0512, -0.0723, -0.0879],
          [ 0.0596,  0.0813, -0.0713],
          [-0.0008,  0.0209, -0.0082]],

         [[ 0.0148,  0.0230,  0.0222],
          [-0.0596, -0.0240,  0.0348],
          [ 0.0139,  0.0279,  0.0383]],

         [[ 0.0739, -0.0679,  0.0174],
          [ 0.0777, -0.1466,  0.0052],
          [-0.0666,  0.0261, -0.0173]],

         ...,

         [[-0.0154,  0.0455, -0.0196],
          [-0.0385,  0.0088,  0.0063],
          [-0.0632,  0.0563,  0.0353]],

         [[-0.0645, -0.0419, -0.0173],
          [ 0.0557,  0.0546, -0.0591],
          [ 0.0210,  0.0512,  0.0335]],

         [[ 0.0605, -0.0123,  0.0298],
          [-0.0156, -0.0734,  0.0921],
          [-0.0327,  0.0680,  0.0753]]],


        ...,


        [[[ 0.0116, -0.0034, -0.0204],
          [-0.0861, -0.0383, -0.0162],
          [ 0.0281,  0.0181, -0.0341]],

         [[ 0.0744,  0.0424, -0.0314],
          [-0.0355,  0.0009,  0.0178],
          [ 0.0440, -0.0039,  0.0040]],

         [[ 0.0626, -0.0329,  0.0396],
          [-0.0246,  0.0011, -0.1194],
          [ 0.0218, -0.0371, -0.0529]],

         ...,

         [[ 0.0284, -0.0304,  0.0590],
          [-0.0323,  0.0235, -0.0223],
          [ 0.0258, -0.0145, -0.0093]],

         [[ 0.0017,  0.0185,  0.0684],
          [-0.0072,  0.0249,  0.0075],
          [-0.0604, -0.0057,  0.0072]],

         [[ 0.0131, -0.0864,  0.0790],
          [-0.0125, -0.0174, -0.0210],
          [-0.0468, -0.0503,  0.0568]]],


        [[[-0.0167, -0.0092,  0.0115],
          [-0.0628, -0.0293,  0.0149],
          [ 0.0344, -0.0828,  0.0612]],

         [[-0.0048,  0.0053, -0.0152],
          [-0.0298, -0.0108, -0.0154],
          [ 0.0418, -0.0328,  0.0039]],

         [[ 0.0368, -0.0036,  0.0210],
          [ 0.0101, -0.0424,  0.0679],
          [-0.0335,  0.0772, -0.0139]],

         ...,

         [[ 0.0560, -0.0149, -0.0141],
          [-0.0075, -0.0707, -0.1297],
          [-0.0031, -0.0249, -0.0005]],

         [[ 0.0259, -0.0083,  0.0865],
          [-0.0284,  0.0019, -0.0831],
          [ 0.0213, -0.0170, -0.0356]],

         [[-0.0751,  0.0254, -0.0464],
          [ 0.0044, -0.0059,  0.1176],
          [-0.0198, -0.0148,  0.0152]]],


        [[[-0.0023,  0.0349,  0.0435],
          [ 0.0794, -0.0013,  0.0885],
          [-0.0356, -0.0541,  0.0185]],

         [[-0.0275, -0.0340, -0.0410],
          [ 0.0119,  0.0447,  0.0942],
          [-0.0740,  0.0055, -0.0073]],

         [[ 0.0015, -0.0182, -0.0104],
          [ 0.0699,  0.0107,  0.0165],
          [-0.1108, -0.0190,  0.0731]],

         ...,

         [[-0.0409, -0.0923, -0.0494],
          [-0.0648, -0.0619, -0.0166],
          [ 0.1710, -0.0761, -0.0011]],

         [[-0.1276,  0.0293, -0.0357],
          [ 0.0280, -0.0743,  0.0093],
          [ 0.0115,  0.0328,  0.0919]],

         [[-0.0301, -0.0389,  0.0224],
          [ 0.0356,  0.0102, -0.0203],
          [-0.0092, -0.0164, -0.0418]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[-4.2450e-02,  7.2708e-03,  6.1453e-02],
          [ 2.3567e-02, -2.0458e-02, -6.4812e-02],
          [-4.3089e-02, -3.9407e-02,  2.8758e-02]],

         [[-7.4939e-02,  1.7910e-03, -2.4929e-02],
          [-6.2744e-02,  1.8339e-03, -8.1259e-03],
          [-1.1226e-02, -6.6227e-02,  2.1844e-02]],

         [[ 4.3262e-02,  7.7112e-02,  2.3551e-02],
          [-2.5515e-02,  4.8607e-02, -9.7521e-03],
          [-1.7539e-02,  5.7198e-02,  1.9995e-02]],

         ...,

         [[-6.8985e-02, -5.2792e-02, -2.5267e-02],
          [ 4.8430e-02, -2.8595e-02,  8.6096e-02],
          [ 7.2718e-02, -1.7009e-02,  8.2857e-02]],

         [[ 1.6653e-02,  1.4973e-02,  2.7028e-02],
          [ 2.3682e-02, -1.8708e-03, -8.7123e-02],
          [-4.2800e-02,  5.6296e-02,  1.1846e-01]],

         [[ 4.5466e-02, -4.0336e-02, -3.5462e-02],
          [ 2.5797e-02, -5.9517e-02,  6.0503e-02],
          [ 1.3531e-02, -3.8163e-02, -1.5643e-02]]],


        [[[ 3.9532e-02, -4.5154e-02,  2.5083e-02],
          [ 2.2827e-02,  2.1931e-02, -8.5145e-03],
          [-1.0632e-01,  5.1455e-02,  2.4843e-02]],

         [[-3.6007e-02, -3.4132e-02,  2.2263e-02],
          [-4.6433e-03,  2.4380e-02, -3.5435e-02],
          [ 4.4036e-02,  1.7385e-02,  5.0927e-02]],

         [[ 2.9929e-02,  1.3206e-02, -5.6478e-02],
          [ 4.3583e-02,  8.4373e-02, -4.7896e-02],
          [-3.2698e-02, -1.4374e-02, -2.7882e-02]],

         ...,

         [[-3.7744e-02, -2.8414e-02,  9.7084e-02],
          [ 4.2593e-02,  1.1636e-02, -1.4829e-02],
          [ 7.3039e-02, -6.1631e-03, -8.0182e-03]],

         [[-1.9256e-02,  2.7808e-02, -1.7951e-02],
          [-1.8347e-03,  4.9916e-02, -7.7249e-02],
          [ 1.0258e-02, -1.5806e-02,  3.7254e-02]],

         [[ 4.6901e-02, -6.5298e-02,  3.7171e-02],
          [ 5.8290e-02, -4.2976e-02, -1.6496e-02],
          [ 4.5578e-02,  8.3196e-02, -3.6448e-02]]],


        [[[ 1.7264e-02,  5.6461e-03,  4.7880e-02],
          [-5.4020e-02,  5.1991e-02, -1.7320e-02],
          [-2.1868e-02, -6.1476e-02, -4.8999e-03]],

         [[ 7.9926e-02, -3.2604e-02,  1.2425e-02],
          [ 1.1927e-02,  6.4408e-04, -8.3884e-03],
          [-3.6838e-02, -2.3173e-02,  1.1634e-02]],

         [[-1.8181e-02, -4.8540e-02, -4.6724e-02],
          [ 3.1996e-02, -2.4080e-02,  2.0055e-02],
          [-4.8934e-02, -8.4334e-03,  5.0107e-02]],

         ...,

         [[-3.1358e-03,  3.7017e-02, -5.1734e-03],
          [-6.2634e-02,  5.8432e-02,  2.5448e-02],
          [ 2.6100e-03, -2.9600e-02, -2.6275e-04]],

         [[-3.0553e-02,  9.2036e-02, -2.0437e-02],
          [-2.1504e-02,  8.5060e-02, -4.5239e-02],
          [-2.4464e-02, -7.0380e-02, -1.9341e-02]],

         [[ 2.8192e-02, -2.7960e-02,  1.8005e-03],
          [ 3.2441e-02, -1.3776e-02,  1.9053e-02],
          [ 9.1112e-03,  2.5321e-02, -6.1055e-02]]],


        ...,


        [[[-2.4773e-03,  5.4499e-02, -2.9875e-02],
          [ 1.0945e-02, -1.1075e-01, -1.8820e-02],
          [-2.2491e-02,  1.3964e-02, -1.8730e-03]],

         [[ 1.9215e-02,  4.0356e-02,  3.0775e-02],
          [-2.5884e-02,  2.9509e-03, -2.2752e-02],
          [-4.4415e-02,  2.6035e-02,  3.0952e-02]],

         [[-3.5572e-02,  4.6394e-02, -3.7580e-02],
          [-4.7986e-02, -4.4699e-03, -3.9823e-04],
          [ 9.7228e-03, -2.6006e-02,  3.3221e-02]],

         ...,

         [[ 8.6869e-02, -1.0165e-02,  5.4348e-02],
          [-7.5524e-03,  1.8778e-02,  2.7285e-02],
          [ 7.2331e-02, -3.8969e-02,  8.3475e-02]],

         [[ 1.1671e-01,  6.2425e-02, -4.7315e-04],
          [ 5.2231e-02,  4.6720e-02,  2.8536e-03],
          [-8.9422e-02, -1.9845e-02, -7.5938e-02]],

         [[-8.8609e-05, -6.3654e-02, -9.0344e-02],
          [-2.3320e-02, -8.3748e-02,  2.2058e-03],
          [ 5.2751e-02,  7.7095e-02, -7.7843e-03]]],


        [[[ 3.9810e-02,  8.1373e-03,  1.6512e-02],
          [ 3.0935e-02,  3.2245e-02,  1.7385e-02],
          [-7.4031e-02, -5.4026e-02,  2.7456e-02]],

         [[ 3.4039e-02, -2.6552e-02,  4.4656e-02],
          [ 3.5069e-02,  2.8106e-02,  2.2223e-02],
          [-4.4309e-02, -3.9157e-02, -1.0551e-02]],

         [[-3.8413e-03, -1.4755e-02,  5.1517e-02],
          [ 5.8027e-02, -7.6537e-02,  2.5286e-02],
          [-4.5297e-03,  9.9766e-02, -4.0005e-02]],

         ...,

         [[-3.5172e-02, -5.7722e-02,  2.4471e-02],
          [ 2.0343e-02,  4.4271e-02,  2.8276e-02],
          [ 5.8242e-02, -3.6650e-02,  4.3853e-02]],

         [[ 5.4025e-02, -7.2584e-03, -1.0718e-01],
          [-4.0617e-03,  5.7207e-02,  2.0579e-02],
          [-1.8729e-03, -6.4635e-02,  6.4290e-02]],

         [[-6.1201e-02,  3.4677e-02, -1.0396e-02],
          [ 4.4573e-02,  5.7105e-02, -2.0045e-02],
          [ 5.1533e-02,  1.8280e-03,  1.0752e-02]]],


        [[[-2.2567e-02,  4.3418e-02,  6.4187e-03],
          [-2.8077e-03, -7.2008e-03, -3.6126e-02],
          [ 2.6521e-02,  3.7273e-02, -4.0791e-02]],

         [[ 1.3351e-02, -3.5409e-02, -2.8963e-02],
          [ 2.3288e-02,  1.6721e-02,  2.8777e-02],
          [ 7.8612e-02, -1.1082e-01,  3.5409e-02]],

         [[ 1.1086e-02,  8.5338e-03, -6.5136e-02],
          [-1.7078e-02,  1.7270e-02,  3.0389e-02],
          [ 3.7868e-02,  6.4951e-02, -2.2009e-02]],

         ...,

         [[ 3.4675e-03, -4.9524e-02, -3.5816e-03],
          [-8.3509e-03,  5.4369e-02, -2.3190e-02],
          [-9.5574e-03, -5.0296e-02,  5.4798e-02]],

         [[ 3.7476e-02, -6.7631e-02,  4.2577e-02],
          [-7.4974e-03, -1.7945e-02,  2.4626e-02],
          [ 3.1079e-02, -4.9510e-02,  5.2115e-02]],

         [[-1.3060e-02, -1.7174e-02,  1.0653e-02],
          [-4.5529e-02, -1.1046e-02, -2.6624e-02],
          [-6.9860e-02, -1.4038e-02, -5.9808e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 0.0270,  0.0204, -0.0179],
          [-0.0209,  0.0262, -0.0015],
          [ 0.0261, -0.0511, -0.0559]],

         [[-0.0792, -0.0081,  0.0048],
          [ 0.1114,  0.0644,  0.0380],
          [-0.0081,  0.0140, -0.0053]],

         [[-0.0367,  0.0405, -0.0154],
          [ 0.0012, -0.0359,  0.0482],
          [ 0.0224, -0.0089,  0.0419]],

         ...,

         [[-0.0726, -0.0442, -0.0820],
          [ 0.0039,  0.0318,  0.0278],
          [ 0.0059, -0.0371, -0.0220]],

         [[-0.0232,  0.0046,  0.0144],
          [ 0.0370, -0.0306, -0.0282],
          [ 0.0169,  0.0219,  0.0066]],

         [[ 0.0294, -0.0230, -0.0146],
          [ 0.0138, -0.0640,  0.0174],
          [-0.0368, -0.0179,  0.0612]]],


        [[[ 0.0319, -0.0544,  0.0336],
          [ 0.0141,  0.0495, -0.0215],
          [-0.0118,  0.0240, -0.0304]],

         [[-0.0424,  0.0319, -0.0119],
          [ 0.0500, -0.0104, -0.0561],
          [ 0.0105,  0.0490, -0.0702]],

         [[ 0.0322, -0.0856,  0.0659],
          [ 0.0277,  0.0879, -0.0104],
          [ 0.0246, -0.0461, -0.0035]],

         ...,

         [[ 0.0060,  0.0122,  0.0326],
          [-0.0371,  0.0003, -0.0352],
          [ 0.0352,  0.0638,  0.0009]],

         [[-0.0140, -0.0129, -0.0030],
          [-0.0047, -0.0073,  0.0154],
          [-0.0652, -0.0165, -0.0252]],

         [[ 0.0207,  0.0484, -0.0008],
          [-0.0456,  0.0943, -0.0226],
          [ 0.0249, -0.0535,  0.0070]]],


        [[[ 0.0063, -0.0408,  0.0157],
          [-0.0303,  0.0181,  0.0065],
          [ 0.0266, -0.0813,  0.0151]],

         [[ 0.0016,  0.0274,  0.0180],
          [ 0.0080, -0.0036,  0.0251],
          [-0.0186,  0.0214,  0.0934]],

         [[ 0.0298,  0.0180, -0.0414],
          [ 0.0323, -0.0025,  0.0118],
          [-0.0295,  0.0978,  0.0316]],

         ...,

         [[ 0.0372,  0.0125,  0.0268],
          [ 0.0136,  0.0393,  0.0110],
          [-0.0724, -0.0007,  0.0520]],

         [[ 0.0473, -0.0124, -0.0700],
          [ 0.0514, -0.0508,  0.0111],
          [ 0.0124,  0.0036,  0.0368]],

         [[-0.0326, -0.0160,  0.0233],
          [-0.0152, -0.0018, -0.0011],
          [ 0.0425, -0.0205, -0.0131]]],


        ...,


        [[[ 0.0142, -0.0181, -0.0150],
          [ 0.0023, -0.0540,  0.0259],
          [-0.0154, -0.0488,  0.0314]],

         [[-0.0139,  0.0572, -0.0389],
          [ 0.0498, -0.0056,  0.0662],
          [-0.0377, -0.0615,  0.0167]],

         [[-0.0447,  0.0109,  0.0503],
          [ 0.0892,  0.0290, -0.0143],
          [-0.0209,  0.0400, -0.0461]],

         ...,

         [[ 0.0440, -0.0067,  0.0318],
          [-0.0418,  0.0179,  0.0592],
          [-0.0193, -0.0595, -0.0008]],

         [[-0.0474, -0.0369, -0.0245],
          [-0.0707,  0.0580,  0.0162],
          [-0.0110,  0.0166,  0.0123]],

         [[-0.0133,  0.0469,  0.0265],
          [-0.0343,  0.0003,  0.0105],
          [-0.0654, -0.0087,  0.0323]]],


        [[[ 0.0276,  0.0194,  0.0529],
          [ 0.0030,  0.0389,  0.0077],
          [ 0.0019,  0.0330, -0.0129]],

         [[ 0.0185,  0.0458,  0.0694],
          [ 0.0914,  0.0482, -0.0123],
          [ 0.0246, -0.0392,  0.0202]],

         [[-0.0411,  0.0614,  0.0516],
          [ 0.0036, -0.0049, -0.0236],
          [ 0.0622,  0.0064, -0.0247]],

         ...,

         [[-0.0765, -0.0027,  0.0287],
          [-0.0361,  0.0419, -0.0111],
          [ 0.0415,  0.0621, -0.0213]],

         [[ 0.0723, -0.0168, -0.0036],
          [-0.0541,  0.0633, -0.0297],
          [ 0.0072,  0.0417,  0.0548]],

         [[-0.0027,  0.0649, -0.0476],
          [-0.0133, -0.0078, -0.0181],
          [ 0.0298,  0.0384,  0.0112]]],


        [[[-0.0258, -0.0579,  0.0221],
          [ 0.1156, -0.0475, -0.0167],
          [ 0.0329, -0.0013, -0.0334]],

         [[ 0.0511, -0.0371,  0.0539],
          [-0.0522,  0.0142, -0.0429],
          [ 0.0479,  0.0475, -0.0191]],

         [[ 0.0008,  0.0359, -0.0089],
          [-0.0089,  0.0366,  0.0045],
          [ 0.0384,  0.0821,  0.0289]],

         ...,

         [[-0.0044,  0.0490,  0.0120],
          [ 0.0109,  0.0096,  0.0326],
          [-0.0646,  0.0827, -0.0181]],

         [[-0.0160,  0.0285, -0.0014],
          [ 0.0094,  0.0360,  0.0698],
          [-0.0167, -0.0157,  0.0365]],

         [[-0.0321,  0.0252,  0.0747],
          [-0.0611, -0.0320, -0.0202],
          [-0.0212, -0.0198, -0.0178]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0411]],

         [[ 0.0787]],

         [[ 0.2706]],

         ...,

         [[ 0.0449]],

         [[-0.2319]],

         [[ 0.0534]]],


        [[[ 0.0456]],

         [[-0.1537]],

         [[-0.1317]],

         ...,

         [[ 0.0465]],

         [[ 0.0568]],

         [[ 0.0393]]],


        [[[ 0.0454]],

         [[-0.1442]],

         [[-0.0755]],

         ...,

         [[-0.0982]],

         [[ 0.2045]],

         [[ 0.2157]]],


        ...,


        [[[-0.0468]],

         [[ 0.0699]],

         [[ 0.1357]],

         ...,

         [[-0.2329]],

         [[ 0.0906]],

         [[ 0.0461]]],


        [[[-0.1502]],

         [[ 0.0598]],

         [[-0.1145]],

         ...,

         [[-0.0663]],

         [[ 0.0844]],

         [[ 0.1362]]],


        [[[-0.1830]],

         [[ 0.1346]],

         [[-0.0512]],

         ...,

         [[-0.0073]],

         [[ 0.0779]],

         [[-0.0055]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[-0.0068,  0.0036, -0.0398],
          [ 0.0071, -0.0632,  0.0025],
          [ 0.0049, -0.0125, -0.0216]],

         [[-0.0592, -0.0312,  0.0078],
          [ 0.0536, -0.0714, -0.0652],
          [ 0.0765, -0.0298,  0.0359]],

         [[-0.0443,  0.0609, -0.0340],
          [ 0.0082,  0.0523,  0.0093],
          [-0.0232, -0.0118,  0.0382]],

         ...,

         [[-0.0456, -0.0462, -0.0682],
          [ 0.0117,  0.0612,  0.0223],
          [ 0.0067,  0.0502,  0.0320]],

         [[-0.0008,  0.0422, -0.0401],
          [ 0.0157, -0.0444,  0.0581],
          [-0.0150,  0.0345, -0.0146]],

         [[ 0.0620,  0.0115, -0.0255],
          [-0.0338,  0.0232,  0.0219],
          [-0.0058,  0.0141,  0.0208]]],


        [[[-0.0122, -0.0315,  0.0201],
          [ 0.0335,  0.0038,  0.0386],
          [ 0.0479,  0.0097, -0.0321]],

         [[ 0.0253, -0.0850,  0.0257],
          [-0.0183,  0.0522,  0.0342],
          [ 0.0852, -0.0054, -0.0475]],

         [[ 0.0280, -0.0315,  0.0216],
          [-0.0545,  0.0076,  0.0505],
          [-0.0212,  0.0082,  0.0452]],

         ...,

         [[-0.0029, -0.0482,  0.0738],
          [-0.0291, -0.0612, -0.0575],
          [ 0.0365, -0.0048, -0.0149]],

         [[-0.0016,  0.0287, -0.0094],
          [-0.0397, -0.0766, -0.0075],
          [ 0.0294,  0.0399, -0.0537]],

         [[-0.0303, -0.0779,  0.0482],
          [ 0.0198, -0.0025,  0.0261],
          [ 0.0277,  0.0306, -0.0025]]],


        [[[-0.0292, -0.0852, -0.0308],
          [-0.0184,  0.0009,  0.0397],
          [-0.0197,  0.0313, -0.0450]],

         [[ 0.0386,  0.0340,  0.0613],
          [ 0.0297,  0.0176, -0.0027],
          [-0.0024,  0.0652, -0.0112]],

         [[ 0.0710, -0.0008,  0.0252],
          [-0.0406,  0.0203,  0.0681],
          [-0.0244,  0.0043,  0.0490]],

         ...,

         [[-0.0325,  0.0083, -0.0630],
          [ 0.0148, -0.0697,  0.0224],
          [-0.0204,  0.0251, -0.0359]],

         [[ 0.0140, -0.0059, -0.0513],
          [ 0.0540,  0.0197,  0.0179],
          [ 0.0136,  0.0204,  0.0454]],

         [[-0.0585,  0.0376,  0.0380],
          [ 0.0544, -0.0412, -0.0412],
          [ 0.0328, -0.0511, -0.0110]]],


        ...,


        [[[ 0.0132,  0.0011,  0.0503],
          [-0.0563,  0.0079,  0.0708],
          [-0.0222, -0.0485,  0.0081]],

         [[ 0.0363, -0.0117, -0.0058],
          [ 0.0322, -0.0943, -0.0205],
          [ 0.0162,  0.0239,  0.0257]],

         [[ 0.0036,  0.0496, -0.0250],
          [-0.0397, -0.0730,  0.0490],
          [ 0.0108, -0.0413,  0.0178]],

         ...,

         [[-0.0008, -0.0197, -0.1019],
          [ 0.0276, -0.0600,  0.0219],
          [-0.0097,  0.0442,  0.0296]],

         [[-0.0414,  0.0430,  0.0104],
          [-0.0407, -0.0222,  0.0030],
          [-0.0364,  0.0186,  0.0123]],

         [[-0.0245,  0.0441,  0.0266],
          [ 0.0121,  0.0248,  0.0271],
          [ 0.0110, -0.0282,  0.0379]]],


        [[[-0.0147,  0.0601, -0.0206],
          [ 0.0502, -0.0044, -0.0636],
          [ 0.0211,  0.0617,  0.0228]],

         [[ 0.0048, -0.0275,  0.0148],
          [-0.0079, -0.0268,  0.0152],
          [-0.0353,  0.0214, -0.0483]],

         [[-0.0128, -0.1590,  0.0259],
          [-0.0270,  0.0125,  0.0293],
          [ 0.0167,  0.0186, -0.0543]],

         ...,

         [[-0.0496, -0.0321, -0.0082],
          [-0.0325,  0.0365,  0.0164],
          [ 0.0188,  0.0333,  0.0065]],

         [[ 0.0075, -0.0512, -0.0580],
          [ 0.0475, -0.0403, -0.0090],
          [ 0.0132,  0.0458, -0.1044]],

         [[ 0.0146,  0.1536, -0.0413],
          [-0.0087, -0.0269,  0.0037],
          [-0.0415, -0.0232,  0.0141]]],


        [[[ 0.0127,  0.0621, -0.0031],
          [-0.0151,  0.0600, -0.0196],
          [ 0.0184,  0.0717, -0.0110]],

         [[-0.0851, -0.0046, -0.0936],
          [-0.0495, -0.0442, -0.0561],
          [-0.0597, -0.0662, -0.0293]],

         [[ 0.0021, -0.0189,  0.0369],
          [-0.0066, -0.0074,  0.0050],
          [ 0.0762, -0.0220,  0.0164]],

         ...,

         [[-0.0222, -0.0029, -0.1356],
          [-0.0108, -0.0486,  0.0169],
          [-0.0010, -0.0544, -0.0126]],

         [[ 0.0414, -0.0187,  0.0104],
          [ 0.0085,  0.0119, -0.0980],
          [ 0.0636, -0.0003,  0.0324]],

         [[ 0.0021,  0.0622,  0.0024],
          [ 0.0795,  0.0519,  0.1049],
          [ 0.0165, -0.0410, -0.0035]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[-4.6287e-02, -1.8590e-03,  1.8831e-03],
          [-6.4412e-02, -7.7535e-02, -3.5050e-02],
          [-4.6996e-02,  2.5971e-02, -1.1888e-02]],

         [[-2.6102e-02,  5.0102e-03,  1.5608e-02],
          [-1.2319e-02, -5.8171e-03,  6.2240e-02],
          [-4.5624e-02, -8.7237e-02,  3.1334e-02]],

         [[ 1.9624e-02, -1.9808e-02,  5.1429e-02],
          [-4.5568e-02,  2.5869e-02, -3.2702e-02],
          [-1.3523e-02,  1.0437e-02,  2.8495e-02]],

         ...,

         [[ 1.4212e-02, -1.6267e-03,  5.6091e-03],
          [ 6.3613e-02, -3.0664e-02,  4.5236e-02],
          [-2.2436e-02, -6.6707e-02,  1.2097e-03]],

         [[-4.0739e-02, -3.5864e-03, -3.6735e-02],
          [ 6.8071e-02, -1.5331e-02,  4.5725e-02],
          [ 3.1868e-02,  3.1612e-02, -4.7540e-02]],

         [[-4.5549e-03,  1.8956e-03, -1.1847e-03],
          [-2.4767e-02, -3.8003e-02,  8.5148e-03],
          [-9.9089e-04, -9.0069e-02, -4.7489e-02]]],


        [[[-2.1051e-02,  5.3670e-02,  2.0589e-02],
          [ 4.1146e-02,  3.2799e-02, -2.3486e-03],
          [ 2.6813e-02, -4.2633e-02,  1.0918e-01]],

         [[ 2.7380e-02,  4.9212e-02,  5.0012e-02],
          [ 1.1831e-02, -6.7533e-02,  3.2238e-02],
          [ 6.5446e-03,  2.8407e-02,  1.8744e-02]],

         [[ 2.9946e-02, -2.2587e-02, -2.7384e-02],
          [-1.2138e-03, -2.3020e-02, -4.7685e-02],
          [-2.0599e-02, -2.0792e-02,  3.7900e-02]],

         ...,

         [[-9.8108e-03,  1.6831e-02,  4.0244e-03],
          [ 6.5042e-03,  3.7315e-04,  2.9990e-02],
          [ 8.0791e-02,  6.1986e-03,  4.4740e-02]],

         [[ 5.5086e-02,  9.6788e-05,  9.8505e-02],
          [-1.9057e-02,  6.3308e-02, -1.9779e-04],
          [-2.8114e-02, -4.0544e-02, -3.4319e-02]],

         [[-1.7019e-02,  2.3495e-02,  5.8190e-03],
          [-1.7334e-02,  6.2140e-02,  4.3247e-02],
          [-1.4344e-02, -5.5901e-02,  2.8558e-02]]],


        [[[ 1.1181e-02, -5.9297e-02,  9.6356e-03],
          [ 3.6110e-02,  5.7614e-02, -2.6632e-02],
          [-3.0720e-03, -5.5940e-03, -1.2694e-02]],

         [[ 2.3604e-03, -3.7335e-02,  5.1851e-02],
          [-4.4209e-02,  6.1374e-03,  9.9555e-03],
          [-6.9005e-02, -6.9012e-02, -5.0318e-02]],

         [[ 2.7831e-02, -1.6694e-02,  1.0165e-02],
          [ 6.2655e-02, -1.5117e-02,  1.4712e-02],
          [ 5.1401e-03,  8.0544e-02, -8.0080e-03]],

         ...,

         [[-4.9085e-02, -3.3994e-03,  2.4671e-02],
          [ 4.7012e-02, -6.7917e-02, -4.0601e-02],
          [-2.0770e-04, -1.4183e-02,  4.9150e-03]],

         [[ 1.5315e-02, -4.9143e-02,  1.7388e-02],
          [ 1.0428e-02,  1.1311e-02, -1.4082e-02],
          [ 3.0073e-03, -5.5691e-02, -1.9282e-02]],

         [[ 9.6605e-03, -4.7589e-02, -1.8666e-02],
          [ 2.4756e-02, -2.2608e-02,  1.7106e-02],
          [-9.2861e-04,  2.5852e-02,  2.0090e-02]]],


        ...,


        [[[-1.2908e-02, -1.3721e-02, -8.4872e-03],
          [ 9.0864e-03, -9.4528e-02, -2.2815e-02],
          [-1.6988e-02, -4.4330e-02, -4.2169e-03]],

         [[ 8.5704e-03, -6.9074e-02, -1.1676e-03],
          [-3.7254e-02,  5.0575e-02,  2.8851e-02],
          [ 9.0428e-03, -5.7449e-02,  8.6451e-02]],

         [[ 2.8190e-02, -7.4850e-02, -3.2701e-02],
          [ 4.4626e-02,  3.0223e-02, -5.8561e-02],
          [-5.5139e-04, -4.6831e-02,  2.8631e-02]],

         ...,

         [[-1.5599e-02, -2.2133e-02, -5.4809e-02],
          [ 5.8899e-03, -1.8388e-02,  3.4234e-03],
          [-1.5469e-02,  5.0958e-03,  5.2766e-02]],

         [[-2.7430e-02, -2.6691e-02,  2.8755e-02],
          [ 4.8973e-02, -1.0870e-02, -6.5468e-02],
          [-2.9159e-02, -8.2745e-03,  3.4229e-02]],

         [[-7.8777e-02, -2.9751e-02,  1.7270e-02],
          [-3.2205e-03,  2.2265e-02,  1.7864e-02],
          [ 2.4830e-03, -2.8959e-03, -2.9052e-02]]],


        [[[-3.4887e-03, -6.6718e-02, -6.8853e-02],
          [-5.1134e-02,  1.3546e-02,  1.0497e-01],
          [-6.5911e-03,  3.4846e-02, -3.7569e-03]],

         [[ 1.8438e-03, -1.0969e-02,  1.4654e-02],
          [-6.4016e-02, -1.9098e-02,  6.9934e-02],
          [-1.5021e-02,  3.9467e-03,  3.6048e-02]],

         [[-6.3715e-02, -3.4741e-02,  1.2227e-02],
          [ 2.0903e-02, -1.7132e-02,  3.8603e-02],
          [-2.2273e-02,  3.8797e-03, -5.3890e-03]],

         ...,

         [[ 9.2102e-03, -4.6685e-02,  8.4226e-02],
          [-4.0170e-02,  4.5089e-02, -3.1997e-02],
          [ 9.2477e-04,  5.4364e-02,  2.8361e-02]],

         [[-5.4580e-02,  2.4035e-02,  1.9788e-02],
          [ 1.9846e-02, -4.5572e-03, -6.7195e-02],
          [-2.8324e-02,  3.0569e-02, -6.6974e-04]],

         [[-5.7689e-02, -1.1228e-01, -3.1982e-02],
          [ 5.5287e-02,  3.9620e-02, -4.0415e-02],
          [ 3.1120e-02, -2.6501e-02, -6.2689e-02]]],


        [[[ 6.5911e-02, -9.3635e-02, -3.1640e-02],
          [ 2.7516e-03,  4.4631e-02,  3.0425e-03],
          [ 3.8634e-02, -3.5084e-02, -3.6662e-02]],

         [[-4.2020e-02,  6.2334e-02, -6.5927e-02],
          [-3.4262e-03,  2.6817e-02,  2.0775e-03],
          [ 3.6466e-03,  4.8148e-02,  5.5088e-02]],

         [[ 2.3855e-02, -1.2010e-01,  3.2007e-02],
          [-3.6074e-02, -3.4932e-02,  6.4168e-02],
          [-2.0447e-02,  9.9670e-03, -5.3618e-02]],

         ...,

         [[-5.1313e-03,  5.3746e-03, -3.4369e-02],
          [ 2.9239e-02,  7.0755e-02,  6.8223e-02],
          [ 1.3626e-02,  4.5784e-04, -5.6958e-02]],

         [[-5.1015e-02, -4.4758e-02, -5.0912e-03],
          [-4.4924e-02, -2.6666e-02, -5.4971e-03],
          [-4.7280e-03, -7.6888e-02,  7.5214e-03]],

         [[-1.7154e-02,  2.0006e-02,  1.9252e-02],
          [ 2.4161e-02,  1.4571e-02, -3.8942e-02],
          [ 3.0209e-02,  2.0387e-02,  1.5170e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
2022-10-09 16:40:27,723 - mmflow - INFO - Iter [50/100000]	lr: 6.175e-06, eta: 4:31:12, time: 0.163, data_time: 0.022, memory: 281, loss_flow: 98.1205, loss: 98.1205, grad_norm: 5.9012
2022-10-09 16:40:34,037 - mmflow - INFO - Iter [100/100000]	lr: 7.374e-06, eta: 4:00:40, time: 0.126, data_time: 0.012, memory: 281, loss_flow: 83.7792, loss: 83.7792, grad_norm: 7.4601
2022-10-09 16:40:40,717 - mmflow - INFO - Iter [150/100000]	lr: 8.573e-06, eta: 3:54:28, time: 0.134, data_time: 0.018, memory: 281, loss_flow: 68.1754, loss: 68.1754, grad_norm: 3.2692
2022-10-09 16:40:47,010 - mmflow - INFO - Iter [200/100000]	lr: 9.772e-06, eta: 3:48:06, time: 0.126, data_time: 0.012, memory: 281, loss_flow: 101.0810, loss: 101.0810, grad_norm: 4.5134
2022-10-09 16:40:53,382 - mmflow - INFO - Iter [250/100000]	lr: 1.097e-05, eta: 3:44:45, time: 0.127, data_time: 0.016, memory: 281, loss_flow: 152.1622, loss: 152.1622, grad_norm: 8.2521
2022-10-09 16:40:59,491 - mmflow - INFO - Iter [300/100000]	lr: 1.217e-05, eta: 3:41:02, time: 0.122, data_time: 0.012, memory: 281, loss_flow: 175.1027, loss: 175.1027, grad_norm: 8.6725
2022-10-09 16:41:05,664 - mmflow - INFO - Iter [350/100000]	lr: 1.337e-05, eta: 3:38:39, time: 0.123, data_time: 0.007, memory: 281, loss_flow: 168.6886, loss: 168.6886, grad_norm: 8.7548
2022-10-09 16:41:11,882 - mmflow - INFO - Iter [400/100000]	lr: 1.457e-05, eta: 3:37:02, time: 0.124, data_time: 0.013, memory: 281, loss_flow: 190.5371, loss: 190.5371, grad_norm: 7.9120
2022-10-09 16:41:17,609 - mmflow - INFO - Iter [450/100000]	lr: 1.577e-05, eta: 3:33:56, time: 0.115, data_time: 0.006, memory: 281, loss_flow: 101.5362, loss: 101.5362, grad_norm: 3.9798
2022-10-09 16:41:23,916 - mmflow - INFO - Iter [500/100000]	lr: 1.697e-05, eta: 3:33:22, time: 0.126, data_time: 0.015, memory: 281, loss_flow: 95.0311, loss: 95.0311, grad_norm: 3.8476
2022-10-09 16:41:29,960 - mmflow - INFO - Iter [550/100000]	lr: 1.817e-05, eta: 3:32:05, time: 0.121, data_time: 0.008, memory: 281, loss_flow: 165.0959, loss: 165.0959, grad_norm: 8.7512
2022-10-09 16:41:36,335 - mmflow - INFO - Iter [600/100000]	lr: 1.936e-05, eta: 3:31:55, time: 0.127, data_time: 0.008, memory: 281, loss_flow: 133.8289, loss: 133.8289, grad_norm: 7.3696
2022-10-09 16:41:42,298 - mmflow - INFO - Iter [650/100000]	lr: 2.056e-05, eta: 3:30:42, time: 0.119, data_time: 0.011, memory: 281, loss_flow: 84.2029, loss: 84.2029, grad_norm: 3.6843
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1376, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 1.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 68, in __call__
    img1 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


