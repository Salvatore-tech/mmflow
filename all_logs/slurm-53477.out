2022-10-09 21:59:31,086 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 21:59:31,089 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 21:59:31,149 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 21:59:31,151 - mmflow - INFO - Distributed training: False
2022-10-09 21:59:32,416 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dCADDY'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix/dKITTI'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=2,
        workers_per_gpu=5,
        drop_last=True,
        shuffle=True,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='CADDY',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dCADDY',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    brightness=0.05,
                    contrast=0.2,
                    saturation=0.25,
                    hue=0.1),
                dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(
                    type='GaussianNoise',
                    sigma_range=(0, 0.04),
                    clamp_range=(0.0, 1.0)),
                dict(type='RandomFlip', prob=0.5, direction='horizontal'),
                dict(type='RandomFlip', prob=0.5, direction='vertical'),
                dict(
                    type='RandomAffine',
                    global_transform=dict(
                        translates=(0.02, 0.02),
                        zoom=(0.98, 1.02),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5)),
                    relative_transform=dict(
                        translates=(0.0025, 0.0025),
                        zoom=(0.99, 1.01),
                        shear=(1.0, 1.0),
                        rotate=(-0.5, 0.5))),
                dict(type='RandomCrop', crop_size=(320, 240)),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'img_fields', 'ann_fields', 'filename1', 'filename2',
                        'ori_filename1', 'ori_filename2', 'filename_flow',
                        'ori_filename_flow', 'ori_shape', 'img_shape',
                        'img_norm_cfg'
                    ])
            ],
            test_mode=False),
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix/dKITTI',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09_h21'
auto_resume = False
gpu_ids = [0]

2022-10-09 21:59:32,418 - mmflow - INFO - Set random seed to 427712325, deterministic: False
2022-10-09 21:59:32,554 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:59:34,500 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 21:59:34,539 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 21:59:35,679 - mmflow - INFO - dataset size 800
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 21:59:38,392 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 21:59:38,566 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21
2022-10-09 21:59:38,568 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 21:59:38,569 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 21:59:38,570 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09_h21 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[-3.1377e-02,  1.1233e-02,  8.8306e-03,  ..., -5.3983e-02,
            9.7750e-03, -8.1247e-03],
          [ 1.3788e-02, -2.0501e-02,  3.5297e-03,  ...,  6.0987e-04,
            2.2819e-02, -1.4487e-02],
          [ 5.7205e-02,  2.3070e-02,  2.5970e-03,  ...,  1.8730e-03,
            4.6661e-03, -5.6651e-02],
          ...,
          [ 1.5381e-02,  1.8966e-03,  4.5982e-02,  ...,  1.8702e-02,
            3.5897e-02,  2.3392e-02],
          [ 1.5750e-02, -6.9367e-04,  1.5274e-02,  ...,  3.8372e-02,
            3.5378e-02,  1.3958e-02],
          [-1.9545e-02,  1.0187e-02, -7.1417e-03,  ..., -3.1637e-02,
            1.4586e-02,  1.3257e-02]],

         [[-5.1276e-02, -1.5152e-02,  1.0200e-02,  ..., -2.4482e-02,
           -9.7222e-03,  4.4818e-02],
          [ 3.7470e-02,  1.3216e-02,  2.7426e-02,  ..., -5.4493e-02,
           -2.4848e-02,  3.1511e-02],
          [-3.7691e-02, -1.0679e-02,  3.2976e-02,  ..., -1.1706e-02,
           -2.0791e-02,  3.6104e-02],
          ...,
          [ 2.0968e-02, -9.1125e-03, -3.7441e-02,  ...,  1.6501e-02,
           -2.2667e-02, -2.3558e-02],
          [ 2.9151e-03, -4.1947e-02, -4.4972e-03,  ..., -2.8610e-02,
           -7.8434e-03,  2.6057e-02],
          [-1.9409e-02, -6.2320e-03, -2.3149e-02,  ..., -2.9710e-02,
            4.3065e-04,  1.9473e-02]],

         [[ 6.3721e-02, -2.0968e-02, -7.8615e-03,  ..., -1.4988e-02,
           -4.9857e-04,  3.1445e-02],
          [-4.2866e-02, -8.4734e-04, -1.4968e-02,  ...,  1.9020e-03,
            1.9193e-02, -1.0159e-02],
          [-4.7684e-03,  7.1472e-03, -6.8945e-04,  ...,  5.0285e-02,
            1.9628e-02,  2.7221e-02],
          ...,
          [ 1.5734e-02,  2.3230e-02,  2.2724e-02,  ...,  2.9347e-02,
           -7.3718e-03,  1.0920e-03],
          [ 1.1777e-02, -3.0384e-02, -4.8079e-03,  ...,  3.1936e-02,
           -3.0169e-02,  2.6598e-02],
          [-4.6020e-02,  2.1089e-03,  2.3425e-03,  ...,  1.2055e-02,
            1.3548e-02, -1.3013e-02]]],


        [[[ 4.4854e-02, -5.9893e-02, -2.0552e-02,  ..., -3.9962e-02,
           -3.2366e-02,  3.2630e-03],
          [-1.5761e-02,  4.2279e-04, -3.6446e-02,  ...,  5.7945e-03,
            1.6010e-02, -1.8106e-02],
          [ 5.3634e-02,  1.4610e-03,  4.1723e-02,  ...,  5.0829e-03,
            1.9088e-02, -1.4565e-02],
          ...,
          [-1.9438e-02, -8.1815e-02, -8.0238e-03,  ...,  4.0338e-02,
            1.4961e-02,  3.6120e-02],
          [-1.6317e-02,  5.5212e-03, -2.4267e-03,  ..., -1.8611e-03,
            7.0641e-03, -8.2657e-03],
          [ 2.3289e-02,  2.5102e-03,  5.6906e-03,  ...,  4.1756e-03,
            1.0794e-02,  1.4241e-02]],

         [[ 4.7614e-03,  7.0225e-03,  2.7807e-02,  ...,  6.4253e-03,
           -3.6975e-03, -2.3017e-02],
          [ 1.5420e-02,  1.0100e-02, -3.4942e-02,  ...,  9.8143e-03,
           -7.2229e-03, -3.7844e-02],
          [-5.9886e-02, -2.7038e-02,  1.7758e-02,  ...,  3.0485e-02,
            2.0415e-02,  1.2195e-02],
          ...,
          [-6.3574e-03,  4.1734e-02, -2.6481e-02,  ..., -2.3174e-02,
           -1.9536e-02, -2.8488e-02],
          [ 6.2041e-03, -6.7086e-03,  2.0638e-02,  ..., -2.0490e-02,
            1.5873e-02, -7.5301e-04],
          [ 1.8039e-03, -2.1793e-03,  2.4274e-02,  ...,  3.1332e-03,
           -1.6361e-03, -6.1334e-04]],

         [[ 1.4334e-02,  1.6601e-02,  1.3144e-03,  ...,  8.5701e-03,
           -3.6164e-03,  4.2362e-02],
          [-1.5413e-02, -2.1187e-02,  1.5853e-02,  ...,  1.4946e-02,
            3.7533e-02,  9.1681e-05],
          [-1.5321e-02,  6.6077e-03,  2.6012e-03,  ..., -2.8235e-02,
           -1.6372e-03,  2.8753e-03],
          ...,
          [ 2.3229e-02, -2.2573e-02, -2.5693e-02,  ..., -8.2548e-03,
           -9.8110e-03, -6.1337e-02],
          [ 3.1115e-03, -8.4707e-03,  1.5415e-02,  ..., -2.1809e-02,
            7.6326e-04,  2.3304e-03],
          [ 1.9725e-02,  1.6729e-02, -5.5731e-02,  ...,  5.4928e-03,
            1.7487e-02, -1.0479e-02]]],


        [[[-7.1868e-03,  9.1771e-03, -9.5278e-03,  ...,  1.1110e-02,
           -2.0682e-02, -2.3056e-02],
          [ 2.0081e-02,  3.7952e-02,  1.3386e-02,  ...,  4.2903e-02,
           -2.9027e-03,  3.8541e-03],
          [-2.2114e-02, -4.6133e-02,  2.8871e-02,  ..., -2.8229e-03,
            1.5394e-02,  1.3794e-03],
          ...,
          [ 1.4189e-02,  8.9615e-03,  1.0625e-02,  ..., -6.0711e-03,
           -2.3138e-02, -5.0607e-03],
          [-5.2050e-02, -5.4835e-02,  4.2579e-02,  ..., -7.1128e-03,
           -3.1288e-02,  1.7845e-02],
          [ 8.8319e-03, -2.9589e-02,  1.4936e-02,  ..., -6.6984e-02,
            1.2194e-02, -1.7521e-02]],

         [[-3.0826e-02, -1.8495e-02, -1.5579e-02,  ..., -6.1343e-03,
           -2.4602e-02, -2.2652e-02],
          [-4.2067e-02,  4.1916e-03, -2.0511e-02,  ..., -3.4344e-02,
           -3.1917e-03,  2.9587e-02],
          [-2.0964e-02, -1.6790e-02, -3.2430e-02,  ..., -3.6843e-02,
            3.0825e-02, -9.5952e-03],
          ...,
          [-8.1734e-03, -1.9166e-02,  1.8405e-02,  ...,  9.1807e-03,
            1.1142e-03,  1.7411e-02],
          [-1.9739e-02, -1.8599e-02,  1.2615e-02,  ..., -9.2466e-03,
            1.9315e-02,  2.4890e-02],
          [-2.3540e-03, -1.8031e-02,  1.7947e-02,  ...,  6.1528e-03,
           -3.0626e-03,  1.8698e-02]],

         [[-2.8015e-02, -1.8799e-02,  2.2444e-02,  ..., -3.1882e-02,
            3.0158e-03, -9.3703e-03],
          [ 1.7445e-02, -1.6366e-02,  3.0828e-02,  ...,  1.5919e-02,
           -2.0590e-02,  4.1362e-02],
          [-3.9021e-02, -2.2047e-02,  8.1577e-03,  ..., -3.0613e-02,
            5.5458e-03,  3.9936e-02],
          ...,
          [-1.4363e-02, -2.5678e-02, -9.9083e-03,  ..., -1.3334e-02,
           -2.2503e-02, -1.9570e-03],
          [-2.3882e-02, -1.1595e-02, -5.4889e-04,  ...,  4.0121e-02,
            6.0660e-02,  4.3764e-02],
          [-5.5288e-02, -3.3939e-02,  4.7687e-03,  ..., -3.8527e-02,
           -2.3130e-02,  1.2130e-02]]],


        ...,


        [[[-1.1987e-02,  2.3204e-02, -2.5098e-02,  ..., -3.9734e-02,
           -8.6735e-03, -1.1291e-02],
          [ 4.6554e-03,  6.7935e-02,  1.9060e-02,  ...,  1.6005e-02,
           -3.2263e-02,  1.0890e-02],
          [-3.6075e-02,  2.1160e-02, -3.9582e-02,  ...,  3.1882e-02,
           -4.9977e-02,  2.0143e-04],
          ...,
          [-8.6291e-03, -4.4668e-03, -2.8049e-02,  ...,  8.1080e-04,
           -5.0315e-02,  2.4647e-03],
          [ 3.8062e-02, -2.3207e-02,  5.3487e-03,  ..., -2.5269e-03,
           -1.0281e-02, -3.5281e-03],
          [ 2.7887e-02,  1.7479e-02,  1.7652e-03,  ..., -8.0440e-03,
            1.6505e-02,  1.8409e-02]],

         [[-6.3078e-03,  8.7693e-03,  3.7682e-02,  ...,  2.1031e-02,
            6.6274e-02, -2.5482e-02],
          [ 1.7607e-03,  6.6789e-03, -1.9385e-02,  ...,  1.1515e-02,
            3.6003e-02, -3.0468e-02],
          [ 4.4572e-02,  1.2035e-02,  5.7463e-02,  ...,  1.4766e-02,
            8.7372e-03, -4.3743e-03],
          ...,
          [ 7.8576e-03, -1.2596e-02, -2.0475e-02,  ...,  4.1757e-02,
           -3.5115e-02,  1.2992e-02],
          [ 9.3017e-03, -1.5737e-02,  1.3486e-02,  ..., -3.9787e-02,
           -1.4794e-02, -2.9635e-02],
          [ 9.9406e-03, -2.0109e-02, -1.5398e-03,  ...,  4.1485e-02,
            1.0005e-02,  3.3509e-02]],

         [[ 1.1769e-02,  1.4404e-02, -8.7679e-03,  ..., -1.4789e-02,
            3.1235e-02,  4.6741e-02],
          [ 2.9259e-04,  7.4026e-03, -4.3493e-02,  ...,  2.2622e-03,
           -2.9845e-02, -4.2441e-02],
          [ 2.1353e-03, -3.0577e-03, -2.7694e-02,  ..., -9.9859e-03,
            2.3042e-02,  1.2435e-02],
          ...,
          [-2.6670e-03, -2.7044e-02, -2.5828e-03,  ...,  2.2716e-02,
            1.4743e-02, -1.8519e-02],
          [-7.1287e-02, -5.4410e-03,  1.0103e-02,  ..., -1.7483e-02,
            4.4373e-03, -9.2098e-03],
          [-1.3479e-02, -1.2757e-02, -5.5499e-03,  ..., -1.5371e-02,
           -8.4878e-03,  3.1695e-03]]],


        [[[ 5.5131e-03,  6.8241e-02,  2.7121e-02,  ...,  3.5999e-02,
            3.4008e-02,  4.7487e-03],
          [ 2.0141e-02, -3.7379e-02, -2.0176e-02,  ..., -1.8202e-02,
            9.4156e-03, -6.0745e-03],
          [ 1.5943e-02, -3.2871e-03,  3.2407e-03,  ...,  2.0895e-02,
           -1.3148e-02, -4.1621e-02],
          ...,
          [ 2.3557e-02, -2.5927e-02,  8.9466e-03,  ..., -1.6619e-02,
            2.1498e-02,  2.4123e-02],
          [-1.5744e-02,  1.4561e-02,  4.6498e-02,  ...,  1.3565e-02,
           -4.0860e-02, -1.7948e-02],
          [-4.4077e-02, -1.3891e-02,  9.4139e-03,  ...,  1.7461e-02,
            1.5880e-02,  4.7048e-02]],

         [[-3.8631e-03,  5.7612e-02, -8.7823e-03,  ..., -2.0161e-02,
           -2.9695e-03,  3.1565e-02],
          [ 1.3278e-02, -7.8449e-03,  2.0331e-03,  ..., -2.2171e-03,
           -2.9093e-02,  1.4392e-03],
          [ 2.5885e-02,  6.7421e-02, -3.0399e-03,  ..., -1.0159e-02,
           -1.4939e-02, -2.5411e-02],
          ...,
          [-1.4932e-02, -2.6843e-02, -1.6111e-02,  ..., -1.0785e-02,
           -2.3278e-02, -1.8981e-02],
          [-3.9110e-02, -3.4232e-02,  6.1872e-03,  ..., -1.0885e-02,
            2.7664e-02, -3.3053e-02],
          [-1.3571e-02, -5.3142e-03,  3.5463e-02,  ...,  3.9009e-03,
            7.6916e-03,  3.3069e-02]],

         [[ 1.5721e-03, -9.3609e-03,  2.3177e-02,  ...,  7.7372e-03,
            4.5856e-02,  2.5316e-02],
          [ 3.0002e-03,  3.5476e-02,  3.0804e-02,  ...,  4.0533e-02,
           -1.2637e-02, -4.7589e-03],
          [ 3.9841e-02, -3.2890e-02,  1.5508e-02,  ..., -2.4371e-02,
            1.8324e-02, -1.8441e-02],
          ...,
          [ 3.9119e-02,  4.0952e-03, -1.7648e-02,  ...,  1.1398e-02,
           -5.9282e-03, -2.3545e-02],
          [ 1.0802e-02, -2.1116e-02,  4.0687e-02,  ..., -1.3034e-02,
            2.5020e-02,  1.5225e-02],
          [-1.9469e-02,  5.3615e-02,  1.5541e-02,  ..., -1.3359e-02,
            2.4447e-02, -4.0431e-02]]],


        [[[-2.0004e-04, -2.3521e-02, -1.6691e-02,  ..., -5.9115e-03,
           -1.5694e-02,  2.0353e-02],
          [ 5.5649e-02,  3.3416e-02, -2.5998e-02,  ...,  2.4283e-02,
            5.4563e-03, -4.8739e-03],
          [ 2.1634e-02,  1.2755e-02, -4.5626e-03,  ...,  3.0969e-02,
            1.0345e-02,  4.0415e-02],
          ...,
          [-4.8902e-03,  8.5553e-02,  1.5830e-02,  ..., -3.7668e-03,
            3.3106e-02,  2.1252e-02],
          [-9.3022e-03, -7.5229e-04, -2.1998e-02,  ..., -3.5138e-03,
            2.1632e-02,  1.9876e-02],
          [ 7.1220e-03,  7.5740e-02,  3.7208e-02,  ..., -2.4824e-02,
            4.4208e-02,  4.3185e-03]],

         [[-9.3302e-03, -4.7446e-03,  8.7036e-03,  ...,  1.4540e-02,
           -6.5667e-04, -1.5324e-02],
          [ 2.8711e-02, -4.5072e-02, -1.3798e-02,  ...,  4.2818e-02,
           -4.3022e-02,  1.6402e-02],
          [ 6.4152e-02,  3.0817e-03, -4.0479e-02,  ...,  1.4350e-02,
           -2.4715e-02,  2.8917e-02],
          ...,
          [-3.2983e-02,  1.7838e-02, -3.5637e-02,  ..., -2.9597e-02,
           -1.8595e-03, -1.4351e-02],
          [-2.0516e-02,  1.4134e-02, -4.6485e-03,  ..., -2.9794e-02,
            2.9517e-02,  1.9296e-02],
          [-2.8543e-02, -2.4999e-02,  1.4943e-02,  ..., -2.1819e-02,
            6.0628e-03, -2.3028e-02]],

         [[ 5.7493e-02, -4.8389e-02, -1.8656e-02,  ..., -2.2637e-03,
           -5.4436e-03, -2.2236e-02],
          [-1.5311e-02,  2.7443e-02, -1.1000e-02,  ...,  5.0345e-03,
            8.8803e-03, -3.6440e-02],
          [ 1.3039e-02,  3.2611e-02, -2.9762e-02,  ..., -2.8075e-02,
            5.0141e-02,  2.9003e-03],
          ...,
          [-6.8134e-03,  2.0552e-03, -2.2353e-03,  ..., -1.3045e-02,
            9.0692e-03,  1.6578e-02],
          [ 3.4959e-02, -2.0202e-02,  1.4293e-02,  ...,  4.8005e-03,
           -3.4353e-03,  1.5775e-02],
          [-2.2162e-02,  1.5772e-02, -3.9661e-04,  ...,  1.5187e-02,
           -3.4727e-02, -1.6803e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-5.0982e-02,  2.9134e-02, -1.1111e-03],
          [ 2.0385e-02,  5.6823e-02, -1.7842e-02],
          [ 8.3566e-02, -1.1631e-01,  1.5578e-02]],

         [[-2.2491e-02, -2.3862e-02,  4.1155e-02],
          [-2.5089e-02,  3.0729e-02,  1.8011e-02],
          [-3.5192e-02, -1.1469e-02,  8.1541e-02]],

         [[ 3.0800e-02,  4.9434e-02,  5.8590e-02],
          [ 1.2893e-01,  7.2921e-02, -1.3687e-01],
          [ 5.0825e-02,  6.2707e-02, -3.4426e-02]],

         ...,

         [[ 7.2181e-02, -4.5740e-02, -4.9154e-02],
          [ 3.6467e-02,  7.7584e-05,  3.8446e-03],
          [ 5.8753e-02, -9.1260e-02, -9.0724e-02]],

         [[ 1.3981e-02,  3.7984e-02,  1.2775e-01],
          [ 1.3637e-02, -6.0270e-02, -2.0871e-02],
          [ 2.3817e-02,  7.9612e-02, -7.1219e-03]],

         [[-1.3228e-02, -5.2731e-02,  2.4189e-02],
          [ 1.3467e-01,  5.6798e-02, -2.1097e-02],
          [-6.9595e-02,  1.6064e-02, -1.3198e-01]]],


        [[[-8.2713e-02,  9.7726e-02, -3.0894e-03],
          [-2.5621e-02,  5.5345e-02, -9.3678e-02],
          [ 3.1453e-02,  3.6459e-02, -8.0080e-03]],

         [[ 3.5302e-02,  8.5496e-02, -5.1664e-02],
          [ 1.2963e-01,  7.6015e-02,  5.6870e-03],
          [ 1.3259e-02,  1.1239e-01,  6.6820e-04]],

         [[-1.9914e-02, -9.3506e-02, -1.9610e-02],
          [-6.0207e-02, -1.5205e-02, -7.6675e-02],
          [-2.5034e-02,  1.6366e-03,  3.8514e-02]],

         ...,

         [[ 8.1753e-02, -6.0898e-03,  2.1099e-02],
          [ 1.8288e-02, -2.7629e-02,  6.3502e-02],
          [ 1.7259e-02, -2.0054e-03, -2.0766e-02]],

         [[ 4.9186e-03,  2.5512e-02,  1.4572e-02],
          [-5.1929e-02,  4.0255e-02, -7.7929e-02],
          [ 5.8007e-02,  8.2726e-02, -1.2176e-01]],

         [[-4.3932e-02,  6.8667e-02,  4.9268e-03],
          [ 3.0250e-02, -2.5899e-03, -6.7905e-02],
          [-2.3312e-02,  3.4562e-02,  8.8690e-02]]],


        [[[ 2.1007e-02,  2.2267e-03, -1.1576e-02],
          [ 5.2823e-03,  6.5128e-02,  4.8568e-02],
          [ 8.5908e-03,  5.6413e-03, -3.5940e-02]],

         [[-8.0697e-02,  1.3724e-02, -1.3829e-01],
          [ 2.7800e-02,  7.6833e-02, -4.6106e-02],
          [ 3.6707e-02, -9.8824e-02, -9.7667e-03]],

         [[ 5.9959e-02, -8.4338e-02, -3.8806e-02],
          [-8.7066e-03, -7.3294e-02,  2.6027e-03],
          [-1.1957e-02,  1.2134e-01, -6.2340e-02]],

         ...,

         [[ 9.1858e-02, -3.9340e-03, -2.5741e-02],
          [-3.7973e-02, -2.2353e-02,  4.5680e-02],
          [-3.7517e-02, -2.8802e-02,  5.9259e-02]],

         [[-4.5246e-02, -5.0278e-02, -7.1237e-02],
          [ 4.2461e-02,  4.4725e-02, -5.9713e-03],
          [-1.5824e-02,  3.8782e-02, -6.9074e-02]],

         [[ 1.5244e-02, -4.0021e-05,  1.0149e-02],
          [-2.9669e-03,  1.0185e-01,  3.0687e-02],
          [-9.5725e-02,  4.9042e-02, -3.0162e-02]]],


        ...,


        [[[-2.7313e-02, -1.5963e-03,  1.5873e-02],
          [-3.2118e-02,  5.4477e-02,  5.0401e-02],
          [-1.9806e-02, -4.9181e-03, -1.8856e-02]],

         [[ 7.3018e-02, -4.3044e-02, -3.9914e-02],
          [-3.7475e-02, -1.6260e-02,  5.3785e-02],
          [-7.1238e-03, -7.6156e-03,  6.5995e-02]],

         [[ 9.8086e-02,  4.2928e-02,  3.2464e-02],
          [-8.3522e-02, -3.9066e-02, -2.1125e-02],
          [-8.7585e-02,  6.6970e-02, -6.2450e-02]],

         ...,

         [[ 5.0321e-02, -1.6270e-02,  2.5199e-02],
          [ 1.8953e-02, -4.1768e-02,  1.0241e-01],
          [ 8.9889e-03, -2.3424e-02,  9.1344e-03]],

         [[ 4.3474e-03, -4.7903e-05,  7.2668e-02],
          [ 2.4480e-02,  1.1734e-02,  7.1290e-02],
          [ 1.0724e-02,  1.5375e-02,  6.7756e-03]],

         [[ 1.1389e-02,  5.4513e-03, -1.3512e-01],
          [-3.4830e-03,  8.0707e-02,  6.2446e-02],
          [ 4.3969e-02,  1.0415e-01,  1.0541e-02]]],


        [[[-1.5612e-01,  4.0477e-02,  1.0594e-02],
          [-8.6631e-02,  8.7370e-02, -8.0172e-02],
          [ 7.4451e-02, -3.1660e-02, -3.6070e-02]],

         [[-6.2247e-02, -5.3333e-02,  5.4115e-03],
          [-1.1989e-02,  4.4326e-02,  1.5803e-02],
          [ 3.6805e-03, -5.6197e-03, -2.5469e-02]],

         [[ 6.2377e-02, -7.7391e-02, -1.4634e-02],
          [ 3.7777e-03,  3.0377e-02,  3.2586e-02],
          [-3.0505e-02, -3.3816e-02, -5.9417e-02]],

         ...,

         [[-2.1691e-02,  5.4714e-02,  4.9010e-02],
          [-7.7574e-02, -1.3874e-02, -5.1178e-03],
          [ 3.3579e-02,  1.7202e-02,  4.8252e-02]],

         [[ 2.9769e-03, -5.1215e-02, -1.5216e-01],
          [-1.1108e-01, -4.6972e-02, -2.8460e-02],
          [-8.9350e-02, -9.7244e-04, -7.8532e-02]],

         [[-2.2404e-02,  9.6321e-03,  8.2201e-02],
          [-4.8478e-02, -5.1458e-02,  4.3418e-02],
          [-2.1599e-02, -6.6320e-02, -2.5266e-02]]],


        [[[ 3.7489e-02,  1.7169e-02,  3.3144e-02],
          [-4.7665e-02,  5.5450e-02, -9.9955e-02],
          [ 4.5463e-02,  5.3624e-02, -3.0884e-02]],

         [[-4.4437e-02,  4.6586e-02,  2.2783e-02],
          [ 2.5390e-02,  4.9799e-02,  3.1002e-02],
          [-3.8383e-02,  5.7779e-03,  8.8809e-03]],

         [[ 5.2619e-02,  4.8429e-02,  7.0456e-02],
          [ 7.0305e-02, -9.6609e-02, -1.3721e-03],
          [-8.9279e-04,  1.7297e-03,  5.8341e-02]],

         ...,

         [[-1.5168e-02,  5.0664e-02, -9.0999e-02],
          [-6.4356e-03,  6.7137e-02,  5.2308e-02],
          [ 4.6083e-02, -5.6072e-02, -1.1399e-02]],

         [[-2.8271e-02, -5.5284e-02,  2.2567e-02],
          [ 6.1552e-02,  3.1151e-02, -4.7221e-02],
          [ 1.6687e-02,  1.6720e-02, -4.9618e-02]],

         [[ 8.0626e-02, -8.3382e-02,  3.5125e-02],
          [-9.9334e-02,  5.9366e-02, -6.9378e-02],
          [ 7.5178e-02,  4.9424e-02, -4.7684e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 0.0355, -0.0165, -0.0314],
          [-0.1014, -0.0408,  0.1189],
          [-0.1195, -0.0896, -0.0658]],

         [[-0.0801, -0.0038,  0.0135],
          [-0.0088, -0.0094,  0.0467],
          [ 0.1226,  0.0008, -0.0639]],

         [[ 0.0402, -0.0327, -0.0459],
          [ 0.0655, -0.0610,  0.0484],
          [ 0.0705, -0.0417, -0.0457]],

         ...,

         [[ 0.0102,  0.0367, -0.0166],
          [-0.0066, -0.0221, -0.0111],
          [-0.0297, -0.0551,  0.0347]],

         [[ 0.1169,  0.0323,  0.0552],
          [-0.0739, -0.0174, -0.1069],
          [-0.0304,  0.0390,  0.0655]],

         [[-0.0291,  0.0599, -0.0564],
          [-0.0156,  0.0141,  0.0438],
          [ 0.0114, -0.0827, -0.0390]]],


        [[[ 0.0307, -0.0340,  0.0860],
          [ 0.0400,  0.0039, -0.0426],
          [ 0.0227, -0.0042,  0.0223]],

         [[ 0.0044, -0.0508,  0.0593],
          [-0.0146, -0.0249, -0.0270],
          [ 0.0206, -0.0034, -0.0987]],

         [[-0.0186,  0.0091,  0.1193],
          [ 0.0050, -0.0145,  0.0102],
          [ 0.0863,  0.0035,  0.0008]],

         ...,

         [[ 0.0894, -0.0965,  0.0512],
          [ 0.0997,  0.0057, -0.0492],
          [ 0.0218,  0.0109,  0.0083]],

         [[ 0.0263,  0.0725,  0.0376],
          [-0.0044,  0.1277, -0.0389],
          [ 0.0500,  0.0231, -0.0075]],

         [[ 0.0104,  0.0287,  0.0628],
          [-0.0680, -0.0569, -0.0850],
          [ 0.0388,  0.1236,  0.1307]]],


        [[[-0.0954,  0.0678,  0.0152],
          [-0.0146, -0.0591,  0.0686],
          [-0.0277, -0.0532, -0.0077]],

         [[-0.0196,  0.0572, -0.0080],
          [ 0.0716, -0.0643,  0.0396],
          [ 0.0615, -0.0219, -0.0476]],

         [[ 0.0637, -0.0901, -0.0121],
          [-0.0411, -0.0034, -0.0536],
          [-0.0378,  0.0301, -0.0391]],

         ...,

         [[-0.0507,  0.0130,  0.0102],
          [ 0.0763, -0.0323, -0.0099],
          [-0.0346, -0.0829,  0.0553]],

         [[-0.0654, -0.0535, -0.0292],
          [ 0.0140, -0.0730,  0.0239],
          [-0.0247,  0.0196,  0.1009]],

         [[-0.0571, -0.0212,  0.0580],
          [ 0.0323,  0.0566, -0.0042],
          [-0.0285, -0.0216,  0.0678]]],


        ...,


        [[[-0.0412, -0.0149, -0.1202],
          [ 0.0283, -0.0339, -0.0404],
          [-0.0238, -0.0226, -0.1040]],

         [[-0.0169,  0.0237,  0.0449],
          [ 0.0641, -0.0061,  0.0064],
          [ 0.0110,  0.0375,  0.0560]],

         [[-0.0518, -0.0651, -0.0294],
          [ 0.1434, -0.0397,  0.1362],
          [ 0.0219,  0.0193, -0.0690]],

         ...,

         [[-0.0181,  0.0104, -0.0835],
          [-0.0512, -0.0434,  0.0295],
          [ 0.0967,  0.0512, -0.0545]],

         [[-0.0403, -0.0788, -0.0303],
          [ 0.0277,  0.0043, -0.1529],
          [-0.0482,  0.1440,  0.0712]],

         [[ 0.0944, -0.0754,  0.0186],
          [ 0.0725, -0.1157, -0.0097],
          [ 0.0026,  0.0282, -0.0431]]],


        [[[ 0.0416, -0.0341,  0.0395],
          [-0.1468,  0.0363, -0.1810],
          [ 0.0301,  0.0077, -0.0142]],

         [[ 0.0708, -0.0160,  0.0137],
          [ 0.0381,  0.0159, -0.0385],
          [-0.0616,  0.0071,  0.0789]],

         [[-0.1192,  0.0631, -0.0355],
          [ 0.0114, -0.1487, -0.0807],
          [ 0.0891,  0.0076,  0.0060]],

         ...,

         [[-0.0380,  0.0582, -0.0380],
          [-0.0981,  0.0077, -0.1257],
          [ 0.0259,  0.0279,  0.0063]],

         [[ 0.0727, -0.0506, -0.0651],
          [ 0.0401,  0.0642, -0.0706],
          [-0.0367,  0.1126,  0.0928]],

         [[ 0.0715,  0.0485, -0.0325],
          [-0.0221,  0.0164, -0.0419],
          [-0.0929,  0.0292,  0.0787]]],


        [[[-0.1149, -0.0206, -0.1172],
          [-0.0883,  0.0470, -0.0548],
          [-0.0027, -0.0720, -0.0180]],

         [[-0.0717,  0.0827,  0.0829],
          [-0.0788, -0.0292, -0.0301],
          [-0.0349, -0.0574,  0.0125]],

         [[-0.0165,  0.0069, -0.0140],
          [ 0.0347, -0.0900, -0.0609],
          [ 0.0198,  0.0151,  0.0446]],

         ...,

         [[ 0.0163, -0.0343,  0.0440],
          [-0.0752,  0.0321,  0.0846],
          [ 0.0105, -0.0328, -0.1568]],

         [[-0.0469, -0.1233,  0.0511],
          [ 0.0223,  0.0209, -0.0914],
          [-0.0774,  0.0278, -0.0040]],

         [[ 0.0025, -0.0726,  0.1318],
          [-0.1017, -0.0418, -0.0121],
          [ 0.0749,  0.0173,  0.0430]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-6.8391e-02,  7.4129e-02,  6.3419e-03],
          [ 3.2391e-02, -8.1587e-02, -2.9264e-03],
          [-4.4718e-02,  5.7552e-03, -1.3150e-01]],

         [[-5.8988e-02, -2.7266e-02, -7.7804e-04],
          [-1.9210e-02, -1.5908e-01,  5.6120e-02],
          [-2.9229e-02,  7.4680e-02,  2.1778e-04]],

         [[ 1.8851e-02, -2.7233e-02, -1.5404e-02],
          [-4.6094e-02,  8.1031e-03,  4.1466e-03],
          [ 7.2977e-03,  9.0358e-03, -2.3968e-03]],

         ...,

         [[-8.1786e-03,  1.6394e-02,  7.7014e-03],
          [ 4.4088e-02,  5.7175e-02,  2.7660e-02],
          [ 1.2295e-01, -2.0446e-02, -1.3158e-01]],

         [[ 6.2632e-02,  1.2422e-03,  1.6957e-02],
          [ 2.8136e-03,  2.9757e-02,  1.9806e-02],
          [-6.3221e-02,  4.3659e-02, -2.5587e-04]],

         [[-1.2798e-02,  4.4915e-02, -1.7981e-02],
          [ 3.3630e-02, -6.4442e-02, -5.2307e-02],
          [ 9.6529e-02,  6.2690e-02,  1.2784e-01]]],


        [[[-2.4762e-02, -7.2688e-03, -4.3751e-03],
          [-2.6379e-02, -2.9834e-03, -5.1664e-02],
          [-1.6001e-02,  1.0951e-01,  1.1614e-01]],

         [[-1.1372e-01, -1.5065e-02, -1.5718e-02],
          [-6.4159e-02, -7.4587e-02,  7.8732e-02],
          [ 2.2512e-02, -6.0470e-02, -2.0382e-02]],

         [[-4.5768e-03, -1.1109e-01, -3.0850e-02],
          [-2.3422e-02, -3.7813e-02,  2.8110e-02],
          [ 2.6539e-02,  6.3342e-02, -1.2245e-02]],

         ...,

         [[-4.0504e-02,  1.0738e-01,  2.8058e-02],
          [ 2.4492e-02,  1.1525e-01, -4.9928e-02],
          [-1.2000e-01,  3.7940e-02, -1.2782e-02]],

         [[ 4.8308e-02, -1.7812e-02,  1.8561e-02],
          [ 2.3245e-02,  1.5189e-02,  5.0271e-02],
          [ 8.3214e-02, -2.8574e-02,  4.2358e-02]],

         [[ 9.9528e-02, -6.9175e-02,  2.7206e-02],
          [-3.6019e-02,  6.2750e-02,  1.3771e-02],
          [ 5.4614e-02, -5.0703e-03, -1.1282e-02]]],


        [[[ 5.7242e-03, -6.2146e-02,  5.2177e-02],
          [ 1.2530e-02,  1.3906e-01, -2.5076e-02],
          [-4.4432e-02, -3.8753e-03, -6.5510e-02]],

         [[-1.4238e-01, -2.5669e-02,  8.4464e-02],
          [ 8.8619e-03,  6.2940e-02, -5.7753e-02],
          [ 6.4294e-02, -3.7240e-02, -1.1007e-01]],

         [[ 1.0063e-02,  3.4041e-02,  1.2368e-01],
          [-2.7783e-02,  6.1771e-02,  4.4969e-02],
          [ 1.9117e-02,  1.2123e-02, -2.3290e-02]],

         ...,

         [[ 6.2164e-02,  8.7242e-02, -2.8513e-02],
          [ 5.7214e-02, -7.3771e-02, -2.5929e-02],
          [-1.8113e-02,  6.2885e-02,  4.6336e-03]],

         [[ 4.5795e-02, -2.1373e-02, -3.9821e-02],
          [ 2.5604e-02,  2.9796e-02, -2.8293e-02],
          [ 1.8301e-02,  2.9452e-02, -1.2260e-01]],

         [[-1.1020e-01,  3.0163e-02, -4.3132e-02],
          [-6.0946e-02,  7.1780e-02, -1.5815e-02],
          [-5.9024e-02, -2.4884e-02, -1.7216e-02]]],


        ...,


        [[[ 7.6357e-02,  1.2809e-01, -1.1989e-02],
          [ 2.2567e-02,  4.4518e-02,  2.3616e-02],
          [ 2.3517e-02, -7.8049e-02,  9.4035e-03]],

         [[ 4.4736e-02, -2.5560e-02,  2.2258e-02],
          [ 2.0564e-02, -4.6522e-02,  1.1239e-01],
          [ 5.9843e-03, -3.7893e-02, -3.4214e-02]],

         [[ 4.3018e-02, -1.0376e-02, -9.2294e-02],
          [ 5.6531e-02,  2.4588e-02,  1.3750e-02],
          [ 2.4836e-02, -2.5784e-02, -7.5155e-02]],

         ...,

         [[-5.0412e-02,  5.8897e-02, -5.6254e-03],
          [ 9.6858e-03, -1.9476e-02,  9.2858e-02],
          [ 7.6340e-02, -4.6393e-02,  1.4481e-01]],

         [[-9.2405e-02, -4.6550e-02,  3.3412e-02],
          [ 6.1435e-02, -6.3142e-02,  1.2645e-01],
          [ 1.1108e-02,  7.9860e-02,  4.1150e-03]],

         [[ 8.7559e-02, -4.9399e-02, -6.8226e-02],
          [-1.2443e-01, -3.2642e-04,  6.2808e-02],
          [ 2.9677e-02, -3.8461e-02,  3.7525e-02]]],


        [[[ 6.7773e-02, -3.7076e-02,  1.1111e-02],
          [-1.1614e-01, -9.1132e-03, -6.9323e-03],
          [ 3.0728e-02, -4.7109e-02, -7.2968e-02]],

         [[-4.6307e-02, -1.5659e-02, -9.3325e-03],
          [-2.7845e-03, -1.0450e-02, -2.2085e-02],
          [ 1.0322e-01,  5.4515e-03, -1.1801e-02]],

         [[-4.4497e-02,  1.3635e-02, -1.4017e-02],
          [-7.3564e-02,  8.9347e-02, -3.2939e-02],
          [-5.2125e-03,  2.5488e-02,  7.2944e-03]],

         ...,

         [[-5.7779e-02, -2.7838e-02,  6.7723e-03],
          [ 2.7995e-02, -3.2064e-02,  7.5863e-02],
          [-2.5721e-02, -7.2998e-02, -5.5415e-02]],

         [[ 6.1370e-02, -1.6999e-02,  3.2940e-02],
          [-4.3702e-02,  1.2110e-02,  3.8951e-02],
          [ 1.1891e-01, -5.7495e-02,  2.4525e-02]],

         [[-2.4478e-02,  9.7334e-02,  4.9682e-03],
          [-8.2294e-02, -6.1867e-02, -1.7061e-02],
          [-1.5141e-01,  2.3588e-02,  2.9308e-02]]],


        [[[ 2.8629e-02,  4.3633e-02, -2.8113e-02],
          [-3.4813e-02,  3.0447e-02, -8.1091e-03],
          [-1.1965e-01,  4.5067e-02, -2.7505e-02]],

         [[ 1.2603e-02, -6.2940e-02, -4.9531e-03],
          [-3.4234e-02, -1.0624e-01, -6.4279e-02],
          [ 7.7958e-02,  1.0345e-01, -2.7041e-02]],

         [[-2.8962e-02,  1.4806e-02,  3.9095e-02],
          [ 2.2740e-03, -9.2957e-02, -2.5020e-02],
          [ 8.9107e-02, -4.2832e-02, -1.1455e-02]],

         ...,

         [[ 7.9695e-02, -2.4932e-02,  3.3830e-02],
          [ 3.0391e-02,  1.0648e-03,  3.6426e-02],
          [-4.8834e-02,  1.0715e-04, -6.6585e-02]],

         [[-7.4433e-02, -2.7096e-02,  9.8007e-02],
          [ 5.0413e-02,  3.5603e-03,  5.6990e-02],
          [ 1.0585e-02,  7.3982e-03, -1.0776e-01]],

         [[-2.9026e-02,  1.6007e-02, -6.9978e-02],
          [ 1.8179e-02,  7.0674e-02,  8.4557e-02],
          [-1.6922e-02, -5.9125e-02,  3.1475e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-0.0455,  0.0523,  0.0291],
          [-0.1033,  0.0318,  0.0548],
          [-0.0209,  0.0380,  0.0726]],

         [[-0.0435, -0.0694, -0.1623],
          [ 0.0177, -0.0828,  0.0210],
          [ 0.0632,  0.0563, -0.0096]],

         [[-0.1325, -0.0586,  0.0146],
          [-0.0114,  0.1026, -0.0227],
          [-0.0209,  0.0485, -0.0106]],

         ...,

         [[ 0.0043,  0.0025, -0.0140],
          [-0.0179, -0.0397,  0.0801],
          [-0.0024,  0.0137,  0.0750]],

         [[-0.0072,  0.0510,  0.1070],
          [ 0.0081, -0.0192, -0.0236],
          [-0.0210, -0.0315, -0.0237]],

         [[ 0.0278, -0.0324,  0.0379],
          [ 0.1193,  0.0356,  0.0043],
          [-0.0085, -0.0154,  0.0543]]],


        [[[-0.0676,  0.0232, -0.0053],
          [ 0.0568,  0.1153,  0.0714],
          [-0.0729,  0.0650, -0.0706]],

         [[ 0.0530,  0.0394, -0.0277],
          [-0.0170, -0.0031, -0.1215],
          [ 0.0300, -0.0268, -0.0300]],

         [[ 0.0417,  0.0594,  0.0520],
          [-0.0783, -0.0671, -0.0403],
          [ 0.0152, -0.0525,  0.0128]],

         ...,

         [[ 0.0654, -0.0588,  0.0411],
          [-0.0380, -0.0364, -0.0890],
          [-0.0643,  0.0134, -0.0244]],

         [[-0.0593, -0.0070, -0.0260],
          [-0.0148,  0.0243,  0.0137],
          [-0.0456, -0.0227,  0.0333]],

         [[-0.0096, -0.0433,  0.0711],
          [-0.0087, -0.0509,  0.0882],
          [ 0.0988,  0.0586, -0.0296]]],


        [[[ 0.0015,  0.0097, -0.0461],
          [ 0.0288,  0.0296, -0.0347],
          [-0.0254, -0.0222,  0.0170]],

         [[ 0.0163,  0.0066, -0.0546],
          [-0.0173,  0.0262,  0.0237],
          [ 0.0586,  0.0205,  0.0261]],

         [[ 0.0708, -0.0705,  0.0447],
          [ 0.0148,  0.0111,  0.0214],
          [ 0.0120,  0.0793, -0.0032]],

         ...,

         [[ 0.0208, -0.0314,  0.0346],
          [-0.0805,  0.0293, -0.0724],
          [-0.1172,  0.0566, -0.0878]],

         [[-0.0849, -0.0166, -0.0588],
          [ 0.0170, -0.0574,  0.1158],
          [ 0.0329, -0.0632, -0.0217]],

         [[-0.0803, -0.0434, -0.0202],
          [ 0.0276, -0.0954, -0.0751],
          [-0.0104,  0.0420,  0.0533]]],


        ...,


        [[[-0.0289,  0.0047, -0.0061],
          [ 0.0055, -0.0069,  0.0826],
          [ 0.0034,  0.0245,  0.0119]],

         [[-0.0224, -0.0582,  0.0480],
          [-0.0096,  0.0186,  0.0241],
          [ 0.1078, -0.0172,  0.0586]],

         [[-0.0179,  0.0334,  0.0448],
          [ 0.0288, -0.0538, -0.0568],
          [ 0.0429,  0.0656,  0.0402]],

         ...,

         [[ 0.0132,  0.1072,  0.0915],
          [ 0.0459,  0.0118, -0.0271],
          [-0.0103, -0.0817,  0.1097]],

         [[-0.0136, -0.0051,  0.0031],
          [ 0.0064,  0.0289, -0.0852],
          [ 0.0030,  0.0422,  0.0372]],

         [[-0.0057, -0.0439, -0.0916],
          [-0.0116, -0.1005, -0.0508],
          [-0.0255,  0.0627,  0.0150]]],


        [[[ 0.0611,  0.0749,  0.0027],
          [-0.0522, -0.0568,  0.0088],
          [ 0.0243, -0.0066, -0.0403]],

         [[-0.0733, -0.0060,  0.0546],
          [ 0.0467,  0.0278,  0.0664],
          [ 0.0051,  0.0644, -0.0573]],

         [[-0.0105, -0.0154,  0.1272],
          [ 0.0844, -0.0980,  0.0624],
          [-0.0894, -0.0420,  0.0888]],

         ...,

         [[ 0.0145,  0.0806, -0.0299],
          [-0.0167,  0.0646, -0.0379],
          [-0.0233,  0.1237, -0.0928]],

         [[-0.0749,  0.0880, -0.0281],
          [ 0.0649,  0.0542,  0.0973],
          [-0.0548,  0.0371, -0.0295]],

         [[-0.0204,  0.0582, -0.0337],
          [-0.0575, -0.0055,  0.0507],
          [-0.0582, -0.0606, -0.0070]]],


        [[[ 0.1304,  0.0462, -0.0789],
          [ 0.0164, -0.0307,  0.0060],
          [-0.0126,  0.0789,  0.1138]],

         [[ 0.0455, -0.1154, -0.0293],
          [-0.0051,  0.0026, -0.0522],
          [-0.0350,  0.0134,  0.0569]],

         [[ 0.0184, -0.0695, -0.0189],
          [ 0.0773, -0.0780,  0.0120],
          [ 0.0007, -0.1090,  0.0208]],

         ...,

         [[ 0.0139, -0.0174,  0.0258],
          [ 0.0196, -0.0205, -0.0198],
          [ 0.0135, -0.0168,  0.0678]],

         [[-0.0949, -0.0897, -0.0457],
          [-0.0289, -0.0117, -0.0310],
          [-0.0439,  0.0107, -0.0059]],

         [[-0.0066,  0.0163,  0.0142],
          [ 0.0469,  0.0376, -0.0914],
          [-0.0861, -0.0119, -0.0712]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.0804]],

         [[ 0.2080]],

         [[ 0.0616]],

         ...,

         [[-0.0615]],

         [[-0.0745]],

         [[-0.0628]]],


        [[[ 0.0969]],

         [[ 0.0638]],

         [[ 0.1534]],

         ...,

         [[ 0.2251]],

         [[-0.1912]],

         [[-0.0443]]],


        [[[ 0.0692]],

         [[-0.0152]],

         [[ 0.1137]],

         ...,

         [[ 0.0438]],

         [[ 0.1545]],

         [[-0.1480]]],


        ...,


        [[[ 0.0111]],

         [[-0.1621]],

         [[ 0.0155]],

         ...,

         [[ 0.0756]],

         [[-0.0654]],

         [[-0.0165]]],


        [[[-0.0274]],

         [[ 0.0676]],

         [[-0.0840]],

         ...,

         [[ 0.0309]],

         [[ 0.1042]],

         [[-0.0475]]],


        [[[-0.0065]],

         [[-0.1983]],

         [[ 0.0538]],

         ...,

         [[ 0.0991]],

         [[ 0.1512]],

         [[-0.0696]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 0.0846, -0.0133,  0.0572],
          [ 0.0458, -0.0092, -0.0646],
          [-0.0609, -0.0497,  0.0957]],

         [[ 0.0100, -0.0325, -0.0743],
          [ 0.0353, -0.0608,  0.0722],
          [ 0.0336, -0.0363, -0.0399]],

         [[ 0.0273,  0.0447,  0.0803],
          [-0.0312,  0.0017, -0.0224],
          [-0.0364,  0.0617,  0.0436]],

         ...,

         [[-0.0234, -0.0542, -0.0412],
          [ 0.0305,  0.0410, -0.0126],
          [ 0.0527,  0.0214,  0.1091]],

         [[ 0.0089,  0.0060,  0.0331],
          [ 0.0459, -0.0228,  0.0425],
          [ 0.0456,  0.0514, -0.0269]],

         [[ 0.0295, -0.0179,  0.0178],
          [-0.1033, -0.0059, -0.0014],
          [-0.0428, -0.0350, -0.0218]]],


        [[[ 0.0303,  0.0163, -0.0574],
          [ 0.0256,  0.0304,  0.0460],
          [-0.0384, -0.0372, -0.0537]],

         [[-0.0523,  0.0888,  0.0645],
          [-0.0051, -0.0286, -0.0514],
          [ 0.0331,  0.0215,  0.0476]],

         [[-0.0476, -0.0053, -0.0102],
          [-0.0969,  0.0888,  0.0453],
          [-0.0292, -0.0870, -0.0321]],

         ...,

         [[-0.0261,  0.0277,  0.0354],
          [-0.0759,  0.0199, -0.0159],
          [-0.0157, -0.0522, -0.0662]],

         [[-0.0057, -0.0402, -0.0118],
          [-0.0293, -0.0235, -0.0026],
          [ 0.0504, -0.0018,  0.0031]],

         [[ 0.0101, -0.0416, -0.0347],
          [ 0.0282, -0.0109, -0.0342],
          [-0.0540,  0.0170,  0.0159]]],


        [[[-0.0069,  0.0209,  0.0410],
          [-0.0450, -0.0542,  0.0039],
          [ 0.0230,  0.1045,  0.0158]],

         [[-0.0198, -0.0196, -0.0198],
          [-0.0835,  0.0313,  0.0011],
          [ 0.0667,  0.0888,  0.0014]],

         [[-0.0127,  0.0508,  0.0081],
          [ 0.0151,  0.1061, -0.0220],
          [-0.0561,  0.0460,  0.0114]],

         ...,

         [[ 0.0201,  0.0895,  0.0701],
          [ 0.0580, -0.0271,  0.0390],
          [ 0.0507,  0.0892, -0.0067]],

         [[ 0.0141, -0.0227,  0.0836],
          [-0.0159, -0.0520,  0.0317],
          [-0.0314,  0.0214, -0.1034]],

         [[ 0.1061,  0.0551, -0.0577],
          [ 0.0445, -0.0347, -0.0381],
          [ 0.0156, -0.0073,  0.1236]]],


        ...,


        [[[-0.0459, -0.0100,  0.0574],
          [ 0.0700, -0.0407, -0.0505],
          [ 0.0577, -0.0187,  0.0568]],

         [[ 0.0266, -0.0207,  0.0397],
          [ 0.0532, -0.0029,  0.0042],
          [-0.0515, -0.0302,  0.0081]],

         [[-0.1029,  0.0579, -0.0458],
          [ 0.0381,  0.0667,  0.0412],
          [ 0.0420,  0.1184, -0.0733]],

         ...,

         [[-0.0159, -0.0519,  0.0091],
          [-0.0002,  0.0205,  0.0078],
          [-0.0955,  0.1084, -0.0190]],

         [[ 0.1064, -0.0163,  0.0048],
          [-0.0056, -0.0222, -0.0793],
          [-0.0290, -0.0027,  0.0731]],

         [[ 0.0068,  0.0369,  0.0134],
          [ 0.0553,  0.0334,  0.0964],
          [ 0.0342, -0.0410, -0.1134]]],


        [[[-0.0727, -0.0690,  0.0310],
          [-0.0260,  0.0110, -0.0109],
          [-0.0428, -0.0549,  0.0081]],

         [[ 0.0038, -0.0355, -0.0359],
          [-0.0114, -0.0167,  0.0368],
          [ 0.0182,  0.0481,  0.0088]],

         [[ 0.0069, -0.0426,  0.0129],
          [-0.0130,  0.0346,  0.0987],
          [ 0.0146,  0.0650,  0.0038]],

         ...,

         [[-0.0462,  0.0428,  0.0055],
          [ 0.0217, -0.0066, -0.0785],
          [-0.0733,  0.0519, -0.0050]],

         [[ 0.0188, -0.0055, -0.0434],
          [-0.0332, -0.0172,  0.0199],
          [ 0.0031,  0.0746, -0.0045]],

         [[ 0.0692, -0.0444, -0.0403],
          [-0.0244,  0.0313, -0.0176],
          [-0.0584,  0.1139, -0.0329]]],


        [[[ 0.0577, -0.0154,  0.0704],
          [-0.0726, -0.0009,  0.0597],
          [-0.0073, -0.0125, -0.0949]],

         [[-0.0445,  0.0048, -0.0598],
          [ 0.0643,  0.0282, -0.0217],
          [ 0.0159,  0.0400,  0.0073]],

         [[-0.0816,  0.0506, -0.0407],
          [ 0.0282,  0.0254, -0.0125],
          [-0.0389, -0.0368, -0.0301]],

         ...,

         [[-0.0172,  0.0642,  0.0490],
          [-0.0179, -0.0671, -0.0225],
          [-0.0475, -0.0599,  0.0081]],

         [[-0.0128,  0.0085,  0.0414],
          [ 0.0445, -0.0354,  0.0296],
          [ 0.0116, -0.0474,  0.0225]],

         [[ 0.0420,  0.0344,  0.0220],
          [-0.0787,  0.0185,  0.0170],
          [ 0.0316, -0.0009, -0.0142]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 0.0091, -0.0340, -0.0724],
          [-0.0578, -0.0381, -0.0027],
          [-0.0882,  0.0094,  0.0004]],

         [[ 0.0930, -0.0420, -0.0411],
          [-0.0411, -0.0382, -0.0150],
          [-0.0609,  0.0010, -0.0461]],

         [[-0.0207, -0.0536, -0.0392],
          [-0.0176,  0.0894,  0.0171],
          [ 0.0814,  0.0152, -0.0582]],

         ...,

         [[-0.0016, -0.0179,  0.0305],
          [-0.1248, -0.0307, -0.0046],
          [ 0.0544,  0.0355,  0.0549]],

         [[-0.0359, -0.0066, -0.0146],
          [-0.0690,  0.0125,  0.0686],
          [ 0.0126, -0.0404,  0.0296]],

         [[-0.0729,  0.0640,  0.0294],
          [-0.0045, -0.0134, -0.0354],
          [-0.0417,  0.0011,  0.0205]]],


        [[[-0.0433, -0.0101,  0.0078],
          [-0.0037, -0.0100,  0.0182],
          [ 0.0545,  0.0616, -0.0199]],

         [[ 0.0042, -0.0270, -0.0444],
          [ 0.0321,  0.0356,  0.0785],
          [ 0.0207,  0.0236, -0.0576]],

         [[-0.1045,  0.1001, -0.0123],
          [-0.0028,  0.0100,  0.1423],
          [-0.0547, -0.0095,  0.0638]],

         ...,

         [[-0.0118, -0.0347,  0.0505],
          [-0.0200,  0.0234, -0.0274],
          [ 0.0477,  0.0579, -0.0447]],

         [[ 0.1256,  0.0514,  0.0262],
          [-0.0108, -0.0568, -0.0158],
          [-0.0796,  0.0208, -0.0063]],

         [[ 0.0856, -0.0231,  0.0388],
          [-0.0413,  0.0334, -0.1244],
          [ 0.0198,  0.0599,  0.0913]]],


        [[[-0.0141, -0.0151, -0.0688],
          [-0.0369,  0.0473, -0.0069],
          [ 0.0562, -0.0248,  0.0178]],

         [[ 0.0018,  0.0056, -0.0151],
          [ 0.0186, -0.0283,  0.1029],
          [-0.0823,  0.1202,  0.0524]],

         [[-0.0182,  0.0025,  0.0414],
          [-0.0103, -0.1025,  0.0015],
          [-0.0739, -0.0130, -0.0040]],

         ...,

         [[-0.1078, -0.0667, -0.0763],
          [ 0.0868,  0.0337, -0.0056],
          [-0.0083,  0.0343,  0.0370]],

         [[-0.0068,  0.0120,  0.0223],
          [-0.0388,  0.0473, -0.0196],
          [ 0.0135, -0.0341, -0.0203]],

         [[ 0.0524, -0.0147,  0.0980],
          [ 0.0186, -0.0123, -0.0415],
          [-0.0342,  0.0800,  0.0102]]],


        ...,


        [[[ 0.0041, -0.0678,  0.0310],
          [ 0.0219,  0.0810, -0.0168],
          [ 0.0039, -0.0589,  0.0443]],

         [[ 0.0434, -0.0089, -0.1178],
          [ 0.0052, -0.0530, -0.0177],
          [-0.0040, -0.0268, -0.0521]],

         [[ 0.0300, -0.0215, -0.0435],
          [ 0.0574, -0.0255,  0.0009],
          [ 0.0816, -0.0434,  0.0959]],

         ...,

         [[ 0.0316,  0.0463, -0.1117],
          [ 0.0011, -0.0570, -0.0344],
          [ 0.0801,  0.0437,  0.0767]],

         [[-0.0015,  0.0205,  0.1083],
          [ 0.0488, -0.0157, -0.0348],
          [ 0.0690,  0.0373,  0.0118]],

         [[-0.0187,  0.0361, -0.0120],
          [-0.0220,  0.0190, -0.0583],
          [-0.0537,  0.0143, -0.0011]]],


        [[[ 0.0156,  0.0369,  0.0262],
          [ 0.0271, -0.0032, -0.0930],
          [ 0.0130, -0.0886, -0.0220]],

         [[ 0.0354,  0.0025, -0.0619],
          [ 0.0103,  0.0167, -0.0065],
          [ 0.0553, -0.0009, -0.0834]],

         [[ 0.0591,  0.0239,  0.0170],
          [ 0.1123,  0.0641, -0.0559],
          [ 0.1002, -0.0602, -0.0386]],

         ...,

         [[-0.0273, -0.0278,  0.0501],
          [ 0.0285,  0.0392,  0.0413],
          [-0.0413,  0.0153,  0.0632]],

         [[ 0.0211,  0.0376, -0.0444],
          [-0.0310, -0.0672, -0.0289],
          [-0.0484, -0.1060, -0.0055]],

         [[-0.0070, -0.0622,  0.0660],
          [-0.0323, -0.0501,  0.0490],
          [-0.0247, -0.0374, -0.0159]]],


        [[[ 0.0127, -0.0210,  0.0237],
          [ 0.1096, -0.0369, -0.0694],
          [-0.0541,  0.0816,  0.0263]],

         [[ 0.0440, -0.0285,  0.0068],
          [ 0.0695,  0.0217, -0.0188],
          [-0.0167,  0.0407,  0.0602]],

         [[-0.0416,  0.0561,  0.0381],
          [-0.0231,  0.0270,  0.0367],
          [-0.0644,  0.0066,  0.0528]],

         ...,

         [[-0.0693,  0.0297, -0.0649],
          [-0.0434, -0.0592,  0.0022],
          [ 0.0559, -0.0259, -0.0153]],

         [[-0.0545,  0.0534,  0.1021],
          [ 0.0188, -0.0461,  0.0111],
          [ 0.0899, -0.0226,  0.0498]],

         [[ 0.0082,  0.0127,  0.0235],
          [-0.0016,  0.0700,  0.0477],
          [ 0.0032, -0.0363,  0.0590]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1488]],

         [[ 0.2611]],

         [[-0.1960]],

         ...,

         [[-0.0910]],

         [[ 0.0126]],

         [[ 0.0517]]],


        [[[-0.0581]],

         [[ 0.1502]],

         [[-0.0833]],

         ...,

         [[ 0.0542]],

         [[ 0.0549]],

         [[ 0.0477]]],


        [[[ 0.0874]],

         [[ 0.2758]],

         [[-0.0975]],

         ...,

         [[ 0.0521]],

         [[-0.0452]],

         [[-0.0058]]],


        ...,


        [[[-0.1826]],

         [[ 0.0816]],

         [[-0.2193]],

         ...,

         [[-0.0621]],

         [[-0.1707]],

         [[ 0.1013]]],


        [[[-0.1376]],

         [[ 0.0201]],

         [[ 0.0896]],

         ...,

         [[ 0.0722]],

         [[-0.1446]],

         [[ 0.0085]]],


        [[[ 0.0453]],

         [[ 0.2641]],

         [[ 0.0598]],

         ...,

         [[-0.2385]],

         [[-0.0963]],

         [[-0.0272]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[-0.0752,  0.0665, -0.0706],
          [ 0.0216,  0.0690, -0.0552],
          [ 0.0530, -0.0191,  0.0218]],

         [[-0.0340,  0.0025, -0.0500],
          [ 0.0372,  0.0052, -0.0324],
          [ 0.0155,  0.0058, -0.0242]],

         [[-0.0019, -0.0134, -0.0545],
          [-0.0402,  0.0316,  0.0718],
          [-0.0606,  0.0039,  0.0281]],

         ...,

         [[-0.0754,  0.0102,  0.0154],
          [ 0.0401, -0.0167,  0.0301],
          [-0.0571,  0.0501, -0.0035]],

         [[-0.1033,  0.0030,  0.0332],
          [-0.0879, -0.0113, -0.0698],
          [ 0.0207, -0.0225, -0.0324]],

         [[-0.0259,  0.0561,  0.0967],
          [ 0.0230, -0.0425,  0.0378],
          [-0.0018,  0.0057,  0.0246]]],


        [[[-0.0391,  0.0141, -0.0452],
          [-0.0425, -0.0151,  0.0223],
          [-0.0210, -0.0487, -0.0067]],

         [[ 0.0095,  0.0066,  0.1426],
          [-0.0521, -0.0557,  0.0241],
          [ 0.0205,  0.0024,  0.0762]],

         [[-0.0426,  0.0480, -0.0716],
          [-0.0176,  0.0570,  0.0408],
          [ 0.0256,  0.0221, -0.0053]],

         ...,

         [[-0.0149,  0.0209,  0.0279],
          [-0.0370, -0.0694,  0.0208],
          [-0.0518,  0.0315, -0.0378]],

         [[ 0.0165,  0.0400, -0.0672],
          [-0.0317, -0.0473,  0.0520],
          [ 0.0330,  0.0698,  0.0243]],

         [[-0.0406, -0.0503,  0.0259],
          [-0.0808, -0.0510, -0.0087],
          [-0.0274,  0.0473,  0.0579]]],


        [[[ 0.0988,  0.0546, -0.0093],
          [-0.0291, -0.0374, -0.0390],
          [-0.0042,  0.0103, -0.0526]],

         [[-0.0844, -0.0488,  0.0359],
          [-0.0032,  0.0367,  0.0485],
          [ 0.0228, -0.0301,  0.0172]],

         [[ 0.0016, -0.0652,  0.0142],
          [ 0.0571, -0.0085, -0.0128],
          [ 0.0173, -0.0473, -0.0745]],

         ...,

         [[-0.0033, -0.0674,  0.0105],
          [ 0.0026,  0.0416, -0.0055],
          [-0.0045, -0.0355,  0.0888]],

         [[ 0.0888, -0.0647,  0.0077],
          [-0.0727,  0.0237, -0.0110],
          [ 0.1017, -0.0426, -0.0457]],

         [[ 0.1164,  0.0267, -0.0692],
          [ 0.0289,  0.0562, -0.0137],
          [-0.0104,  0.0561, -0.0085]]],


        ...,


        [[[-0.0313,  0.0241,  0.0246],
          [ 0.0486, -0.0785,  0.0234],
          [ 0.0086, -0.0124, -0.0394]],

         [[-0.0213,  0.0205, -0.0148],
          [-0.0663,  0.0678,  0.1081],
          [-0.0051,  0.0657,  0.0079]],

         [[-0.0499, -0.0177, -0.0345],
          [-0.0293,  0.0196,  0.0360],
          [ 0.0209, -0.0238, -0.0400]],

         ...,

         [[ 0.0384,  0.0609,  0.0002],
          [-0.0197,  0.0130, -0.0175],
          [ 0.0140, -0.0657, -0.0020]],

         [[ 0.0529, -0.0431,  0.0476],
          [-0.0724,  0.0083, -0.0440],
          [-0.0220, -0.0511, -0.1031]],

         [[-0.0698,  0.0445,  0.0783],
          [-0.0597,  0.0068, -0.0273],
          [ 0.0161, -0.1098, -0.0027]]],


        [[[ 0.0425,  0.0208,  0.0264],
          [ 0.0063,  0.0093,  0.0276],
          [ 0.0109, -0.0371,  0.0115]],

         [[-0.0635, -0.0359, -0.0665],
          [-0.0941, -0.0424, -0.0072],
          [-0.0880, -0.0991,  0.0178]],

         [[-0.0161,  0.0200,  0.0179],
          [-0.0002,  0.0331,  0.0066],
          [ 0.0042,  0.1030,  0.0405]],

         ...,

         [[-0.0234,  0.0146,  0.0247],
          [-0.0105, -0.0468, -0.0937],
          [ 0.0077,  0.0500,  0.0202]],

         [[-0.0473, -0.0182,  0.0293],
          [-0.0270, -0.0452, -0.0101],
          [ 0.0274,  0.0293,  0.0721]],

         [[-0.0395,  0.0508, -0.0727],
          [ 0.0984, -0.0087,  0.0502],
          [ 0.0002, -0.0177,  0.0169]]],


        [[[-0.0234, -0.0386,  0.0325],
          [-0.0380, -0.0251,  0.0266],
          [ 0.0354,  0.0426,  0.0396]],

         [[ 0.0029, -0.1276, -0.0379],
          [-0.0138,  0.0003,  0.0476],
          [ 0.0524,  0.0802, -0.0620]],

         [[-0.0703,  0.0263,  0.0764],
          [-0.0505, -0.0121,  0.0026],
          [ 0.0338, -0.0275,  0.1404]],

         ...,

         [[ 0.0194, -0.0348,  0.0025],
          [-0.0783,  0.0352, -0.0170],
          [-0.0344,  0.0698, -0.0083]],

         [[ 0.1068,  0.0373, -0.0765],
          [-0.0795, -0.0464, -0.0014],
          [ 0.0193, -0.0409, -0.0685]],

         [[ 0.0239, -0.0147,  0.0364],
          [-0.0211,  0.0261,  0.0303],
          [ 0.0891,  0.0457, -0.0195]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 4.0897e-02, -2.1199e-02,  3.3009e-03],
          [-1.0870e-02,  1.5515e-03,  7.4889e-02],
          [ 2.4954e-03,  3.8911e-02, -5.9902e-03]],

         [[-3.2034e-02,  3.6517e-02, -2.8799e-02],
          [-6.3782e-02,  5.0852e-02, -4.7351e-02],
          [-4.1851e-03, -1.4677e-02,  5.0583e-02]],

         [[-2.0721e-02,  2.9334e-02, -4.9529e-03],
          [ 3.3927e-02,  3.6942e-02,  5.4720e-02],
          [ 3.0250e-02,  3.1421e-02,  6.4236e-02]],

         ...,

         [[-3.9948e-02,  6.4173e-02, -5.4619e-03],
          [ 1.7191e-02,  6.5300e-02,  2.9268e-02],
          [-4.4981e-02, -1.1748e-02, -6.4196e-02]],

         [[-2.2845e-02,  1.2781e-02, -2.7650e-03],
          [ 3.6578e-02, -2.5270e-02,  3.0195e-02],
          [-4.0224e-02,  4.9839e-02, -8.5761e-02]],

         [[-1.5507e-02, -6.0598e-03, -1.7684e-02],
          [ 8.6526e-03, -9.7903e-02,  1.0971e-02],
          [-6.0355e-03,  7.8006e-03,  1.3614e-02]]],


        [[[-6.4245e-02,  4.8783e-02, -4.2593e-02],
          [-2.9629e-02,  1.9457e-02,  4.5446e-02],
          [ 2.8253e-02,  2.5388e-02, -4.6281e-03]],

         [[-3.4128e-02, -4.7831e-02, -5.9093e-02],
          [ 5.5902e-03, -1.1974e-02,  1.2686e-01],
          [-1.1152e-01,  8.2138e-02,  1.7675e-02]],

         [[ 8.9106e-02, -5.0074e-02,  1.8259e-03],
          [ 3.2427e-02,  3.3366e-02,  7.7826e-02],
          [ 1.5720e-02, -7.2983e-02,  1.1688e-02]],

         ...,

         [[-9.5914e-02, -5.1561e-04, -2.0292e-02],
          [-8.2749e-02,  4.0198e-02, -3.5154e-02],
          [-3.7261e-02, -2.7807e-03,  2.8727e-02]],

         [[ 2.9016e-02,  4.8016e-02,  1.9058e-02],
          [ 4.3893e-02,  5.9152e-02, -1.7363e-02],
          [-6.9488e-02,  3.4848e-02, -8.1369e-02]],

         [[-5.4873e-02,  2.8555e-03,  2.0864e-02],
          [ 3.7706e-02, -6.2007e-02, -5.4923e-02],
          [ 6.8221e-02, -3.0071e-02,  2.5533e-02]]],


        [[[ 4.3487e-02,  2.5198e-02,  1.0120e-01],
          [ 7.6825e-03, -7.4990e-03,  2.9271e-03],
          [-7.3690e-02, -6.5628e-02,  7.0298e-03]],

         [[-6.2963e-02, -4.2535e-02, -2.3552e-02],
          [ 1.6520e-02,  4.8101e-02,  1.2100e-01],
          [-3.0269e-02,  3.7071e-02,  6.3230e-02]],

         [[-2.4478e-02, -3.6100e-02, -8.7972e-03],
          [ 2.3997e-02,  1.7275e-02, -1.6018e-02],
          [ 1.3354e-02,  8.4646e-03,  4.4404e-03]],

         ...,

         [[-4.7235e-02, -7.5385e-02,  3.2907e-02],
          [ 1.6789e-02, -1.2161e-02, -9.5278e-02],
          [ 8.9677e-02, -2.1559e-02, -7.4509e-03]],

         [[ 1.3631e-01, -7.0762e-02,  1.0513e-01],
          [-2.8926e-02,  4.7288e-02,  4.8590e-02],
          [ 3.1819e-03, -5.5039e-02, -2.5005e-02]],

         [[-6.5156e-02, -6.2952e-02, -4.1755e-03],
          [ 4.5898e-02, -8.4953e-02,  1.2667e-02],
          [-1.5947e-02,  7.1193e-02,  2.6660e-02]]],


        ...,


        [[[-4.9075e-02,  9.7256e-02, -7.7483e-02],
          [ 3.3137e-02, -7.1202e-02, -1.9999e-02],
          [-3.0956e-02,  7.2864e-02,  7.4447e-02]],

         [[ 2.9935e-02, -3.5948e-02, -2.1179e-02],
          [-9.5954e-04,  9.7009e-02,  6.8636e-02],
          [ 5.7635e-02, -3.5742e-02, -7.5258e-03]],

         [[ 1.8380e-02,  9.7377e-02,  4.5117e-03],
          [ 1.3524e-02,  3.8490e-02,  3.5316e-02],
          [-6.5669e-02, -5.0911e-02,  2.1363e-02]],

         ...,

         [[ 8.3508e-03, -3.4797e-02, -3.8896e-02],
          [ 5.8946e-02,  4.1807e-02,  1.1149e-01],
          [ 4.5094e-03,  1.3807e-02,  3.8979e-02]],

         [[-7.4727e-02,  2.7483e-02, -1.9418e-02],
          [ 2.1578e-02, -3.9577e-02,  2.7376e-03],
          [-3.8348e-02, -5.1997e-02, -4.2976e-02]],

         [[ 1.4260e-03, -5.8692e-02, -8.0258e-02],
          [-7.1668e-03,  8.8940e-03,  2.3620e-02],
          [-3.2520e-02, -1.9228e-02,  2.3458e-02]]],


        [[[ 1.9673e-02, -5.1063e-03, -1.9196e-02],
          [-2.7738e-02,  7.6016e-02, -6.1872e-02],
          [ 1.2156e-02,  4.7410e-02, -8.6372e-02]],

         [[ 1.1726e-02,  2.5374e-02,  1.1299e-02],
          [ 9.8338e-02, -7.2075e-02, -3.4047e-03],
          [ 2.0246e-02, -8.0794e-02, -1.0894e-01]],

         [[-5.0356e-03, -4.6908e-02,  1.5360e-01],
          [-3.1372e-02, -4.3983e-02, -3.5972e-02],
          [ 3.7232e-03,  3.9846e-03,  2.1228e-02]],

         ...,

         [[-2.1263e-02, -9.2048e-02, -5.0499e-02],
          [ 2.6854e-02, -4.2422e-02,  3.2271e-02],
          [ 4.0166e-02, -6.8069e-03,  3.5656e-02]],

         [[-6.1656e-03, -6.0045e-02,  2.5190e-03],
          [ 4.9703e-02, -1.1026e-02, -7.4756e-02],
          [-2.3899e-02, -3.2068e-02, -9.4823e-02]],

         [[ 7.9743e-02,  1.5665e-01,  3.8085e-02],
          [-1.4114e-02, -1.1879e-02,  1.8640e-02],
          [-9.2405e-02, -1.1443e-01,  2.5680e-02]]],


        [[[-5.9118e-03,  8.7427e-02,  1.0861e-02],
          [ 1.4663e-02, -5.7177e-02, -2.3960e-02],
          [ 4.1599e-02,  9.8265e-03, -5.9339e-02]],

         [[-3.1982e-02, -5.5678e-03, -5.9223e-02],
          [ 1.2536e-02, -1.2708e-01, -1.1991e-01],
          [-1.0504e-02,  4.1285e-02,  7.4181e-03]],

         [[-7.6761e-03, -1.1990e-02,  7.1651e-02],
          [-5.1050e-02,  8.8357e-02, -1.0225e-03],
          [ 2.9341e-02, -9.9017e-03, -3.9235e-02]],

         ...,

         [[ 7.5399e-03, -6.7843e-05, -3.0026e-02],
          [ 2.5395e-02, -1.4104e-02,  1.1089e-02],
          [ 3.7118e-02, -5.7889e-02,  1.1597e-02]],

         [[-4.0955e-02, -9.4707e-02,  8.2276e-02],
          [-3.0489e-02,  4.8420e-02,  4.8069e-02],
          [-8.6625e-03, -5.6852e-02,  9.1030e-02]],

         [[-3.7538e-02, -9.5460e-03, -1.1510e-01],
          [-1.2013e-03,  2.3442e-02, -9.9173e-02],
          [-2.4469e-02,  4.2349e-02, -2.0213e-03]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 0.0296, -0.0342,  0.1236],
          [-0.0255, -0.0511,  0.0088],
          [-0.0002,  0.0750, -0.0384]],

         [[ 0.0264, -0.0703, -0.0113],
          [-0.0089,  0.0423, -0.0382],
          [ 0.0154, -0.0513, -0.0333]],

         [[-0.0084,  0.0471, -0.0176],
          [ 0.0449,  0.0443, -0.0136],
          [-0.0803,  0.0439, -0.0398]],

         ...,

         [[-0.0758, -0.0691,  0.0676],
          [ 0.0131,  0.0215, -0.0139],
          [-0.0096,  0.0111,  0.0103]],

         [[-0.0373,  0.0424, -0.0671],
          [ 0.0958, -0.0317, -0.0105],
          [-0.0066, -0.0151, -0.0058]],

         [[ 0.0223, -0.0602, -0.0535],
          [-0.0401, -0.0544,  0.0186],
          [-0.0028, -0.0385, -0.0416]]],


        [[[-0.0206, -0.0152, -0.0066],
          [-0.0428,  0.0603, -0.0415],
          [-0.0365, -0.0549, -0.0369]],

         [[-0.0298,  0.0060,  0.0242],
          [-0.0428,  0.0182,  0.0348],
          [ 0.0105,  0.0221, -0.0323]],

         [[-0.0466,  0.0616,  0.0374],
          [ 0.1053, -0.0262,  0.0446],
          [-0.0360,  0.0190,  0.0508]],

         ...,

         [[ 0.0311,  0.0757, -0.0478],
          [-0.0027, -0.0462, -0.0496],
          [-0.0329, -0.0048, -0.0279]],

         [[-0.0409, -0.0235, -0.0021],
          [ 0.0742, -0.0167, -0.0273],
          [ 0.0105, -0.0506, -0.0684]],

         [[-0.0092, -0.0195,  0.0063],
          [ 0.0021,  0.0701, -0.0939],
          [ 0.0142,  0.0438, -0.0150]]],


        [[[-0.0229,  0.0487, -0.0091],
          [-0.0010,  0.0441,  0.0653],
          [-0.0077, -0.0203, -0.0406]],

         [[ 0.0124, -0.0324,  0.0124],
          [-0.0107,  0.0250,  0.0331],
          [ 0.0495, -0.0175,  0.0126]],

         [[-0.0218, -0.0499,  0.0075],
          [-0.0706,  0.0041, -0.0461],
          [ 0.0047, -0.0419,  0.0819]],

         ...,

         [[-0.0210, -0.0213,  0.0557],
          [ 0.0282, -0.0231,  0.0577],
          [-0.0055,  0.0318, -0.0552]],

         [[-0.0175,  0.0284, -0.0813],
          [ 0.0058, -0.0345,  0.0873],
          [-0.0107,  0.0365,  0.0008]],

         [[ 0.0298, -0.0383, -0.0299],
          [ 0.0076, -0.0606, -0.0075],
          [-0.0116,  0.0102,  0.0166]]],


        ...,


        [[[-0.0664, -0.0498,  0.0288],
          [-0.0800,  0.0152, -0.0987],
          [-0.0678,  0.0013, -0.0017]],

         [[-0.0244, -0.0405,  0.0358],
          [-0.0049,  0.0743, -0.1096],
          [ 0.0441, -0.0079, -0.0375]],

         [[-0.0122, -0.0505, -0.0131],
          [ 0.0710, -0.0283, -0.0035],
          [ 0.0149, -0.0437, -0.0150]],

         ...,

         [[-0.0084, -0.0222, -0.0117],
          [-0.0274,  0.0209, -0.0158],
          [-0.0359,  0.0656, -0.0363]],

         [[-0.0358, -0.0600,  0.0300],
          [ 0.0785,  0.0208, -0.0233],
          [ 0.0636,  0.0166, -0.0608]],

         [[-0.0150,  0.0319, -0.0068],
          [ 0.0077, -0.0438, -0.0648],
          [ 0.0327,  0.0747,  0.0711]]],


        [[[ 0.0407, -0.0960,  0.0567],
          [ 0.0505,  0.0380,  0.0027],
          [-0.0436, -0.0044,  0.1062]],

         [[ 0.0282, -0.0152,  0.0046],
          [ 0.0145, -0.0329,  0.0091],
          [ 0.0319, -0.0032,  0.0490]],

         [[ 0.0197,  0.0688,  0.0338],
          [ 0.0106, -0.0385,  0.0311],
          [-0.0130, -0.0482,  0.0343]],

         ...,

         [[-0.0209, -0.0495,  0.0177],
          [-0.0590,  0.0145, -0.0389],
          [-0.0715,  0.0165, -0.0285]],

         [[-0.0486, -0.0136,  0.0323],
          [-0.0369, -0.0501, -0.0126],
          [-0.0429,  0.0546,  0.0438]],

         [[ 0.0088,  0.0648, -0.0189],
          [-0.0087,  0.0024, -0.0449],
          [ 0.0116, -0.0078,  0.0685]]],


        [[[-0.0106, -0.0052, -0.0027],
          [-0.0191, -0.0503,  0.0277],
          [ 0.0221, -0.0171, -0.0189]],

         [[ 0.0048,  0.0064,  0.0104],
          [-0.0600,  0.0033, -0.0109],
          [-0.0087, -0.0867, -0.0815]],

         [[-0.0313, -0.0338, -0.0607],
          [ 0.0693,  0.0385,  0.0776],
          [-0.0399,  0.0213,  0.1064]],

         ...,

         [[ 0.0346,  0.0337,  0.0434],
          [-0.0018, -0.0198, -0.0011],
          [-0.0059,  0.0235, -0.0605]],

         [[ 0.0564, -0.0178,  0.0407],
          [ 0.0052,  0.0066, -0.0362],
          [-0.0096, -0.0703,  0.0289]],

         [[-0.0011,  0.0809,  0.0362],
          [ 0.0298, -0.0739,  0.0659],
          [ 0.0600, -0.0265,  0.0053]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-0.0347, -0.0056,  0.0230],
          [-0.0433,  0.0293, -0.0584],
          [ 0.0833,  0.0422,  0.0012]],

         [[ 0.0117,  0.0440,  0.0043],
          [ 0.0056,  0.0080,  0.0001],
          [ 0.0563,  0.0351,  0.0146]],

         [[-0.0009,  0.0214, -0.0477],
          [-0.0076, -0.0349, -0.0244],
          [ 0.0058,  0.0082, -0.0040]],

         ...,

         [[-0.0619,  0.0119, -0.0301],
          [ 0.0340, -0.0194,  0.0046],
          [ 0.0264,  0.0306, -0.0475]],

         [[-0.0422,  0.0004,  0.0083],
          [ 0.0183, -0.0052,  0.0132],
          [ 0.0412,  0.0471, -0.0248]],

         [[ 0.0420,  0.0358,  0.0149],
          [-0.0149,  0.0239,  0.0153],
          [-0.0693,  0.0056, -0.0387]]],


        [[[-0.0017, -0.0347,  0.0245],
          [-0.0840, -0.0029, -0.0339],
          [ 0.0388, -0.0129,  0.0270]],

         [[ 0.0281, -0.0818, -0.0451],
          [-0.0234, -0.0082,  0.0255],
          [ 0.0110, -0.0082, -0.0024]],

         [[-0.0048, -0.0106, -0.0409],
          [ 0.0667,  0.0017, -0.0412],
          [-0.0467, -0.0262,  0.0011]],

         ...,

         [[ 0.0204, -0.0431,  0.0025],
          [-0.0245, -0.0506,  0.0199],
          [-0.0613,  0.0090, -0.0200]],

         [[ 0.0592,  0.0485, -0.0090],
          [-0.1141,  0.0319, -0.0311],
          [ 0.0716,  0.0167, -0.0228]],

         [[ 0.1182, -0.0543, -0.0644],
          [ 0.0169,  0.0340, -0.0078],
          [-0.0694, -0.0744, -0.0450]]],


        [[[-0.0005, -0.0114, -0.0356],
          [ 0.0731, -0.0549,  0.0132],
          [ 0.0550,  0.0228,  0.0598]],

         [[-0.0497, -0.0538, -0.0164],
          [ 0.0518, -0.0670, -0.0388],
          [-0.0072, -0.0125,  0.0854]],

         [[ 0.0589,  0.0627, -0.0395],
          [ 0.0600,  0.0622, -0.0204],
          [-0.0078,  0.0724,  0.0143]],

         ...,

         [[ 0.0158,  0.0586,  0.0311],
          [ 0.0040, -0.0222, -0.0337],
          [ 0.0707, -0.0676,  0.0419]],

         [[ 0.0093, -0.0206, -0.0608],
          [-0.0357,  0.0452, -0.0139],
          [-0.0220, -0.0576, -0.0246]],

         [[-0.0334,  0.0307, -0.0284],
          [-0.0500,  0.0112,  0.0976],
          [-0.0631,  0.0194,  0.0830]]],


        ...,


        [[[-0.0156, -0.0303,  0.0132],
          [-0.0252,  0.0064, -0.0560],
          [-0.0079,  0.0181, -0.0052]],

         [[-0.0619,  0.0380, -0.0520],
          [ 0.0676, -0.0506, -0.0098],
          [ 0.0405,  0.0470,  0.0383]],

         [[ 0.0416, -0.0321, -0.0074],
          [-0.0345, -0.0206, -0.0141],
          [-0.0124, -0.0402, -0.0384]],

         ...,

         [[ 0.0106, -0.0102, -0.0135],
          [-0.0933,  0.0016,  0.0391],
          [-0.0289, -0.0161,  0.0212]],

         [[-0.0371,  0.0591, -0.0338],
          [ 0.0007, -0.0407, -0.0949],
          [-0.0524,  0.0139,  0.0412]],

         [[-0.0313,  0.0820, -0.0453],
          [-0.0240, -0.0154,  0.0330],
          [ 0.0373,  0.0008, -0.0307]]],


        [[[-0.0498, -0.0137, -0.0331],
          [ 0.0142, -0.0312, -0.0586],
          [ 0.0143, -0.0707,  0.0346]],

         [[-0.0696, -0.0239, -0.0186],
          [-0.0181, -0.0546, -0.0241],
          [-0.0095, -0.0111,  0.0455]],

         [[-0.0188, -0.0151, -0.0084],
          [-0.0146, -0.0312, -0.0131],
          [ 0.1106, -0.0259, -0.0119]],

         ...,

         [[-0.0259,  0.0368,  0.0376],
          [-0.0063, -0.0025,  0.0272],
          [-0.0869,  0.0456, -0.0221]],

         [[-0.1051, -0.0269,  0.0043],
          [ 0.0118, -0.0629, -0.0117],
          [-0.0051,  0.0391, -0.0455]],

         [[-0.0007,  0.0337, -0.0102],
          [ 0.0137, -0.0099, -0.0073],
          [-0.0306, -0.0417,  0.0122]]],


        [[[-0.0258, -0.0256,  0.0074],
          [ 0.0616, -0.0694, -0.0412],
          [-0.0505,  0.0158, -0.0185]],

         [[-0.0882, -0.0059, -0.0131],
          [ 0.0511,  0.0294,  0.0808],
          [ 0.0783, -0.0638,  0.0240]],

         [[-0.0578, -0.0375,  0.0558],
          [-0.0708, -0.0202,  0.0984],
          [ 0.0143,  0.0019,  0.0516]],

         ...,

         [[-0.0037, -0.0704, -0.0397],
          [ 0.0079, -0.0765, -0.0681],
          [-0.0109,  0.0684, -0.0037]],

         [[-0.0101,  0.0202,  0.0449],
          [-0.0124,  0.0111,  0.0083],
          [-0.0381,  0.0054, -0.0849]],

         [[ 0.0721,  0.0746, -0.0655],
          [ 0.0127,  0.0104, -0.0431],
          [ 0.0469, -0.0462,  0.0003]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1630]],

         [[-0.1041]],

         [[ 0.0225]],

         ...,

         [[-0.0952]],

         [[ 0.2769]],

         [[ 0.0687]]],


        [[[-0.1108]],

         [[ 0.0655]],

         [[ 0.0869]],

         ...,

         [[-0.0536]],

         [[ 0.0557]],

         [[-0.1035]]],


        [[[ 0.0826]],

         [[ 0.1155]],

         [[-0.1384]],

         ...,

         [[-0.0614]],

         [[ 0.2682]],

         [[ 0.1076]]],


        ...,


        [[[ 0.0685]],

         [[ 0.1984]],

         [[-0.0721]],

         ...,

         [[-0.1544]],

         [[ 0.0696]],

         [[-0.2099]]],


        [[[-0.0525]],

         [[ 0.0091]],

         [[ 0.0785]],

         ...,

         [[-0.0706]],

         [[-0.1605]],

         [[-0.0014]]],


        [[[-0.0989]],

         [[ 0.2211]],

         [[ 0.0099]],

         ...,

         [[-0.0642]],

         [[-0.0375]],

         [[ 0.1070]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0549, -0.0876, -0.0040],
          [-0.0743, -0.0279, -0.0336],
          [-0.0185,  0.0579,  0.0085]],

         [[ 0.0362, -0.0254, -0.0364],
          [ 0.0099,  0.0482,  0.0050],
          [ 0.0464, -0.0211,  0.0060]],

         [[-0.0478,  0.0302, -0.0006],
          [-0.0327, -0.0187,  0.0033],
          [ 0.0761, -0.0548,  0.0510]],

         ...,

         [[ 0.0195,  0.0448,  0.0234],
          [-0.0254, -0.0337,  0.0367],
          [ 0.0673,  0.0208, -0.0425]],

         [[-0.0411, -0.0966, -0.0426],
          [-0.0064, -0.0246,  0.0060],
          [ 0.0234,  0.0496, -0.0062]],

         [[-0.0487,  0.0110, -0.0170],
          [ 0.0162, -0.0542, -0.0224],
          [-0.0648,  0.0286, -0.0436]]],


        [[[-0.0133, -0.0293, -0.0375],
          [-0.0286,  0.0422,  0.0014],
          [-0.0127, -0.0857, -0.0335]],

         [[-0.0883, -0.0516, -0.0997],
          [-0.0464,  0.0324, -0.0122],
          [ 0.0467, -0.0097, -0.0563]],

         [[-0.0116,  0.0039, -0.0024],
          [-0.0287,  0.0721,  0.0655],
          [ 0.0318, -0.0603,  0.0760]],

         ...,

         [[ 0.0005,  0.0556, -0.0036],
          [ 0.0398,  0.0892,  0.0280],
          [ 0.0503, -0.0240, -0.0490]],

         [[-0.0023, -0.0127, -0.0234],
          [ 0.0029, -0.0546, -0.0392],
          [-0.0601, -0.0338, -0.0101]],

         [[-0.0246, -0.0263, -0.0059],
          [ 0.0215, -0.0285, -0.0636],
          [ 0.0346, -0.0303, -0.0105]]],


        [[[ 0.0145,  0.0918,  0.0099],
          [ 0.0716, -0.0278,  0.0554],
          [-0.0864,  0.0267, -0.0123]],

         [[-0.0067, -0.0466, -0.0067],
          [-0.0581,  0.0173, -0.0132],
          [ 0.0088, -0.0591,  0.0618]],

         [[-0.0573,  0.0216, -0.0368],
          [ 0.0378, -0.0821,  0.0064],
          [-0.0660,  0.0080,  0.0021]],

         ...,

         [[ 0.0315,  0.0325, -0.0561],
          [-0.0080,  0.0102, -0.0508],
          [-0.0326, -0.0766,  0.0056]],

         [[-0.0173,  0.0515,  0.0342],
          [ 0.0064, -0.0458,  0.0289],
          [ 0.0372, -0.0133,  0.0493]],

         [[ 0.0694,  0.0148,  0.0011],
          [-0.0187, -0.0034,  0.0041],
          [ 0.0209,  0.0078, -0.0012]]],


        ...,


        [[[-0.0022, -0.0354, -0.0498],
          [-0.0316, -0.0087,  0.0382],
          [-0.0189, -0.0094, -0.0596]],

         [[-0.0294,  0.0158,  0.0368],
          [ 0.0357, -0.0200,  0.0602],
          [ 0.0009,  0.0179,  0.0621]],

         [[ 0.0308, -0.0846, -0.0326],
          [-0.1156, -0.0289, -0.0204],
          [-0.0565, -0.0353, -0.0275]],

         ...,

         [[ 0.0485,  0.0288, -0.0011],
          [-0.0418,  0.0148, -0.0551],
          [ 0.0218, -0.0159, -0.0159]],

         [[ 0.0174, -0.0495, -0.0022],
          [ 0.0195, -0.0765,  0.0517],
          [-0.0200, -0.0250,  0.0806]],

         [[-0.0570,  0.0214,  0.0230],
          [ 0.0141, -0.0364,  0.0112],
          [-0.0022,  0.0412,  0.0770]]],


        [[[-0.0041,  0.0343, -0.0174],
          [-0.0248, -0.1090, -0.0667],
          [-0.0341,  0.0046, -0.0513]],

         [[-0.0306, -0.0357, -0.0239],
          [-0.0171,  0.0054,  0.0667],
          [-0.0277, -0.0063, -0.0147]],

         [[-0.0609, -0.0068, -0.0262],
          [-0.0462,  0.0558,  0.0251],
          [ 0.0357, -0.0732, -0.0199]],

         ...,

         [[ 0.0241,  0.0105,  0.0367],
          [-0.0418, -0.0086,  0.0645],
          [ 0.0557, -0.0624,  0.0041]],

         [[-0.0081, -0.0278,  0.0680],
          [-0.0348,  0.0156, -0.0252],
          [ 0.0286, -0.0156,  0.0594]],

         [[-0.0105, -0.0523,  0.0237],
          [-0.0548,  0.0867,  0.0093],
          [ 0.0191,  0.0082,  0.0114]]],


        [[[-0.0221, -0.0404,  0.0153],
          [-0.0219, -0.0745, -0.0398],
          [ 0.0314, -0.0357,  0.0362]],

         [[-0.0707,  0.0062, -0.0007],
          [ 0.0091, -0.0427,  0.0202],
          [ 0.0038, -0.0109,  0.0422]],

         [[ 0.0098, -0.0326,  0.0504],
          [ 0.0545, -0.0735, -0.0078],
          [-0.0528,  0.0460, -0.0314]],

         ...,

         [[-0.0442, -0.0438,  0.0253],
          [ 0.0150, -0.0310, -0.0133],
          [-0.0173, -0.0075,  0.0693]],

         [[-0.0752, -0.0169,  0.0982],
          [-0.0203, -0.0705,  0.0139],
          [-0.0519,  0.0071,  0.1093]],

         [[ 0.0150,  0.0229, -0.0509],
          [ 0.0088, -0.0444,  0.0023],
          [-0.0208, -0.0387,  0.0903]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 9.4454e-03,  6.1117e-02, -6.0723e-02],
          [-6.3353e-02, -2.5097e-02,  4.4178e-03],
          [ 1.5250e-02,  6.4819e-03,  4.1902e-02]],

         [[-4.5722e-02,  3.9261e-02,  5.2814e-03],
          [-2.4534e-02,  7.5814e-02, -9.8895e-03],
          [ 2.1952e-02,  4.4801e-02,  8.3602e-03]],

         [[-3.9786e-02,  4.8672e-02,  1.3219e-02],
          [-2.8042e-02,  1.1700e-02, -2.4525e-02],
          [ 2.4247e-02,  8.5674e-02,  1.6475e-02]],

         ...,

         [[ 6.4209e-02, -3.4249e-02, -3.3888e-02],
          [-2.4000e-02,  2.2693e-02, -7.2548e-04],
          [ 1.2614e-02, -4.5906e-02, -3.5315e-03]],

         [[ 6.1533e-02, -1.4759e-02, -3.1796e-02],
          [-4.3597e-02, -1.7021e-02, -6.1352e-03],
          [ 4.8665e-02, -3.4897e-02,  4.0070e-02]],

         [[-1.5349e-02, -9.3486e-03,  2.0126e-02],
          [ 1.7652e-02,  2.5888e-02, -6.6013e-04],
          [-6.1291e-02,  2.9274e-02,  2.2570e-02]]],


        [[[ 3.1765e-02, -1.7319e-02,  5.5525e-02],
          [-4.8815e-02,  5.5070e-03,  7.2854e-03],
          [ 2.0484e-02,  2.1653e-02, -8.5606e-03]],

         [[-7.7020e-02, -5.3916e-02,  2.3931e-02],
          [ 1.3214e-02, -3.9103e-02, -7.4147e-02],
          [-4.8962e-03, -4.7806e-03,  3.4399e-02]],

         [[-2.0502e-02, -6.9049e-02, -2.6324e-02],
          [-5.8418e-02, -5.6792e-02, -1.2766e-02],
          [-9.5438e-03,  4.5253e-02, -9.2758e-02]],

         ...,

         [[-1.8769e-02, -1.5963e-02,  2.7901e-02],
          [-8.9555e-03, -9.1824e-03,  5.0207e-02],
          [ 1.0196e-02, -4.5715e-03, -1.3266e-02]],

         [[-3.8697e-02, -5.6058e-02, -1.9071e-02],
          [-4.5819e-02, -9.4981e-04, -7.2630e-02],
          [-4.4083e-02,  1.8803e-02, -4.7072e-02]],

         [[-5.8599e-02,  7.4014e-03,  5.9917e-02],
          [ 1.7118e-02,  2.5598e-02, -5.7735e-02],
          [ 3.4479e-02,  7.6814e-02, -2.1208e-02]]],


        [[[ 6.5748e-02,  6.1873e-02, -1.0367e-01],
          [-1.8980e-02, -4.4478e-03,  4.4319e-02],
          [ 3.1220e-03,  1.6615e-02,  1.0684e-02]],

         [[ 4.1787e-02, -6.8501e-02, -1.1911e-03],
          [-4.0183e-02, -6.5712e-02,  1.9300e-02],
          [ 4.9791e-02, -3.5347e-02,  3.2750e-02]],

         [[-4.3374e-02, -3.2649e-02,  3.3181e-02],
          [ 5.6632e-02,  2.2588e-02, -7.0796e-02],
          [-6.8467e-05, -2.3183e-02, -3.1179e-02]],

         ...,

         [[-7.0594e-02,  1.2873e-01,  1.0773e-02],
          [ 2.3078e-02,  1.2080e-01,  2.2723e-02],
          [-6.0691e-03, -3.5027e-03, -1.8422e-02]],

         [[-2.1593e-02, -4.5197e-02,  5.9183e-03],
          [-3.9179e-02,  5.8650e-02, -6.9160e-02],
          [-1.3359e-02,  4.5408e-02,  1.3863e-02]],

         [[ 6.5733e-03,  9.5050e-04, -7.1506e-02],
          [-8.8668e-03, -5.1070e-02, -5.5974e-02],
          [ 1.7290e-02, -3.1570e-02,  2.0961e-02]]],


        ...,


        [[[-6.7405e-02, -1.5526e-02, -3.4603e-02],
          [-5.8617e-02,  8.1769e-03,  5.2510e-02],
          [ 1.1333e-02, -1.1496e-02, -4.3780e-02]],

         [[-8.0617e-02,  1.5894e-02,  3.2053e-02],
          [ 1.2154e-02, -9.5102e-03, -4.8350e-02],
          [-1.3012e-03, -1.4644e-02, -4.6536e-02]],

         [[ 4.0420e-02, -4.6302e-03,  6.2738e-02],
          [ 5.3047e-02,  3.0340e-02,  5.8259e-02],
          [-1.4659e-02,  3.2691e-02, -3.4444e-02]],

         ...,

         [[ 2.5506e-02, -5.0053e-03,  2.7635e-03],
          [ 1.0223e-02,  2.9038e-02,  1.4513e-02],
          [-2.0591e-02,  2.8421e-02, -3.6414e-03]],

         [[-1.2977e-02, -5.1570e-02,  4.3285e-02],
          [-4.8329e-02,  1.1183e-02,  3.6412e-03],
          [ 1.5001e-02, -3.7986e-02, -2.9024e-02]],

         [[ 1.8178e-02, -3.0642e-02, -1.6006e-02],
          [ 6.0802e-03,  1.1770e-01, -1.9518e-02],
          [ 9.2352e-03,  6.9380e-03,  2.3364e-02]]],


        [[[-1.7759e-02, -3.5410e-02, -4.6989e-02],
          [-4.4534e-02,  2.1817e-02, -3.8267e-02],
          [ 4.8244e-02,  1.1309e-02, -1.7972e-02]],

         [[ 6.1820e-02, -1.3885e-02,  1.1289e-02],
          [-7.2671e-03,  3.1842e-02,  1.0314e-02],
          [ 4.2420e-02,  2.5073e-02,  6.4441e-02]],

         [[-1.9123e-02,  1.1349e-02,  3.1467e-02],
          [ 4.3071e-02,  2.8062e-02, -5.6516e-02],
          [ 2.4379e-02,  8.1346e-03,  3.6359e-02]],

         ...,

         [[ 3.8644e-02, -1.8373e-02, -4.9430e-03],
          [ 3.6235e-02, -1.5879e-02,  1.8874e-02],
          [ 2.0044e-02, -4.9672e-03,  1.8614e-03]],

         [[ 2.8275e-02,  5.2944e-02,  5.0528e-02],
          [-3.1049e-02,  4.0727e-02, -4.7041e-02],
          [ 6.1234e-02, -5.8357e-03, -3.3527e-02]],

         [[ 2.4167e-02, -2.1896e-02,  4.4005e-02],
          [ 3.0767e-02,  4.1362e-02, -1.0633e-02],
          [ 5.3968e-02,  5.5518e-02, -9.6178e-02]]],


        [[[ 1.0590e-01, -1.8051e-03, -6.7468e-02],
          [-2.9486e-02,  8.6178e-02, -3.4965e-02],
          [ 4.7937e-02,  3.0756e-02,  5.3718e-02]],

         [[ 4.4975e-02,  6.0993e-02, -2.8133e-03],
          [-1.0946e-02,  3.7513e-02, -1.8195e-02],
          [-6.4240e-02, -7.3909e-03, -6.0571e-02]],

         [[-1.1295e-01,  1.6441e-02, -9.3023e-04],
          [ 2.4238e-02, -1.0201e-02,  7.2641e-02],
          [ 7.9059e-02,  4.3165e-03, -1.1973e-02]],

         ...,

         [[ 2.4060e-02,  2.0160e-02,  9.2762e-03],
          [ 1.5259e-02,  7.5522e-02,  2.3493e-02],
          [ 1.5913e-02, -8.0950e-02, -1.9309e-03]],

         [[-5.9415e-02, -2.9085e-02, -4.6707e-03],
          [ 3.3091e-02,  4.3720e-02,  8.5801e-02],
          [ 1.3780e-02,  3.5977e-02,  4.2972e-02]],

         [[-1.0283e-02,  6.1108e-02,  1.3054e-02],
          [-1.0903e-04, -6.5209e-02,  1.9925e-02],
          [ 5.5042e-02, -7.5566e-03,  5.5181e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[ 2.5436e-04]],

         [[-2.8360e-02]],

         [[-3.6756e-02]],

         ...,

         [[-9.7920e-02]],

         [[-1.3873e-01]],

         [[ 2.2320e-02]]],


        [[[-2.6552e-01]],

         [[ 1.5778e-01]],

         [[ 8.9803e-02]],

         ...,

         [[-6.8255e-02]],

         [[ 2.7607e-02]],

         [[ 1.2180e-01]]],


        [[[-2.1749e-02]],

         [[-1.1827e-01]],

         [[-6.8510e-02]],

         ...,

         [[-1.9565e-01]],

         [[-2.9724e-02]],

         [[ 6.7122e-02]]],


        ...,


        [[[ 9.4181e-02]],

         [[-1.0506e-01]],

         [[ 9.0028e-02]],

         ...,

         [[-5.8350e-02]],

         [[ 1.8310e-01]],

         [[-6.3229e-02]]],


        [[[ 7.5180e-02]],

         [[-1.8476e-04]],

         [[ 9.8673e-02]],

         ...,

         [[ 5.4409e-02]],

         [[-3.2061e-02]],

         [[-1.2330e-01]]],


        [[[-9.8017e-04]],

         [[-8.4730e-02]],

         [[-1.0037e-01]],

         ...,

         [[-7.4706e-02]],

         [[-3.7501e-02]],

         [[ 1.8829e-01]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[-0.0393,  0.0530, -0.0196],
          [ 0.0130, -0.0157,  0.0400],
          [ 0.0243,  0.0325,  0.0050]],

         [[-0.0100,  0.0366,  0.0073],
          [-0.0041,  0.0150,  0.0190],
          [-0.0132, -0.0218,  0.0179]],

         [[ 0.0150, -0.0266, -0.0028],
          [ 0.0109,  0.0018,  0.0065],
          [ 0.0151, -0.0361, -0.0617]],

         ...,

         [[-0.0023,  0.0480,  0.0512],
          [ 0.0062,  0.0054, -0.0304],
          [-0.0282,  0.0219,  0.0049]],

         [[-0.0169, -0.0135,  0.0035],
          [-0.0087, -0.0340,  0.0577],
          [-0.0809,  0.0478,  0.0294]],

         [[-0.0146,  0.0089, -0.0131],
          [ 0.0328,  0.0095,  0.0176],
          [ 0.0155,  0.0017, -0.0531]]],


        [[[-0.0176,  0.0227,  0.0607],
          [-0.0223,  0.0086, -0.0568],
          [ 0.0263,  0.0339,  0.0556]],

         [[ 0.0003,  0.0211,  0.1090],
          [-0.0359,  0.0077, -0.0070],
          [-0.0051,  0.0545,  0.0685]],

         [[ 0.0308,  0.0394, -0.0514],
          [-0.0236, -0.0406,  0.0071],
          [ 0.0398,  0.0203,  0.0297]],

         ...,

         [[-0.0611, -0.0207,  0.0296],
          [-0.0088, -0.0425, -0.0450],
          [ 0.0575, -0.0651, -0.0286]],

         [[-0.0188,  0.0539,  0.0574],
          [ 0.0450, -0.0423, -0.0503],
          [ 0.0245, -0.0248, -0.0165]],

         [[-0.0359,  0.0011, -0.0215],
          [-0.0703,  0.0232,  0.0123],
          [ 0.0165,  0.0238, -0.0248]]],


        [[[ 0.0239,  0.0031, -0.0682],
          [ 0.0395,  0.0313, -0.0178],
          [-0.0207, -0.0049, -0.0355]],

         [[ 0.0457, -0.0279, -0.0279],
          [-0.0153,  0.0169,  0.0018],
          [ 0.0218,  0.0034, -0.0068]],

         [[-0.0103,  0.0234,  0.0249],
          [-0.0201, -0.0032,  0.0184],
          [ 0.0561,  0.0074,  0.0097]],

         ...,

         [[ 0.0177, -0.0631,  0.0214],
          [ 0.0189,  0.0130,  0.0086],
          [ 0.0047,  0.0283, -0.0139]],

         [[ 0.0199,  0.0028, -0.0125],
          [-0.0249,  0.0307,  0.0139],
          [ 0.0037,  0.0561, -0.0367]],

         [[ 0.0376,  0.0696, -0.0315],
          [-0.0085,  0.0239, -0.0350],
          [-0.0261, -0.0713,  0.0096]]],


        ...,


        [[[ 0.0138,  0.0079, -0.0694],
          [ 0.0211, -0.0176,  0.0024],
          [ 0.0042,  0.0018,  0.0396]],

         [[-0.0464, -0.0094, -0.0089],
          [-0.0154,  0.0678, -0.0046],
          [ 0.0653, -0.0005, -0.0133]],

         [[ 0.0723, -0.0570,  0.0108],
          [-0.0052, -0.0240,  0.0122],
          [ 0.0496,  0.0485,  0.0108]],

         ...,

         [[ 0.0319,  0.0374,  0.0219],
          [ 0.0516,  0.0240,  0.0243],
          [-0.0184,  0.0400, -0.0394]],

         [[-0.0164, -0.0143,  0.0440],
          [-0.0603, -0.0605,  0.0460],
          [ 0.0291,  0.0342,  0.0007]],

         [[ 0.0075,  0.0647,  0.0080],
          [ 0.0568,  0.0100,  0.0284],
          [-0.0105, -0.0457, -0.0044]]],


        [[[-0.0057,  0.0244, -0.0543],
          [-0.0194, -0.0372,  0.0187],
          [ 0.0032,  0.0366,  0.0055]],

         [[-0.0513,  0.0211,  0.0564],
          [ 0.0126, -0.0172,  0.0253],
          [ 0.0147, -0.0181, -0.0414]],

         [[ 0.0480,  0.0257,  0.0416],
          [-0.0086, -0.0325, -0.0209],
          [-0.0322, -0.0109,  0.0139]],

         ...,

         [[ 0.0795, -0.0032,  0.0079],
          [ 0.0095, -0.0136,  0.0551],
          [ 0.0041,  0.0318,  0.0276]],

         [[ 0.0257, -0.0141, -0.0009],
          [ 0.0150, -0.0398, -0.0179],
          [-0.0168,  0.0524,  0.0186]],

         [[ 0.0263, -0.0295,  0.0160],
          [-0.0043, -0.0204,  0.0781],
          [-0.0248,  0.0108, -0.0167]]],


        [[[ 0.0357,  0.0112, -0.0406],
          [ 0.0136, -0.0503, -0.0102],
          [-0.0325, -0.0023, -0.0138]],

         [[-0.0789,  0.0120,  0.0180],
          [-0.0152, -0.0335,  0.0179],
          [ 0.0315, -0.0060,  0.0121]],

         [[ 0.0105, -0.0482, -0.0265],
          [-0.0211, -0.0439,  0.0311],
          [ 0.0517, -0.0360, -0.0090]],

         ...,

         [[ 0.0230, -0.0159,  0.0470],
          [-0.0329,  0.0187,  0.0134],
          [-0.0262,  0.0589,  0.0101]],

         [[-0.0213, -0.0470,  0.0306],
          [ 0.0191, -0.0167,  0.0052],
          [-0.0179,  0.0606, -0.0575]],

         [[ 0.0077, -0.0617, -0.0254],
          [ 0.0345,  0.0728, -0.0059],
          [ 0.0376, -0.0452,  0.0519]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[-5.0531e-03, -1.3809e-02, -3.4187e-03,  ..., -2.0751e-02,
           -6.0561e-03,  2.2456e-02],
          [ 2.0883e-02, -8.2191e-03, -1.8860e-02,  ...,  1.2331e-02,
            2.3093e-02,  6.1799e-03],
          [-4.3022e-02,  6.6073e-03, -7.9092e-04,  ..., -6.4706e-03,
           -2.6682e-02, -5.4987e-04],
          ...,
          [-1.4972e-02,  1.3949e-02,  3.2681e-03,  ..., -8.6587e-04,
           -2.4529e-02, -7.5079e-03],
          [ 1.4086e-03, -2.1324e-02, -1.5561e-02,  ...,  1.2374e-02,
            1.5371e-02,  1.5900e-02],
          [-2.1221e-02,  1.0113e-02,  2.0450e-03,  ..., -7.0350e-04,
           -4.1579e-03, -1.3709e-02]],

         [[ 3.6750e-02, -3.7372e-02, -3.7291e-02,  ..., -6.7183e-03,
           -1.3883e-02, -5.0540e-03],
          [-1.8862e-02,  3.9516e-02, -6.2175e-03,  ...,  1.7665e-02,
           -2.8711e-02,  3.4430e-03],
          [-3.5465e-03,  1.2147e-02, -3.0277e-02,  ..., -2.1761e-02,
           -9.6577e-03, -2.8267e-02],
          ...,
          [-8.7631e-03, -1.8660e-02,  1.0825e-02,  ..., -2.1383e-02,
            2.8956e-03,  1.0276e-02],
          [-6.4756e-03,  1.1883e-02,  1.9007e-02,  ..., -1.6684e-02,
            1.0139e-02,  3.6139e-02],
          [-1.6834e-02, -5.8468e-03, -1.3082e-02,  ..., -2.3703e-02,
           -6.4515e-03,  3.3489e-02]]],


        [[[-1.4285e-02, -1.7093e-02,  8.9577e-03,  ..., -1.1779e-02,
            1.3067e-02,  3.6201e-03],
          [ 1.5327e-02, -1.3131e-02, -1.9076e-02,  ...,  1.0670e-03,
            1.0032e-02, -3.4343e-03],
          [-1.9010e-02,  2.0663e-02,  6.3811e-03,  ...,  3.1313e-02,
           -1.1394e-02, -1.1475e-02],
          ...,
          [ 1.0925e-02, -1.4371e-02,  1.8347e-02,  ..., -1.1207e-03,
            4.5992e-03,  4.3050e-03],
          [ 8.5413e-03,  2.2447e-02, -2.4787e-02,  ...,  1.0707e-02,
            1.7080e-02, -2.4694e-02],
          [-1.1012e-02, -9.0093e-03, -5.7753e-03,  ...,  1.3627e-02,
            3.9212e-02,  1.5968e-02]],

         [[-1.3646e-03,  2.1711e-02, -1.0300e-02,  ...,  8.8463e-03,
           -2.2296e-02, -6.9969e-03],
          [ 2.1548e-02,  1.2020e-02,  8.0732e-03,  ..., -8.7575e-03,
            6.9317e-03,  1.4003e-02],
          [-3.7249e-02,  7.4188e-03,  2.1806e-02,  ..., -1.3327e-02,
           -1.0737e-02, -2.0573e-02],
          ...,
          [-2.2254e-03, -1.6114e-02, -1.1216e-02,  ...,  5.7052e-03,
           -1.8049e-02,  3.1617e-02],
          [ 4.7233e-03, -1.9474e-02, -3.0522e-05,  ..., -1.9279e-02,
            2.6092e-03,  5.8859e-03],
          [ 4.2839e-02,  2.6119e-02, -2.1667e-03,  ..., -2.6994e-02,
           -1.1106e-03,  8.0341e-03]]],


        [[[-8.1711e-03,  2.4079e-02,  1.6383e-02,  ..., -1.9802e-02,
            1.3976e-02, -4.0914e-03],
          [ 1.5772e-02, -7.7075e-03, -6.9870e-03,  ...,  3.2397e-03,
           -2.7818e-02,  2.6382e-02],
          [ 2.5221e-02,  7.5822e-03,  6.8439e-04,  ...,  1.2341e-02,
            2.7163e-02, -2.3676e-02],
          ...,
          [ 1.7920e-02, -1.0498e-02,  1.7909e-02,  ...,  1.9377e-02,
           -2.4867e-02, -3.4428e-04],
          [-3.3740e-02,  7.1636e-03,  9.0389e-03,  ...,  8.2079e-03,
            8.1435e-03, -6.5895e-03],
          [ 2.9416e-03, -7.7180e-03, -1.1967e-02,  ...,  2.3449e-05,
            5.2420e-03, -7.5254e-04]],

         [[-2.1672e-02,  2.2267e-02,  1.2299e-02,  ...,  1.6209e-02,
           -2.0178e-02, -1.1439e-02],
          [-6.7635e-03, -1.2824e-02, -7.2082e-03,  ...,  1.3701e-02,
            4.6633e-03,  1.6977e-02],
          [ 6.1958e-03, -2.4177e-02, -7.9747e-03,  ...,  8.2578e-03,
            7.2418e-03,  6.4880e-03],
          ...,
          [ 3.8344e-02,  2.1759e-02, -1.9546e-02,  ...,  7.0219e-03,
            9.3353e-03,  1.9385e-02],
          [ 2.9783e-02, -7.7524e-03, -1.7726e-02,  ..., -2.7098e-02,
           -2.2727e-02,  2.4909e-03],
          [-6.8252e-03, -1.2784e-02,  4.7900e-03,  ..., -1.3244e-02,
            1.2340e-04, -2.6798e-02]]],


        ...,


        [[[-1.1216e-02, -3.0012e-02,  2.0867e-02,  ...,  2.7381e-02,
            2.1016e-02, -1.3604e-03],
          [ 5.0760e-03, -1.6432e-02, -2.8376e-02,  ...,  1.1427e-02,
           -1.0099e-02,  3.1088e-05],
          [ 6.9129e-03, -7.3952e-03,  1.0475e-02,  ..., -1.1766e-02,
            2.5490e-02,  3.0246e-03],
          ...,
          [ 3.6934e-03,  1.3487e-02, -3.6371e-03,  ...,  2.6278e-02,
           -3.6621e-04,  1.6613e-03],
          [ 2.9141e-02,  2.5811e-02,  1.9837e-03,  ..., -2.8795e-02,
           -1.5386e-02, -2.9863e-02],
          [-2.6058e-03, -1.6047e-02, -5.2250e-03,  ..., -3.3354e-03,
           -5.4852e-03, -1.7532e-02]],

         [[-8.4216e-03,  2.7954e-03, -1.3884e-02,  ...,  1.5938e-02,
            2.9350e-03,  1.3065e-02],
          [ 2.9289e-02, -3.4768e-03, -9.0210e-03,  ..., -1.0068e-02,
           -1.3863e-02, -5.2509e-03],
          [-2.4291e-02,  8.6312e-03, -7.3010e-03,  ..., -7.6632e-03,
            4.8308e-03,  2.1821e-02],
          ...,
          [ 6.4079e-03,  7.3235e-03, -9.4388e-03,  ..., -6.6178e-03,
           -1.0496e-02, -7.1247e-03],
          [-6.0431e-04,  1.2926e-02, -2.0031e-02,  ...,  1.5606e-02,
            1.9566e-02,  1.8213e-02],
          [ 2.6590e-02, -8.4860e-03,  5.6544e-02,  ..., -1.8002e-02,
           -1.2623e-02,  1.4326e-02]]],


        [[[-2.7970e-03, -3.2314e-02, -2.1421e-02,  ...,  1.2343e-02,
           -1.2964e-02, -9.6519e-03],
          [ 7.6503e-03, -2.5900e-02,  1.0350e-03,  ...,  1.3760e-02,
           -1.0587e-02, -1.0470e-02],
          [-3.5270e-02, -8.2793e-04,  2.8063e-02,  ..., -6.9133e-03,
           -4.7902e-03,  2.3123e-02],
          ...,
          [-3.8130e-03,  1.2492e-02, -3.3133e-02,  ...,  2.8806e-02,
           -3.2460e-03,  5.2587e-03],
          [-2.0697e-02, -1.7625e-02,  4.2970e-03,  ..., -1.6666e-02,
           -3.1928e-03,  4.7615e-03],
          [ 1.4182e-02, -5.5042e-03, -4.0874e-03,  ...,  3.7675e-02,
           -1.3689e-02, -7.1774e-03]],

         [[ 1.4818e-02,  2.4000e-02, -2.7736e-02,  ...,  3.9585e-03,
            2.9884e-02, -1.0098e-02],
          [-9.0095e-03,  7.2246e-03,  1.1204e-03,  ...,  2.1466e-03,
            1.3612e-03, -1.0486e-02],
          [-1.8161e-02, -3.1071e-02,  8.6060e-03,  ..., -3.5728e-03,
            1.1718e-02, -1.3099e-02],
          ...,
          [ 2.9611e-02,  3.8814e-02, -1.5002e-02,  ...,  4.2704e-03,
           -3.5242e-02, -3.0152e-02],
          [ 2.9647e-02,  5.9806e-03, -1.0108e-02,  ..., -2.8451e-03,
           -5.0991e-03, -2.5802e-02],
          [-7.8950e-03, -5.7808e-03,  1.2860e-02,  ...,  2.3944e-02,
           -2.3179e-02,  3.0391e-02]]],


        [[[-5.6092e-03,  3.4648e-03, -7.4208e-03,  ..., -1.0247e-02,
            5.2827e-03,  1.2938e-02],
          [-1.2907e-02, -3.0402e-02, -3.8883e-03,  ...,  3.7547e-03,
            7.9309e-03, -4.0838e-03],
          [-4.0835e-02,  1.4413e-02,  1.3019e-02,  ...,  6.8795e-03,
           -1.0765e-02,  1.0116e-02],
          ...,
          [-9.1295e-03,  1.7154e-02, -1.7338e-02,  ...,  1.9991e-02,
           -1.3503e-02,  1.3782e-02],
          [-1.8984e-02, -3.2307e-03,  7.7863e-03,  ...,  1.1326e-02,
            2.3656e-02,  4.5524e-03],
          [-1.2072e-02, -2.0060e-02,  3.9753e-02,  ...,  5.1013e-03,
           -3.1087e-03, -7.7310e-03]],

         [[ 1.9682e-02, -1.6662e-03,  7.8998e-03,  ..., -1.7421e-02,
            6.5271e-03, -4.7886e-03],
          [ 1.8905e-02,  6.1840e-03, -4.1442e-02,  ..., -2.5460e-02,
           -1.1879e-02,  1.1543e-02],
          [ 4.3298e-03,  6.3151e-03,  1.1072e-02,  ...,  1.4138e-02,
           -4.2909e-03,  1.7350e-02],
          ...,
          [-8.9566e-03,  8.0524e-03, -8.0138e-03,  ..., -3.7697e-02,
           -1.7228e-02,  1.1751e-02],
          [-1.5979e-02, -4.4973e-02, -1.1019e-02,  ..., -3.1665e-03,
            3.2866e-03, -1.2938e-02],
          [-7.4512e-03,  1.0708e-03, -7.6420e-04,  ...,  4.6579e-03,
            3.8501e-03,  3.0614e-05]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[-0.0316,  0.0063,  0.0679],
          [-0.0273,  0.0437,  0.0024],
          [-0.0324, -0.0271, -0.0588]],

         [[-0.0839,  0.0186, -0.0439],
          [-0.1280,  0.0667,  0.1053],
          [-0.0774, -0.0729,  0.0349]],

         [[-0.0692, -0.0621,  0.0869],
          [-0.0881, -0.0392,  0.0344],
          [-0.0707,  0.0070,  0.0356]],

         ...,

         [[ 0.0417,  0.0527,  0.0222],
          [ 0.0484, -0.0150,  0.0162],
          [-0.0461,  0.0207,  0.0446]],

         [[ 0.0324, -0.0806, -0.0491],
          [ 0.0155,  0.1357, -0.0099],
          [ 0.0256, -0.0545,  0.0665]],

         [[-0.0543, -0.0567, -0.0760],
          [ 0.1205,  0.0405,  0.0651],
          [ 0.0445, -0.0423,  0.0175]]],


        [[[-0.0196, -0.0114, -0.0655],
          [ 0.0790,  0.0704,  0.0792],
          [-0.0011, -0.0541, -0.0705]],

         [[ 0.0281,  0.0023,  0.0152],
          [ 0.0177, -0.0496, -0.1208],
          [-0.0956,  0.0416,  0.0199]],

         [[-0.0238, -0.0194,  0.0309],
          [ 0.0371,  0.0213, -0.0328],
          [-0.0270,  0.0231,  0.0999]],

         ...,

         [[ 0.0443,  0.0005, -0.0388],
          [ 0.0961,  0.0178,  0.0075],
          [ 0.0794, -0.0432, -0.0207]],

         [[-0.0224,  0.0636,  0.0457],
          [ 0.0427, -0.1182,  0.0200],
          [-0.0324, -0.0403,  0.0520]],

         [[ 0.0109, -0.0205,  0.1169],
          [ 0.0846,  0.0619, -0.0213],
          [ 0.1235,  0.0051,  0.0138]]],


        [[[-0.0365,  0.0781,  0.1004],
          [ 0.0603,  0.0977,  0.0837],
          [-0.1532, -0.0525, -0.0490]],

         [[-0.0088, -0.0492,  0.0609],
          [-0.0896, -0.1275,  0.1145],
          [-0.0137,  0.0120,  0.0724]],

         [[-0.0329,  0.0999,  0.0773],
          [ 0.0155, -0.0210,  0.0767],
          [-0.0274,  0.1045,  0.0628]],

         ...,

         [[ 0.0667,  0.0154,  0.0266],
          [-0.1425, -0.0266,  0.0403],
          [-0.1436,  0.0743,  0.0379]],

         [[-0.1084, -0.0688,  0.0676],
          [-0.0250,  0.0788, -0.0930],
          [-0.0352,  0.0517,  0.0844]],

         [[ 0.0605,  0.0557, -0.0468],
          [-0.0401,  0.1491,  0.1049],
          [ 0.0347,  0.0345,  0.0633]]],


        ...,


        [[[-0.0686,  0.0043,  0.0668],
          [ 0.0104, -0.0632, -0.0003],
          [ 0.0113,  0.0111,  0.0589]],

         [[ 0.0663,  0.0868, -0.0061],
          [ 0.0503, -0.0492,  0.0401],
          [ 0.1341,  0.0486,  0.0448]],

         [[ 0.0026, -0.0992, -0.0373],
          [-0.0201, -0.0147,  0.0275],
          [ 0.0820,  0.0338, -0.0239]],

         ...,

         [[-0.0527,  0.0257,  0.0382],
          [-0.0230,  0.0508,  0.0273],
          [ 0.0087,  0.0346,  0.0547]],

         [[-0.1009,  0.0864,  0.0207],
          [-0.0144, -0.0670,  0.0366],
          [-0.0062, -0.0265,  0.0661]],

         [[ 0.0823, -0.0496,  0.0506],
          [-0.0592,  0.0084, -0.0032],
          [-0.0071, -0.0190, -0.0200]]],


        [[[-0.0884, -0.0499, -0.0431],
          [-0.0568, -0.0459,  0.0308],
          [ 0.0250, -0.0510,  0.0987]],

         [[ 0.0170,  0.1146, -0.0386],
          [ 0.0286, -0.0478,  0.1280],
          [-0.1330, -0.0521, -0.0072]],

         [[ 0.0881, -0.0118, -0.1116],
          [-0.0409, -0.0689,  0.1455],
          [-0.0275, -0.0127,  0.0453]],

         ...,

         [[ 0.0006, -0.1037, -0.1179],
          [-0.0298,  0.0458, -0.0047],
          [-0.0132,  0.0397,  0.0733]],

         [[-0.0756,  0.0606, -0.1528],
          [-0.0130, -0.0091,  0.0613],
          [-0.0130,  0.0042, -0.0312]],

         [[ 0.1140, -0.0771, -0.0044],
          [ 0.0145, -0.0063,  0.0503],
          [-0.0429,  0.0116, -0.0348]]],


        [[[ 0.0478, -0.0207,  0.0110],
          [-0.0239,  0.0673,  0.0321],
          [-0.0199, -0.0351,  0.0070]],

         [[ 0.0823,  0.0010,  0.0535],
          [-0.0217, -0.0055, -0.0063],
          [-0.0063,  0.0221,  0.0486]],

         [[ 0.0119, -0.0933, -0.0813],
          [-0.0876,  0.0100, -0.0254],
          [-0.0308,  0.0225,  0.0946]],

         ...,

         [[ 0.0729,  0.0113,  0.0540],
          [-0.0078, -0.0559,  0.0199],
          [-0.0628, -0.0151,  0.0207]],

         [[ 0.0594,  0.0842,  0.0051],
          [ 0.0129,  0.0148,  0.0428],
          [ 0.1134, -0.0037,  0.0245]],

         [[ 0.0685, -0.1004, -0.0610],
          [-0.0319,  0.0080,  0.0650],
          [-0.0272, -0.0350, -0.0072]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[ 0.0150, -0.0358, -0.0362],
          [ 0.0154,  0.0469, -0.0675],
          [ 0.0469, -0.0408, -0.0145]],

         [[ 0.0519, -0.0137,  0.0036],
          [-0.0275, -0.0442,  0.0073],
          [-0.0658,  0.0297,  0.0113]],

         [[ 0.1263,  0.0897,  0.0032],
          [-0.0200, -0.0090,  0.0137],
          [ 0.0334, -0.0034, -0.0245]],

         ...,

         [[-0.0042,  0.0518, -0.0080],
          [-0.0246, -0.0108, -0.0004],
          [ 0.0145, -0.0053, -0.0404]],

         [[ 0.0075,  0.0117, -0.0165],
          [ 0.0614, -0.0338, -0.0008],
          [-0.0068,  0.0332, -0.0264]],

         [[ 0.0955, -0.0147, -0.0150],
          [-0.0108,  0.0597, -0.0631],
          [-0.0382,  0.0195, -0.0470]]],


        [[[-0.0156, -0.0842,  0.0256],
          [-0.1026, -0.0024, -0.0839],
          [ 0.0276, -0.0016,  0.0781]],

         [[ 0.0198, -0.0406, -0.0372],
          [ 0.0015,  0.0378,  0.0371],
          [-0.0297, -0.0318,  0.0250]],

         [[ 0.0450,  0.0660,  0.0841],
          [-0.0747, -0.0174, -0.0411],
          [ 0.0191,  0.0198, -0.0097]],

         ...,

         [[ 0.0448,  0.0128, -0.0074],
          [ 0.0365,  0.0380, -0.0335],
          [-0.0288,  0.0207, -0.0197]],

         [[-0.0197, -0.0352,  0.0183],
          [ 0.0755, -0.0554, -0.0149],
          [-0.0146,  0.0888,  0.0559]],

         [[ 0.0548, -0.0085, -0.1320],
          [ 0.0367, -0.0392,  0.0277],
          [ 0.0521, -0.0357, -0.0410]]],


        [[[ 0.0038, -0.0027,  0.0320],
          [ 0.0050,  0.0105,  0.0039],
          [ 0.0269, -0.0152, -0.0603]],

         [[-0.0111, -0.0119, -0.0038],
          [ 0.0109, -0.0039, -0.0445],
          [ 0.0055,  0.0510,  0.0354]],

         [[-0.0290,  0.0591,  0.0266],
          [ 0.0016,  0.0039, -0.0097],
          [-0.0588, -0.0185,  0.0295]],

         ...,

         [[-0.0308,  0.0729, -0.0636],
          [-0.0524, -0.0105, -0.0511],
          [-0.0098, -0.0303, -0.0135]],

         [[ 0.0431,  0.0791, -0.0321],
          [-0.0634, -0.0210,  0.0102],
          [-0.0195, -0.0536, -0.0741]],

         [[-0.0137,  0.0277,  0.0235],
          [ 0.0307, -0.0326,  0.0798],
          [ 0.0170,  0.0200, -0.0390]]],


        ...,


        [[[-0.0019,  0.0437,  0.0183],
          [-0.0476, -0.0533, -0.0045],
          [ 0.0186,  0.0211,  0.0412]],

         [[-0.0810,  0.0101, -0.0691],
          [ 0.0157, -0.0155,  0.0178],
          [ 0.0233, -0.0870, -0.0077]],

         [[-0.0641,  0.0276, -0.0290],
          [ 0.0551, -0.0576,  0.0425],
          [-0.0845,  0.1216,  0.0212]],

         ...,

         [[-0.0308, -0.0371,  0.0300],
          [-0.0591,  0.0025,  0.0369],
          [ 0.0154, -0.0050, -0.0903]],

         [[-0.0318,  0.0408,  0.0191],
          [-0.0222, -0.0158,  0.0058],
          [ 0.0544,  0.0200,  0.0361]],

         [[-0.0133, -0.0926, -0.0367],
          [ 0.0261,  0.0706,  0.0458],
          [ 0.0302, -0.0028,  0.0027]]],


        [[[ 0.0304,  0.0208, -0.0050],
          [ 0.0106, -0.0226, -0.0055],
          [ 0.0307,  0.0056,  0.0480]],

         [[-0.0112, -0.0411,  0.0264],
          [ 0.0464,  0.0150,  0.0400],
          [-0.0120,  0.0129,  0.0366]],

         [[ 0.0420, -0.0265, -0.0467],
          [ 0.0279, -0.0426,  0.0165],
          [ 0.0479,  0.0202,  0.0780]],

         ...,

         [[ 0.0291, -0.0142, -0.0296],
          [-0.0307,  0.0290,  0.0867],
          [ 0.0373,  0.0475, -0.0096]],

         [[ 0.0353, -0.0040,  0.0134],
          [-0.0299, -0.0945, -0.0198],
          [-0.0651,  0.0106, -0.0123]],

         [[ 0.0098, -0.0567, -0.0054],
          [ 0.0481, -0.0620, -0.0039],
          [-0.0354, -0.0370,  0.0319]]],


        [[[ 0.0133, -0.0023, -0.0228],
          [-0.0077,  0.0526, -0.0206],
          [ 0.0042,  0.0401,  0.0633]],

         [[ 0.0484,  0.0186, -0.0086],
          [ 0.0832,  0.0239,  0.0640],
          [ 0.0714,  0.0367, -0.0415]],

         [[-0.0352, -0.0072,  0.0038],
          [ 0.0383, -0.0957, -0.0002],
          [-0.0518, -0.0888, -0.0025]],

         ...,

         [[ 0.0003,  0.0422, -0.0692],
          [-0.0057, -0.0286, -0.0142],
          [ 0.0306, -0.0044,  0.0369]],

         [[-0.0527, -0.0038,  0.0135],
          [ 0.0155, -0.1183, -0.0584],
          [ 0.0397,  0.0290,  0.0205]],

         [[ 0.0675,  0.0103, -0.0373],
          [ 0.0514,  0.0007, -0.0074],
          [ 0.0633,  0.0157,  0.0326]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[ 0.0098, -0.0087,  0.0336,  0.0240, -0.0273]],

         [[-0.0597,  0.0088,  0.0005, -0.0108, -0.0015]],

         [[-0.0007,  0.0108, -0.0085,  0.0005,  0.0052]],

         ...,

         [[-0.0073, -0.0187,  0.0326,  0.0133, -0.0051]],

         [[-0.0120, -0.0150, -0.0465, -0.0374, -0.0126]],

         [[ 0.0143, -0.0099,  0.0232, -0.0033, -0.0407]]],


        [[[-0.0540, -0.0251, -0.0056, -0.0003, -0.0333]],

         [[ 0.0365,  0.0085,  0.0124,  0.0100, -0.0558]],

         [[-0.0015, -0.0132,  0.0164,  0.0370, -0.0003]],

         ...,

         [[ 0.0157,  0.0478, -0.0167, -0.0126, -0.0165]],

         [[ 0.0241,  0.0111, -0.0131,  0.0025,  0.0130]],

         [[ 0.0066,  0.0267, -0.0350,  0.0332,  0.0070]]],


        [[[ 0.0185,  0.0044, -0.0098, -0.0143, -0.0068]],

         [[-0.0039, -0.0099,  0.0204, -0.0177, -0.0188]],

         [[ 0.0165, -0.0158,  0.0321,  0.0072,  0.0209]],

         ...,

         [[-0.0197, -0.0242, -0.0160,  0.0168, -0.0071]],

         [[ 0.0111,  0.0060,  0.0440, -0.0208,  0.0043]],

         [[ 0.0060, -0.0314, -0.0205,  0.0252, -0.0130]]],


        ...,


        [[[ 0.0044,  0.0136, -0.0363, -0.0314,  0.0359]],

         [[-0.0192, -0.0252,  0.0179,  0.0221,  0.0167]],

         [[ 0.0158,  0.0223, -0.0161,  0.0357, -0.0402]],

         ...,

         [[-0.0015, -0.0222,  0.0367, -0.0437,  0.0037]],

         [[ 0.0127,  0.0111,  0.0379, -0.0073, -0.0151]],

         [[ 0.0086, -0.0064, -0.0193,  0.0259,  0.0180]]],


        [[[-0.0015,  0.0029, -0.0250, -0.0264,  0.0193]],

         [[-0.0063, -0.0042, -0.0044,  0.0405, -0.0425]],

         [[ 0.0124, -0.0105,  0.0233,  0.0175,  0.0170]],

         ...,

         [[-0.0110,  0.0019,  0.0117,  0.0255,  0.0148]],

         [[ 0.0006, -0.0111,  0.0113, -0.0023,  0.0124]],

         [[ 0.0212, -0.0002,  0.0125, -0.0134,  0.0155]]],


        [[[-0.0252, -0.0290,  0.0324, -0.0043, -0.0018]],

         [[ 0.0013, -0.0082, -0.0084, -0.0217, -0.0064]],

         [[-0.0275,  0.0023,  0.0269,  0.0046,  0.0142]],

         ...,

         [[ 0.0002, -0.0317,  0.0124,  0.0026, -0.0532]],

         [[-0.0081,  0.0201, -0.0218, -0.0245,  0.0208]],

         [[ 0.0169,  0.0089, -0.0461, -0.0087,  0.0017]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 2.8656e-02],
          [-2.8870e-02],
          [ 3.7917e-02],
          [-1.1487e-02],
          [ 3.0316e-02]],

         [[ 2.9987e-02],
          [ 4.4114e-02],
          [ 2.0434e-02],
          [ 1.6098e-02],
          [-1.5184e-02]],

         [[ 1.2193e-02],
          [ 8.4798e-03],
          [ 6.8850e-02],
          [-4.8190e-02],
          [ 2.3989e-04]],

         ...,

         [[-9.8426e-03],
          [ 9.0340e-03],
          [ 1.8343e-02],
          [-2.5003e-02],
          [ 4.2859e-02]],

         [[-3.5200e-02],
          [-1.9346e-02],
          [ 3.1817e-02],
          [ 1.2909e-03],
          [ 1.0986e-03]],

         [[-2.7685e-02],
          [-9.3209e-03],
          [ 4.7747e-03],
          [ 2.8358e-02],
          [-1.6968e-02]]],


        [[[-1.2380e-02],
          [-3.9794e-02],
          [ 5.1824e-03],
          [-1.9231e-02],
          [ 3.0089e-02]],

         [[-5.0841e-02],
          [ 1.6501e-02],
          [-4.7683e-02],
          [ 1.8660e-02],
          [ 2.4726e-02]],

         [[-2.0301e-02],
          [ 2.0716e-02],
          [ 5.1347e-02],
          [ 7.4988e-03],
          [ 1.1059e-02]],

         ...,

         [[ 4.1469e-02],
          [ 3.5562e-02],
          [ 8.7459e-05],
          [-4.8372e-03],
          [-4.7418e-02]],

         [[ 1.9506e-02],
          [-8.6291e-03],
          [-1.8866e-02],
          [ 3.5044e-03],
          [-4.2359e-02]],

         [[ 3.5262e-03],
          [ 1.9446e-02],
          [-4.1346e-02],
          [ 2.5692e-02],
          [ 4.4834e-03]]],


        [[[ 3.8696e-03],
          [-2.7517e-02],
          [-1.9128e-02],
          [ 5.9105e-02],
          [ 1.4031e-02]],

         [[-4.2979e-04],
          [-3.1682e-03],
          [-2.0386e-02],
          [ 3.1940e-02],
          [-1.5977e-03]],

         [[ 1.3913e-02],
          [ 7.3567e-03],
          [-1.9495e-02],
          [-6.4413e-03],
          [ 8.6864e-03]],

         ...,

         [[ 1.5710e-02],
          [ 2.9704e-02],
          [ 1.3518e-02],
          [ 2.1469e-02],
          [-2.2711e-02]],

         [[ 5.3858e-03],
          [-1.1281e-02],
          [-2.7319e-03],
          [-2.5802e-02],
          [-5.9842e-03]],

         [[ 6.0730e-03],
          [-1.9682e-02],
          [ 2.2610e-02],
          [ 9.7751e-03],
          [-3.2362e-02]]],


        ...,


        [[[-1.6192e-03],
          [ 4.7027e-02],
          [-3.1812e-02],
          [ 1.7395e-02],
          [ 1.7492e-02]],

         [[-2.8731e-02],
          [ 3.0102e-02],
          [ 1.1263e-04],
          [ 2.3839e-03],
          [-1.5475e-02]],

         [[-3.6940e-02],
          [-6.9860e-03],
          [-2.1044e-02],
          [-7.9964e-03],
          [-1.3542e-02]],

         ...,

         [[ 1.4385e-02],
          [ 4.5351e-02],
          [ 4.2244e-03],
          [ 4.8722e-02],
          [-2.4118e-03]],

         [[ 2.3281e-02],
          [-2.2667e-03],
          [-2.6875e-02],
          [-3.1748e-02],
          [ 7.5661e-03]],

         [[-6.0129e-03],
          [-3.3517e-02],
          [-3.1508e-02],
          [-1.7053e-02],
          [ 1.5791e-03]]],


        [[[ 3.6240e-02],
          [-1.8106e-02],
          [ 1.2944e-02],
          [-2.0545e-03],
          [ 8.1636e-03]],

         [[ 4.2699e-03],
          [-2.6669e-02],
          [ 5.4742e-03],
          [ 4.5700e-03],
          [ 2.6214e-02]],

         [[-5.1460e-03],
          [-2.5318e-02],
          [ 1.0205e-02],
          [ 3.7339e-02],
          [ 3.8425e-03]],

         ...,

         [[ 3.0521e-02],
          [-2.2747e-02],
          [-3.0389e-03],
          [ 3.2130e-02],
          [ 1.8205e-03]],

         [[-2.4415e-02],
          [-9.4159e-04],
          [ 3.4388e-02],
          [ 1.0501e-02],
          [ 2.5781e-02]],

         [[ 3.4956e-02],
          [ 3.8317e-03],
          [ 5.3537e-02],
          [-1.9780e-03],
          [ 1.5277e-02]]],


        [[[ 2.8525e-02],
          [-5.8698e-03],
          [-2.3807e-02],
          [ 1.3393e-02],
          [-5.7986e-03]],

         [[-3.5115e-02],
          [-5.4944e-03],
          [ 2.5269e-02],
          [ 2.5542e-02],
          [-1.2062e-03]],

         [[ 5.6114e-03],
          [ 9.6603e-03],
          [-1.1391e-02],
          [-2.4063e-02],
          [ 3.3167e-02]],

         ...,

         [[-1.6985e-02],
          [ 3.0213e-03],
          [-1.3900e-02],
          [-1.4990e-02],
          [ 1.4568e-02]],

         [[-1.7307e-03],
          [ 2.2056e-03],
          [ 1.4897e-02],
          [-1.5883e-03],
          [-2.3688e-02]],

         [[ 9.7545e-04],
          [ 1.7358e-02],
          [ 1.1266e-03],
          [ 7.1485e-03],
          [ 1.4141e-02]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-0.0129,  0.0097, -0.0006,  0.0130, -0.0170]],

         [[ 0.0225, -0.0083, -0.0008,  0.0091,  0.0077]],

         [[-0.0029,  0.0439,  0.0057,  0.0043,  0.0036]],

         ...,

         [[-0.0038,  0.0351,  0.0143,  0.0154,  0.0278]],

         [[ 0.0199, -0.0098, -0.0113,  0.0097,  0.0242]],

         [[-0.0079,  0.0010,  0.0028, -0.0240, -0.0081]]],


        [[[ 0.0029, -0.0342, -0.0140, -0.0080, -0.0189]],

         [[ 0.0006, -0.0162,  0.0400, -0.0062, -0.0123]],

         [[ 0.0129,  0.0267, -0.0095, -0.0089, -0.0135]],

         ...,

         [[-0.0109, -0.0200, -0.0117,  0.0022, -0.0153]],

         [[ 0.0121, -0.0502,  0.0047, -0.0163,  0.0122]],

         [[-0.0267,  0.0045, -0.0069,  0.0097, -0.0008]]],


        [[[-0.0238, -0.0237,  0.0101, -0.0098, -0.0439]],

         [[ 0.0153, -0.0018,  0.0381,  0.0260, -0.0207]],

         [[-0.0107,  0.0075, -0.0047, -0.0607, -0.0197]],

         ...,

         [[-0.0230, -0.0026, -0.0202,  0.0459, -0.0475]],

         [[ 0.0242, -0.0813, -0.0244,  0.0010,  0.0046]],

         [[ 0.0317, -0.0365, -0.0038, -0.0023,  0.0297]]],


        ...,


        [[[-0.0230, -0.0164,  0.0125, -0.0135, -0.0063]],

         [[ 0.0213, -0.0348, -0.0013,  0.0213,  0.0055]],

         [[ 0.0006, -0.0173, -0.0143, -0.0233,  0.0125]],

         ...,

         [[ 0.0363, -0.0178,  0.0071, -0.0265, -0.0077]],

         [[ 0.0071,  0.0025, -0.0063, -0.0159,  0.0100]],

         [[ 0.0118,  0.0225, -0.0219, -0.0341, -0.0456]]],


        [[[ 0.0219, -0.0051,  0.0045,  0.0025,  0.0080]],

         [[ 0.0125,  0.0047, -0.0043,  0.0134, -0.0178]],

         [[ 0.0040, -0.0274, -0.0095, -0.0172,  0.0158]],

         ...,

         [[-0.0005,  0.0333, -0.0088, -0.0255,  0.0323]],

         [[-0.0017, -0.0077,  0.0065, -0.0008,  0.0163]],

         [[-0.0202, -0.0471,  0.0280, -0.0070, -0.0171]]],


        [[[ 0.0236,  0.0320, -0.0074,  0.0277,  0.0450]],

         [[ 0.0063, -0.0163, -0.0366,  0.0051,  0.0275]],

         [[ 0.0130, -0.0106, -0.0313,  0.0155, -0.0056]],

         ...,

         [[ 0.0418,  0.0095,  0.0368,  0.0130, -0.0106]],

         [[ 0.0097,  0.0172,  0.0009, -0.0154, -0.0265]],

         [[ 0.0053,  0.0199, -0.0003,  0.0159, -0.0103]]]], device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[ 2.4151e-02],
          [-1.6103e-02],
          [ 3.7379e-03],
          [ 8.0149e-03],
          [-3.0574e-03]],

         [[-9.9978e-03],
          [-4.3723e-03],
          [-1.7075e-03],
          [ 6.1409e-04],
          [-2.9212e-02]],

         [[ 3.2315e-02],
          [ 1.2540e-02],
          [-7.1597e-03],
          [-3.9268e-03],
          [-4.3578e-02]],

         ...,

         [[ 2.7798e-02],
          [ 9.1713e-03],
          [-6.7951e-02],
          [ 2.2204e-02],
          [ 2.6857e-02]],

         [[ 1.7109e-02],
          [ 1.2000e-02],
          [-2.2470e-02],
          [-1.3837e-02],
          [ 1.9118e-02]],

         [[ 2.1048e-02],
          [ 1.6255e-02],
          [ 2.5275e-02],
          [-3.4496e-02],
          [ 4.9919e-02]]],


        [[[-5.0605e-03],
          [-1.3439e-02],
          [-9.4799e-04],
          [ 9.1566e-04],
          [ 4.7466e-02]],

         [[ 2.0170e-02],
          [ 5.2603e-02],
          [ 2.5819e-02],
          [ 2.0764e-02],
          [-3.9281e-04]],

         [[ 4.0296e-02],
          [-8.3915e-03],
          [-2.3176e-02],
          [-1.4997e-02],
          [-2.6966e-02]],

         ...,

         [[-1.7313e-02],
          [-1.8760e-02],
          [-2.4291e-02],
          [ 1.1270e-02],
          [ 1.3193e-02]],

         [[-5.0814e-03],
          [-1.5180e-02],
          [-1.4267e-02],
          [-6.2392e-03],
          [ 1.3119e-03]],

         [[-5.3969e-02],
          [-4.6814e-03],
          [-4.4220e-02],
          [-6.9166e-03],
          [-1.2899e-02]]],


        [[[ 9.6269e-03],
          [ 2.0072e-02],
          [-1.5486e-02],
          [ 8.3014e-03],
          [ 2.9571e-02]],

         [[ 8.4612e-03],
          [ 2.4420e-02],
          [-4.9705e-02],
          [-3.8903e-03],
          [-4.4982e-03]],

         [[ 5.7389e-03],
          [-2.2097e-02],
          [-2.2300e-02],
          [ 3.7112e-02],
          [-3.5218e-02]],

         ...,

         [[ 5.4557e-03],
          [-1.6347e-03],
          [ 4.0408e-03],
          [-1.5850e-02],
          [ 1.9718e-02]],

         [[ 4.0241e-04],
          [-1.5231e-02],
          [ 7.9844e-03],
          [-1.7877e-02],
          [ 1.6073e-04]],

         [[-1.3119e-03],
          [-4.5045e-03],
          [ 1.1256e-02],
          [-1.0282e-02],
          [ 9.5185e-03]]],


        ...,


        [[[-2.0958e-03],
          [ 1.5213e-02],
          [ 2.6229e-02],
          [-2.3708e-03],
          [-3.6237e-02]],

         [[-2.8010e-03],
          [ 1.8724e-02],
          [-1.7376e-02],
          [-1.5703e-03],
          [ 3.4936e-04]],

         [[-9.8707e-03],
          [ 2.0557e-02],
          [ 5.3643e-02],
          [-9.7041e-03],
          [-1.2095e-02]],

         ...,

         [[-2.5708e-02],
          [-6.3505e-03],
          [ 8.0072e-03],
          [ 9.7778e-05],
          [-1.1135e-03]],

         [[ 6.1449e-02],
          [-2.2569e-02],
          [-5.9278e-03],
          [ 1.2412e-03],
          [ 5.3193e-02]],

         [[-1.3786e-02],
          [ 2.0722e-02],
          [-1.5813e-02],
          [-2.2412e-02],
          [-2.3599e-03]]],


        [[[ 4.0129e-03],
          [-3.3971e-03],
          [-2.2215e-02],
          [-5.4253e-02],
          [-1.5176e-03]],

         [[-3.7922e-02],
          [ 1.2032e-02],
          [-6.3225e-02],
          [-4.0640e-02],
          [ 3.8351e-02]],

         [[-1.1879e-02],
          [ 2.3074e-02],
          [-9.6453e-03],
          [ 2.0562e-02],
          [-9.4685e-03]],

         ...,

         [[-5.0212e-02],
          [-1.7039e-02],
          [-5.5269e-03],
          [-4.2854e-02],
          [ 3.9803e-02]],

         [[ 3.9807e-02],
          [-3.6233e-02],
          [-3.8198e-02],
          [ 3.7296e-02],
          [ 2.6885e-02]],

         [[-2.4477e-03],
          [-4.0961e-02],
          [-4.0801e-02],
          [ 2.9068e-02],
          [-1.2454e-02]]],


        [[[-1.6133e-02],
          [ 5.6255e-03],
          [ 7.5293e-04],
          [ 1.3505e-02],
          [ 1.2745e-02]],

         [[ 1.7263e-02],
          [ 1.0424e-02],
          [ 4.1302e-02],
          [ 4.4335e-02],
          [ 2.0313e-02]],

         [[-2.5966e-03],
          [-2.3728e-02],
          [ 3.8380e-02],
          [-1.9414e-02],
          [-3.4972e-02]],

         ...,

         [[-8.6631e-03],
          [ 2.8333e-02],
          [ 2.5893e-02],
          [-1.0804e-02],
          [-3.7238e-02]],

         [[-7.7571e-03],
          [ 7.5311e-03],
          [-3.3863e-02],
          [-1.0944e-03],
          [-6.3434e-03]],

         [[-3.1951e-02],
          [-3.4554e-02],
          [-1.9024e-02],
          [ 3.6288e-03],
          [-1.4078e-02]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[ 2.8882e-02, -2.1912e-02, -1.8711e-02, -1.2987e-02,  1.2431e-02]],

         [[-2.7740e-02,  1.7560e-02,  2.0153e-02,  3.4246e-02, -2.0870e-03]],

         [[-9.2274e-03, -2.1571e-02,  1.1600e-02,  5.2447e-02, -4.9512e-02]],

         ...,

         [[ 5.7337e-03, -1.5295e-02,  1.5364e-02, -3.1679e-02, -1.4101e-02]],

         [[ 2.8334e-03, -2.2246e-02, -1.7448e-03, -2.0586e-04,  3.8245e-02]],

         [[-3.0734e-03, -2.1158e-02,  5.4562e-03, -2.1416e-02,  4.3499e-03]]],


        [[[ 3.9607e-02,  1.6932e-02,  9.1287e-03,  2.0216e-02,  2.6131e-03]],

         [[ 2.8815e-02, -4.0808e-02,  1.2995e-02,  1.5700e-02,  9.4597e-03]],

         [[-1.9084e-02, -1.8361e-03, -1.1384e-02,  5.4482e-03, -4.2372e-02]],

         ...,

         [[ 1.3872e-02,  5.8483e-02,  2.6226e-02, -5.9815e-04,  1.6005e-02]],

         [[ 5.5720e-03, -2.7657e-02,  3.9943e-02,  1.5042e-02,  2.8632e-02]],

         [[-1.3646e-03, -2.2928e-02, -2.9736e-02, -1.3287e-02,  4.7369e-02]]],


        [[[-6.8196e-04, -2.5434e-02, -1.6764e-02, -1.9648e-02, -8.4514e-03]],

         [[ 3.0952e-03,  1.5693e-02, -5.4224e-03, -9.2699e-03, -1.2239e-02]],

         [[-1.8706e-02, -3.6147e-03,  3.2551e-02,  2.0857e-02, -6.2259e-04]],

         ...,

         [[ 7.6052e-03,  4.0302e-02, -8.5706e-03,  1.6695e-03,  6.1588e-02]],

         [[ 1.4637e-02,  4.0840e-02, -3.3136e-03, -1.1131e-02, -2.3603e-02]],

         [[ 1.5425e-02, -3.1462e-02,  2.5199e-02,  2.3732e-02,  2.2163e-03]]],


        ...,


        [[[-1.3036e-02,  1.2184e-02,  9.1657e-03,  4.5007e-03, -2.6606e-02]],

         [[ 3.1988e-02,  2.2454e-02,  1.9600e-02, -3.5711e-02,  7.6845e-03]],

         [[ 3.1442e-02, -2.8772e-02, -4.4819e-02, -8.3717e-03,  3.9884e-02]],

         ...,

         [[ 4.9380e-03,  3.6691e-02, -4.3363e-02, -2.9894e-03,  1.5030e-02]],

         [[-5.1143e-03,  6.1505e-04,  6.2116e-03,  1.1285e-02, -2.6427e-03]],

         [[-3.6258e-02, -1.1983e-02, -3.7906e-03, -2.2924e-02, -4.4919e-02]]],


        [[[ 1.3810e-02, -3.1945e-03, -2.3083e-02, -2.7026e-02,  3.2911e-02]],

         [[-2.3656e-02,  5.8168e-03, -5.9943e-03,  1.5070e-02, -3.6812e-03]],

         [[-4.2734e-03, -6.6620e-03, -1.2912e-02, -1.7302e-02, -3.9927e-03]],

         ...,

         [[-9.1526e-03, -3.6930e-04, -1.8895e-02, -2.7757e-02,  8.8947e-03]],

         [[-3.9681e-02, -9.7794e-04, -3.9129e-02,  2.3174e-02,  3.2537e-02]],

         [[ 1.4552e-03,  1.7945e-02, -9.9685e-03, -1.1358e-02, -5.8282e-03]]],


        [[[ 2.8495e-03,  2.3047e-02, -2.5875e-04,  3.6849e-02,  1.6510e-03]],

         [[ 4.3567e-02, -8.5590e-03,  2.1273e-02, -1.1226e-02,  2.8796e-05]],

         [[ 1.3170e-02,  6.6918e-03, -4.4462e-02,  1.7987e-02, -9.7169e-03]],

         ...,

         [[-1.9338e-03,  1.9068e-02, -3.5802e-03,  1.0733e-02, -7.4983e-03]],

         [[-2.5667e-02, -4.6747e-03, -3.7647e-02, -2.5368e-02, -1.0464e-03]],

         [[-3.9095e-02,  5.3164e-02, -1.2287e-03, -2.7821e-02, -2.5209e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-1.3007e-02],
          [ 2.8500e-03],
          [ 4.9824e-03],
          [ 2.0593e-02],
          [-3.9071e-02]],

         [[ 5.4896e-02],
          [-1.4157e-02],
          [ 3.5493e-03],
          [ 1.6132e-02],
          [-8.1865e-03]],

         [[-1.3036e-02],
          [-3.5854e-02],
          [ 7.1627e-03],
          [-6.0179e-04],
          [ 1.3723e-02]],

         ...,

         [[ 4.3591e-02],
          [ 1.5945e-02],
          [ 3.5122e-02],
          [ 1.3503e-02],
          [ 7.3544e-03]],

         [[-1.8304e-02],
          [-8.2766e-03],
          [-1.7010e-02],
          [-1.5092e-02],
          [ 2.5544e-02]],

         [[ 2.9263e-02],
          [-3.2910e-02],
          [-4.1444e-02],
          [-1.2066e-02],
          [-5.1837e-03]]],


        [[[ 2.0207e-03],
          [ 2.4735e-02],
          [ 1.4784e-02],
          [-1.7692e-02],
          [-1.7457e-02]],

         [[ 9.5897e-03],
          [ 8.4974e-03],
          [-3.8886e-02],
          [ 9.7498e-03],
          [-2.1679e-02]],

         [[-9.3292e-03],
          [ 8.8357e-03],
          [ 2.9219e-02],
          [ 1.9652e-02],
          [ 3.7269e-02]],

         ...,

         [[ 1.5458e-02],
          [-2.1574e-02],
          [ 1.6178e-02],
          [-1.5089e-03],
          [ 2.5266e-02]],

         [[ 3.5247e-02],
          [-1.5196e-02],
          [-4.9264e-02],
          [-1.9429e-02],
          [-7.5872e-03]],

         [[ 1.8132e-02],
          [-2.1032e-02],
          [-3.7329e-03],
          [ 4.3882e-02],
          [-1.7766e-02]]],


        [[[ 6.2061e-04],
          [-1.3345e-02],
          [ 1.3824e-02],
          [ 3.0937e-02],
          [-1.6104e-02]],

         [[ 6.7355e-03],
          [ 2.4783e-02],
          [-4.5881e-03],
          [ 1.7630e-02],
          [ 2.7959e-02]],

         [[ 2.9408e-03],
          [-5.3054e-03],
          [ 5.8673e-03],
          [-2.5894e-02],
          [-2.1875e-02]],

         ...,

         [[-7.9186e-03],
          [-3.8021e-02],
          [-3.3517e-02],
          [ 2.1382e-02],
          [-2.0387e-03]],

         [[-5.7362e-03],
          [-5.1288e-02],
          [ 4.5752e-02],
          [-8.0504e-02],
          [ 1.5884e-02]],

         [[-3.7342e-02],
          [ 2.9378e-02],
          [ 1.0776e-02],
          [ 2.0182e-02],
          [-1.0491e-02]]],


        ...,


        [[[-3.6146e-02],
          [-9.9184e-05],
          [ 3.5079e-02],
          [ 5.4640e-02],
          [ 1.7110e-02]],

         [[-2.1281e-02],
          [ 2.5268e-02],
          [ 2.8788e-02],
          [ 1.6296e-02],
          [ 4.6253e-02]],

         [[ 1.2205e-02],
          [ 3.9429e-03],
          [-2.4919e-02],
          [ 1.2155e-02],
          [-2.8120e-02]],

         ...,

         [[-2.6163e-02],
          [ 5.4460e-03],
          [-6.1549e-03],
          [-1.0390e-02],
          [ 3.3918e-04]],

         [[-1.2860e-02],
          [ 2.8023e-02],
          [ 2.2356e-03],
          [ 1.3814e-02],
          [-2.3148e-02]],

         [[-3.0172e-02],
          [-1.6126e-03],
          [ 1.3762e-02],
          [-1.2944e-02],
          [-2.1626e-02]]],


        [[[ 4.3155e-02],
          [ 2.2063e-02],
          [-4.9493e-02],
          [ 3.1094e-02],
          [ 3.0864e-03]],

         [[-1.7972e-02],
          [ 2.3568e-02],
          [ 3.0621e-02],
          [-7.5214e-03],
          [-2.8767e-03]],

         [[-1.8524e-02],
          [-9.4694e-03],
          [ 2.0180e-02],
          [-2.0571e-02],
          [-1.1331e-02]],

         ...,

         [[-3.3002e-03],
          [ 3.9151e-03],
          [-1.0153e-03],
          [-1.2142e-02],
          [-3.2816e-02]],

         [[-3.2711e-02],
          [-3.3864e-02],
          [ 6.3290e-03],
          [-3.0502e-03],
          [-3.3181e-02]],

         [[-1.0289e-02],
          [-1.0013e-02],
          [ 3.3866e-02],
          [-2.4897e-03],
          [ 2.2365e-02]]],


        [[[ 1.8071e-02],
          [-6.5976e-03],
          [-2.0148e-03],
          [ 9.6827e-03],
          [-4.5469e-02]],

         [[-3.5032e-03],
          [-3.5196e-02],
          [-2.5149e-03],
          [ 1.7986e-02],
          [ 3.6111e-02]],

         [[ 3.0210e-02],
          [ 6.4184e-03],
          [-4.0764e-02],
          [-2.6080e-02],
          [ 2.8848e-02]],

         ...,

         [[ 2.5907e-02],
          [-1.7502e-02],
          [-4.2718e-02],
          [ 4.5267e-03],
          [-3.7930e-03]],

         [[-1.2244e-02],
          [ 6.3578e-03],
          [ 6.7401e-03],
          [-5.0486e-03],
          [ 4.0461e-03]],

         [[ 4.0747e-03],
          [ 4.4359e-03],
          [-5.0983e-03],
          [-9.4600e-03],
          [-1.3210e-02]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-1.5534e-03,  9.4825e-03,  3.3112e-03],
          [ 1.5145e-02,  4.0920e-03,  4.0189e-02],
          [-3.2646e-02,  3.0961e-03, -5.0758e-02]],

         [[ 9.3562e-03, -3.4848e-02,  6.1396e-03],
          [ 3.3849e-02,  4.5925e-02,  2.7169e-02],
          [ 4.8346e-02,  1.3496e-02,  7.8768e-04]],

         [[ 4.2047e-02, -2.1211e-02, -2.0473e-03],
          [-4.0272e-02,  2.7839e-02,  1.3430e-02],
          [ 4.7670e-02, -4.4049e-02, -5.4420e-02]],

         ...,

         [[-3.9349e-02, -3.8440e-02,  4.8286e-02],
          [ 2.8373e-02, -3.3584e-02, -2.2582e-02],
          [ 5.6644e-03,  2.1580e-02, -6.3824e-02]],

         [[ 4.3075e-02, -2.8144e-02, -2.4247e-03],
          [-4.9218e-02, -3.3075e-04,  3.8205e-02],
          [ 3.0453e-02, -1.1040e-02,  1.1693e-02]],

         [[-4.3109e-02, -1.4399e-02, -5.2117e-02],
          [ 4.0156e-02, -3.0239e-02, -3.4997e-02],
          [-9.5776e-03,  4.8922e-03, -6.9516e-02]]],


        [[[ 3.8933e-03, -1.7202e-02, -3.7564e-02],
          [ 2.3861e-02, -4.5059e-02, -2.5467e-02],
          [-7.7109e-02,  1.4926e-02,  1.9779e-03]],

         [[ 1.9557e-02, -2.6234e-03,  1.5135e-02],
          [-2.6255e-02,  1.2418e-02,  7.4783e-03],
          [-2.8037e-02,  5.8833e-03,  1.0035e-02]],

         [[ 1.1990e-02,  2.3552e-03, -1.8289e-02],
          [-2.6087e-02, -1.4919e-02,  2.0542e-02],
          [ 5.8553e-03,  5.9580e-03,  2.8806e-02]],

         ...,

         [[ 2.5623e-02,  2.0057e-03,  1.2470e-02],
          [ 3.3740e-02, -1.4273e-02,  9.8852e-03],
          [-1.8073e-02, -9.0663e-03,  3.6506e-02]],

         [[-1.8197e-02, -2.0579e-04, -4.7402e-02],
          [ 4.1715e-02,  2.9430e-02,  1.1487e-02],
          [-4.1524e-02,  1.0005e-02,  2.9216e-02]],

         [[-3.3076e-02,  2.9537e-02,  1.8007e-02],
          [ 4.1401e-02, -4.5950e-02,  3.0301e-02],
          [-3.6153e-02, -1.0458e-02,  2.1686e-02]]],


        [[[-5.7914e-02,  2.4329e-02, -2.9547e-04],
          [ 5.9324e-03,  3.0724e-02, -5.4101e-03],
          [-7.0521e-02, -7.4899e-03, -3.2285e-02]],

         [[-3.2768e-02, -4.2848e-02, -6.4101e-03],
          [ 2.9131e-02,  1.9353e-02, -9.8343e-02],
          [-6.0095e-03, -1.0816e-02, -5.6378e-02]],

         [[ 4.9750e-02, -5.8130e-02, -9.6041e-03],
          [ 2.4700e-02,  3.5935e-02,  1.9844e-02],
          [ 1.8068e-02,  3.0555e-02,  4.0262e-02]],

         ...,

         [[-2.1012e-02,  3.5123e-02, -2.3905e-02],
          [-3.9576e-02,  1.0256e-03, -1.6447e-02],
          [ 2.5987e-02, -1.5794e-02, -7.5858e-03]],

         [[ 5.0476e-03, -1.3650e-02, -1.7280e-02],
          [-1.7688e-02, -6.8462e-03,  2.6921e-03],
          [-1.3418e-02, -2.0383e-02, -1.5186e-02]],

         [[ 4.1886e-02, -2.2068e-02, -3.7404e-02],
          [ 1.1683e-02,  1.8759e-03, -3.5748e-02],
          [ 3.3296e-03,  8.4188e-03, -2.5969e-02]]],


        ...,


        [[[-4.7415e-02, -2.6516e-02, -2.9310e-02],
          [-1.3429e-02,  4.3932e-02, -6.3330e-02],
          [ 3.0070e-02,  8.5512e-03, -3.3873e-05]],

         [[-2.1323e-02, -4.4939e-02, -1.9489e-02],
          [ 1.1004e-02, -2.7938e-03, -2.5626e-02],
          [-2.8874e-03,  4.0813e-02, -1.0050e-02]],

         [[ 9.6966e-03, -1.0740e-02,  7.0053e-03],
          [-2.9063e-02, -8.2592e-03, -2.6226e-02],
          [-1.7979e-02,  1.8882e-02,  7.8130e-03]],

         ...,

         [[-1.6933e-02,  2.5879e-02, -6.2302e-03],
          [ 1.1527e-03,  5.4254e-02, -1.5975e-02],
          [ 2.2117e-02, -1.5743e-02,  2.8302e-03]],

         [[ 8.7547e-03, -3.1176e-02, -6.4297e-03],
          [ 1.7008e-02,  1.0837e-02,  3.8188e-03],
          [-7.6535e-03, -9.4778e-03, -3.1001e-02]],

         [[ 4.7722e-03,  3.0343e-02,  6.7230e-02],
          [ 2.3855e-03, -3.1635e-02, -1.4285e-02],
          [-4.8457e-02, -5.0368e-02, -5.9912e-03]]],


        [[[ 3.3435e-02, -1.0716e-02,  1.4795e-02],
          [ 1.1409e-02, -1.4386e-02,  2.9552e-02],
          [-2.9757e-02,  4.3110e-03, -4.9047e-02]],

         [[-7.8402e-02, -6.7835e-03,  6.4739e-02],
          [-2.2833e-02,  3.3347e-02,  1.7978e-02],
          [ 1.3698e-02,  1.8632e-02,  2.6845e-02]],

         [[-1.3134e-02, -1.6432e-02, -3.0707e-02],
          [-1.1078e-02, -3.3206e-02, -2.7623e-02],
          [-1.4175e-02,  1.3386e-02, -4.0951e-02]],

         ...,

         [[ 1.4403e-03, -2.3186e-02, -2.6632e-02],
          [ 8.9826e-03,  1.8434e-02,  2.8978e-03],
          [ 5.1292e-02,  1.1212e-03, -2.5525e-02]],

         [[ 1.0030e-02, -3.5950e-02, -1.0202e-02],
          [-3.5088e-03,  2.1163e-02,  1.3613e-02],
          [ 1.2424e-03,  1.4898e-02, -3.6505e-02]],

         [[ 7.1558e-02, -6.8186e-03, -7.1300e-03],
          [-2.8642e-02, -1.5779e-02,  5.3631e-03],
          [-1.6997e-02,  5.9987e-03, -3.0240e-03]]],


        [[[-5.7041e-03,  5.1547e-04,  3.5053e-02],
          [-8.3438e-03,  3.0576e-02,  9.2234e-03],
          [-1.8947e-02,  3.2745e-02,  2.2944e-02]],

         [[-1.2144e-02, -9.6164e-03,  3.9079e-02],
          [-6.5851e-02,  3.2998e-02,  1.0593e-02],
          [-1.2138e-02,  1.1607e-02, -5.8096e-02]],

         [[-1.5243e-02, -2.5154e-02,  1.7330e-02],
          [ 4.2812e-02,  9.6975e-03,  3.1094e-03],
          [-4.4162e-02, -3.2891e-02, -8.5388e-03]],

         ...,

         [[-3.4530e-02,  1.6849e-03,  1.1467e-02],
          [-7.7412e-02, -3.0954e-02, -1.0382e-03],
          [-3.9856e-02, -9.5693e-03,  5.2984e-03]],

         [[-1.9211e-02, -3.7095e-03, -1.6684e-02],
          [-4.4587e-02,  2.3338e-02, -5.6878e-02],
          [ 2.8449e-02,  4.7086e-03, -3.6362e-02]],

         [[-1.6679e-02,  1.8955e-02, -5.0278e-03],
          [-6.8898e-02, -2.0821e-02, -5.9501e-02],
          [ 9.5737e-03, -3.0988e-02, -2.2573e-02]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[-0.0208,  0.0042,  0.0069],
          [-0.0193, -0.0203, -0.0116],
          [ 0.0084, -0.0037, -0.0017]],

         [[-0.0140,  0.0184, -0.0194],
          [ 0.0093, -0.0098,  0.0103],
          [ 0.0025, -0.0022, -0.0196]],

         [[ 0.0145, -0.0083, -0.0038],
          [-0.0066,  0.0161,  0.0066],
          [-0.0199, -0.0149,  0.0199]],

         ...,

         [[-0.0051,  0.0141, -0.0142],
          [ 0.0165, -0.0044, -0.0164],
          [ 0.0083, -0.0150,  0.0164]],

         [[-0.0049, -0.0069,  0.0165],
          [-0.0141, -0.0119,  0.0082],
          [-0.0053, -0.0072,  0.0014]],

         [[-0.0205, -0.0132, -0.0117],
          [ 0.0162, -0.0177, -0.0143],
          [-0.0110, -0.0178, -0.0046]]],


        [[[-0.0039,  0.0085, -0.0101],
          [ 0.0006, -0.0037, -0.0207],
          [-0.0178, -0.0191,  0.0144]],

         [[ 0.0009,  0.0162,  0.0151],
          [ 0.0048, -0.0208,  0.0148],
          [ 0.0165,  0.0098, -0.0041]],

         [[-0.0151,  0.0128, -0.0043],
          [-0.0080, -0.0121, -0.0124],
          [-0.0004, -0.0205, -0.0038]],

         ...,

         [[-0.0060,  0.0072,  0.0131],
          [ 0.0114,  0.0189, -0.0137],
          [ 0.0101, -0.0073,  0.0091]],

         [[ 0.0122,  0.0176, -0.0138],
          [ 0.0124, -0.0159,  0.0204],
          [-0.0038, -0.0167, -0.0011]],

         [[ 0.0038,  0.0124, -0.0127],
          [-0.0146,  0.0180, -0.0069],
          [-0.0039,  0.0069,  0.0161]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([ 0.0015, -0.0002], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 0.0103, -0.0027, -0.0112],
          [-0.0293,  0.0193,  0.0544],
          [ 0.0098,  0.0278, -0.0053]],

         [[-0.0323,  0.0126, -0.0104],
          [-0.0295,  0.0367, -0.0289],
          [-0.0135,  0.0189,  0.0178]],

         [[ 0.0088, -0.0253,  0.0891],
          [ 0.0161,  0.0334, -0.0262],
          [ 0.0166,  0.0372,  0.0543]],

         ...,

         [[ 0.0577,  0.0419,  0.0078],
          [-0.0506, -0.0222, -0.0023],
          [ 0.0077, -0.0097, -0.0236]],

         [[-0.0129, -0.0031, -0.0095],
          [-0.0210,  0.0471,  0.0067],
          [ 0.0281,  0.0195, -0.0027]],

         [[ 0.0117,  0.0066, -0.0193],
          [ 0.0094,  0.0175,  0.0245],
          [-0.0008, -0.0315,  0.0424]]],


        [[[-0.0096, -0.0007,  0.0075],
          [ 0.0094, -0.0315, -0.0556],
          [-0.0356, -0.0618, -0.0226]],

         [[ 0.0005,  0.0153,  0.0065],
          [-0.0262,  0.0439,  0.0599],
          [-0.0403, -0.0370, -0.0009]],

         [[ 0.0763,  0.0110,  0.0025],
          [-0.0215,  0.0239,  0.0151],
          [-0.0232,  0.0075,  0.0278]],

         ...,

         [[-0.0779,  0.0334, -0.0009],
          [-0.0423, -0.0204, -0.0190],
          [-0.0126, -0.0298, -0.0068]],

         [[-0.0182,  0.0304, -0.0069],
          [ 0.0216, -0.0427,  0.0443],
          [-0.0668, -0.0163, -0.0359]],

         [[ 0.0193,  0.0121,  0.0401],
          [-0.0730,  0.0512,  0.0223],
          [ 0.0031, -0.0381, -0.0098]]],


        [[[ 0.0219,  0.0063, -0.0487],
          [ 0.0184,  0.0218,  0.0034],
          [-0.0423,  0.0151,  0.0141]],

         [[-0.0326, -0.0643, -0.0535],
          [ 0.0278,  0.0164, -0.0007],
          [-0.0540, -0.0168, -0.0155]],

         [[ 0.0187, -0.0066, -0.0025],
          [-0.0057, -0.0294, -0.0752],
          [ 0.0252,  0.0249, -0.0208]],

         ...,

         [[ 0.0391, -0.0105,  0.0090],
          [ 0.0165,  0.0219, -0.0242],
          [-0.0227,  0.0032, -0.0071]],

         [[-0.0069,  0.0407,  0.0127],
          [-0.0225, -0.0327, -0.0004],
          [-0.0156,  0.0050, -0.0322]],

         [[ 0.0085,  0.0015,  0.0075],
          [ 0.0180,  0.0237, -0.0231],
          [ 0.0163, -0.0157, -0.0581]]],


        ...,


        [[[-0.0386,  0.0311, -0.0065],
          [-0.0296,  0.0148, -0.0335],
          [-0.0253,  0.0460,  0.0142]],

         [[ 0.0088, -0.0428,  0.0131],
          [-0.0166,  0.0152, -0.0274],
          [-0.0179, -0.0104,  0.0418]],

         [[ 0.0206,  0.0296, -0.0793],
          [-0.0300, -0.0340, -0.0583],
          [ 0.0437, -0.0412,  0.0028]],

         ...,

         [[-0.0295, -0.0389,  0.0125],
          [-0.0044,  0.0190, -0.0004],
          [-0.0329, -0.0080, -0.0254]],

         [[-0.0286, -0.0005, -0.0065],
          [ 0.0316, -0.0137,  0.0266],
          [ 0.0335, -0.0365,  0.0312]],

         [[ 0.0571, -0.0302,  0.0126],
          [ 0.0562,  0.0111,  0.0394],
          [ 0.0486, -0.0505, -0.0244]]],


        [[[-0.0248,  0.0228, -0.0245],
          [-0.0069,  0.0465,  0.0042],
          [ 0.0149,  0.0029,  0.0478]],

         [[-0.0282, -0.0045,  0.0001],
          [ 0.0413, -0.0312,  0.0099],
          [ 0.0330, -0.0089, -0.0236]],

         [[-0.0308, -0.0053,  0.0395],
          [ 0.0005, -0.0420,  0.0222],
          [ 0.0095, -0.0149, -0.0077]],

         ...,

         [[ 0.0339, -0.0349,  0.0561],
          [-0.0100, -0.0244,  0.0356],
          [ 0.0177, -0.0022, -0.0009]],

         [[ 0.0287, -0.0637,  0.0764],
          [ 0.0086,  0.0024,  0.0217],
          [-0.0172,  0.0273,  0.0400]],

         [[ 0.0235, -0.0163,  0.0129],
          [ 0.0058, -0.0064, -0.0497],
          [ 0.0247, -0.0110, -0.0306]]],


        [[[-0.0101, -0.0129,  0.0236],
          [-0.0455, -0.0277,  0.0470],
          [-0.0393, -0.0010,  0.0137]],

         [[ 0.0041, -0.0150, -0.0247],
          [ 0.0352, -0.0017, -0.0365],
          [ 0.0167, -0.0284, -0.0500]],

         [[-0.0612, -0.0574, -0.0158],
          [ 0.0379,  0.0002,  0.0164],
          [-0.0485,  0.0027,  0.0342]],

         ...,

         [[ 0.0158, -0.0228, -0.0112],
          [ 0.0177, -0.0310,  0.0034],
          [-0.0530,  0.0317, -0.0266]],

         [[ 0.0272, -0.0260,  0.0273],
          [-0.0216,  0.0169, -0.0243],
          [ 0.0053, -0.0168, -0.0125]],

         [[-0.0277,  0.0241, -0.0131],
          [-0.0173,  0.0531, -0.0081],
          [-0.0199, -0.0086,  0.0128]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[ 0.0512]],

         [[ 0.0338]],

         [[ 0.0224]],

         ...,

         [[-0.0152]],

         [[-0.0251]],

         [[ 0.0129]]],


        [[[-0.0067]],

         [[ 0.0035]],

         [[-0.0390]],

         ...,

         [[ 0.0519]],

         [[ 0.0146]],

         [[ 0.0308]]],


        [[[ 0.0123]],

         [[-0.0268]],

         [[ 0.0108]],

         ...,

         [[ 0.0434]],

         [[ 0.0077]],

         [[-0.0559]]],


        ...,


        [[[-0.0568]],

         [[ 0.0308]],

         [[-0.0079]],

         ...,

         [[-0.0088]],

         [[-0.0076]],

         [[-0.0445]]],


        [[[-0.0619]],

         [[-0.0579]],

         [[ 0.0180]],

         ...,

         [[-0.0009]],

         [[-0.0089]],

         [[ 0.0154]]],


        [[[ 0.0249]],

         [[-0.0221]],

         [[-0.0381]],

         ...,

         [[ 0.0399]],

         [[-0.0239]],

         [[-0.0578]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([-0.0393, -0.0164,  0.0315, -0.0155, -0.0037,  0.0465,  0.0405, -0.0110,
        -0.0094, -0.0537, -0.0495,  0.0450, -0.0123,  0.0486,  0.0492, -0.0040,
         0.0493,  0.0300,  0.0423, -0.0037,  0.0337, -0.0012,  0.0354, -0.0095,
         0.0235, -0.0361,  0.0621, -0.0271,  0.0309,  0.0386, -0.0521,  0.0215,
        -0.0552,  0.0592, -0.0543, -0.0124,  0.0424,  0.0322, -0.0273,  0.0421,
         0.0376, -0.0314, -0.0293,  0.0399, -0.0056, -0.0234, -0.0189,  0.0047,
         0.0220,  0.0580, -0.0272, -0.0392,  0.0456,  0.0523, -0.0496, -0.0100,
         0.0557,  0.0286,  0.0303, -0.0090,  0.0266, -0.0167,  0.0061,  0.0464,
        -0.0160,  0.0153, -0.0509,  0.0060,  0.0051,  0.0401,  0.0514,  0.0227,
        -0.0298, -0.0237,  0.0394,  0.0615,  0.0028,  0.0172,  0.0279, -0.0221,
         0.0014, -0.0028, -0.0463,  0.0539,  0.0149, -0.0578, -0.0080, -0.0234,
         0.0496,  0.0058, -0.0436, -0.0112, -0.0480,  0.0222, -0.0091, -0.0298,
        -0.0618, -0.0039,  0.0374, -0.0125,  0.0609, -0.0237, -0.0427,  0.0373,
        -0.0481, -0.0247, -0.0167, -0.0069, -0.0084, -0.0260, -0.0211, -0.0121,
        -0.0345, -0.0194, -0.0214, -0.0286, -0.0589, -0.0308,  0.0006,  0.0225,
        -0.0062,  0.0239, -0.0438, -0.0269, -0.0362,  0.0249,  0.0406,  0.0053,
         0.0096,  0.0303,  0.0583, -0.0385,  0.0159, -0.0304,  0.0005, -0.0506,
         0.0318, -0.0101, -0.0281, -0.0614,  0.0135, -0.0031,  0.0036, -0.0497,
         0.0374,  0.0477, -0.0126,  0.0285,  0.0454,  0.0251,  0.0400,  0.0217,
        -0.0073, -0.0424, -0.0048,  0.0184,  0.0320, -0.0323,  0.0446, -0.0288,
        -0.0388,  0.0165, -0.0523, -0.0138,  0.0141, -0.0126,  0.0138, -0.0215,
         0.0356, -0.0308,  0.0464,  0.0182,  0.0278, -0.0102,  0.0583,  0.0448,
        -0.0213, -0.0186,  0.0449,  0.0610, -0.0456,  0.0182, -0.0164,  0.0131,
        -0.0096, -0.0436, -0.0289, -0.0218, -0.0458,  0.0401, -0.0364, -0.0446,
        -0.0034, -0.0081,  0.0477,  0.0545,  0.0224,  0.0145,  0.0254, -0.0318,
        -0.0077,  0.0231, -0.0453, -0.0331,  0.0310,  0.0249,  0.0578,  0.0568,
        -0.0349,  0.0598,  0.0150,  0.0209, -0.0122, -0.0389,  0.0169,  0.0504,
        -0.0173,  0.0200,  0.0219, -0.0197,  0.0190, -0.0451,  0.0126,  0.0131,
        -0.0193, -0.0565,  0.0095, -0.0074,  0.0544, -0.0528,  0.0517, -0.0202,
        -0.0039,  0.0078, -0.0563, -0.0049, -0.0239, -0.0554,  0.0227, -0.0102,
        -0.0011, -0.0476, -0.0209,  0.0142, -0.0211,  0.0316, -0.0412, -0.0341,
        -0.0479,  0.0208, -0.0210,  0.0490, -0.0456,  0.0419, -0.0531,  0.0398,
         0.0342, -0.0056,  0.0544,  0.0408,  0.0621, -0.0558,  0.0544, -0.0326,
        -0.0388, -0.0355,  0.0435, -0.0247, -0.0488, -0.0258,  0.0110, -0.0255,
        -0.0043,  0.0527, -0.0571, -0.0194, -0.0428,  0.0020, -0.0043,  0.0325,
        -0.0231, -0.0162,  0.0043,  0.0133, -0.0160,  0.0354, -0.0328,  0.0080,
         0.0217,  0.0021, -0.0528,  0.0047,  0.0127,  0.0267, -0.0343, -0.0257,
         0.0467,  0.0333, -0.0098,  0.0026, -0.0299, -0.0494,  0.0590, -0.0269,
        -0.0563,  0.0307, -0.0482,  0.0096, -0.0418, -0.0175, -0.0192, -0.0261,
         0.0442, -0.0028,  0.0524,  0.0603,  0.0455,  0.0322, -0.0125,  0.0112,
         0.0556,  0.0277, -0.0539,  0.0195,  0.0307,  0.0522,  0.0169, -0.0392,
         0.0442, -0.0251,  0.0522,  0.0259, -0.0483,  0.0287,  0.0216, -0.0302,
        -0.0408, -0.0543,  0.0583, -0.0558, -0.0616, -0.0479,  0.0195, -0.0617,
         0.0080, -0.0581,  0.0208, -0.0330,  0.0176,  0.0229,  0.0425,  0.0164,
         0.0161,  0.0132, -0.0200, -0.0272,  0.0032, -0.0611, -0.0021,  0.0162,
         0.0092, -0.0471,  0.0317,  0.0302, -0.0503, -0.0116,  0.0431,  0.0067,
        -0.0263,  0.0326,  0.0402,  0.0430,  0.0032, -0.0237, -0.0031, -0.0389,
         0.0428, -0.0157, -0.0355, -0.0030,  0.0067, -0.0066, -0.0218, -0.0139,
        -0.0201, -0.0027, -0.0157, -0.0468,  0.0430, -0.0593, -0.0417,  0.0367,
        -0.0514,  0.0390, -0.0223,  0.0620,  0.0234,  0.0110, -0.0128,  0.0099,
         0.0442,  0.0319,  0.0202,  0.0066, -0.0104,  0.0216,  0.0268,  0.0390,
        -0.0385,  0.0557, -0.0566, -0.0426,  0.0296, -0.0040, -0.0384, -0.0445,
         0.0592,  0.0055,  0.0411,  0.0175, -0.0384,  0.0246, -0.0192, -0.0266,
        -0.0520,  0.0283,  0.0257, -0.0410,  0.0089,  0.0467,  0.0415,  0.0118,
         0.0296,  0.0441, -0.0517, -0.0452, -0.0298,  0.0285, -0.0517,  0.0032,
         0.0211, -0.0611, -0.0509,  0.0514, -0.0552, -0.0024, -0.0415, -0.0074,
        -0.0067, -0.0208,  0.0337,  0.0219,  0.0555,  0.0407, -0.0426, -0.0029,
        -0.0504,  0.0619,  0.0319,  0.0580, -0.0413,  0.0428,  0.0554,  0.0307,
         0.0360, -0.0333, -0.0225, -0.0238,  0.0061,  0.0402,  0.0340, -0.0169,
         0.0265,  0.0235, -0.0459, -0.0381, -0.0371,  0.0507, -0.0319, -0.0221,
         0.0386, -0.0130, -0.0114, -0.0449,  0.0093,  0.0067,  0.0352,  0.0391,
        -0.0572,  0.0207, -0.0310,  0.0113,  0.0096,  0.0289,  0.0147, -0.0366,
        -0.0023,  0.0069, -0.0173,  0.0459,  0.0318,  0.0593, -0.0217, -0.0090,
         0.0491, -0.0462, -0.0097,  0.0188,  0.0508,  0.0200, -0.0191, -0.0241,
         0.0257,  0.0046, -0.0397, -0.0149, -0.0535, -0.0601, -0.0494, -0.0117,
        -0.0417, -0.0271,  0.0564,  0.0615, -0.0543, -0.0273, -0.0479,  0.0276,
        -0.0247,  0.0049,  0.0247, -0.0150, -0.0588, -0.0247,  0.0449, -0.0056,
         0.0144, -0.0084, -0.0230, -0.0486,  0.0186, -0.0042, -0.0021, -0.0491,
        -0.0423,  0.0021,  0.0369,  0.0212, -0.0269,  0.0382, -0.0470, -0.0143,
        -0.0287, -0.0094,  0.0410, -0.0310, -0.0422,  0.0386, -0.0576,  0.0492,
        -0.0613, -0.0337,  0.0151, -0.0117, -0.0264, -0.0430,  0.0385, -0.0147,
        -0.0145, -0.0394, -0.0455, -0.0561, -0.0486, -0.0304, -0.0511,  0.0076],
       device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[-5.1655e-02,  2.0141e-02, -3.6787e-02,  ...,  7.9652e-03,
           -5.8437e-03, -1.5643e-02],
          [-1.2923e-02, -2.3277e-02, -4.5928e-02,  ...,  7.7089e-04,
           -1.4384e-02,  8.5016e-03],
          [ 6.6668e-03, -6.4799e-02, -1.6083e-02,  ...,  1.1788e-02,
            1.5001e-02, -6.1939e-03],
          ...,
          [ 2.8262e-02, -2.8962e-02, -5.3746e-03,  ...,  2.2607e-02,
            1.9166e-02, -1.8602e-02],
          [ 2.2773e-02, -1.1913e-02, -4.3998e-02,  ..., -2.3589e-03,
            2.8382e-02, -1.8015e-02],
          [ 3.8805e-02, -9.3585e-02, -8.7454e-03,  ...,  1.2487e-02,
           -4.2786e-02,  1.8133e-02]],

         [[ 3.3081e-02, -7.0338e-02, -3.0017e-02,  ..., -4.3586e-03,
           -4.6377e-02,  1.4594e-02],
          [ 4.5885e-03,  2.7903e-02, -1.9159e-02,  ...,  3.2455e-02,
            9.7973e-04, -4.7941e-03],
          [ 6.0485e-03, -5.7474e-04, -4.7509e-03,  ...,  5.0188e-02,
            4.1823e-02, -3.3024e-02],
          ...,
          [-2.6466e-02, -1.1005e-02,  2.0539e-02,  ...,  3.0619e-03,
            1.2223e-03,  2.9808e-02],
          [ 4.6216e-02, -3.2597e-02,  1.9328e-03,  ..., -1.6445e-02,
           -3.4746e-03, -3.2829e-02],
          [-5.8142e-03, -2.5703e-02,  2.1677e-02,  ..., -3.7371e-04,
           -7.8277e-03, -4.5798e-04]],

         [[ 8.9272e-04,  8.2801e-03,  3.9321e-02,  ...,  1.6087e-02,
           -3.5225e-02, -5.4143e-02],
          [ 5.9264e-04,  2.6977e-02, -5.4997e-03,  ..., -1.1513e-02,
            2.5868e-02,  1.3355e-03],
          [-1.8825e-02, -2.0073e-02, -3.6126e-03,  ..., -1.6085e-02,
            3.6687e-02, -3.5855e-02],
          ...,
          [-3.0209e-02, -5.4131e-02,  7.4617e-03,  ..., -5.7707e-03,
           -2.4303e-03,  2.9807e-02],
          [-3.0857e-02, -1.1701e-02, -2.0056e-02,  ...,  9.9731e-04,
            7.6789e-03,  7.2885e-04],
          [ 7.4734e-03,  5.3577e-02,  3.1032e-02,  ..., -2.9780e-02,
           -8.8735e-03,  2.2370e-02]]],


        [[[ 5.6722e-02, -5.1540e-02,  6.9918e-02,  ...,  3.6455e-02,
            8.2676e-03, -3.9252e-02],
          [-1.1225e-02,  1.6736e-02,  6.4328e-04,  ..., -3.5825e-02,
           -3.2830e-02,  2.2418e-03],
          [-1.3080e-03, -3.5247e-03,  2.0096e-02,  ...,  2.0263e-02,
            2.5059e-02,  1.5410e-02],
          ...,
          [-1.1354e-02, -2.5410e-02, -2.0006e-02,  ..., -4.8449e-03,
           -1.2730e-02,  3.2631e-02],
          [ 3.2759e-02,  2.6475e-02,  5.6536e-02,  ..., -2.5266e-02,
            7.7082e-03, -2.5947e-02],
          [-1.3826e-03, -4.0286e-02, -3.3772e-02,  ...,  3.9288e-03,
           -1.6757e-02,  7.3590e-03]],

         [[-1.3110e-02, -1.1900e-02, -7.4476e-03,  ..., -5.9964e-02,
            3.2872e-02, -3.6769e-02],
          [ 8.1433e-03, -1.8139e-02,  2.7492e-02,  ...,  3.6439e-03,
           -3.8840e-02,  1.2933e-02],
          [ 2.9731e-02,  1.1950e-02,  4.3491e-03,  ...,  2.8015e-02,
           -5.1133e-03,  3.4002e-02],
          ...,
          [-3.8064e-02,  3.5132e-02,  4.5876e-02,  ..., -2.2690e-02,
           -4.9157e-03, -7.7343e-03],
          [-2.2351e-02, -1.7807e-02, -5.3026e-02,  ...,  1.9609e-02,
            1.2799e-02,  3.1581e-02],
          [-3.6625e-03,  1.6095e-02,  5.0660e-02,  ...,  2.0840e-02,
            4.2856e-03, -1.2732e-02]],

         [[-3.3728e-02, -6.1683e-03, -2.9686e-02,  ...,  2.0927e-03,
            1.7770e-02, -8.3275e-03],
          [ 8.1597e-03, -2.2900e-02,  2.6071e-02,  ..., -1.2742e-02,
           -3.3443e-03,  4.2741e-02],
          [ 8.9756e-03, -8.7738e-03,  2.0795e-02,  ..., -7.1262e-03,
            1.2964e-03, -1.5230e-02],
          ...,
          [ 1.7177e-02, -2.9487e-02,  2.1585e-03,  ...,  1.4036e-02,
            6.1589e-03, -1.7971e-02],
          [-1.4242e-02, -1.1502e-02, -1.7065e-02,  ...,  2.1637e-02,
           -5.6320e-03,  8.2505e-03],
          [ 6.4127e-02, -4.1672e-02, -1.4757e-03,  ..., -1.7762e-02,
            3.0619e-02, -6.9632e-03]]],


        [[[-5.9758e-03, -7.4557e-03, -1.4423e-02,  ...,  8.4722e-03,
           -2.2549e-02, -9.2813e-03],
          [-2.5281e-02, -1.6729e-02,  1.3850e-02,  ...,  1.6270e-03,
            7.7093e-03, -1.9280e-02],
          [-4.7545e-02,  1.4944e-02,  4.3137e-03,  ..., -1.2508e-02,
           -2.1216e-03,  1.4192e-02],
          ...,
          [ 3.1701e-02,  3.5230e-02,  1.3477e-02,  ..., -4.8985e-03,
            6.6181e-02,  1.8504e-02],
          [ 1.3846e-02,  3.1954e-02, -2.4325e-02,  ..., -8.3699e-03,
            8.0578e-03,  2.5472e-02],
          [-4.9632e-03, -2.6046e-02,  6.1556e-02,  ..., -3.6405e-02,
           -2.8300e-03, -3.8778e-03]],

         [[-4.6122e-02, -1.4905e-02, -4.2293e-02,  ...,  1.3451e-03,
           -2.2161e-02, -3.3306e-03],
          [ 7.8830e-03,  2.0907e-02,  5.0788e-02,  ...,  5.5999e-03,
           -3.7562e-02,  2.7964e-02],
          [ 3.0254e-02, -6.8672e-04,  1.4736e-04,  ..., -2.1810e-02,
           -2.3637e-02, -1.3138e-02],
          ...,
          [-3.6338e-02, -1.0733e-02, -6.1692e-02,  ..., -2.0445e-02,
            1.4187e-02, -1.3951e-02],
          [-7.9645e-03,  8.6870e-02,  3.6932e-02,  ...,  6.9495e-03,
           -2.7758e-02,  2.4714e-02],
          [ 5.1054e-03, -2.3096e-02,  1.4717e-02,  ...,  3.1379e-02,
            3.0418e-02,  2.8351e-02]],

         [[ 2.2905e-02, -1.4623e-02,  1.7884e-02,  ..., -8.3241e-03,
            6.8931e-02, -3.8281e-02],
          [-1.5416e-02,  1.0922e-02, -1.1254e-03,  ...,  1.4411e-02,
            1.1363e-02,  1.7812e-02],
          [-2.0281e-02, -4.8628e-02, -2.8572e-02,  ...,  1.6968e-02,
           -4.9889e-02, -3.8476e-02],
          ...,
          [-3.9979e-02, -9.5270e-03, -3.0807e-02,  ...,  2.0134e-02,
            2.4593e-02, -2.7172e-02],
          [-1.7732e-02, -1.1906e-02, -6.3451e-03,  ..., -1.4425e-02,
            9.5594e-03, -1.4724e-02],
          [-2.1257e-03, -2.0208e-02, -7.6244e-03,  ..., -7.3750e-04,
            7.5237e-03,  1.6623e-02]]],


        ...,


        [[[-4.7873e-04, -2.3161e-02, -3.8580e-02,  ..., -1.4564e-02,
            1.0912e-02,  1.9969e-02],
          [-6.6252e-03,  2.9674e-02, -1.5649e-02,  ...,  1.4585e-02,
            1.9096e-02, -7.7896e-04],
          [-8.7504e-03, -8.2952e-03,  6.1191e-02,  ..., -1.1003e-02,
           -1.1531e-02, -4.4895e-02],
          ...,
          [-8.9256e-03, -3.1649e-02,  7.5820e-03,  ...,  2.2352e-03,
            1.1991e-02, -1.1921e-02],
          [ 4.5094e-02,  1.1083e-02,  3.5429e-02,  ...,  2.0503e-02,
            1.5906e-02,  3.6496e-02],
          [-6.2513e-03,  1.3726e-02,  5.4717e-03,  ..., -3.8285e-02,
            4.0006e-03, -1.7479e-02]],

         [[-2.6643e-02, -1.5630e-03,  2.1470e-02,  ..., -7.2166e-03,
           -4.0585e-03, -2.3793e-02],
          [ 1.7138e-02, -1.1272e-02, -3.6231e-02,  ..., -3.2262e-02,
           -1.7796e-04, -4.3227e-05],
          [-2.3626e-03,  2.4447e-02, -8.5087e-03,  ..., -3.0730e-02,
           -4.5142e-02, -3.5925e-04],
          ...,
          [ 1.8340e-02,  8.0382e-03, -1.2835e-02,  ...,  2.5149e-02,
            8.4082e-03,  2.8067e-02],
          [-7.9300e-03,  2.2013e-02,  1.3856e-02,  ..., -1.0387e-04,
           -3.9910e-02, -1.0273e-02],
          [-3.4778e-02,  1.2089e-02,  3.5409e-02,  ..., -2.3822e-02,
           -1.9029e-02, -5.3034e-02]],

         [[ 2.4367e-03,  2.9020e-02,  7.1900e-03,  ...,  3.0300e-02,
           -3.8245e-02,  4.4224e-02],
          [-7.5491e-03, -4.2839e-02,  4.1859e-02,  ..., -1.8548e-02,
           -6.9670e-03,  3.8395e-02],
          [-1.4228e-03,  5.2223e-02,  5.4826e-02,  ...,  6.4664e-03,
           -3.7147e-02, -2.4410e-02],
          ...,
          [-2.8503e-02,  3.3581e-02,  1.7603e-02,  ..., -1.6016e-02,
           -1.2682e-02, -4.1912e-02],
          [ 1.6525e-02, -1.6798e-02,  4.3589e-02,  ...,  3.1315e-02,
            4.1773e-02,  1.8400e-03],
          [-1.7197e-02,  3.2466e-02,  8.4814e-03,  ..., -3.4603e-02,
            3.9522e-02, -1.3936e-02]]],


        [[[-9.3630e-03,  3.9609e-03, -3.9691e-02,  ..., -1.5758e-02,
           -8.3559e-03, -1.4673e-02],
          [ 1.3125e-02,  2.2770e-02, -3.3182e-02,  ..., -1.9698e-02,
            1.4302e-02,  1.8561e-02],
          [ 1.3180e-02, -2.4492e-02, -4.8616e-02,  ..., -1.1823e-03,
            2.8761e-03,  1.8253e-03],
          ...,
          [ 3.0537e-02, -1.9432e-02,  1.1533e-02,  ..., -2.7266e-02,
            1.2438e-02,  3.2542e-02],
          [ 4.9546e-03,  2.1097e-02, -2.1601e-02,  ...,  2.1814e-02,
           -5.1646e-04,  7.7451e-03],
          [-2.2612e-02, -5.6858e-03,  5.7550e-02,  ..., -3.6378e-02,
            5.3478e-03,  2.2017e-03]],

         [[ 4.8947e-02, -4.2378e-03,  3.8004e-02,  ...,  8.8615e-03,
            1.6046e-02,  9.8620e-03],
          [ 2.1612e-03,  3.5802e-02, -2.7671e-02,  ...,  1.6421e-02,
            1.4309e-02,  4.0800e-03],
          [ 1.7007e-02,  6.0189e-03,  3.6196e-02,  ...,  3.9548e-03,
            3.3164e-02, -6.5825e-02],
          ...,
          [-3.3891e-02,  1.8309e-02, -1.9729e-02,  ..., -1.6857e-02,
           -8.6178e-03,  3.1749e-02],
          [ 1.9352e-02,  2.1669e-02, -4.8997e-02,  ...,  2.7487e-02,
           -2.9087e-02,  1.7532e-02],
          [ 3.5676e-03,  1.1732e-02, -2.0617e-02,  ..., -1.9861e-02,
           -3.3413e-02, -5.4050e-02]],

         [[-6.6514e-02, -5.4614e-02,  1.0235e-02,  ...,  3.8200e-02,
           -2.9988e-03,  1.0333e-03],
          [ 1.2774e-02,  6.1200e-02,  3.4740e-02,  ...,  2.9875e-02,
           -1.7316e-02, -3.9013e-03],
          [-3.9952e-03, -1.9763e-02,  8.2868e-03,  ..., -3.4488e-02,
           -7.3842e-03, -8.3292e-03],
          ...,
          [ 6.0746e-03,  1.4018e-02, -6.3867e-03,  ...,  6.0799e-04,
           -4.1074e-02,  7.4979e-03],
          [-6.1291e-04, -1.8984e-02,  1.1885e-02,  ...,  2.8502e-02,
            1.5547e-02,  3.7848e-02],
          [-1.6645e-02,  4.9586e-02,  3.6816e-02,  ...,  7.5585e-03,
           -5.7736e-02,  4.4354e-03]]],


        [[[ 1.9423e-03,  7.4983e-03,  2.6450e-02,  ..., -3.5744e-02,
            5.2451e-02, -2.4222e-02],
          [ 1.1804e-02,  1.9740e-02,  4.3908e-02,  ..., -1.9415e-02,
            1.3414e-02,  1.9670e-02],
          [ 1.3647e-02,  5.2833e-02, -1.4326e-02,  ..., -3.9563e-02,
            3.7614e-02,  1.3261e-02],
          ...,
          [ 1.6107e-02, -3.5635e-02,  2.8344e-02,  ...,  1.3361e-02,
            3.1655e-02,  1.7774e-02],
          [ 3.9606e-02, -1.3583e-02, -1.1772e-02,  ...,  2.3049e-02,
            4.6894e-02,  3.0309e-02],
          [-1.4898e-02,  5.3877e-03,  1.3848e-02,  ..., -2.4936e-02,
           -4.3421e-03, -2.0610e-02]],

         [[ 1.9286e-02, -5.6971e-03,  2.0946e-02,  ...,  3.0291e-02,
            1.6991e-02, -1.5238e-03],
          [ 9.4766e-03, -1.0910e-04,  7.2847e-03,  ..., -2.9463e-02,
            2.3341e-02, -2.2044e-02],
          [ 2.1301e-02,  4.3256e-03,  5.2592e-02,  ...,  1.5426e-02,
            4.4670e-02,  2.0432e-02],
          ...,
          [ 4.3068e-02, -1.4794e-02,  3.7951e-02,  ..., -6.7556e-02,
            3.8394e-03,  7.6160e-03],
          [-5.7155e-03, -3.3328e-02,  2.0301e-04,  ..., -9.5954e-03,
           -2.8219e-02, -2.6083e-03],
          [-2.2889e-02,  1.0313e-02,  2.4007e-02,  ...,  3.4576e-03,
            1.8314e-03,  6.5061e-03]],

         [[-2.1021e-02,  1.4252e-02,  8.7243e-03,  ...,  1.5996e-02,
           -1.6972e-02,  2.9406e-02],
          [-1.3137e-02,  3.3806e-02,  5.1303e-02,  ..., -1.2186e-02,
            6.9926e-03,  3.5864e-02],
          [-3.3001e-02,  1.8299e-02,  1.0007e-02,  ...,  1.5431e-02,
           -1.3010e-02, -2.3137e-02],
          ...,
          [ 6.2553e-02,  2.7497e-02, -5.4805e-03,  ...,  4.3455e-02,
            1.3432e-02, -1.6460e-02],
          [-4.9371e-02, -2.6335e-02,  4.4507e-03,  ...,  1.6710e-02,
           -3.6093e-03, -2.3633e-02],
          [ 1.8679e-03,  3.2775e-02,  5.0950e-02,  ..., -4.2567e-03,
            5.0626e-02,  2.9359e-02]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0256, -0.0658,  0.0371],
          [ 0.0204,  0.0413,  0.1513],
          [ 0.0668,  0.0552, -0.1063]],

         [[ 0.0170, -0.0362,  0.0530],
          [ 0.0325, -0.0060,  0.1012],
          [ 0.0989,  0.0660, -0.0134]],

         [[-0.0824, -0.0232,  0.0348],
          [ 0.0649, -0.1924, -0.0126],
          [ 0.0838,  0.0127, -0.0421]],

         ...,

         [[ 0.1256,  0.0810, -0.0116],
          [-0.0633,  0.0590, -0.0163],
          [-0.0699, -0.0377,  0.0273]],

         [[ 0.0540,  0.1219,  0.0468],
          [ 0.1179, -0.0183, -0.0983],
          [ 0.0214,  0.0954, -0.0242]],

         [[-0.0735,  0.0360,  0.0444],
          [-0.0497,  0.0043,  0.0460],
          [-0.1162, -0.0236,  0.0358]]],


        [[[ 0.0860,  0.0084,  0.0357],
          [-0.0108,  0.0156,  0.0329],
          [ 0.0897,  0.0490,  0.0361]],

         [[ 0.0029,  0.0249, -0.0650],
          [ 0.0609,  0.0764,  0.0772],
          [ 0.0125,  0.0505,  0.0558]],

         [[-0.0416, -0.0514, -0.0132],
          [ 0.0553,  0.0247, -0.0177],
          [-0.0401, -0.0746,  0.0036]],

         ...,

         [[-0.0037,  0.0082, -0.0421],
          [ 0.1040, -0.1065, -0.0268],
          [ 0.1467, -0.0875,  0.0426]],

         [[-0.0009,  0.0255,  0.0843],
          [-0.1427,  0.0642, -0.0395],
          [-0.0654,  0.0139,  0.0036]],

         [[ 0.0629,  0.0061, -0.0489],
          [ 0.0509, -0.0806, -0.0292],
          [-0.0413,  0.0026,  0.1204]]],


        [[[-0.0931,  0.0019,  0.0207],
          [ 0.1377,  0.0749,  0.0594],
          [ 0.0048, -0.0312,  0.0263]],

         [[-0.0934,  0.0166,  0.0877],
          [ 0.0035, -0.0185,  0.0461],
          [ 0.0935,  0.1045, -0.0715]],

         [[ 0.0635, -0.0103,  0.0150],
          [ 0.0769,  0.0471, -0.0188],
          [ 0.0255, -0.0439, -0.1090]],

         ...,

         [[-0.0388,  0.0458, -0.0804],
          [-0.0868,  0.0221, -0.0725],
          [ 0.0132, -0.0596, -0.0977]],

         [[-0.0101,  0.0731,  0.1020],
          [ 0.0583, -0.0913, -0.0067],
          [ 0.0654, -0.0412, -0.0419]],

         [[-0.0254,  0.0462, -0.0510],
          [ 0.1495, -0.0917, -0.0800],
          [ 0.0518, -0.0075, -0.0492]]],


        ...,


        [[[-0.0419,  0.0940,  0.0534],
          [ 0.0020, -0.0323,  0.0631],
          [-0.0390,  0.0133, -0.0062]],

         [[-0.0430,  0.0353, -0.0412],
          [ 0.0109, -0.0300,  0.0257],
          [-0.0060, -0.0212,  0.0252]],

         [[-0.0330,  0.0100, -0.0573],
          [ 0.0770, -0.0502, -0.0205],
          [ 0.0496, -0.0440, -0.0541]],

         ...,

         [[-0.0589, -0.0209,  0.0232],
          [-0.0956,  0.0326, -0.0557],
          [-0.0678, -0.0710, -0.0424]],

         [[ 0.0182, -0.0386, -0.0113],
          [ 0.0429, -0.0862, -0.0411],
          [ 0.0852, -0.0262, -0.0261]],

         [[-0.0418, -0.0621, -0.0498],
          [-0.0117, -0.0037,  0.0095],
          [-0.0057,  0.0382, -0.0155]]],


        [[[-0.0102, -0.0332,  0.0546],
          [ 0.0999, -0.0233,  0.1173],
          [-0.0251,  0.0618, -0.1204]],

         [[ 0.0522, -0.0014, -0.0517],
          [-0.0014,  0.0663, -0.0799],
          [ 0.0332, -0.0102, -0.0479]],

         [[-0.1125,  0.0244, -0.1903],
          [ 0.0627, -0.0681,  0.0985],
          [-0.1165, -0.0026,  0.0176]],

         ...,

         [[ 0.1097,  0.0638,  0.0977],
          [-0.0395, -0.0950, -0.0329],
          [-0.0108, -0.0137, -0.0938]],

         [[ 0.0368, -0.0219, -0.0459],
          [-0.0197, -0.0185,  0.0715],
          [ 0.0220,  0.0987,  0.0836]],

         [[-0.0130,  0.0572, -0.0251],
          [ 0.0349,  0.0561,  0.1529],
          [-0.0094,  0.0567, -0.0994]]],


        [[[-0.0033, -0.0260, -0.0125],
          [ 0.0086,  0.0109, -0.0251],
          [-0.0510,  0.0087,  0.0802]],

         [[ 0.0192,  0.0841,  0.0497],
          [-0.0049, -0.0295, -0.0043],
          [ 0.0006, -0.1905,  0.0386]],

         [[-0.0563,  0.0214,  0.0367],
          [-0.0821, -0.0401, -0.0470],
          [ 0.0144, -0.0350, -0.0334]],

         ...,

         [[ 0.0988, -0.0635,  0.0433],
          [-0.0010,  0.0078, -0.0332],
          [-0.0437,  0.0227, -0.0963]],

         [[-0.0105, -0.0334, -0.0244],
          [-0.1302, -0.0059,  0.0086],
          [ 0.0201, -0.0611,  0.0271]],

         [[-0.0581,  0.0052, -0.0327],
          [ 0.0036, -0.0447,  0.0158],
          [-0.1005, -0.0889, -0.0695]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 4.0671e-02,  1.1958e-01,  9.2583e-04],
          [-1.5608e-01, -6.3766e-03, -8.0324e-03],
          [-3.8704e-02,  1.2854e-02,  9.6102e-03]],

         [[-1.5583e-01, -5.7434e-02, -1.0426e-02],
          [-2.3793e-02, -1.0194e-01,  9.9751e-02],
          [ 8.8770e-03,  1.3277e-02, -4.6726e-02]],

         [[-7.1367e-02, -2.5325e-03, -5.8241e-02],
          [ 3.7240e-02, -3.6056e-02, -7.9543e-02],
          [-4.7674e-02,  5.9198e-02, -1.8080e-02]],

         ...,

         [[-5.7272e-02,  4.9037e-03,  2.2994e-02],
          [-4.3538e-02, -8.2156e-02, -5.2053e-02],
          [-9.0241e-02, -5.3984e-02,  5.8457e-02]],

         [[ 5.5547e-03,  3.1668e-04, -1.1830e-01],
          [ 1.7189e-03, -7.4081e-03, -4.7556e-02],
          [-5.6066e-03,  5.2603e-02,  6.2184e-02]],

         [[ 6.5135e-02,  5.3422e-03,  4.9114e-02],
          [ 4.2838e-02,  2.3587e-02,  4.2618e-02],
          [ 4.8252e-03, -2.9817e-02,  2.7879e-02]]],


        [[[-1.4117e-02, -1.9652e-02,  1.0209e-01],
          [ 3.2775e-02, -1.0015e-01, -8.9195e-03],
          [-1.0839e-03,  2.7287e-03, -1.2652e-03]],

         [[-3.2570e-02,  2.0392e-02, -1.0188e-01],
          [ 5.1424e-03, -8.0959e-02, -1.0266e-02],
          [ 2.5182e-02, -9.0711e-02,  2.3908e-02]],

         [[-3.6417e-02,  2.5963e-02,  1.1593e-01],
          [-7.1533e-02, -7.0273e-02, -7.7334e-02],
          [-1.0555e-01,  2.8450e-02, -1.2454e-01]],

         ...,

         [[-1.0651e-01,  2.8075e-02,  6.1637e-02],
          [ 8.0283e-02,  1.0355e-01,  1.0384e-01],
          [-1.2906e-02,  2.4155e-02, -4.0713e-02]],

         [[ 1.4880e-02, -4.2256e-02, -4.7932e-02],
          [ 6.1510e-03,  4.1388e-02, -1.0496e-02],
          [ 4.3205e-02,  8.5644e-02,  2.6113e-02]],

         [[-1.6012e-03, -7.3204e-02,  4.4643e-02],
          [ 2.7876e-02, -5.5638e-02,  1.2054e-01],
          [ 7.1036e-02, -3.0938e-02,  5.0880e-02]]],


        [[[-6.8392e-02,  1.1355e-01,  1.2280e-01],
          [-5.1071e-02,  1.3931e-03,  2.3803e-02],
          [-5.2275e-02,  2.2176e-02, -4.3972e-03]],

         [[-6.9811e-02, -1.4392e-02,  4.0830e-02],
          [-2.3542e-02, -1.4462e-02,  9.1862e-03],
          [-1.0157e-02, -4.9433e-02,  1.2190e-04]],

         [[-8.2077e-02, -3.1139e-02,  7.3561e-02],
          [ 4.5022e-04, -9.3983e-03, -1.9657e-03],
          [-3.2696e-02, -7.5211e-02, -9.2280e-02]],

         ...,

         [[ 2.1944e-03,  4.7406e-02,  4.1725e-02],
          [ 2.7793e-02, -1.0420e-02,  6.1867e-02],
          [ 8.1985e-02, -7.7104e-02,  5.4123e-02]],

         [[-6.2152e-02,  4.5006e-02,  7.0183e-03],
          [ 3.0198e-03,  3.4777e-02,  2.0314e-02],
          [-1.3098e-01,  8.5245e-02,  4.6806e-02]],

         [[-6.5741e-02,  8.3633e-03, -3.5802e-02],
          [ 2.5184e-03, -1.3593e-02, -3.3857e-02],
          [ 1.1402e-02,  1.1694e-02,  1.4602e-01]]],


        ...,


        [[[ 2.3854e-02,  2.0482e-02, -5.5475e-02],
          [-2.2031e-02, -1.5796e-02, -5.1609e-02],
          [-1.8464e-01, -5.4839e-02, -3.1381e-02]],

         [[ 4.4372e-02, -7.7674e-02,  8.6482e-02],
          [ 2.2347e-02,  5.1089e-02,  2.6442e-02],
          [-2.1608e-02,  2.2344e-02, -1.1557e-02]],

         [[-8.5661e-02,  6.7687e-02, -7.1258e-02],
          [-5.0148e-02,  7.2358e-02,  2.7614e-02],
          [ 3.2180e-02,  2.1186e-02,  4.9188e-03]],

         ...,

         [[ 9.2519e-02,  6.4268e-02,  5.0269e-02],
          [-6.6208e-02,  1.5109e-02,  4.3250e-02],
          [-4.4579e-02,  3.7042e-02,  6.2628e-03]],

         [[ 1.9112e-02,  1.8286e-02,  1.4960e-02],
          [ 2.0556e-02,  5.0799e-02, -3.0782e-02],
          [ 8.2238e-02, -2.5178e-02, -7.0367e-02]],

         [[ 3.1283e-02,  3.1369e-02,  5.5871e-02],
          [ 4.5726e-02,  5.6290e-02, -4.0833e-02],
          [ 1.3113e-02,  3.8566e-02,  1.8488e-02]]],


        [[[ 7.4698e-02, -6.5303e-02,  1.6098e-02],
          [ 1.7488e-01,  1.0238e-02,  1.4644e-02],
          [-2.3951e-02,  3.1563e-02,  1.1604e-02]],

         [[ 6.1461e-02, -8.0887e-02, -5.4722e-02],
          [-5.9698e-02, -8.6234e-04, -3.6226e-02],
          [-4.9573e-02, -4.9441e-02, -1.1943e-01]],

         [[ 4.9368e-02,  8.4501e-02,  3.1665e-02],
          [ 1.8010e-02, -4.7309e-02,  3.0196e-02],
          [-7.1476e-02, -5.4433e-02, -1.7591e-02]],

         ...,

         [[ 8.7612e-02, -3.7220e-03,  7.1085e-02],
          [ 5.4693e-02, -3.0530e-02, -7.1996e-03],
          [-4.7603e-02, -1.2975e-02,  5.0277e-02]],

         [[-1.7809e-02, -5.3277e-02, -7.7736e-03],
          [-2.3260e-02,  1.4262e-02, -5.5270e-02],
          [ 5.3243e-02, -4.6605e-02, -1.2403e-01]],

         [[-3.4981e-02, -7.0222e-02, -1.1773e-01],
          [-6.7776e-02, -1.6921e-02,  4.8355e-03],
          [ 2.8342e-02, -2.2876e-02, -6.8085e-02]]],


        [[[-2.1277e-02,  1.1138e-01, -2.8628e-02],
          [ 3.6014e-02,  5.6355e-02, -3.3927e-02],
          [-3.4740e-02, -3.3651e-03,  7.6474e-02]],

         [[ 3.2814e-02, -2.0301e-02, -1.2236e-01],
          [-1.4389e-01,  1.5144e-02, -1.1675e-01],
          [-2.7486e-02, -1.9676e-03,  3.8731e-03]],

         [[-2.7693e-02,  1.0138e-01,  4.3655e-02],
          [ 1.7940e-02,  6.8093e-03,  4.0366e-02],
          [-5.4387e-02,  6.2120e-03,  3.7965e-03]],

         ...,

         [[ 8.9694e-02,  6.2768e-04,  8.2765e-03],
          [-4.1522e-02, -6.7801e-03,  4.7300e-02],
          [-3.3472e-02,  9.5402e-02, -2.9252e-02]],

         [[-7.4346e-02,  8.9204e-03,  3.2056e-02],
          [-4.6086e-02, -4.3186e-04,  3.8917e-02],
          [-3.0938e-02, -2.4904e-02,  6.3474e-02]],

         [[ 6.5033e-02,  3.3617e-02,  7.0437e-02],
          [-8.1554e-02,  7.0280e-02,  4.1866e-02],
          [ 1.0788e-01,  4.0340e-02,  8.0226e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-4.2319e-02,  1.5528e-02, -2.4680e-02],
          [ 1.5159e-02, -6.8939e-02,  1.3035e-01],
          [-2.7040e-03,  6.2511e-02, -1.0160e-01]],

         [[-4.5799e-02, -9.0700e-02,  5.4979e-02],
          [-2.6461e-02,  5.8337e-02,  9.4353e-02],
          [ 1.5521e-02, -2.0857e-02, -4.8407e-02]],

         [[-5.5416e-02,  7.3195e-02, -7.2173e-02],
          [ 1.3549e-01,  1.0507e-01,  2.7940e-02],
          [-6.3329e-02,  1.0032e-01,  2.1070e-02]],

         ...,

         [[ 5.4096e-02,  6.4335e-02,  1.9650e-03],
          [-6.1231e-02,  8.7520e-02, -1.1064e-01],
          [-2.6742e-02,  8.1083e-02, -3.6024e-02]],

         [[-4.5086e-02,  7.0919e-02, -7.7289e-02],
          [-7.4446e-02, -7.8416e-03,  3.9117e-02],
          [ 2.4825e-02,  6.0121e-02,  7.3901e-02]],

         [[ 1.5862e-02,  3.1623e-02,  4.7723e-02],
          [ 8.2250e-03, -3.1117e-03, -1.0635e-01],
          [ 8.6622e-02, -6.7035e-02, -3.3901e-02]]],


        [[[ 5.8965e-02, -1.2983e-02, -3.8267e-02],
          [ 4.2405e-02,  1.8669e-02, -7.3058e-03],
          [ 3.7905e-02, -8.7203e-02, -5.3409e-02]],

         [[ 2.1244e-02,  1.2804e-01, -7.9178e-02],
          [-8.5407e-02,  2.7237e-02, -2.0844e-02],
          [-7.4191e-02, -9.6111e-02,  4.7039e-02]],

         [[ 5.1237e-02,  6.2390e-02, -3.1804e-02],
          [-8.8552e-03,  1.7975e-02,  4.2418e-02],
          [ 3.0755e-02, -1.7030e-01, -6.5839e-02]],

         ...,

         [[ 2.3017e-02,  1.1810e-01,  6.2422e-02],
          [ 1.2184e-01,  1.2914e-02, -8.8211e-02],
          [ 3.9578e-02,  9.9115e-02,  1.8897e-02]],

         [[ 5.5784e-02, -4.1919e-02,  8.9818e-02],
          [ 4.1552e-02,  3.2252e-02,  8.2152e-03],
          [-4.9969e-02, -7.5658e-02,  2.2219e-02]],

         [[-5.5034e-02, -8.9494e-03, -4.0057e-02],
          [ 4.4213e-02,  4.6251e-02, -1.2371e-05],
          [ 3.6227e-02,  6.0067e-03,  7.4529e-02]]],


        [[[ 2.5307e-02,  3.1316e-02,  7.7904e-02],
          [ 6.5428e-02,  5.0806e-02,  4.8470e-02],
          [-8.4329e-02, -4.4765e-02,  7.9830e-02]],

         [[-4.0273e-02,  6.3992e-02, -9.9768e-03],
          [ 1.3913e-02, -1.7921e-02, -4.7300e-02],
          [ 4.1512e-02, -4.7027e-02,  1.1374e-02]],

         [[ 2.5927e-02, -3.8725e-03, -4.3907e-02],
          [-6.9730e-03, -3.5224e-02,  4.1692e-02],
          [-3.3672e-02, -2.7617e-03,  5.5228e-02]],

         ...,

         [[ 8.1723e-02,  2.1343e-03, -3.7071e-02],
          [-5.9021e-02,  4.1183e-02, -3.5579e-02],
          [ 1.0632e-02,  1.1770e-02, -8.4249e-02]],

         [[-1.2136e-02, -7.6833e-02, -4.4722e-02],
          [-1.4314e-01,  1.7475e-03, -7.0951e-02],
          [-7.2014e-02,  5.6941e-02,  5.4488e-02]],

         [[ 6.3146e-02,  6.8130e-02, -4.5541e-02],
          [ 1.7475e-02, -7.0261e-02, -4.5206e-02],
          [ 4.2880e-03, -6.6052e-02,  1.6925e-02]]],


        ...,


        [[[ 4.7327e-02, -4.0044e-02, -1.5733e-01],
          [-3.5095e-02,  2.7146e-02, -9.0551e-02],
          [-5.3306e-03, -2.3869e-02,  9.8865e-02]],

         [[-7.8188e-03,  1.3244e-02,  8.0418e-03],
          [-1.1294e-01,  3.1469e-05, -3.3949e-02],
          [-1.6367e-02, -3.5722e-02,  2.8960e-02]],

         [[ 4.6941e-03, -4.1248e-02,  8.5431e-02],
          [-1.6800e-02,  1.1818e-01, -3.7193e-02],
          [-3.5872e-02, -4.6944e-02,  4.3418e-03]],

         ...,

         [[ 3.1793e-02, -3.5164e-02,  1.0192e-01],
          [ 1.3754e-02,  4.8822e-02,  5.1206e-02],
          [-1.3578e-02,  2.7725e-02,  5.4286e-02]],

         [[ 3.5140e-02,  8.2792e-02, -7.6298e-02],
          [-8.7308e-02, -6.8237e-02,  1.9136e-02],
          [-6.6831e-04, -1.1456e-02,  4.5941e-03]],

         [[ 2.6811e-02,  6.1294e-02,  1.2585e-01],
          [ 1.0828e-01, -9.4980e-02, -2.9164e-02],
          [-1.6419e-02, -1.1216e-02,  4.6223e-02]]],


        [[[ 5.2919e-02, -9.5804e-02, -3.5051e-02],
          [-2.8300e-02, -1.7460e-01, -6.7662e-02],
          [-1.4172e-01,  6.8656e-02,  3.0383e-02]],

         [[ 3.4140e-02,  6.8147e-02, -3.8133e-02],
          [ 4.6934e-02, -5.9392e-02, -4.0850e-02],
          [-9.7124e-02, -4.5091e-02, -5.8690e-02]],

         [[-6.7678e-02, -1.5855e-01,  4.1833e-02],
          [ 7.0604e-02,  3.5263e-02,  3.0292e-02],
          [ 5.7979e-02,  9.1346e-02,  7.8805e-02]],

         ...,

         [[-8.5159e-02, -5.2482e-02, -3.2814e-02],
          [ 3.9189e-02, -1.3585e-03, -9.6887e-03],
          [ 2.2173e-02, -4.7824e-02, -8.2536e-02]],

         [[-3.5203e-02, -2.9049e-02, -1.4282e-02],
          [-1.5211e-02,  3.5957e-02, -5.2996e-02],
          [ 5.0173e-03,  1.9172e-02, -1.1481e-01]],

         [[-3.0971e-02, -7.1502e-02, -3.3600e-02],
          [ 6.4696e-02,  1.7001e-01, -1.5637e-02],
          [-6.6662e-02, -2.1229e-02,  9.8834e-02]]],


        [[[-9.2606e-02,  3.8087e-02, -3.6213e-02],
          [ 3.7631e-02,  6.6864e-02,  6.8566e-02],
          [ 4.4012e-02,  2.3909e-03,  1.6934e-02]],

         [[ 4.7961e-02,  7.2300e-02,  8.9240e-02],
          [ 2.9387e-03,  2.9289e-02, -6.6719e-02],
          [-1.8441e-01, -1.2743e-01, -4.6888e-02]],

         [[ 5.1461e-03,  1.6336e-02, -2.6632e-02],
          [-2.9582e-02, -6.6190e-02, -3.9923e-02],
          [ 4.9962e-02,  4.8897e-02,  3.5148e-02]],

         ...,

         [[-2.8832e-02, -4.1053e-02,  6.7486e-02],
          [ 3.5944e-02, -6.8618e-02,  1.1142e-01],
          [ 8.1033e-03,  4.0952e-02, -2.3695e-02]],

         [[-2.1491e-02,  1.2092e-01,  4.2892e-02],
          [ 7.8045e-02, -6.7198e-02, -1.5408e-03],
          [-7.7465e-02,  8.0022e-02, -5.5760e-02]],

         [[-3.9829e-02, -8.3852e-02,  2.4293e-02],
          [-4.9762e-02,  3.0999e-02, -1.6702e-02],
          [-5.5292e-02, -5.4665e-03, -7.6535e-02]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 5.1878e-02, -1.0991e-01,  7.9799e-02],
          [ 7.3857e-02, -1.7057e-02, -3.4663e-02],
          [-1.0137e-01,  3.4425e-02,  8.7375e-02]],

         [[-5.1078e-02,  1.4827e-02, -1.0521e-01],
          [-4.3349e-02, -2.5626e-02, -3.3187e-02],
          [-8.3164e-02, -1.6513e-03, -1.5384e-04]],

         [[ 4.1927e-02, -9.9482e-02, -2.5690e-02],
          [-8.2799e-02, -1.1056e-01, -3.9495e-02],
          [ 1.2006e-02,  4.2996e-02, -1.2013e-02]],

         ...,

         [[-2.9105e-02,  1.2416e-02,  2.0944e-02],
          [-2.5289e-02,  1.0653e-02,  1.1885e-01],
          [-6.0058e-02, -2.4823e-02, -6.6195e-02]],

         [[ 4.7415e-02, -1.4018e-03, -1.9833e-03],
          [-8.8744e-02,  5.7644e-03, -3.8527e-02],
          [ 2.4575e-02, -2.8696e-02,  5.4046e-02]],

         [[-3.2654e-02, -1.8761e-01,  7.0235e-02],
          [-3.5812e-02,  2.8579e-02, -7.6790e-02],
          [ 5.7248e-02,  6.7662e-04, -9.9358e-02]]],


        [[[ 9.5803e-02,  2.9777e-03, -3.9484e-02],
          [-2.1036e-02,  6.3841e-02,  8.6739e-03],
          [ 3.7869e-02, -2.6043e-02, -2.8950e-02]],

         [[-2.9236e-02,  3.9379e-02,  6.3569e-02],
          [ 1.0369e-01, -5.8368e-02, -1.5033e-01],
          [-8.8726e-02, -7.4247e-02,  7.6274e-02]],

         [[-1.5724e-02,  4.2267e-02, -1.8408e-02],
          [-9.3976e-02,  1.5151e-01,  1.1174e-01],
          [ 5.1333e-02, -3.4343e-02,  1.0018e-02]],

         ...,

         [[-4.0349e-02,  4.8651e-03, -1.9252e-01],
          [ 2.8001e-02, -6.3064e-02,  2.0171e-02],
          [ 1.9060e-01, -5.3397e-03, -1.9403e-03]],

         [[ 6.5021e-02,  2.8089e-02, -5.7217e-02],
          [-1.0605e-01,  3.4665e-02, -1.2038e-03],
          [-3.5499e-02, -1.0971e-01,  2.5774e-02]],

         [[ 4.8193e-02, -1.0536e-01, -3.9613e-02],
          [-1.5704e-02,  1.1563e-01, -1.9162e-02],
          [ 4.0699e-02,  1.7064e-02, -4.5817e-02]]],


        [[[-1.1152e-02,  4.9377e-02,  4.5999e-02],
          [ 3.9159e-02,  1.0570e-03,  1.2611e-01],
          [-2.1370e-02, -6.1718e-02, -3.0711e-03]],

         [[-1.3408e-02,  5.6190e-02,  2.9259e-02],
          [-4.3205e-02, -4.4421e-02,  2.1526e-02],
          [ 8.6668e-02,  1.0886e-03, -8.9172e-02]],

         [[-3.5838e-02,  9.0199e-03,  6.4595e-02],
          [-1.2555e-01, -3.6048e-02, -5.2440e-02],
          [-8.7111e-02,  7.2252e-02,  4.3132e-02]],

         ...,

         [[ 3.5040e-02,  1.2350e-02,  3.0662e-02],
          [ 4.2425e-02, -2.5594e-02, -2.6236e-02],
          [ 1.5394e-02,  1.5436e-02,  7.9048e-02]],

         [[-4.5133e-02,  6.9251e-04, -6.4261e-02],
          [-2.8692e-02,  3.6142e-03, -2.0255e-02],
          [-4.1427e-02,  3.7620e-02,  7.8247e-02]],

         [[-7.0554e-02,  4.3063e-02,  1.3973e-01],
          [ 2.6614e-02,  1.0492e-01,  1.2964e-02],
          [-3.0516e-02, -7.1214e-02, -7.2355e-02]]],


        ...,


        [[[-1.2869e-02,  3.1488e-02,  8.1371e-02],
          [-5.7088e-02,  1.5088e-03, -3.1445e-02],
          [ 4.6474e-02,  1.5878e-02,  2.4189e-02]],

         [[ 9.1324e-02, -2.5333e-02,  4.6586e-02],
          [-8.4834e-03, -1.2019e-02,  9.9154e-03],
          [ 1.8424e-01, -9.2364e-02,  4.8936e-05]],

         [[-3.7295e-02, -3.4532e-02, -2.1909e-02],
          [ 5.9168e-02,  1.0006e-01, -1.9143e-02],
          [ 1.2768e-02,  8.9755e-02, -2.7265e-03]],

         ...,

         [[-2.2019e-02, -1.1067e-02, -6.6633e-02],
          [-6.0179e-02,  1.8605e-02,  6.7643e-02],
          [-4.7412e-02, -7.4397e-02,  4.2060e-02]],

         [[ 7.9204e-02, -4.3590e-03, -8.2005e-02],
          [ 1.2195e-02, -4.5210e-02,  7.8974e-02],
          [-4.5855e-03,  5.8925e-02,  1.9727e-02]],

         [[ 1.9757e-02, -2.8188e-02,  6.1552e-02],
          [-1.2821e-01,  4.5226e-02,  8.3129e-02],
          [ 6.0332e-03, -6.5185e-02,  4.3092e-02]]],


        [[[-6.7276e-02, -5.9521e-03, -1.5883e-02],
          [ 1.3157e-01, -8.5208e-02,  2.1306e-02],
          [ 4.5976e-03,  4.9045e-03, -7.8576e-02]],

         [[ 1.6672e-01,  1.9594e-01,  4.0075e-02],
          [ 1.9405e-02,  1.0487e-02,  3.2693e-03],
          [ 6.7947e-02,  5.3696e-02, -9.0848e-02]],

         [[ 1.3777e-03, -9.9584e-03, -1.4836e-02],
          [-3.0453e-02, -1.3350e-02,  8.7880e-02],
          [ 3.0259e-02,  3.9555e-02,  6.6858e-02]],

         ...,

         [[ 4.2922e-02, -3.2009e-02, -6.5292e-02],
          [ 5.4943e-02, -3.8702e-02,  4.4120e-02],
          [-3.6892e-03,  7.0171e-03, -2.5107e-02]],

         [[ 1.0974e-01, -8.2774e-02, -7.5318e-02],
          [-1.2089e-01, -5.5193e-03, -4.2236e-02],
          [ 4.5562e-02,  6.5263e-02,  2.7443e-02]],

         [[ 9.3395e-03,  9.7973e-03, -2.8136e-03],
          [-6.0269e-03,  4.8253e-02, -2.5898e-02],
          [ 2.9419e-02,  6.6076e-03,  1.3654e-01]]],


        [[[-1.5865e-02, -4.4052e-02, -9.8265e-03],
          [-1.5048e-02, -4.0840e-02, -1.5068e-03],
          [-1.3747e-01,  4.7038e-03, -5.1119e-02]],

         [[ 6.1451e-03,  1.6904e-02, -7.6341e-02],
          [-3.1918e-02, -5.1518e-02, -4.3984e-02],
          [-1.2013e-01, -1.3800e-01, -1.5017e-01]],

         [[-6.5710e-02,  7.6447e-03,  3.7306e-02],
          [-5.6030e-02,  4.3513e-02,  2.8872e-02],
          [ 7.5172e-02, -5.9129e-02,  4.0835e-02]],

         ...,

         [[-3.7547e-02,  3.2197e-02,  6.4634e-02],
          [ 6.7544e-02,  3.9215e-02,  7.0579e-02],
          [-1.4083e-02, -3.2569e-02, -3.9665e-02]],

         [[ 1.3867e-02,  6.1345e-02, -9.0700e-02],
          [ 2.9122e-02,  9.7313e-03, -5.9988e-02],
          [-7.1069e-03, -2.0247e-02,  8.0823e-03]],

         [[ 5.5079e-02, -3.7420e-02, -1.8596e-02],
          [-1.5346e-02,  5.1355e-02,  7.0352e-02],
          [ 7.7004e-02, -2.3676e-02,  6.6307e-03]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[-0.0352]],

         [[-0.0329]],

         [[-0.0029]],

         ...,

         [[-0.0038]],

         [[ 0.0451]],

         [[-0.1248]]],


        [[[-0.1551]],

         [[ 0.0316]],

         [[-0.0939]],

         ...,

         [[-0.0341]],

         [[ 0.1492]],

         [[ 0.0557]]],


        [[[-0.1101]],

         [[-0.1345]],

         [[-0.0116]],

         ...,

         [[ 0.1507]],

         [[-0.0502]],

         [[-0.1163]]],


        ...,


        [[[ 0.0761]],

         [[-0.1440]],

         [[ 0.1636]],

         ...,

         [[ 0.1691]],

         [[ 0.0958]],

         [[-0.0416]]],


        [[[ 0.0617]],

         [[ 0.0015]],

         [[ 0.0195]],

         ...,

         [[ 0.0739]],

         [[-0.0007]],

         [[ 0.0178]]],


        [[[ 0.0606]],

         [[ 0.0812]],

         [[ 0.0031]],

         ...,

         [[-0.0682]],

         [[ 0.0019]],

         [[ 0.0725]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[ 0.0026, -0.0465,  0.0546],
          [ 0.0297,  0.0028,  0.0219],
          [-0.0461, -0.0152, -0.0325]],

         [[ 0.0465, -0.0764,  0.0590],
          [ 0.0020, -0.0358,  0.1194],
          [-0.0507, -0.0352, -0.0268]],

         [[-0.0273,  0.0297, -0.0230],
          [ 0.0183,  0.0080, -0.0057],
          [ 0.0005, -0.0254, -0.0416]],

         ...,

         [[ 0.0089,  0.0909, -0.0091],
          [ 0.0333, -0.0794, -0.0827],
          [-0.0026, -0.0600, -0.0225]],

         [[ 0.0333,  0.0343, -0.1340],
          [-0.0142,  0.0457,  0.0343],
          [-0.0425,  0.0680, -0.0042]],

         [[ 0.0203, -0.0558,  0.0102],
          [-0.0146,  0.0339, -0.0517],
          [-0.0354, -0.0147,  0.0680]]],


        [[[ 0.0079,  0.0095, -0.0172],
          [-0.0551, -0.0860,  0.0649],
          [ 0.0504,  0.0255,  0.0551]],

         [[ 0.0233,  0.0311,  0.0523],
          [-0.0029,  0.0094,  0.0634],
          [ 0.0154,  0.0989, -0.0393]],

         [[-0.0139, -0.0602, -0.0694],
          [-0.0184,  0.0132,  0.0357],
          [ 0.0598, -0.0211,  0.0440]],

         ...,

         [[-0.0886,  0.0186, -0.0242],
          [ 0.0046,  0.0114, -0.0583],
          [-0.0441,  0.0086,  0.0511]],

         [[ 0.0253, -0.0055, -0.0499],
          [-0.0415,  0.0431,  0.0268],
          [ 0.0218,  0.0175, -0.0486]],

         [[-0.0117,  0.0800,  0.0250],
          [ 0.0792, -0.0540,  0.0743],
          [-0.0844, -0.0630, -0.0649]]],


        [[[ 0.0215, -0.0007,  0.0288],
          [ 0.0088, -0.0041,  0.0274],
          [ 0.0302,  0.0062, -0.0099]],

         [[-0.0345,  0.0307,  0.1134],
          [ 0.0450, -0.0710, -0.0631],
          [-0.0208,  0.0538,  0.0063]],

         [[-0.0077, -0.0218, -0.0494],
          [-0.0217,  0.0323, -0.0137],
          [ 0.0809,  0.0014,  0.0237]],

         ...,

         [[-0.0148,  0.0147,  0.0382],
          [-0.0307,  0.0076, -0.0307],
          [-0.0457,  0.0117,  0.0464]],

         [[ 0.0503,  0.0168,  0.0122],
          [-0.0154, -0.0401,  0.0184],
          [ 0.0329,  0.0438,  0.0404]],

         [[-0.0216, -0.0107,  0.0531],
          [ 0.0996, -0.0377,  0.0217],
          [-0.0006,  0.0718,  0.0231]]],


        ...,


        [[[-0.0914,  0.0019, -0.0731],
          [-0.0207, -0.0082,  0.0783],
          [ 0.0304, -0.0493,  0.0314]],

         [[ 0.0573,  0.0194, -0.0853],
          [-0.0874, -0.0113,  0.0441],
          [ 0.0142, -0.0112,  0.0201]],

         [[-0.0872,  0.0190,  0.0185],
          [ 0.0694,  0.0766,  0.0619],
          [ 0.0902, -0.0159, -0.0127]],

         ...,

         [[ 0.0145,  0.0623, -0.0513],
          [-0.0270,  0.0136, -0.0285],
          [ 0.1398, -0.0294,  0.0111]],

         [[-0.0046,  0.0131, -0.0409],
          [ 0.0141,  0.0241, -0.0509],
          [-0.0563,  0.0386,  0.0742]],

         [[-0.0719,  0.0132,  0.0407],
          [ 0.0154, -0.0741, -0.0223],
          [-0.0105,  0.0213,  0.0721]]],


        [[[-0.0095, -0.0332, -0.0068],
          [ 0.0305, -0.0608,  0.0078],
          [-0.0454, -0.0746, -0.0568]],

         [[-0.0407, -0.0138, -0.0079],
          [ 0.0304,  0.0286, -0.0496],
          [-0.0407, -0.0850,  0.0251]],

         [[-0.0411,  0.0043,  0.0100],
          [-0.0987,  0.0117,  0.0480],
          [-0.0062,  0.0060,  0.0158]],

         ...,

         [[ 0.0206,  0.0288,  0.0007],
          [-0.0680,  0.0564, -0.0896],
          [-0.0291, -0.0534, -0.0091]],

         [[ 0.0343,  0.0269, -0.0076],
          [ 0.0262, -0.0131,  0.0123],
          [ 0.0220, -0.0377,  0.0591]],

         [[ 0.0207,  0.0075, -0.0144],
          [ 0.0908,  0.0263,  0.0525],
          [-0.0004,  0.0309,  0.0121]]],


        [[[-0.0513,  0.0280,  0.0334],
          [ 0.0196, -0.0259,  0.0688],
          [ 0.0113,  0.0277, -0.0258]],

         [[ 0.0874, -0.0287, -0.0398],
          [ 0.0824, -0.0314,  0.0247],
          [ 0.0209, -0.0353,  0.0617]],

         [[ 0.0521, -0.0058,  0.0661],
          [-0.0110,  0.0220,  0.0093],
          [ 0.1403,  0.0404, -0.0208]],

         ...,

         [[ 0.0133,  0.0546,  0.0798],
          [-0.0733, -0.1505, -0.0321],
          [ 0.0250, -0.0430, -0.0451]],

         [[ 0.0547,  0.0548,  0.0050],
          [ 0.0525, -0.0247, -0.0316],
          [ 0.0805, -0.0121,  0.0230]],

         [[ 0.0522,  0.0400,  0.0216],
          [ 0.0052, -0.0111, -0.0333],
          [ 0.0065, -0.0428,  0.0551]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-0.0592, -0.0267, -0.0587],
          [ 0.0786, -0.0559, -0.0412],
          [-0.0624, -0.0339,  0.0239]],

         [[ 0.0096, -0.0278, -0.0350],
          [-0.0194,  0.0071, -0.0249],
          [ 0.0499, -0.0446,  0.0308]],

         [[ 0.0589, -0.0177,  0.0077],
          [ 0.0741, -0.0131,  0.0073],
          [-0.0574, -0.0450, -0.0150]],

         ...,

         [[-0.0121, -0.0287, -0.0030],
          [-0.0921, -0.0068, -0.0354],
          [-0.0488, -0.0269,  0.0826]],

         [[ 0.0379, -0.0097,  0.0751],
          [ 0.0888,  0.0147, -0.0158],
          [ 0.0299,  0.0195, -0.1094]],

         [[-0.0149,  0.0176,  0.0736],
          [ 0.0565, -0.0186, -0.0225],
          [ 0.0010, -0.0089, -0.0382]]],


        [[[-0.0091, -0.0164,  0.0315],
          [-0.0443,  0.0807, -0.0188],
          [-0.0413,  0.0350, -0.0602]],

         [[ 0.0658,  0.0091,  0.0200],
          [-0.0184, -0.0226,  0.0286],
          [-0.0842, -0.0464, -0.0227]],

         [[ 0.0235,  0.0372,  0.0476],
          [ 0.0109,  0.0395,  0.0066],
          [-0.0387, -0.0454, -0.0381]],

         ...,

         [[-0.0033, -0.0054, -0.0175],
          [ 0.0179,  0.1148, -0.0596],
          [-0.0130, -0.0275, -0.0224]],

         [[-0.0525,  0.0158,  0.0880],
          [ 0.0506,  0.0386, -0.0075],
          [ 0.0121, -0.0206, -0.0084]],

         [[ 0.0258,  0.0471, -0.0396],
          [ 0.0500, -0.0107, -0.1018],
          [-0.0681, -0.0065, -0.0125]]],


        [[[-0.0913, -0.0076,  0.0562],
          [ 0.0061,  0.0137, -0.0035],
          [ 0.0168, -0.0186,  0.0385]],

         [[-0.0378,  0.0257,  0.0403],
          [-0.0167,  0.0576, -0.0137],
          [-0.0073, -0.0389,  0.0304]],

         [[ 0.0247,  0.0445, -0.0291],
          [-0.0181,  0.0714, -0.0962],
          [-0.0335, -0.0173,  0.0371]],

         ...,

         [[ 0.1437,  0.0384, -0.0481],
          [-0.0004,  0.0007, -0.0795],
          [-0.0564,  0.0263,  0.0175]],

         [[ 0.0210, -0.0514,  0.1059],
          [ 0.0307, -0.1176, -0.0134],
          [-0.0491, -0.0062,  0.0133]],

         [[ 0.0079,  0.0257, -0.0662],
          [-0.0096,  0.0295, -0.0261],
          [ 0.0429,  0.0386,  0.0955]]],


        ...,


        [[[ 0.0144, -0.0474, -0.0024],
          [-0.0085, -0.0575,  0.0590],
          [-0.0099,  0.0944,  0.0074]],

         [[ 0.0219, -0.0605, -0.0213],
          [-0.0062,  0.0551, -0.0643],
          [-0.0090, -0.0032, -0.0233]],

         [[ 0.0786,  0.1075,  0.0092],
          [ 0.0450, -0.0027, -0.0017],
          [ 0.0969, -0.0604, -0.0167]],

         ...,

         [[-0.0184, -0.0643,  0.0290],
          [-0.0179, -0.0371, -0.0143],
          [-0.0699,  0.0165,  0.0613]],

         [[-0.0572, -0.0090, -0.0477],
          [ 0.0725, -0.0112, -0.0164],
          [-0.0246, -0.0077, -0.0304]],

         [[-0.0490,  0.0111, -0.0645],
          [ 0.0959,  0.0238, -0.0733],
          [ 0.0266, -0.0609, -0.0373]]],


        [[[ 0.0102, -0.0313,  0.0045],
          [ 0.0045,  0.0476, -0.0378],
          [ 0.0062,  0.0510,  0.0392]],

         [[-0.0962,  0.0511, -0.0342],
          [-0.0351,  0.0297,  0.0100],
          [-0.0643, -0.0111, -0.0245]],

         [[ 0.0322, -0.0362, -0.0072],
          [-0.0474,  0.0023, -0.0570],
          [ 0.0737, -0.0181,  0.0345]],

         ...,

         [[ 0.0293,  0.0094, -0.0816],
          [-0.0291, -0.0085, -0.0349],
          [-0.0352, -0.0546, -0.0704]],

         [[-0.0638, -0.0570, -0.0164],
          [-0.0160,  0.0739,  0.0106],
          [ 0.0114,  0.0213,  0.1382]],

         [[-0.0172, -0.0646, -0.0676],
          [ 0.0831,  0.1201,  0.0209],
          [ 0.0421, -0.0094,  0.0015]]],


        [[[-0.0666,  0.0175,  0.0171],
          [ 0.0965, -0.0863,  0.0095],
          [-0.0447,  0.0450,  0.0328]],

         [[ 0.0061,  0.0601,  0.0777],
          [ 0.0390,  0.0757, -0.1081],
          [-0.0023,  0.0037,  0.0518]],

         [[-0.0889, -0.0609, -0.0870],
          [-0.0354, -0.0431, -0.0035],
          [ 0.0707,  0.0231,  0.0187]],

         ...,

         [[ 0.0368, -0.0107, -0.0302],
          [ 0.0087,  0.0031,  0.0038],
          [ 0.0466,  0.0038,  0.0691]],

         [[ 0.0191,  0.0634, -0.0097],
          [ 0.0597, -0.0888,  0.0868],
          [ 0.0347,  0.0134,  0.0414]],

         [[ 0.0216, -0.0447, -0.0497],
          [-0.0382,  0.0423,  0.0052],
          [-0.0161, -0.0255, -0.0290]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.0471]],

         [[ 0.1409]],

         [[-0.1881]],

         ...,

         [[ 0.0265]],

         [[ 0.2588]],

         [[ 0.0236]]],


        [[[-0.3376]],

         [[ 0.0909]],

         [[-0.2777]],

         ...,

         [[-0.1150]],

         [[-0.1496]],

         [[ 0.1712]]],


        [[[ 0.0857]],

         [[ 0.3310]],

         [[-0.2158]],

         ...,

         [[-0.0091]],

         [[-0.1536]],

         [[ 0.0100]]],


        ...,


        [[[-0.0998]],

         [[-0.0574]],

         [[ 0.1895]],

         ...,

         [[-0.1190]],

         [[ 0.0075]],

         [[ 0.0722]]],


        [[[ 0.1921]],

         [[ 0.0250]],

         [[-0.0705]],

         ...,

         [[-0.0636]],

         [[-0.1334]],

         [[-0.0420]]],


        [[[ 0.1283]],

         [[-0.0418]],

         [[-0.0271]],

         ...,

         [[ 0.1837]],

         [[ 0.2978]],

         [[ 0.0908]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[-3.6748e-02, -4.3370e-02,  7.9781e-02],
          [-2.2237e-03,  5.0661e-02, -4.4956e-02],
          [ 4.2795e-02,  4.0919e-02,  4.1473e-02]],

         [[-1.4201e-02, -5.6979e-03,  5.0022e-02],
          [ 1.7811e-02, -6.2874e-02, -1.6383e-02],
          [ 5.8462e-03,  6.2502e-02,  8.1736e-03]],

         [[ 4.7223e-02,  2.3225e-02,  4.5016e-02],
          [-1.1461e-02, -6.5535e-03, -3.3779e-02],
          [-1.3681e-02, -2.7351e-02, -2.9876e-02]],

         ...,

         [[-6.1638e-02, -3.6098e-02, -5.6980e-02],
          [ 1.9034e-02, -5.5045e-02, -1.2380e-02],
          [ 3.3511e-03,  1.8449e-02,  2.5967e-02]],

         [[ 5.0951e-03, -3.0479e-02, -1.0471e-02],
          [ 1.1436e-01,  7.9884e-02,  3.8800e-02],
          [-3.4734e-03, -5.1333e-02,  4.0431e-02]],

         [[-3.1830e-02,  1.9026e-02,  2.0922e-02],
          [-1.6703e-02,  8.9161e-03,  2.4279e-02],
          [ 7.2307e-03, -1.4211e-01,  6.9482e-02]]],


        [[[-1.0002e-02,  3.6222e-02, -1.3948e-01],
          [-3.7458e-02,  2.6006e-04,  4.0212e-02],
          [ 2.8873e-02,  1.1255e-03,  6.4299e-02]],

         [[-7.7255e-02, -3.9954e-03,  2.4216e-02],
          [-2.9658e-02, -3.0110e-02,  2.8987e-02],
          [-1.9550e-02,  2.7320e-02,  7.3052e-03]],

         [[ 3.5031e-02,  6.1144e-02,  1.7128e-02],
          [-5.0977e-03,  5.7342e-02,  6.9465e-03],
          [ 2.6875e-02, -5.4098e-03, -7.2198e-02]],

         ...,

         [[ 6.0070e-03, -1.7646e-02,  3.8677e-02],
          [-3.0412e-02,  2.8945e-02,  5.8258e-02],
          [-5.3819e-02,  2.1491e-02,  3.8198e-02]],

         [[ 7.1797e-02,  7.5425e-02,  8.0829e-02],
          [-1.4560e-02, -1.9932e-02,  1.3754e-02],
          [ 2.7170e-02, -2.0149e-02,  2.5907e-02]],

         [[ 3.5628e-02,  5.3980e-02,  1.4301e-02],
          [-6.2664e-02,  1.9356e-03,  1.1593e-02],
          [-1.0417e-02,  4.9836e-02,  2.2799e-02]]],


        [[[ 9.3004e-02,  8.6774e-03,  9.9863e-02],
          [-3.1460e-02,  2.1839e-02,  1.1234e-02],
          [ 4.4904e-02,  4.8203e-03,  8.3312e-02]],

         [[ 1.8402e-03,  6.9763e-02, -1.4032e-01],
          [ 6.1212e-02,  1.5608e-02, -1.6197e-02],
          [ 1.5727e-02, -5.9690e-03,  9.0861e-02]],

         [[-1.6296e-02,  2.8409e-02,  8.3752e-02],
          [ 4.2083e-02, -2.6361e-02,  3.8204e-02],
          [-1.5074e-02, -7.3262e-03, -7.1786e-02]],

         ...,

         [[-1.4464e-02,  5.2935e-02,  4.5665e-02],
          [-1.9369e-02,  8.1905e-02, -2.0472e-02],
          [-1.4098e-02, -9.2793e-02,  9.3948e-02]],

         [[-3.1431e-02,  2.9824e-03, -3.1575e-02],
          [ 9.4939e-03, -6.6401e-02, -2.1875e-03],
          [ 2.3316e-02,  3.9267e-02, -2.5800e-02]],

         [[ 7.4898e-03, -1.8769e-02, -5.9194e-02],
          [ 2.9621e-02, -2.9399e-02,  6.7799e-02],
          [-3.1362e-02, -7.0255e-02,  1.6576e-02]]],


        ...,


        [[[ 7.4023e-02,  1.0000e-02,  6.7469e-02],
          [-1.4006e-02, -1.5212e-02,  5.8971e-02],
          [-3.9000e-02, -1.0261e-01,  3.1387e-02]],

         [[-1.1427e-02, -6.1040e-03,  2.1593e-03],
          [-4.9111e-02,  1.0724e-02, -7.6644e-02],
          [-2.8203e-02,  4.2484e-03,  3.0627e-02]],

         [[-9.8769e-02, -8.5039e-04,  9.1063e-02],
          [-7.0444e-02,  5.4139e-02, -5.4229e-02],
          [-5.6787e-02,  8.6523e-02, -8.5068e-03]],

         ...,

         [[ 8.7568e-03, -3.5134e-02, -6.7392e-02],
          [ 2.0396e-02, -2.7461e-02, -2.5130e-02],
          [-7.4619e-02, -4.5916e-02, -7.2507e-02]],

         [[ 1.5740e-02, -1.9177e-02,  8.0822e-02],
          [-4.4371e-02, -9.2728e-02, -1.4674e-01],
          [-2.5883e-02, -3.4311e-03, -2.8190e-02]],

         [[-7.7457e-02, -6.6474e-02, -2.1688e-02],
          [-7.0003e-02, -3.1455e-02, -1.8758e-02],
          [ 1.8898e-02, -5.8184e-02, -6.4228e-02]]],


        [[[-3.2811e-02,  2.7808e-02,  3.4434e-02],
          [-5.1090e-02,  4.1825e-03, -7.7838e-02],
          [-8.7062e-02, -1.0960e-02, -3.2921e-02]],

         [[ 1.9942e-02, -5.1925e-02,  3.2287e-03],
          [ 1.6223e-02,  3.4558e-02,  3.4062e-02],
          [-7.7849e-03,  1.8715e-02,  2.8485e-02]],

         [[ 1.8015e-02,  1.5323e-02, -1.4002e-02],
          [ 2.2625e-02,  2.3522e-02, -2.2581e-02],
          [ 4.7312e-02,  3.1583e-03, -1.0527e-02]],

         ...,

         [[-2.7513e-02,  1.0708e-02,  3.2222e-02],
          [ 1.5527e-02,  3.9585e-02,  7.7944e-02],
          [ 4.3670e-03,  4.7742e-03, -5.0074e-02]],

         [[-2.6091e-03,  9.9606e-03, -5.1208e-02],
          [-1.3200e-03,  5.5125e-02,  2.9335e-03],
          [-3.6311e-02, -2.9539e-02, -1.6605e-02]],

         [[-3.5658e-03,  2.6360e-02,  2.3804e-02],
          [-4.7271e-02,  3.6434e-02, -5.7218e-02],
          [-3.6545e-02, -4.4779e-02,  1.0775e-01]]],


        [[[-9.4087e-03, -5.9120e-02,  1.3734e-02],
          [ 7.9463e-05,  1.0441e-02,  9.2794e-03],
          [ 1.6393e-02,  3.9717e-02,  4.8486e-02]],

         [[-1.5690e-02,  2.3744e-02,  1.9955e-02],
          [ 1.4635e-01, -3.4842e-02, -5.9200e-02],
          [ 1.3801e-02,  7.3325e-02, -9.2705e-03]],

         [[-6.9733e-02,  5.9411e-03, -2.8619e-03],
          [-3.5490e-02,  6.0597e-03,  2.0843e-02],
          [-5.7811e-02, -4.6875e-02,  2.6326e-02]],

         ...,

         [[-4.1724e-02,  3.7352e-02, -1.8394e-02],
          [-1.8994e-02,  4.6588e-02, -2.6853e-02],
          [-4.7246e-02,  2.8317e-02,  4.2552e-02]],

         [[-4.7765e-02, -4.2179e-02,  4.0382e-02],
          [-2.8429e-02, -6.5898e-02,  4.0960e-02],
          [-2.8471e-02, -9.4716e-02,  9.2272e-03]],

         [[-5.7523e-03, -6.2277e-02,  8.3133e-02],
          [ 2.2481e-02, -6.5056e-03, -2.4743e-02],
          [ 3.5687e-03, -3.1104e-02,  5.2173e-02]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-4.2979e-02, -6.7093e-03, -5.7461e-02],
          [ 2.2091e-04,  5.7575e-03,  2.4447e-02],
          [-2.6495e-02,  3.5689e-04,  3.5521e-02]],

         [[ 9.6619e-02,  1.0510e-02, -3.7942e-02],
          [ 9.5370e-03,  4.4691e-02, -2.8977e-02],
          [ 5.4128e-03,  1.3338e-02,  1.8822e-02]],

         [[-6.3285e-02, -1.5295e-02, -1.7981e-02],
          [ 2.6309e-02, -2.5732e-04, -5.2648e-02],
          [-3.6208e-02,  1.2807e-02,  9.7353e-02]],

         ...,

         [[-2.6446e-02,  1.1808e-02, -1.0605e-02],
          [-9.8453e-03, -6.5806e-02, -1.2982e-02],
          [-5.8567e-02,  5.2244e-02, -3.4392e-02]],

         [[-5.2868e-02, -2.8052e-02, -7.3337e-03],
          [-7.8283e-02, -2.0362e-02,  5.7121e-02],
          [-1.9181e-02,  3.4577e-02, -2.4788e-02]],

         [[ 8.2382e-03,  3.1145e-02,  3.0599e-02],
          [-3.5981e-02, -5.0574e-02,  4.3162e-03],
          [ 2.8839e-02,  4.8440e-02, -4.7096e-03]]],


        [[[-2.0863e-02,  3.0826e-02, -1.5286e-02],
          [ 6.1598e-02, -2.6636e-02,  3.8727e-04],
          [-5.0448e-02,  2.8442e-02, -6.6632e-02]],

         [[ 7.0872e-02,  1.4407e-01,  6.9650e-02],
          [-4.0828e-02, -1.4718e-04,  2.9716e-02],
          [ 8.3663e-02,  3.6448e-02, -3.4958e-02]],

         [[ 1.1076e-02, -7.4016e-02,  3.4564e-02],
          [ 8.1140e-02, -5.7691e-02, -2.4247e-02],
          [-1.9749e-02,  8.6456e-02,  7.2971e-02]],

         ...,

         [[ 5.6376e-02, -5.3101e-03, -2.9040e-02],
          [-4.1809e-02,  1.2359e-02, -1.5746e-02],
          [ 4.5236e-03,  1.3946e-01, -4.0076e-02]],

         [[-3.0989e-02,  2.3622e-02,  3.4708e-02],
          [-3.8685e-02,  3.3028e-02, -1.9093e-02],
          [ 1.2640e-02,  4.8140e-02,  1.9943e-03]],

         [[-1.7826e-02,  3.4838e-02, -6.1450e-02],
          [-2.3430e-04, -5.9903e-03,  1.7893e-02],
          [-1.1798e-02,  3.2557e-02, -9.2618e-02]]],


        [[[-2.2740e-02,  1.3479e-02,  1.1731e-03],
          [ 1.3332e-02, -5.1341e-02, -7.7312e-02],
          [-2.6477e-02, -4.2803e-02, -2.8707e-02]],

         [[-2.8372e-02,  1.6516e-02, -1.3826e-03],
          [-6.5094e-02, -9.1800e-03,  3.6876e-02],
          [ 1.1553e-01,  1.0102e-01, -5.3094e-02]],

         [[-6.3509e-02, -1.2444e-01,  2.6809e-02],
          [-5.8032e-02, -2.6920e-02,  1.0266e-02],
          [ 6.6326e-03, -9.6426e-02,  3.8810e-02]],

         ...,

         [[-3.8305e-02, -4.7373e-02,  5.1421e-02],
          [ 7.0686e-02,  3.3355e-02, -1.5222e-02],
          [-8.6317e-03, -9.6267e-02, -7.5109e-02]],

         [[ 2.4321e-02,  3.7198e-02,  2.2524e-02],
          [ 4.0704e-02,  9.1350e-02,  8.3542e-02],
          [ 1.4323e-02,  4.4934e-02, -4.2121e-02]],

         [[ 4.3905e-02,  1.9272e-02, -3.5854e-03],
          [-5.0544e-02,  4.1689e-02,  8.3006e-02],
          [ 2.7734e-02, -2.7179e-02, -3.0571e-03]]],


        ...,


        [[[-1.4792e-02, -5.1077e-02,  6.6502e-02],
          [-3.1528e-02,  1.4094e-03, -2.7294e-02],
          [-1.1664e-01,  9.8001e-02, -3.2813e-02]],

         [[ 8.6233e-03, -6.6797e-03, -6.8044e-02],
          [ 1.2944e-04, -3.8307e-02,  9.2188e-02],
          [-5.3546e-02, -8.3436e-02, -4.2256e-02]],

         [[-4.3104e-02, -1.2424e-02, -2.7261e-02],
          [ 4.8969e-02,  7.5766e-02,  3.4330e-02],
          [ 2.7176e-02, -1.5729e-02,  8.4519e-02]],

         ...,

         [[ 5.0171e-02, -1.7162e-02, -9.8276e-02],
          [ 9.1219e-02, -7.5190e-02, -6.4238e-02],
          [-5.7206e-02, -1.5704e-02, -4.1004e-02]],

         [[ 3.5688e-02,  1.6062e-02,  2.9592e-02],
          [ 1.5565e-02,  1.7631e-02,  1.0217e-02],
          [ 2.6753e-02,  1.9974e-02, -2.5206e-02]],

         [[ 4.9056e-02,  3.6715e-02, -4.5288e-02],
          [-3.3124e-02,  3.4945e-02, -1.6802e-02],
          [-6.5603e-02,  6.9080e-03,  4.1939e-02]]],


        [[[-2.6905e-02, -2.3443e-02, -7.5363e-03],
          [ 2.0370e-02,  3.4702e-02,  6.0033e-02],
          [-6.4984e-02, -3.0087e-02, -2.5645e-02]],

         [[ 4.6008e-02,  4.7234e-03, -5.7015e-02],
          [-6.0068e-02, -1.1169e-01,  4.9584e-02],
          [-6.8633e-03, -7.4326e-04, -3.7353e-02]],

         [[-2.1772e-02, -7.8853e-03,  3.8215e-02],
          [-1.3295e-02,  1.0554e-01,  9.3437e-02],
          [-5.3868e-02, -9.0768e-03,  4.0904e-02]],

         ...,

         [[-6.9308e-02, -5.6801e-02, -5.5573e-02],
          [-2.0828e-03,  3.5965e-02,  3.4337e-02],
          [ 4.3987e-03, -4.5999e-02, -1.9441e-02]],

         [[ 1.1818e-02, -4.7816e-02,  4.0871e-02],
          [-2.4177e-02,  9.1751e-02, -4.7071e-02],
          [-7.1789e-02,  2.8750e-02, -5.6385e-04]],

         [[-2.4691e-02,  7.9261e-02, -1.0777e-02],
          [ 4.1045e-02, -5.1849e-02, -8.6757e-02],
          [ 1.5587e-02, -1.2650e-02,  3.6919e-02]]],


        [[[-4.3527e-02,  3.9943e-02,  5.2095e-02],
          [ 4.3044e-02, -2.5654e-03,  2.6056e-02],
          [ 3.9911e-03, -4.7644e-02,  4.6560e-02]],

         [[-7.4270e-02,  3.5433e-02, -2.2450e-02],
          [ 4.2137e-02,  1.9832e-02, -3.6166e-02],
          [-1.8502e-02,  2.4892e-02,  7.4278e-02]],

         [[-3.4263e-03, -6.4898e-03, -3.2887e-02],
          [ 6.7397e-03,  7.3232e-03, -7.0241e-02],
          [ 3.7702e-02,  4.7541e-02,  7.8348e-02]],

         ...,

         [[-1.0676e-01, -3.8488e-02,  4.5924e-02],
          [-7.2063e-02,  3.0589e-02,  1.9259e-02],
          [ 4.5659e-02, -5.8786e-03,  4.7315e-02]],

         [[ 2.4738e-02,  1.2480e-02, -3.7218e-02],
          [ 1.2953e-01, -4.0736e-02, -4.1792e-02],
          [-1.1613e-01,  7.9420e-04, -5.2069e-02]],

         [[ 3.3686e-02, -6.7963e-02,  1.1606e-01],
          [-1.2040e-01, -6.7471e-03,  5.0158e-02],
          [ 3.9016e-02, -5.8990e-02, -5.8484e-02]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 2.3469e-02,  1.1908e-02,  3.7828e-03],
          [-4.4169e-02,  4.1267e-02, -6.6944e-03],
          [ 2.8407e-02, -8.6844e-02,  5.6405e-02]],

         [[-1.9725e-02,  2.6917e-03,  3.3252e-02],
          [-3.4752e-02, -5.4179e-03, -6.7003e-02],
          [ 3.1154e-02, -2.8215e-02, -8.6623e-02]],

         [[ 5.7977e-02, -4.5966e-02,  6.1189e-02],
          [ 3.2347e-02, -3.2913e-02, -6.7544e-02],
          [ 2.2325e-02, -1.6929e-02, -4.2564e-02]],

         ...,

         [[ 3.8428e-02,  6.2697e-03,  6.4551e-02],
          [-2.6202e-02,  2.0355e-03,  6.2737e-03],
          [-1.9066e-03,  1.5110e-02,  4.3638e-02]],

         [[ 7.9247e-02, -1.5687e-02, -3.4029e-02],
          [ 5.6505e-02,  2.2913e-02,  2.7238e-03],
          [ 1.2707e-01,  2.2275e-02, -1.4841e-02]],

         [[ 6.8064e-02, -7.2953e-02, -4.6505e-02],
          [ 2.7062e-02,  5.2730e-02, -3.0188e-02],
          [ 5.1481e-03,  4.7303e-02,  9.1072e-04]]],


        [[[ 4.2867e-02,  6.6293e-02, -5.6237e-02],
          [-9.8752e-03,  3.6601e-03, -6.1463e-02],
          [ 6.5089e-02,  3.8185e-02,  2.2774e-02]],

         [[ 9.8541e-03,  2.9112e-02, -3.0230e-02],
          [-3.7035e-02,  3.5025e-02,  4.0779e-02],
          [ 2.1754e-02, -7.4430e-03,  6.3513e-02]],

         [[-1.3633e-02, -3.9071e-02,  4.7117e-02],
          [-4.2654e-02, -3.6852e-02, -2.7002e-02],
          [ 9.0202e-02, -2.3462e-02,  1.6636e-02]],

         ...,

         [[ 7.2513e-03, -6.4369e-02, -2.0337e-02],
          [ 8.5919e-02, -2.7352e-02,  9.8207e-03],
          [-2.7207e-02,  4.9406e-02,  5.3393e-02]],

         [[-1.7533e-02,  1.1419e-02, -1.9449e-02],
          [ 2.1692e-02, -3.1864e-02, -3.3271e-02],
          [ 1.9552e-02, -2.4555e-02,  8.7761e-02]],

         [[-1.1272e-03,  5.6769e-02,  2.7549e-03],
          [-3.3681e-02, -7.8001e-03, -4.2583e-02],
          [ 6.3849e-02,  2.8592e-02,  3.1144e-02]]],


        [[[-6.0162e-03,  3.3782e-02,  8.9459e-02],
          [-1.6814e-02, -2.2072e-02, -1.3983e-02],
          [-2.6137e-03,  2.0429e-03,  4.2345e-02]],

         [[ 5.5803e-02,  2.6798e-03, -2.4731e-02],
          [-1.1539e-02, -5.3271e-02,  5.4513e-03],
          [ 6.4630e-02, -8.2606e-02, -3.4316e-02]],

         [[-2.7824e-02, -6.9351e-02, -3.2545e-02],
          [ 1.5912e-02,  1.7043e-02,  3.9627e-03],
          [-5.2231e-02,  2.2362e-02,  3.8785e-02]],

         ...,

         [[ 5.0355e-02, -8.5499e-03,  4.8178e-02],
          [ 2.0667e-02,  6.8714e-02, -5.7274e-02],
          [-4.6854e-02,  9.9270e-03, -1.0134e-02]],

         [[ 6.4454e-03, -6.1267e-02, -2.8536e-03],
          [ 4.9091e-02, -3.3418e-05,  6.2449e-02],
          [ 1.7673e-02,  1.0640e-01, -5.5120e-02]],

         [[-1.6311e-02, -1.6207e-02, -4.8382e-03],
          [-1.2749e-02,  3.9986e-03, -1.2218e-01],
          [ 6.1264e-02,  4.0614e-02,  1.4810e-03]]],


        ...,


        [[[-6.7522e-02,  2.1042e-02, -1.8446e-02],
          [ 7.0442e-02, -1.3287e-02,  5.2731e-02],
          [ 6.5269e-02, -5.5434e-04, -9.5533e-03]],

         [[-7.2919e-02, -3.3454e-03,  1.8025e-02],
          [ 3.1876e-02, -1.0768e-01,  5.5262e-02],
          [-4.4760e-02,  4.3147e-02,  8.2417e-03]],

         [[ 7.1257e-02, -4.0420e-02,  4.8215e-02],
          [ 4.8150e-03, -5.8447e-02,  8.2843e-02],
          [ 2.2345e-02, -6.4537e-02,  3.4252e-02]],

         ...,

         [[-3.8007e-04, -2.8141e-02, -4.6750e-03],
          [-2.0645e-03,  1.0623e-01, -1.6559e-02],
          [-5.8432e-02, -2.3410e-02,  7.2441e-02]],

         [[-1.1792e-02,  3.7511e-02, -3.5035e-02],
          [ 4.6525e-02, -1.4812e-02,  2.7671e-02],
          [-1.4484e-02, -5.6493e-02,  1.8889e-02]],

         [[ 6.6860e-02, -7.7414e-02, -4.0921e-03],
          [ 6.8856e-03, -6.6811e-02, -3.2798e-02],
          [-2.0927e-02, -6.1021e-03, -6.9053e-02]]],


        [[[ 4.9814e-02, -1.2878e-02, -2.1716e-02],
          [ 2.5823e-02,  2.7250e-03, -2.6411e-02],
          [-2.6313e-02,  6.5030e-03, -4.0011e-02]],

         [[-8.1247e-02,  1.3592e-03,  5.3619e-02],
          [-2.7863e-03, -4.2430e-02, -9.0357e-03],
          [-4.3779e-03,  2.9790e-02, -3.2681e-02]],

         [[-5.7186e-02, -1.6484e-02, -4.4582e-02],
          [-7.5942e-02, -2.9266e-02, -2.7589e-02],
          [-4.9857e-02, -3.2630e-03,  1.8638e-02]],

         ...,

         [[ 2.7365e-02, -7.5913e-03, -7.5365e-03],
          [-1.9047e-02, -2.8872e-02,  1.0673e-01],
          [-4.1075e-02, -6.6684e-02, -4.0641e-02]],

         [[ 1.5835e-02, -6.5640e-02,  7.9726e-03],
          [ 2.7562e-02,  2.9041e-02,  3.5005e-03],
          [-4.8064e-02,  2.8007e-03,  6.1765e-02]],

         [[-8.9707e-02, -4.8481e-02, -1.1044e-01],
          [ 4.5682e-02, -4.8573e-02, -3.1118e-02],
          [-3.1767e-02,  1.5020e-02,  1.0360e-01]]],


        [[[-5.7486e-02, -3.0391e-02, -1.7609e-02],
          [ 2.5483e-02, -2.1244e-02,  5.7053e-03],
          [ 2.0593e-02,  4.8643e-02, -1.1052e-02]],

         [[-1.5089e-02,  6.0881e-02,  1.2375e-02],
          [-2.4073e-02,  8.2186e-02, -1.8376e-02],
          [ 2.6027e-02, -6.2817e-03, -1.7240e-02]],

         [[ 3.2206e-03,  2.0487e-02,  7.9328e-02],
          [ 4.0156e-03, -4.1380e-02,  1.0659e-01],
          [ 4.4100e-02,  3.9334e-02,  9.0794e-02]],

         ...,

         [[-1.7807e-04,  1.1820e-02,  2.6648e-02],
          [ 1.0029e-01, -7.0202e-02,  2.7531e-02],
          [ 3.1133e-02,  4.8971e-02, -2.2043e-04]],

         [[-2.1311e-02,  9.7668e-02,  1.0170e-01],
          [ 2.3496e-02, -2.7008e-02,  1.1016e-01],
          [-3.2496e-03, -5.5675e-03, -7.6395e-02]],

         [[ 2.8488e-02, -5.7769e-03, -3.1326e-02],
          [ 7.3374e-03,  4.8945e-03,  4.2124e-02],
          [ 1.4907e-02,  2.7743e-02, -4.8529e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-2.5742e-02,  2.3096e-02, -5.3113e-02],
          [ 1.2699e-02,  5.6335e-03,  2.8247e-02],
          [-1.8214e-02,  1.8696e-02,  6.4303e-02]],

         [[ 2.1283e-02,  3.8141e-02, -4.8795e-02],
          [-4.3037e-02,  3.3682e-02,  3.0520e-02],
          [ 6.2614e-02,  2.7142e-02,  6.3000e-02]],

         [[-2.7957e-02,  1.3298e-02, -6.5464e-02],
          [-2.0232e-02, -5.0746e-02, -6.5698e-02],
          [-4.8503e-02, -6.9960e-02, -6.0116e-02]],

         ...,

         [[-1.5335e-02, -4.3234e-02, -3.3107e-02],
          [-4.3610e-02, -4.5816e-02, -8.1629e-02],
          [-1.2296e-02, -5.8240e-03, -5.4722e-02]],

         [[-6.9143e-02, -1.5824e-02,  1.3391e-02],
          [ 2.4514e-03, -6.2477e-03,  8.0575e-02],
          [-2.4723e-02,  3.2560e-02,  6.2593e-02]],

         [[-2.8732e-02,  3.4966e-02,  3.3768e-02],
          [-2.5314e-02, -2.9543e-02,  2.5142e-02],
          [-6.3431e-02,  7.6284e-03, -1.8294e-02]]],


        [[[ 4.8883e-02,  1.7311e-02,  2.2686e-02],
          [ 3.1849e-02,  1.4206e-02,  3.9778e-02],
          [ 2.7029e-02,  6.6060e-02,  1.0792e-01]],

         [[ 2.6570e-02, -1.7636e-02,  1.7733e-02],
          [-6.4560e-03,  5.5180e-02,  4.1977e-02],
          [-9.7299e-04,  1.9205e-02,  6.0769e-02]],

         [[-4.6191e-02,  2.7030e-02,  4.7003e-03],
          [-4.5328e-02,  1.9429e-02,  6.2442e-02],
          [ 2.1924e-02, -1.5934e-02, -9.1407e-03]],

         ...,

         [[-1.3247e-02,  2.0713e-02, -1.5570e-02],
          [-3.0521e-02,  5.5474e-02,  1.7984e-02],
          [ 6.0325e-02, -1.7564e-02,  4.5913e-02]],

         [[-2.6393e-02,  2.4269e-02,  5.8826e-02],
          [ 5.4508e-03,  4.0520e-02, -6.8554e-02],
          [-4.7132e-02, -4.4949e-02, -1.2492e-03]],

         [[-1.8135e-03,  2.3593e-03, -1.9769e-02],
          [ 4.8335e-02,  1.6069e-02, -4.3286e-02],
          [ 6.3413e-03, -4.0662e-02,  1.4600e-02]]],


        [[[ 6.9329e-02, -3.6309e-02,  4.6949e-03],
          [-4.7165e-02, -5.1875e-02, -5.2363e-02],
          [ 3.6072e-03, -2.2019e-02, -7.6597e-03]],

         [[-2.4759e-02, -5.1979e-02, -6.9578e-02],
          [-7.0109e-02,  6.5695e-02,  4.9514e-02],
          [ 1.1684e-02, -5.1525e-02, -4.7156e-02]],

         [[ 1.8304e-02, -3.0776e-02, -4.4332e-02],
          [ 7.5069e-02,  3.4532e-03, -3.5501e-03],
          [-4.5928e-02,  5.7046e-03, -4.3699e-02]],

         ...,

         [[ 3.0253e-02, -5.1805e-03, -3.2128e-03],
          [-1.4807e-02,  5.4108e-02, -1.9678e-02],
          [ 2.6096e-02, -8.3685e-02,  4.2454e-03]],

         [[ 1.2479e-02,  5.0389e-02, -4.0488e-02],
          [-3.3685e-02,  6.8743e-03, -3.1059e-03],
          [ 1.0305e-01, -3.3592e-02,  4.9749e-03]],

         [[ 2.8849e-03,  3.0735e-02, -1.5381e-02],
          [-2.7242e-02,  2.6485e-02,  3.8604e-02],
          [ 3.0900e-02, -1.5293e-03,  3.2572e-02]]],


        ...,


        [[[ 2.1850e-02, -3.6594e-02, -3.4227e-02],
          [-4.0178e-02, -8.1904e-02, -2.9832e-03],
          [-4.3427e-02,  4.7476e-02, -3.0772e-02]],

         [[-2.5017e-02,  9.7373e-03, -8.4991e-02],
          [ 2.8517e-02,  3.9743e-03, -7.7178e-02],
          [ 4.0330e-02,  2.1162e-02, -2.6605e-02]],

         [[ 1.0646e-02,  1.0722e-02,  5.9778e-02],
          [ 2.5632e-02, -2.1041e-02,  3.5682e-02],
          [-4.7490e-02, -1.4741e-02,  3.4514e-02]],

         ...,

         [[-2.4452e-02,  1.7936e-02,  4.8205e-03],
          [ 1.1226e-02,  6.0117e-02,  1.8727e-02],
          [-5.3582e-03, -5.3312e-02,  1.5339e-02]],

         [[-1.3948e-03,  6.6908e-02,  1.0957e-02],
          [-2.4693e-03,  4.2882e-02,  1.1064e-02],
          [-3.3439e-02, -8.1250e-02, -2.0471e-02]],

         [[-5.8599e-02,  4.0635e-02,  1.5257e-02],
          [ 8.2930e-03,  3.7431e-02,  8.2032e-03],
          [ 4.4422e-02,  3.0452e-02, -1.2147e-01]]],


        [[[-3.0149e-02,  3.0878e-02, -8.7936e-03],
          [ 2.0165e-02,  2.4252e-02, -7.1141e-02],
          [ 6.7500e-02, -9.0335e-03, -9.6015e-02]],

         [[ 1.9027e-02,  1.6605e-02,  1.5923e-02],
          [ 1.4596e-02, -5.6595e-02,  2.0938e-02],
          [-3.8012e-02,  1.7290e-03,  2.0510e-02]],

         [[ 3.0581e-02, -7.9246e-03, -2.3018e-02],
          [-1.2355e-02, -6.2377e-02,  5.4929e-02],
          [ 5.9071e-03,  5.3165e-02,  9.2854e-03]],

         ...,

         [[-9.7431e-03,  1.4112e-02, -7.7360e-02],
          [ 9.8709e-02, -5.3873e-02, -2.4658e-06],
          [-1.7072e-02, -2.8101e-02,  3.8589e-02]],

         [[-7.6733e-02,  4.9236e-02, -5.9475e-02],
          [ 1.5377e-02, -3.6427e-02,  7.8697e-03],
          [-4.7867e-02,  3.1414e-02, -5.4308e-02]],

         [[ 1.8943e-02,  5.0135e-02,  2.4577e-02],
          [ 4.4887e-02,  4.2459e-02,  1.6212e-02],
          [-2.5953e-03, -9.4255e-03, -2.5138e-02]]],


        [[[-1.6908e-02, -3.4702e-02, -3.1283e-04],
          [-3.5394e-02, -4.7091e-02,  2.9522e-02],
          [-5.7496e-02,  8.5459e-03,  1.1803e-02]],

         [[-1.0748e-02, -3.2453e-02, -2.7788e-02],
          [ 2.6920e-02,  2.0817e-03,  5.1823e-02],
          [ 4.9399e-02,  4.6438e-02,  3.7225e-02]],

         [[ 2.3734e-02,  2.6301e-02, -6.7970e-02],
          [ 3.0757e-02,  4.0748e-02,  5.7758e-02],
          [ 2.1147e-02, -1.7465e-02,  5.3514e-02]],

         ...,

         [[-9.6886e-02, -1.2880e-02,  5.3255e-02],
          [ 1.1210e-02,  1.4501e-02, -5.5213e-02],
          [ 4.2829e-03,  2.0729e-02, -6.3412e-02]],

         [[-5.7077e-02, -5.7290e-03,  3.8479e-04],
          [-1.4980e-02,  4.9955e-02, -6.1374e-02],
          [ 1.1734e-02,  1.2994e-02, -2.6477e-02]],

         [[-3.4848e-02,  4.5576e-03, -1.4842e-02],
          [-4.4950e-02,  3.3075e-02, -4.2947e-02],
          [-3.3537e-02, -6.4958e-02,  6.7400e-02]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0102]],

         [[ 0.2006]],

         [[ 0.1512]],

         ...,

         [[-0.0590]],

         [[ 0.1693]],

         [[-0.0352]]],


        [[[-0.0752]],

         [[-0.1091]],

         [[ 0.1101]],

         ...,

         [[ 0.3140]],

         [[ 0.0771]],

         [[-0.2517]]],


        [[[ 0.1631]],

         [[ 0.1778]],

         [[ 0.1837]],

         ...,

         [[ 0.1836]],

         [[-0.1244]],

         [[-0.0541]]],


        ...,


        [[[-0.1480]],

         [[-0.1343]],

         [[-0.0949]],

         ...,

         [[ 0.0382]],

         [[ 0.0816]],

         [[ 0.0198]]],


        [[[-0.0569]],

         [[-0.0735]],

         [[ 0.0851]],

         ...,

         [[-0.1911]],

         [[ 0.0251]],

         [[-0.1748]]],


        [[[ 0.0083]],

         [[-0.2799]],

         [[-0.0616]],

         ...,

         [[-0.1037]],

         [[ 0.0175]],

         [[-0.0179]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 3.5183e-02, -6.5408e-04, -2.5854e-02],
          [ 3.5864e-02, -5.9315e-02, -1.4405e-02],
          [ 1.6588e-02, -1.2752e-03,  2.8506e-02]],

         [[-1.0393e-01,  8.5863e-04, -3.5386e-02],
          [ 1.5977e-02, -5.6995e-02, -7.4744e-03],
          [ 4.6867e-02,  1.0798e-01, -9.4173e-02]],

         [[ 6.4592e-02, -5.8713e-02, -5.5274e-02],
          [ 3.4951e-02,  3.5990e-03,  4.1373e-02],
          [-4.0999e-02, -5.2880e-02, -1.0540e-01]],

         ...,

         [[ 2.4821e-02, -1.3553e-02, -2.3239e-02],
          [ 8.3853e-02, -5.7527e-03, -8.7386e-03],
          [-2.4142e-02, -3.7027e-02, -3.0482e-02]],

         [[ 1.1800e-02, -2.2701e-02,  1.9007e-02],
          [-1.7176e-02, -5.6000e-02, -1.4850e-02],
          [ 9.9834e-02,  3.6914e-02, -2.8874e-02]],

         [[-1.2800e-02, -1.4160e-02, -2.4958e-02],
          [ 4.8625e-02, -1.0497e-03, -3.9568e-03],
          [ 2.5693e-02, -3.5242e-02,  2.5083e-02]]],


        [[[-5.2916e-03, -7.4228e-03, -1.5182e-02],
          [ 5.6880e-02, -7.8972e-03,  3.2255e-02],
          [ 8.7851e-02, -3.3125e-02, -1.6635e-03]],

         [[ 2.6492e-02, -2.0041e-04, -6.8593e-02],
          [-7.5604e-03, -9.2822e-02, -3.3487e-02],
          [-7.7766e-02,  1.4526e-02, -2.8456e-02]],

         [[-2.4272e-02, -2.0579e-02,  2.0524e-02],
          [ 8.4735e-04,  3.7362e-02, -1.0080e-02],
          [-3.6291e-02,  8.3133e-03,  7.6082e-02]],

         ...,

         [[ 5.8657e-02,  4.1410e-02, -8.6538e-03],
          [ 7.7653e-02,  4.6829e-02, -1.4978e-02],
          [-8.1967e-02, -1.6669e-02, -6.6870e-02]],

         [[ 6.3087e-02, -4.4620e-02, -6.6108e-02],
          [-3.0170e-02, -7.1355e-03, -9.3548e-02],
          [-2.6103e-02,  1.3617e-02, -3.6620e-02]],

         [[ 3.8319e-02,  1.7067e-02, -1.9806e-02],
          [ 7.6927e-03, -3.0061e-02,  6.9243e-02],
          [-7.7710e-02, -1.8714e-03,  4.2410e-02]]],


        [[[-5.5076e-02, -4.9868e-02,  1.0236e-01],
          [ 1.2148e-02,  1.4543e-02, -3.3585e-02],
          [ 4.6746e-02,  2.2606e-03,  1.0379e-02]],

         [[ 1.3912e-03,  9.8468e-02, -2.2985e-02],
          [ 4.6316e-02, -2.8087e-02,  5.4509e-02],
          [ 6.6204e-02,  1.9898e-02,  4.6511e-02]],

         [[-8.2714e-03, -2.9187e-02,  1.0360e-04],
          [ 5.6790e-02,  1.1346e-01, -2.1170e-02],
          [ 8.0475e-02, -2.0409e-02,  3.2489e-02]],

         ...,

         [[-4.1777e-03,  4.0195e-02, -4.7004e-02],
          [ 2.9230e-03, -1.2172e-02, -1.2315e-02],
          [ 1.6182e-03,  8.0324e-02,  7.0140e-02]],

         [[ 6.4236e-02, -6.1828e-02, -6.1310e-02],
          [-1.6522e-02,  2.8247e-03, -2.6076e-02],
          [ 2.5897e-02,  9.3316e-03,  9.2079e-02]],

         [[-3.7599e-02,  4.0473e-03, -4.7142e-02],
          [-5.4247e-02, -5.0187e-02, -9.9458e-03],
          [-4.6075e-02,  1.8156e-02, -1.9118e-02]]],


        ...,


        [[[-1.9744e-02, -6.8505e-04,  2.9933e-02],
          [-2.1436e-02, -3.1498e-02,  2.9735e-02],
          [-7.0890e-02, -3.4477e-02, -8.8643e-02]],

         [[ 6.5642e-04, -2.4164e-02, -3.0609e-02],
          [-2.6044e-02,  2.3929e-02, -1.9279e-02],
          [ 2.3008e-02, -2.6589e-02, -1.6829e-02]],

         [[-3.6803e-02, -1.5763e-02, -6.8970e-02],
          [-4.5093e-03, -4.0712e-02,  3.4780e-02],
          [-1.6840e-02, -3.0908e-02, -6.5571e-02]],

         ...,

         [[ 8.6927e-02, -2.0345e-02,  7.2625e-02],
          [-3.0018e-02, -2.8701e-02, -9.9979e-02],
          [-3.1500e-03, -6.9664e-02, -2.8020e-02]],

         [[-1.6516e-02, -6.4432e-02, -2.8128e-03],
          [-1.2141e-02,  2.3963e-02, -4.6086e-02],
          [-3.8592e-02, -3.4531e-02,  4.6275e-02]],

         [[ 2.5142e-02,  2.9079e-02, -4.6125e-03],
          [-6.6619e-02,  3.8667e-02, -4.3765e-02],
          [-5.2499e-02, -4.5631e-02,  7.9931e-02]]],


        [[[ 2.4217e-02, -2.1239e-02,  7.0248e-03],
          [-3.5181e-02,  7.0153e-02,  3.9371e-02],
          [ 8.8858e-02, -3.8761e-02,  6.0491e-03]],

         [[ 9.0556e-02,  1.1738e-02,  6.6512e-03],
          [-2.7811e-03,  1.3370e-02, -1.1201e-04],
          [ 3.5809e-02,  6.4450e-03, -5.0121e-03]],

         [[-6.0714e-02, -7.3360e-02, -6.3122e-02],
          [-5.9434e-02, -9.1975e-03,  6.4813e-02],
          [ 1.0660e-01, -2.6521e-03,  2.8443e-02]],

         ...,

         [[-8.0568e-02,  3.7395e-03,  1.1456e-01],
          [-3.3102e-02, -1.4073e-02, -2.1132e-02],
          [-5.5850e-02,  2.4766e-03,  6.2187e-02]],

         [[-4.4807e-02,  1.5168e-02, -4.6776e-02],
          [-6.8977e-02, -4.5006e-03, -1.4601e-02],
          [ 2.3625e-02, -1.6744e-02,  4.9106e-02]],

         [[ 3.9705e-03, -5.7614e-02, -2.3658e-02],
          [-8.6253e-03, -3.3480e-03, -2.5412e-02],
          [-4.6429e-02,  6.0955e-03,  4.6440e-02]]],


        [[[ 2.3012e-02,  9.7301e-03, -5.3747e-02],
          [-6.7225e-02, -8.4697e-02, -6.1530e-03],
          [ 1.4232e-02,  3.7847e-02,  2.5058e-02]],

         [[ 1.9271e-02, -9.4920e-03, -3.1773e-02],
          [-8.5710e-03, -9.5393e-02, -5.1606e-02],
          [ 2.0329e-02, -4.0587e-02, -7.1731e-02]],

         [[-7.0124e-02, -5.7620e-02,  4.0314e-02],
          [-6.8090e-03,  5.3647e-03, -4.7924e-02],
          [-1.6985e-02, -6.8744e-03, -1.2422e-02]],

         ...,

         [[-3.1580e-02,  4.3916e-02,  2.5084e-02],
          [ 7.1742e-02, -1.7949e-03,  1.4828e-03],
          [ 4.9686e-02,  1.0095e-01,  4.1279e-02]],

         [[-4.1615e-02,  4.8266e-02,  1.8146e-02],
          [-4.9451e-02, -3.7216e-02, -3.4091e-02],
          [-8.5770e-04,  1.9497e-02, -7.9455e-03]],

         [[ 8.6403e-02, -7.8086e-03, -6.1300e-02],
          [-5.3752e-02, -8.6610e-02, -1.0577e-03],
          [-7.7369e-02,  1.6201e-02, -3.4457e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 2.3816e-02, -2.4089e-02,  4.2186e-02],
          [-5.9464e-02,  5.9518e-03,  1.5272e-02],
          [-9.7428e-02,  4.4027e-03,  3.3073e-02]],

         [[-2.0752e-02, -5.3019e-02, -2.0708e-02],
          [ 1.2754e-02,  7.7906e-02, -3.3646e-03],
          [ 2.3801e-02, -9.0131e-02,  3.4775e-02]],

         [[ 2.8716e-02,  1.3009e-01, -4.5945e-02],
          [ 5.3007e-02, -8.5286e-02, -7.0815e-02],
          [ 6.9663e-04, -8.7477e-02,  3.4002e-02]],

         ...,

         [[-2.8731e-02, -4.2487e-03, -5.6035e-02],
          [ 2.9897e-03, -1.1226e-02, -3.8144e-02],
          [ 5.8063e-02, -2.3566e-02, -7.3730e-03]],

         [[-7.2862e-02,  2.9556e-02,  5.0072e-03],
          [-3.2203e-02,  5.9396e-03,  1.3219e-02],
          [-2.4200e-02, -1.6657e-02,  3.1309e-02]],

         [[-1.1711e-02, -4.7572e-02, -1.0088e-01],
          [ 4.2310e-02,  2.0304e-02, -6.6111e-02],
          [ 1.6636e-02,  3.1528e-02,  4.6723e-02]]],


        [[[-5.3415e-02, -4.3012e-02,  1.1808e-01],
          [ 3.1899e-02,  6.9951e-02,  9.2991e-03],
          [-2.7150e-02,  8.3820e-02,  1.0003e-02]],

         [[ 4.8672e-02, -4.2970e-04,  4.2251e-02],
          [ 1.0094e-02,  3.3351e-02,  4.4903e-02],
          [ 4.7315e-02, -7.3299e-03,  4.9195e-02]],

         [[ 9.6292e-03, -4.0752e-02, -8.5523e-02],
          [-4.0179e-03, -6.2643e-02,  5.3601e-03],
          [-6.4555e-02, -9.0134e-03, -1.8443e-02]],

         ...,

         [[-9.5493e-02,  3.7196e-02,  3.1010e-02],
          [ 8.1718e-02, -2.0190e-03, -2.0836e-02],
          [-4.4866e-02, -1.8818e-04,  1.6543e-02]],

         [[-1.3695e-02, -1.7758e-02, -6.1954e-02],
          [-1.0853e-02,  8.2947e-02,  4.0706e-02],
          [ 1.2529e-02,  8.3370e-03, -1.7334e-02]],

         [[ 3.5587e-02,  1.2212e-01, -2.1640e-03],
          [-1.0829e-02,  4.7274e-04, -1.6288e-02],
          [-2.9617e-02,  6.4333e-02, -3.6464e-02]]],


        [[[-3.1754e-02, -1.9429e-02,  4.2432e-03],
          [-6.1041e-02, -4.5981e-02,  1.1588e-03],
          [-3.5737e-02,  3.9620e-02, -1.9506e-02]],

         [[-2.2915e-02,  6.7484e-03,  8.5599e-02],
          [-4.8159e-02, -2.8936e-02, -3.8265e-02],
          [-6.1407e-02,  8.7270e-02, -6.7234e-02]],

         [[ 5.5647e-03, -1.5467e-02, -1.4454e-02],
          [ 1.2986e-02, -1.1301e-01, -3.2960e-02],
          [-2.0970e-02, -3.0335e-03,  1.6203e-02]],

         ...,

         [[-1.8446e-02, -4.0760e-03, -1.1058e-01],
          [-3.8773e-02,  1.1380e-02, -4.6361e-02],
          [-2.3229e-02,  3.9097e-02,  1.5707e-02]],

         [[-4.3517e-03, -2.8564e-02,  6.4812e-02],
          [-9.4289e-03, -4.1572e-02,  5.8914e-03],
          [-7.0358e-04, -6.1586e-02, -4.5487e-02]],

         [[ 6.0597e-02,  3.6470e-02,  9.2568e-02],
          [ 5.0309e-02, -5.4083e-03, -5.8375e-02],
          [ 1.2648e-02,  3.3046e-02,  3.5747e-02]]],


        ...,


        [[[-4.0543e-02,  1.7555e-02, -1.5154e-02],
          [ 2.8400e-02, -6.7455e-02, -5.7309e-02],
          [ 1.7924e-02,  2.0784e-02, -5.0720e-02]],

         [[-6.8549e-02,  8.5394e-02,  3.8809e-02],
          [ 5.1686e-02, -8.1747e-03, -8.0880e-02],
          [ 1.3551e-02,  1.0300e-02,  4.4824e-02]],

         [[ 6.5743e-02,  1.2563e-03, -9.6131e-03],
          [ 4.3706e-02, -1.6281e-02, -6.8318e-02],
          [-2.3507e-02,  4.7505e-02,  1.7684e-03]],

         ...,

         [[ 5.3640e-03,  4.4484e-02, -2.3597e-02],
          [ 3.0201e-02,  2.5036e-03,  1.0587e-03],
          [ 1.0641e-02, -1.4273e-02, -1.6016e-02]],

         [[-7.2079e-02,  1.3414e-02,  4.0145e-02],
          [-7.0644e-04, -2.4573e-02, -6.6896e-03],
          [-1.3086e-03,  1.1753e-02,  5.0237e-02]],

         [[ 3.0062e-02,  1.0870e-05, -4.2760e-02],
          [ 2.1483e-02,  4.2068e-02, -1.0016e-01],
          [-5.3004e-02,  8.3006e-02, -7.1207e-02]]],


        [[[-5.7171e-03, -7.0480e-02,  2.4767e-02],
          [ 1.0676e-02, -2.9404e-02,  2.3914e-02],
          [ 4.4087e-02,  5.8422e-02, -3.8708e-02]],

         [[ 6.6578e-02, -4.9810e-02,  6.2331e-02],
          [-1.1315e-02, -8.1156e-03, -1.1087e-02],
          [ 5.1160e-02,  1.5127e-02, -7.2089e-02]],

         [[-7.9353e-03, -1.6646e-02, -9.5838e-03],
          [-1.9229e-03,  4.4256e-03, -7.2823e-02],
          [-1.0563e-01, -4.5523e-02, -3.3189e-02]],

         ...,

         [[-1.6542e-02,  1.3768e-02, -3.7963e-02],
          [-2.7447e-02, -1.6700e-02, -5.9525e-02],
          [-4.7371e-02, -2.3695e-02,  1.3995e-02]],

         [[ 6.6625e-02,  3.1764e-02,  2.9556e-02],
          [-1.2622e-02, -2.3015e-02, -1.6880e-02],
          [ 6.3452e-02, -9.2051e-02, -1.3028e-02]],

         [[ 1.2336e-02,  2.7582e-02,  3.3985e-02],
          [ 2.8325e-03,  2.8734e-03, -5.7682e-02],
          [ 2.9332e-02, -2.1751e-04,  3.6269e-02]]],


        [[[ 2.6890e-02,  9.4751e-03, -4.7871e-03],
          [ 3.5643e-03,  2.2395e-03, -6.6813e-02],
          [ 5.2023e-03,  2.0330e-02,  3.1979e-02]],

         [[-1.1736e-01, -8.1284e-02, -4.8571e-02],
          [-6.9232e-02, -7.8938e-02,  4.3672e-02],
          [ 5.3284e-02,  7.1584e-03, -3.2224e-02]],

         [[ 4.8564e-02,  1.2466e-01, -2.3584e-02],
          [ 1.4564e-02, -1.0351e-02, -3.3311e-02],
          [-3.5197e-02,  4.5820e-03, -1.8288e-02]],

         ...,

         [[-4.6147e-02, -8.5870e-02, -2.7408e-02],
          [-1.6217e-02, -1.6452e-02, -1.2621e-02],
          [ 3.4480e-02, -4.7296e-03,  1.7691e-02]],

         [[-4.2407e-03, -1.8352e-02, -3.8644e-02],
          [ 1.6826e-02, -2.7823e-02,  3.3359e-02],
          [ 9.5550e-03, -2.2856e-02, -5.4580e-02]],

         [[ 8.5505e-02, -1.5802e-02, -2.4990e-02],
          [-9.7329e-02,  5.4901e-02, -3.3034e-02],
          [ 2.6455e-04,  1.9684e-02,  3.0302e-02]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
RuntimeError: Caught RuntimeError in DataLoader worker process 1.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/parallel/collate.py", line 79, in collate
    return {
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/parallel/collate.py", line 80, in <dictcomp>
    key: collate([d[key] for d in batch], samples_per_gpu)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/parallel/collate.py", line 84, in collate
    return default_collate(batch)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 149, in default_collate
    return default_collate([torch.as_tensor(b) for b in batch])
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 141, in default_collate
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [320, 240] at entry 0 and [288, 960] at entry 1

