2022-10-09 16:43:41,562 - mmflow - INFO - Multi-processing start method is `fork`
2022-10-09 16:43:41,564 - mmflow - INFO - OpenCV num_threads is `32
2022-10-09 16:43:41,617 - mmflow - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]
CUDA available: True
CUDA_HOME: /opt/share/cuda/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GPU 0,1: Tesla V100-SXM2-32GB
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
PyTorch: 1.12.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1
OpenCV: 4.6.0
MMCV: 1.6.1
MMFlow: 0.5.1+47d7ece
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
------------------------------------------------------------

2022-10-09 16:43:41,618 - mmflow - INFO - Distributed training: False
2022-10-09 16:43:42,301 - mmflow - INFO - Config:
model = dict(
    type='RAFT',
    num_levels=4,
    radius=4,
    cxt_channels=128,
    h_channels=128,
    encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='IN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['InstanceNorm2d'], val=1, bias=0)
        ]),
    cxt_encoder=dict(
        type='RAFTEncoder',
        in_channels=3,
        out_channels=256,
        net_type='Basic',
        norm_cfg=dict(type='SyncBN'),
        init_cfg=[
            dict(
                type='Kaiming',
                layer=['Conv2d'],
                mode='fan_out',
                nonlinearity='relu'),
            dict(type='Constant', layer=['SyncBatchNorm2d'], val=1, bias=0)
        ]),
    decoder=dict(
        type='RAFTDecoder',
        net_type='Basic',
        num_levels=4,
        radius=4,
        iters=12,
        corr_op_cfg=dict(type='CorrLookup', align_corners=True),
        gru_type='SeqConv',
        flow_loss=dict(type='SequenceLoss', gamma=0.85),
        act_cfg=dict(type='ReLU')),
    freeze_bn=True,
    train_cfg=dict(),
    test_cfg=dict(iters=32))
caddy_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
caddy_dataset_type = 'CADDY'
caddy_img_norm_cfg = dict(
    mean=[0.0, 0.0, 0.0], std=[255.0, 255.0, 255.0], to_rgb=False)
crop_size_caddy = (320, 240)
kitti_data_root = '/home/s.starace/Dataset/Depthstillation_mix'
kitti_dataset_type = 'KITTI2015AUG'
kitti_img_norm_cfg = dict(
    mean=[127.5, 127.5, 127.5], std=[127.5, 127.5, 127.5], to_rgb=False)
crop_size_kitti = (288, 960)
global_transform = dict(
    translates=(0.02, 0.02),
    zoom=(0.98, 1.02),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
relative_transform = dict(
    translates=(0.0025, 0.0025),
    zoom=(0.99, 1.01),
    shear=(1.0, 1.0),
    rotate=(-0.5, 0.5))
kitti_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        asymmetric_prob=0.0,
        brightness=0.4,
        contrast=0.4,
        saturation=0.4,
        hue=0.1592356687898089),
    dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
    dict(
        type='SpacialTransform',
        spacial_prob=0.8,
        stretch_prob=0.8,
        crop_size=(288, 960),
        min_scale=-0.2,
        max_scale=0.4,
        max_stretch=0.2),
    dict(type='RandomCrop', crop_size=(288, 960)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
            'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
            'erase_bounds', 'erase_num', 'scale_factor'
        ])
]
caddy_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(
        type='ColorJitter',
        brightness=0.05,
        contrast=0.2,
        saturation=0.25,
        hue=0.1),
    dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='GaussianNoise', sigma_range=(0, 0.04), clamp_range=(0.0, 1.0)),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='RandomFlip', prob=0.5, direction='vertical'),
    dict(
        type='RandomAffine',
        global_transform=dict(
            translates=(0.02, 0.02),
            zoom=(0.98, 1.02),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5)),
        relative_transform=dict(
            translates=(0.0025, 0.0025),
            zoom=(0.99, 1.01),
            shear=(1.0, 1.0),
            rotate=(-0.5, 0.5))),
    dict(type='RandomCrop', crop_size=(320, 240)),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs', 'flow_gt', 'valid'],
        meta_keys=[
            'img_fields', 'ann_fields', 'filename1', 'filename2',
            'ori_filename1', 'ori_filename2', 'filename_flow',
            'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', sparse=True),
    dict(type='InputResize', exponent=6),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape'
        ])
]
sintel_test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='InputPad', exponent=3),
    dict(
        type='Normalize',
        mean=[0.0, 0.0, 0.0],
        std=[255.0, 255.0, 255.0],
        to_rgb=False),
    dict(type='TestFormatBundle'),
    dict(
        type='Collect',
        keys=['imgs'],
        meta_keys=[
            'flow_gt', 'filename1', 'filename2', 'ori_filename1',
            'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
            'scale_factor', 'pad_shape', 'pad'
        ])
]
d_caddy_train = dict(
    type='CADDY',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            brightness=0.05,
            contrast=0.2,
            saturation=0.25,
            hue=0.1),
        dict(type='RandomGamma', gamma_range=(0.7, 1.5)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(
            type='GaussianNoise',
            sigma_range=(0, 0.04),
            clamp_range=(0.0, 1.0)),
        dict(type='RandomFlip', prob=0.5, direction='horizontal'),
        dict(type='RandomFlip', prob=0.5, direction='vertical'),
        dict(
            type='RandomAffine',
            global_transform=dict(
                translates=(0.02, 0.02),
                zoom=(0.98, 1.02),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5)),
            relative_transform=dict(
                translates=(0.0025, 0.0025),
                zoom=(0.99, 1.01),
                shear=(1.0, 1.0),
                rotate=(-0.5, 0.5))),
        dict(type='RandomCrop', crop_size=(320, 240)),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'img_fields', 'ann_fields', 'filename1', 'filename2',
                'ori_filename1', 'ori_filename2', 'filename_flow',
                'ori_filename_flow', 'ori_shape', 'img_shape', 'img_norm_cfg'
            ])
    ],
    test_mode=False)
d_kitti_train = dict(
    type='KITTI2015AUG',
    data_root='/home/s.starace/Dataset/Depthstillation_mix',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(
            type='ColorJitter',
            asymmetric_prob=0.0,
            brightness=0.4,
            contrast=0.4,
            saturation=0.4,
            hue=0.1592356687898089),
        dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
        dict(
            type='SpacialTransform',
            spacial_prob=0.8,
            stretch_prob=0.8,
            crop_size=(288, 960),
            min_scale=-0.2,
            max_scale=0.4,
            max_stretch=0.2),
        dict(type='RandomCrop', crop_size=(288, 960)),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='DefaultFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs', 'flow_gt', 'valid'],
            meta_keys=[
                'filename1', 'filename2', 'ori_filename1', 'ori_filename2',
                'filename_flow', 'ori_filename_flow', 'ori_shape', 'img_shape',
                'erase_bounds', 'erase_num', 'scale_factor'
            ])
    ],
    test_mode=False)
kitti2015_val_test = dict(
    type='KITTI2015',
    data_root='data/KITTI_2015',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations', sparse=True),
        dict(type='InputResize', exponent=6),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'valid', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape'
            ])
    ],
    test_mode=True)
sintel_clean_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='clean')
sintel_final_test = dict(
    type='Sintel',
    pipeline=[
        dict(type='LoadImageFromFile'),
        dict(type='LoadAnnotations'),
        dict(type='InputPad', exponent=3),
        dict(
            type='Normalize',
            mean=[0.0, 0.0, 0.0],
            std=[255.0, 255.0, 255.0],
            to_rgb=False),
        dict(type='TestFormatBundle'),
        dict(
            type='Collect',
            keys=['imgs'],
            meta_keys=[
                'flow_gt', 'filename1', 'filename2', 'ori_filename1',
                'ori_filename2', 'ori_shape', 'img_shape', 'img_norm_cfg',
                'scale_factor', 'pad_shape', 'pad'
            ])
    ],
    data_root='data/Sintel',
    test_mode=True,
    pass_style='final')
data = dict(
    train_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=2,
        drop_last=True,
        shuffle=False,
        persistent_workers=True),
    val_dataloader=dict(
        samples_per_gpu=1,
        workers_per_gpu=5,
        shuffle=False,
        persistent_workers=True),
    test_dataloader=dict(samples_per_gpu=1, workers_per_gpu=5, shuffle=False),
    train=[
        dict(
            type='KITTI2015AUG',
            data_root='/home/s.starace/Dataset/Depthstillation_mix',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadAnnotations', sparse=True),
                dict(
                    type='ColorJitter',
                    asymmetric_prob=0.0,
                    brightness=0.4,
                    contrast=0.4,
                    saturation=0.4,
                    hue=0.1592356687898089),
                dict(type='Erase', prob=0.5, bounds=[50, 100], max_num=3),
                dict(
                    type='SpacialTransform',
                    spacial_prob=0.8,
                    stretch_prob=0.8,
                    crop_size=(288, 960),
                    min_scale=-0.2,
                    max_scale=0.4,
                    max_stretch=0.2),
                dict(type='RandomCrop', crop_size=(288, 960)),
                dict(
                    type='Normalize',
                    mean=[0.0, 0.0, 0.0],
                    std=[255.0, 255.0, 255.0],
                    to_rgb=False),
                dict(type='DefaultFormatBundle'),
                dict(
                    type='Collect',
                    keys=['imgs', 'flow_gt', 'valid'],
                    meta_keys=[
                        'filename1', 'filename2', 'ori_filename1',
                        'ori_filename2', 'filename_flow', 'ori_filename_flow',
                        'ori_shape', 'img_shape', 'erase_bounds', 'erase_num',
                        'scale_factor'
                    ])
            ],
            test_mode=False)
    ],
    val=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True),
    test=dict(
        type='ConcatDataset',
        datasets=[
            dict(
                type='KITTI2015',
                data_root='data/KITTI_2015',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', sparse=True),
                    dict(type='InputResize', exponent=6),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'valid', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape'
                        ])
                ],
                test_mode=True),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='clean'),
            dict(
                type='Sintel',
                pipeline=[
                    dict(type='LoadImageFromFile'),
                    dict(type='LoadAnnotations'),
                    dict(type='InputPad', exponent=3),
                    dict(
                        type='Normalize',
                        mean=[0.0, 0.0, 0.0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=False),
                    dict(type='TestFormatBundle'),
                    dict(
                        type='Collect',
                        keys=['imgs'],
                        meta_keys=[
                            'flow_gt', 'filename1', 'filename2',
                            'ori_filename1', 'ori_filename2', 'ori_shape',
                            'img_shape', 'img_norm_cfg', 'scale_factor',
                            'pad_shape', 'pad'
                        ])
                ],
                data_root='data/Sintel',
                test_mode=True,
                pass_style='final')
        ],
        separate_eval=True))
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth'
resume_from = None
workflow = [('train', 1)]
optimizer = dict(
    type='AdamW',
    lr=0.000125,
    betas=(0.9, 0.999),
    eps=1e-08,
    weight_decay=1e-05,
    amsgrad=False)
optimizer_config = dict(grad_clip=dict(max_norm=1.0))
lr_config = dict(
    policy='OneCycle',
    max_lr=0.000125,
    total_steps=100100,
    pct_start=0.05,
    anneal_strategy='linear')
runner = dict(type='IterBasedRunner', max_iters=100000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='EPE')
work_dir = 'work_dir/raft_dCADDY_mix_freezed_09'
auto_resume = False
gpu_ids = [0]

2022-10-09 16:43:42,303 - mmflow - INFO - Set random seed to 235726412, deterministic: False
2022-10-09 16:43:42,387 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:43:42,607 - mmflow - INFO - initialize RAFTEncoder with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
2022-10-09 16:43:42,624 - mmflow - INFO - RAFT(
  (encoder): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (in2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['InstanceNorm2d'], 'val': 1, 'bias': 0}]
  (decoder): RAFTDecoder(
    (corr_block): CorrelationPyramid(
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (corr_lookup): CorrLookup()
    (encoder): MotionEncoder(
      (corr_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(324, 256, kernel_size=(1, 1), stride=(1, 1))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(256, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (flow_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(2, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (out_net): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 126, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
    )
    (gru): ConvGRU(
      (conv_z): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_r): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Sigmoid()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Sigmoid()
        )
      )
      (conv_q): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(1, 5), stride=(1, 1), padding=(0, 2))
          (activate): Tanh()
        )
        (1): ConvModule(
          (conv): Conv2d(384, 128, kernel_size=(5, 1), stride=(1, 1), padding=(2, 0))
          (activate): Tanh()
        )
      )
    )
    (flow_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (mask_pred): XHead(
      (layers): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (activate): ReLU(inplace=True)
        )
      )
      (predict_layer): Conv2d(256, 576, kernel_size=(1, 1), stride=(1, 1))
    )
    (flow_loss): SequenceLoss()
  )
  (context): RAFTEncoder(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (res_layer1): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (conv2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
    (res_layer2): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (res_layer3): ResLayer(
      (0): BasicBlock(
        (conv1): Conv2d(96, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (downsample): Sequential(
          (0): Conv2d(96, 128, kernel_size=(1, 1), stride=(2, 2))
          (1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  init_cfg=[{'type': 'Kaiming', 'layer': ['Conv2d'], 'mode': 'fan_out', 'nonlinearity': 'relu'}, {'type': 'Constant', 'layer': ['SyncBatchNorm2d'], 'val': 1, 'bias': 0}]
)
2022-10-09 16:43:43,539 - mmflow - INFO - dataset size 400
/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py:151: UserWarning: SyncBN is only supported with DDP. To be compatible with DP, we convert SyncBN to BN. Please use dist_train.sh which can avoid this error.
  warnings.warn(
2022-10-09 16:43:45,194 - mmflow - INFO - load checkpoint from local path: checkpoints/raft/raft_8x2_100k_flyingthings3d_400x720.pth
2022-10-09 16:43:45,310 - mmflow - INFO - Start running, host: s.starace@gnode01, work_dir: /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09
2022-10-09 16:43:45,311 - mmflow - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) OneCycleLrUpdaterHook              
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-10-09 16:43:45,312 - mmflow - INFO - workflow: [('train', 1)], max: 100000 iters
2022-10-09 16:43:45,313 - mmflow - INFO - Checkpoints will be saved to /home/s.starace/FlowNets/mmflow/work_dir/raft_dCADDY_mix_freezed_09 by HardDiskBackend.
********** NOT DISTRIBUTED --- DEBUG SS ******************
module.encoder.conv1.weight Parameter containing:
tensor([[[[ 2.8583e-03, -2.5194e-02, -1.2524e-02,  ..., -2.0166e-02,
           -7.3260e-03, -3.3009e-03],
          [-2.1126e-02,  4.2460e-02,  1.7718e-02,  ...,  1.7559e-03,
           -2.5199e-02, -2.1220e-02],
          [ 2.3278e-02,  2.0197e-04,  3.4903e-03,  ..., -6.5322e-04,
            1.9635e-02,  2.6168e-02],
          ...,
          [ 9.5108e-03, -8.6654e-04,  2.5250e-02,  ..., -1.5636e-02,
            2.2106e-02,  1.9521e-02],
          [ 3.0401e-03, -1.4407e-02,  9.2210e-03,  ...,  2.3638e-02,
           -1.1424e-02, -1.6510e-02],
          [ 5.9758e-03,  1.6082e-02,  1.3364e-02,  ...,  9.4377e-04,
            1.3663e-02,  1.5893e-02]],

         [[ 1.5679e-02,  5.5279e-03,  1.5041e-02,  ..., -2.3966e-03,
            1.1459e-02,  6.7089e-03],
          [ 8.9843e-03, -5.4898e-03,  2.2646e-02,  ...,  2.1241e-03,
           -2.1623e-02,  2.5017e-02],
          [-8.0330e-03,  7.0887e-03, -2.0102e-02,  ..., -7.0012e-03,
            1.2274e-02,  4.5251e-02],
          ...,
          [-4.4864e-02,  4.4154e-03, -1.1493e-02,  ..., -1.4841e-02,
           -4.4861e-03, -3.7692e-02],
          [-5.2655e-03,  1.4099e-02, -3.2830e-02,  ..., -2.9330e-02,
            1.4010e-02,  2.4373e-02],
          [ 2.4586e-03, -1.1354e-03,  1.9502e-02,  ...,  1.5881e-02,
           -1.6677e-02, -9.3075e-05]],

         [[ 4.2543e-03,  3.6457e-02,  3.9112e-02,  ...,  9.5318e-03,
            4.6184e-02,  3.1116e-02],
          [-1.5339e-03, -3.9380e-02, -2.1368e-02,  ..., -5.6790e-02,
           -3.3964e-02,  5.3339e-03],
          [ 4.0534e-02, -1.3259e-02,  2.7804e-02,  ..., -2.3574e-02,
           -3.8328e-02,  1.4554e-02],
          ...,
          [ 3.5098e-03, -1.0742e-02, -4.8625e-02,  ...,  2.2843e-02,
            1.3551e-02, -4.1983e-02],
          [-3.4145e-02,  3.8874e-02, -1.0472e-02,  ..., -3.6266e-03,
            2.9355e-02, -3.6364e-02],
          [-1.1331e-02,  2.4350e-02,  7.3400e-03,  ...,  1.0397e-02,
           -1.5600e-02, -7.7228e-04]]],


        [[[-3.8893e-02,  2.0936e-02,  2.7489e-02,  ..., -1.9752e-02,
           -6.4031e-02,  5.9070e-03],
          [-2.3041e-02, -4.1202e-02,  1.8667e-02,  ..., -2.4602e-02,
            1.7253e-02, -8.5007e-04],
          [ 1.3401e-02, -2.1123e-02, -1.9544e-02,  ...,  1.8519e-03,
            6.2429e-03, -4.1874e-02],
          ...,
          [-1.0167e-02, -2.9209e-02,  3.4658e-03,  ...,  2.7087e-02,
           -1.0706e-02,  1.8833e-02],
          [-1.1102e-02, -2.7076e-02,  2.3855e-02,  ...,  1.4980e-02,
           -5.2224e-04,  2.1836e-02],
          [-5.1259e-02, -4.3746e-03, -9.1225e-03,  ...,  1.5239e-02,
            1.0462e-02,  2.2303e-02]],

         [[ 2.1820e-03,  3.1559e-02, -2.5514e-02,  ...,  4.9701e-02,
            2.5006e-02,  2.3089e-02],
          [-1.8731e-02,  6.8777e-02,  1.9795e-02,  ...,  1.1284e-02,
           -2.2158e-02,  2.4795e-02],
          [ 3.0075e-02,  1.5095e-02,  1.7730e-02,  ...,  1.2691e-02,
            2.4303e-05,  3.7999e-02],
          ...,
          [-4.2803e-03, -1.4577e-02,  2.4101e-02,  ...,  5.1727e-03,
           -2.2436e-02,  3.8757e-02],
          [ 2.5909e-02, -1.7524e-02,  8.4435e-03,  ..., -6.8330e-03,
           -1.4485e-02, -3.4696e-02],
          [-7.3453e-03,  1.4017e-02, -1.4643e-02,  ...,  2.1278e-02,
           -3.3573e-02, -1.1302e-02]],

         [[ 8.3775e-03, -2.3786e-02, -1.7729e-02,  ..., -1.2674e-02,
           -2.8803e-02,  2.4538e-02],
          [ 4.8223e-03, -3.7418e-02,  1.9158e-02,  ...,  1.1298e-02,
            1.2132e-03,  4.5028e-02],
          [ 4.5600e-02, -3.7094e-03, -9.7674e-03,  ..., -3.2070e-02,
            4.8926e-03, -2.4540e-02],
          ...,
          [ 6.9344e-03,  2.2897e-02, -1.2155e-02,  ...,  2.6299e-02,
            1.5483e-02, -1.5207e-02],
          [-3.6586e-03,  3.7602e-02, -3.2072e-02,  ...,  2.3438e-03,
           -2.7921e-02, -2.7215e-02],
          [-1.7645e-02,  1.1417e-02, -1.1272e-02,  ...,  4.7332e-02,
            8.7909e-03,  9.7392e-03]]],


        [[[ 1.0596e-02, -1.4602e-02, -3.7731e-02,  ..., -1.1647e-02,
            2.9760e-02,  1.9383e-02],
          [ 2.3460e-02,  7.3877e-03, -1.0442e-03,  ...,  6.9981e-03,
            4.3634e-02, -4.0278e-02],
          [-1.6885e-02,  1.9870e-02, -1.9555e-02,  ...,  3.8875e-02,
           -1.3847e-03, -1.8732e-02],
          ...,
          [ 3.2856e-03, -1.5751e-02,  7.3185e-03,  ...,  2.5438e-02,
            2.3129e-03, -3.0824e-02],
          [ 4.1167e-02, -4.4531e-02, -2.0503e-03,  ..., -1.6863e-02,
           -1.7233e-02, -1.8822e-02],
          [-3.0008e-02,  1.1722e-02, -2.0703e-02,  ...,  1.6407e-02,
            1.8125e-02,  1.2230e-03]],

         [[ 3.6725e-02, -1.6484e-02,  1.8247e-02,  ..., -1.2435e-02,
            3.1849e-02, -4.0964e-03],
          [-2.6017e-02,  2.2859e-02, -3.2378e-02,  ..., -1.4565e-02,
           -9.9242e-03,  2.8738e-02],
          [-6.2489e-02,  5.8324e-02, -3.2185e-02,  ...,  2.4491e-03,
            3.7792e-02, -1.0672e-02],
          ...,
          [ 3.8925e-02,  1.4428e-02,  6.2616e-03,  ..., -3.3573e-02,
           -9.9714e-03,  3.4747e-02],
          [-1.4810e-02, -5.6570e-02, -2.7769e-02,  ..., -1.5020e-02,
            2.1284e-03,  4.0855e-02],
          [ 5.3673e-02,  9.9055e-06, -1.5069e-02,  ...,  6.7292e-04,
            7.1177e-03,  9.4209e-03]],

         [[ 7.1130e-03,  1.5899e-02, -2.4612e-02,  ...,  2.0409e-02,
            2.4384e-02, -4.2528e-03],
          [-2.5484e-02, -2.2506e-02,  5.9682e-02,  ..., -3.4739e-02,
           -5.9675e-02, -3.7100e-02],
          [-7.2275e-03, -2.4586e-02, -5.7393e-04,  ..., -1.8227e-02,
           -6.4707e-02, -2.7230e-02],
          ...,
          [-1.9821e-02,  2.8595e-02, -1.6948e-03,  ..., -5.9564e-02,
           -1.2855e-02,  1.5400e-02],
          [ 3.8758e-02, -3.5289e-02, -2.1249e-02,  ..., -2.1387e-02,
           -4.1429e-03,  2.7057e-02],
          [-2.6468e-02, -1.6742e-02,  1.0535e-02,  ...,  2.9981e-04,
            2.3993e-03,  9.9808e-03]]],


        ...,


        [[[-4.4863e-02, -2.6033e-02, -9.0518e-03,  ...,  4.9867e-03,
           -8.2469e-03,  2.2111e-02],
          [-4.5423e-02, -1.2951e-02, -1.0523e-02,  ...,  1.3543e-02,
           -6.0572e-03,  4.3082e-03],
          [-4.3503e-02,  2.4134e-02,  2.6971e-02,  ...,  1.2774e-02,
            3.8238e-04, -1.5605e-02],
          ...,
          [ 6.6345e-03,  1.7121e-02,  4.2662e-02,  ..., -7.9429e-04,
           -4.1031e-03,  9.8317e-03],
          [-9.1737e-03,  1.6623e-02,  7.4060e-04,  ..., -2.1887e-02,
           -8.8981e-03,  1.8094e-02],
          [ 1.9640e-02,  3.3642e-02, -1.6991e-02,  ..., -1.9971e-04,
            4.7459e-03,  4.7304e-02]],

         [[ 1.4632e-02, -2.0898e-02, -7.3868e-03,  ...,  5.2855e-02,
           -6.3047e-02,  1.2344e-02],
          [ 2.3291e-03, -1.9310e-02, -4.3085e-02,  ...,  1.5148e-02,
           -3.5315e-02,  3.2316e-02],
          [-8.9519e-03,  7.5524e-03, -1.4396e-02,  ..., -2.6339e-02,
            1.6216e-02, -2.1051e-02],
          ...,
          [-3.0168e-05,  1.1005e-02, -5.1856e-02,  ..., -3.6752e-03,
           -1.6405e-02, -5.0168e-03],
          [ 5.0507e-03,  5.7073e-03, -4.0733e-02,  ...,  6.3106e-03,
           -2.5522e-02, -9.4839e-03],
          [-1.8442e-02,  2.2209e-02, -2.3278e-02,  ..., -3.0080e-02,
           -8.0585e-04,  5.3579e-02]],

         [[ 3.2934e-02, -1.4939e-02, -4.6533e-02,  ...,  1.7042e-02,
            5.8503e-02,  3.8323e-03],
          [ 9.0493e-03,  3.3519e-02, -2.9708e-03,  ...,  1.2570e-02,
           -3.1335e-02, -4.1217e-02],
          [-1.5216e-02, -9.0186e-04, -3.6820e-02,  ..., -5.4818e-02,
            2.2688e-02, -3.1835e-02],
          ...,
          [ 1.4639e-02, -1.3446e-02,  3.8311e-02,  ...,  2.6292e-02,
           -4.4011e-02,  5.0550e-02],
          [ 1.4898e-04,  1.6053e-02, -1.4423e-03,  ..., -7.5061e-03,
           -1.4146e-02,  7.8891e-04],
          [-1.2316e-02, -3.8587e-02, -1.0569e-02,  ...,  2.6602e-02,
           -1.9935e-02,  3.4610e-03]]],


        [[[ 1.9675e-02, -3.0142e-02,  3.2390e-02,  ...,  2.8367e-02,
            7.3910e-03,  3.4379e-03],
          [ 1.7590e-03,  1.5758e-02,  1.5135e-02,  ..., -2.6582e-02,
           -1.2456e-02, -1.6506e-02],
          [-2.3338e-02,  1.5327e-02,  4.5300e-03,  ..., -2.3605e-02,
            6.3159e-03,  1.9066e-02],
          ...,
          [-1.5148e-02, -1.9128e-02,  3.0265e-03,  ..., -2.3266e-02,
            2.9272e-02, -2.6589e-03],
          [ 1.2832e-02,  2.5598e-02, -2.6621e-02,  ..., -2.7952e-02,
           -2.6678e-02,  7.3141e-04],
          [-2.2229e-02,  5.6626e-03, -1.1480e-03,  ...,  8.1329e-03,
            6.4086e-04, -1.1188e-02]],

         [[-1.2109e-02, -1.2353e-02,  1.5360e-03,  ..., -3.5074e-03,
           -9.1089e-03, -5.9012e-02],
          [ 8.5194e-03, -1.1768e-02, -2.7210e-03,  ...,  1.3968e-03,
           -3.2498e-02, -3.5348e-02],
          [-2.4521e-02,  3.5834e-02, -4.1474e-02,  ...,  2.8849e-03,
            3.4339e-02,  1.7634e-02],
          ...,
          [-1.7857e-02,  1.8339e-02, -1.7726e-02,  ..., -1.1499e-02,
           -6.7538e-03, -3.2428e-02],
          [-3.2799e-03,  2.8498e-03, -1.2005e-02,  ..., -3.8131e-02,
            3.2948e-03, -1.1922e-02],
          [-1.3440e-02, -5.5110e-02,  9.8158e-03,  ...,  3.2520e-02,
            2.9043e-02,  1.1418e-03]],

         [[-4.2648e-02, -4.2646e-02, -2.3666e-02,  ..., -1.9335e-02,
            2.0285e-02,  2.1733e-02],
          [-1.0528e-02,  9.8679e-03, -4.0915e-02,  ...,  2.6122e-02,
           -1.7130e-03,  2.5093e-03],
          [ 2.1866e-02,  5.5665e-03, -3.3611e-02,  ...,  7.6953e-03,
           -1.7293e-02,  7.3986e-03],
          ...,
          [ 2.2055e-02, -1.5061e-02,  7.7443e-03,  ...,  4.2028e-03,
            2.0444e-02,  2.5681e-02],
          [ 7.5488e-03,  1.2029e-03, -7.3469e-03,  ..., -5.0688e-03,
            2.1942e-02,  1.0980e-02],
          [ 1.4897e-02, -8.5962e-03, -2.4932e-02,  ...,  1.8186e-03,
           -2.5728e-02, -7.2080e-03]]],


        [[[ 6.0686e-02, -3.3597e-03, -2.5956e-02,  ...,  1.6237e-02,
           -2.2113e-02,  8.9083e-03],
          [ 7.7212e-03, -1.2694e-02,  4.3477e-03,  ...,  6.2760e-03,
           -4.0274e-03, -2.2637e-02],
          [ 2.3878e-02,  8.1135e-03,  3.0415e-02,  ...,  1.8416e-02,
            3.6944e-02,  1.3177e-02],
          ...,
          [-2.0058e-02, -9.7272e-03,  1.4432e-02,  ...,  7.5040e-03,
            1.9522e-02,  1.6989e-02],
          [ 7.7781e-04, -3.4681e-02, -5.3832e-03,  ...,  2.6012e-03,
           -6.9463e-03,  6.3795e-03],
          [ 5.0396e-03, -6.0570e-03,  2.1779e-02,  ..., -1.0344e-02,
            4.5340e-03,  5.4189e-03]],

         [[-4.6816e-03, -1.0350e-02,  7.7608e-03,  ...,  2.4120e-02,
           -5.0812e-03,  5.6148e-03],
          [ 1.9122e-02, -1.0045e-02, -7.6139e-03,  ..., -3.0876e-03,
            1.5179e-02,  1.1506e-02],
          [-1.3094e-02,  1.2932e-02, -3.0712e-02,  ...,  2.1280e-02,
            5.7006e-02, -7.6930e-03],
          ...,
          [-4.9127e-02,  3.5185e-02, -1.7256e-02,  ..., -1.0625e-02,
            1.4163e-02, -2.5333e-02],
          [-3.9766e-03,  1.4467e-02,  2.5699e-03,  ..., -9.3250e-04,
           -4.0784e-03,  2.8755e-02],
          [ 1.6647e-03, -3.1607e-03,  5.8322e-03,  ..., -3.0369e-03,
            3.0223e-02,  9.3337e-03]],

         [[ 1.1326e-02, -1.5490e-02, -2.8561e-02,  ...,  2.1730e-02,
            2.0388e-02,  1.2174e-02],
          [-6.6104e-04,  4.0419e-03,  3.0331e-02,  ..., -1.4615e-02,
           -5.3921e-02, -2.3327e-02],
          [ 2.7362e-02,  2.1456e-02,  2.7750e-02,  ...,  3.2150e-03,
            3.4570e-02, -1.7582e-03],
          ...,
          [-5.3534e-02, -3.0693e-02, -3.9377e-02,  ..., -4.2713e-02,
           -8.6109e-03,  1.4668e-02],
          [ 7.9392e-03, -8.0856e-02,  7.7427e-03,  ..., -1.7541e-02,
           -3.4078e-02,  4.4827e-02],
          [ 2.8156e-02,  5.4007e-03, -6.0844e-02,  ..., -1.2089e-02,
           -5.3948e-02,  1.9566e-02]]]], device='cuda:0')
module.encoder.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-0.0394,  0.0196,  0.0351],
          [-0.0052, -0.0703, -0.0503],
          [ 0.0530,  0.0675,  0.0403]],

         [[ 0.0538,  0.0592, -0.0674],
          [-0.0193,  0.0686, -0.1016],
          [ 0.0669,  0.0310, -0.0038]],

         [[-0.0060,  0.1249,  0.0177],
          [ 0.0297,  0.1086, -0.0437],
          [-0.0904,  0.0635,  0.0538]],

         ...,

         [[ 0.0324, -0.1149,  0.0076],
          [ 0.0735, -0.0152,  0.0186],
          [ 0.0537, -0.0473,  0.0148]],

         [[-0.0614,  0.0163,  0.0376],
          [ 0.0750,  0.0424,  0.0358],
          [-0.1183, -0.0558,  0.0870]],

         [[-0.0797, -0.0026, -0.0806],
          [ 0.0400,  0.0219, -0.0797],
          [ 0.0423,  0.0461,  0.0709]]],


        [[[-0.0739,  0.0077, -0.0413],
          [ 0.0361,  0.0900,  0.0651],
          [ 0.0303, -0.0499, -0.0159]],

         [[ 0.1147, -0.0984, -0.0517],
          [-0.0088, -0.0096,  0.0221],
          [-0.0017,  0.0921,  0.0038]],

         [[ 0.0510,  0.0525,  0.0104],
          [ 0.0232,  0.0376, -0.0047],
          [-0.0009, -0.0659,  0.0461]],

         ...,

         [[ 0.0180,  0.0655, -0.0131],
          [-0.0177,  0.0238, -0.0664],
          [ 0.0697, -0.0052,  0.0750]],

         [[ 0.0152,  0.0571, -0.0610],
          [ 0.1024, -0.0327, -0.0111],
          [-0.0394,  0.0713, -0.0041]],

         [[ 0.0337, -0.0391, -0.0796],
          [ 0.0510,  0.0236,  0.0779],
          [ 0.1009,  0.1676,  0.0432]]],


        [[[ 0.0693, -0.0616,  0.0303],
          [-0.0619, -0.0103, -0.0888],
          [ 0.0223,  0.0371,  0.0753]],

         [[ 0.0307,  0.0667,  0.0761],
          [ 0.0629, -0.0794, -0.0292],
          [ 0.0774,  0.0591,  0.0606]],

         [[ 0.0180, -0.0393, -0.0491],
          [ 0.0717, -0.0026, -0.0344],
          [ 0.0816, -0.0451, -0.0539]],

         ...,

         [[-0.1379, -0.0370, -0.0781],
          [ 0.1058,  0.0177, -0.0476],
          [ 0.0188,  0.0062,  0.0165]],

         [[-0.0427,  0.0315,  0.0879],
          [-0.0055,  0.0035, -0.0052],
          [-0.1082, -0.0064,  0.0315]],

         [[ 0.1017,  0.0418,  0.0479],
          [-0.0355, -0.0101, -0.0418],
          [ 0.1065,  0.0656, -0.0207]]],


        ...,


        [[[ 0.0453,  0.0522, -0.0940],
          [-0.0407,  0.0368, -0.0407],
          [-0.0250, -0.0571,  0.0327]],

         [[-0.0487,  0.0466, -0.0470],
          [ 0.1034,  0.0367, -0.0260],
          [ 0.0288, -0.0373,  0.0010]],

         [[ 0.0506,  0.0720,  0.0505],
          [-0.0415,  0.0269, -0.0273],
          [-0.0298,  0.0182, -0.0688]],

         ...,

         [[-0.0426,  0.0400,  0.0152],
          [ 0.0742,  0.1272,  0.0013],
          [-0.0323, -0.0716, -0.0331]],

         [[-0.0159,  0.0062, -0.0705],
          [-0.0609,  0.0084,  0.0747],
          [ 0.0050,  0.0515, -0.0210]],

         [[ 0.0170,  0.0396, -0.0261],
          [ 0.0266, -0.0558,  0.0036],
          [-0.0273,  0.0236,  0.0683]]],


        [[[-0.0500,  0.0674,  0.0694],
          [ 0.1337,  0.0094, -0.0149],
          [ 0.0403, -0.0776, -0.0425]],

         [[ 0.1080,  0.0224,  0.0344],
          [-0.0074, -0.0282, -0.0633],
          [ 0.0233, -0.0349, -0.1634]],

         [[-0.0240,  0.0035, -0.0510],
          [-0.0201, -0.0549,  0.0410],
          [ 0.0101, -0.0388,  0.0072]],

         ...,

         [[ 0.0299, -0.0790, -0.0268],
          [ 0.0969,  0.0059, -0.0586],
          [ 0.0069, -0.0032,  0.0199]],

         [[-0.0353, -0.0889,  0.0236],
          [ 0.0327, -0.1801,  0.0021],
          [ 0.0085, -0.0063,  0.0502]],

         [[-0.0497, -0.0599, -0.0282],
          [ 0.0654, -0.0014, -0.0233],
          [ 0.0020,  0.0601,  0.0151]]],


        [[[-0.0824, -0.0490,  0.0543],
          [-0.0490, -0.0741,  0.0263],
          [ 0.0332,  0.0015,  0.0426]],

         [[-0.0107,  0.0888, -0.1179],
          [ 0.0350,  0.0094, -0.0299],
          [ 0.0626, -0.0396,  0.0789]],

         [[ 0.1586, -0.0493,  0.0216],
          [ 0.0146, -0.0067, -0.0516],
          [ 0.0091,  0.0457, -0.0476]],

         ...,

         [[-0.0581, -0.1220,  0.0312],
          [ 0.0003,  0.0374,  0.0640],
          [-0.0421, -0.0271,  0.0096]],

         [[ 0.1504, -0.1409,  0.0249],
          [-0.0414, -0.0602, -0.0310],
          [ 0.0037, -0.0534, -0.0491]],

         [[ 0.0603, -0.0006, -0.0949],
          [ 0.0358, -0.0218, -0.0182],
          [ 0.0690, -0.0717, -0.0180]]]], device='cuda:0')
module.encoder.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[-1.8771e-02,  5.5014e-03, -5.4156e-02],
          [-4.1707e-03,  3.4980e-02,  1.2546e-01],
          [ 8.8471e-03, -9.4247e-04, -1.0265e-02]],

         [[ 1.2650e-04,  6.2760e-02, -7.2697e-02],
          [ 1.8147e-02,  2.1416e-02,  1.2031e-03],
          [-2.2089e-02,  1.5216e-02, -1.0366e-01]],

         [[-5.6953e-02,  8.2101e-02, -8.4630e-02],
          [ 4.4464e-02, -9.6520e-02,  1.0346e-02],
          [ 3.6348e-02,  5.1543e-02,  7.9219e-02]],

         ...,

         [[ 8.2693e-02, -1.4852e-01, -4.3480e-02],
          [ 5.9048e-02, -1.7512e-01,  7.8383e-02],
          [ 5.4771e-02,  6.0512e-02, -1.0535e-01]],

         [[-8.6972e-02, -8.4126e-02,  8.5619e-02],
          [ 5.1854e-03, -8.6819e-02,  7.2543e-02],
          [-3.0433e-02,  7.6429e-03,  1.7576e-02]],

         [[ 3.9360e-02, -5.2388e-02,  2.2783e-02],
          [-3.6929e-02, -9.0206e-02, -3.5449e-02],
          [ 1.8431e-02, -8.2358e-02, -4.9403e-02]]],


        [[[ 2.6587e-02, -9.0333e-03, -1.1602e-01],
          [-5.4387e-03, -1.0361e-01, -7.1882e-03],
          [-2.7932e-02, -3.3656e-02, -1.0633e-01]],

         [[-1.9832e-02, -1.2390e-02,  3.4374e-03],
          [-3.6330e-02,  7.3671e-02,  1.7559e-02],
          [-5.3585e-02, -6.5389e-02,  5.3965e-02]],

         [[ 1.2830e-01, -1.0557e-01,  7.9243e-02],
          [ 1.4352e-03, -3.8340e-02, -7.0441e-02],
          [-6.2863e-02, -8.0962e-02, -7.9908e-02]],

         ...,

         [[-3.6551e-02,  2.0976e-02, -3.3984e-02],
          [ 4.1730e-02,  5.7125e-02,  8.7491e-03],
          [ 3.6800e-03,  8.1695e-02,  2.9218e-02]],

         [[ 2.2883e-02, -1.0778e-01, -4.9707e-02],
          [ 2.7458e-02, -3.6902e-02, -2.3118e-02],
          [-6.5971e-03,  1.7024e-03, -5.1662e-02]],

         [[ 5.9588e-02, -4.7975e-02,  2.0162e-02],
          [-1.0143e-01,  4.6819e-02,  1.6275e-02],
          [-1.0054e-02,  6.1543e-02,  9.0117e-03]]],


        [[[ 1.4316e-01,  1.4326e-02,  4.2410e-02],
          [ 5.8996e-02,  1.4600e-02, -9.4503e-03],
          [-7.0811e-02, -6.1922e-02, -6.6130e-02]],

         [[ 4.5343e-02, -5.4075e-02,  2.4372e-02],
          [-2.4231e-02, -1.2927e-01, -3.9835e-02],
          [-4.6174e-02,  3.2633e-02,  3.9584e-03]],

         [[ 3.5241e-02, -1.2872e-02, -8.1734e-03],
          [ 5.2626e-02,  2.6523e-02, -2.7858e-02],
          [ 6.1071e-02,  5.0422e-02, -1.0115e-01]],

         ...,

         [[-1.0451e-01, -2.9394e-02, -9.9385e-03],
          [ 7.7381e-02,  9.2753e-02, -5.4280e-02],
          [ 2.2353e-02, -2.2914e-02,  5.4329e-02]],

         [[-5.6341e-02, -1.3629e-02, -4.0476e-02],
          [-7.7170e-02, -4.7157e-02, -5.0252e-02],
          [ 1.1660e-02, -1.0295e-01, -9.1654e-02]],

         [[-5.0752e-03, -7.0876e-02, -7.2340e-02],
          [ 1.0151e-01, -2.2657e-02,  5.3940e-02],
          [-7.1434e-02,  9.6670e-02, -4.6197e-02]]],


        ...,


        [[[-1.7458e-02, -9.4811e-03, -4.8991e-02],
          [ 4.6753e-03, -4.3034e-02, -2.4728e-02],
          [ 1.1709e-02, -7.0883e-03, -7.8692e-02]],

         [[ 8.8133e-02,  2.6626e-02, -2.1551e-02],
          [-3.0387e-02,  2.6843e-03,  5.8255e-02],
          [ 3.8417e-02, -2.5835e-02, -3.1470e-02]],

         [[-4.0652e-03, -1.0048e-01,  6.8635e-02],
          [-3.4535e-02,  3.5086e-02,  9.0817e-02],
          [-1.2696e-02, -2.7469e-03, -3.9563e-02]],

         ...,

         [[-8.0141e-06,  5.4656e-03, -5.7174e-03],
          [ 9.9648e-02,  1.2051e-01,  9.4160e-02],
          [-7.3253e-02,  4.2981e-02,  5.7986e-02]],

         [[-8.3114e-02, -4.2640e-03, -1.0028e-01],
          [ 2.0287e-02,  1.2276e-02,  8.8140e-02],
          [-3.8423e-02,  3.2034e-03, -4.0938e-02]],

         [[ 1.5116e-02, -4.5849e-02, -7.7698e-02],
          [ 6.3900e-02,  3.1950e-03, -1.4948e-01],
          [ 3.2478e-02, -2.2021e-02, -3.2792e-02]]],


        [[[ 1.5848e-02,  9.7496e-02,  8.6127e-02],
          [-5.5957e-02,  2.3140e-02,  4.7376e-02],
          [ 7.0272e-02, -6.3402e-02,  7.0078e-03]],

         [[-3.3669e-02, -5.3007e-02, -7.0115e-02],
          [ 7.4954e-02, -3.3147e-02, -6.0246e-02],
          [ 4.3763e-02, -2.1116e-02,  1.3936e-02]],

         [[-6.4099e-02, -3.9543e-02, -4.0264e-02],
          [-6.7462e-02,  9.9349e-03, -2.6407e-02],
          [ 1.0310e-01,  4.0666e-02, -1.1843e-01]],

         ...,

         [[-2.4284e-02,  1.4595e-01, -5.7669e-02],
          [-2.1392e-02,  5.5394e-03,  1.1710e-02],
          [ 4.2809e-02,  8.8211e-02, -5.7669e-02]],

         [[ 3.7720e-02, -3.3112e-02,  4.0940e-02],
          [-6.3378e-02,  8.1490e-02,  6.4482e-03],
          [-1.7778e-02, -7.2511e-02,  1.4500e-01]],

         [[ 4.7659e-02,  5.0273e-02,  2.1559e-02],
          [-3.6033e-02,  1.3183e-01, -7.8199e-03],
          [ 1.6518e-02,  6.0357e-02,  3.4847e-02]]],


        [[[-1.8122e-02,  1.6196e-02,  8.0908e-02],
          [ 4.5918e-02,  9.3732e-02, -1.0376e-01],
          [-9.6844e-03,  1.3239e-02,  2.1076e-02]],

         [[ 1.9110e-02,  4.1571e-03, -2.9319e-02],
          [ 1.3585e-02,  1.8826e-02,  8.9799e-03],
          [-7.5627e-02,  4.0733e-02, -1.4647e-03]],

         [[ 4.2377e-02,  1.8171e-02,  6.7977e-02],
          [ 1.1771e-01, -3.1081e-02, -2.6605e-02],
          [ 1.0779e-01,  6.4050e-02,  4.6000e-02]],

         ...,

         [[ 1.0020e-02,  1.5249e-01, -6.8617e-02],
          [ 1.7946e-02,  9.3627e-02,  8.3246e-02],
          [ 1.5932e-02, -9.2243e-03,  6.3760e-02]],

         [[-2.1352e-02, -3.1599e-02,  1.2062e-02],
          [ 6.3211e-02, -1.1178e-01, -5.1806e-02],
          [-2.0735e-02,  9.3403e-03,  6.0316e-02]],

         [[ 4.6266e-02,  1.7739e-02,  4.5597e-02],
          [ 7.7893e-02, -1.5686e-02,  1.6342e-02],
          [-1.3890e-01,  1.0700e-01, -5.1858e-02]]]], device='cuda:0')
module.encoder.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[ 5.3007e-02,  7.7276e-02,  6.6819e-02],
          [-3.0174e-02,  2.1930e-02,  4.6175e-02],
          [-3.1545e-03, -4.4827e-02,  8.9208e-02]],

         [[ 6.5558e-02,  9.6952e-02,  3.9860e-02],
          [ 6.1887e-02,  4.8915e-02, -8.4440e-03],
          [-4.6676e-02,  1.2583e-02, -1.1301e-01]],

         [[ 1.2530e-02,  1.7941e-02,  2.6025e-02],
          [ 1.2505e-02, -2.7520e-02, -2.0390e-02],
          [-2.8409e-02, -5.6115e-02,  1.1732e-01]],

         ...,

         [[ 5.1742e-03,  8.7695e-03,  3.0774e-02],
          [-7.5775e-02,  1.1255e-03, -1.2812e-01],
          [ 7.1191e-02,  1.0981e-01,  7.9291e-02]],

         [[ 3.2870e-02, -4.2908e-02, -7.4939e-02],
          [-5.5574e-02,  6.0244e-02, -5.1848e-02],
          [ 9.9059e-02, -1.4285e-02,  5.9960e-02]],

         [[ 3.3166e-02,  1.2872e-03,  5.5733e-02],
          [-3.9079e-02, -3.2476e-02,  1.1285e-01],
          [ 2.3638e-02,  7.6551e-03,  6.4231e-03]]],


        [[[-4.7704e-02,  2.2790e-02,  7.8790e-02],
          [ 8.8651e-02,  1.3889e-02, -6.6851e-02],
          [-4.3276e-02,  9.3858e-03,  9.2656e-03]],

         [[-1.3567e-02, -1.1287e-01,  5.8989e-02],
          [ 4.6874e-04,  1.8934e-02, -3.5849e-03],
          [-2.9831e-02,  6.5302e-02, -1.6128e-03]],

         [[-7.4820e-02, -2.2716e-03,  6.8392e-03],
          [-4.2421e-02,  7.1750e-02,  1.4435e-02],
          [-7.4560e-02, -7.2574e-02, -1.8256e-02]],

         ...,

         [[-4.6548e-02,  7.9595e-02, -2.4610e-02],
          [-1.3383e-02, -2.1941e-02,  3.5614e-02],
          [-8.8589e-02,  9.7945e-02, -7.8430e-02]],

         [[-6.5492e-03, -1.2007e-02, -2.7147e-02],
          [-4.3107e-02,  7.0568e-02,  4.4423e-02],
          [-7.5428e-02,  1.5437e-02,  3.0076e-02]],

         [[-1.3140e-01, -6.5108e-02, -1.6958e-02],
          [-4.2734e-02,  5.2411e-02, -9.5781e-02],
          [ 4.8965e-02, -7.2870e-02,  2.2180e-03]]],


        [[[-8.1617e-02,  3.7287e-02,  3.6337e-02],
          [-7.9418e-02, -5.0901e-02, -1.7782e-02],
          [-7.2231e-02, -5.3855e-02,  2.4804e-02]],

         [[ 2.8604e-02, -9.4962e-02,  6.9394e-02],
          [ 9.1035e-02, -1.1579e-02,  9.1816e-03],
          [-9.0663e-03, -3.9253e-02, -1.6719e-02]],

         [[-1.9582e-02, -3.0062e-02, -5.2667e-02],
          [-5.7673e-03, -5.1937e-02,  2.0019e-02],
          [ 4.8673e-02,  1.5446e-02, -4.8683e-02]],

         ...,

         [[-9.9540e-02,  6.6930e-02, -1.3212e-01],
          [ 4.4519e-02, -8.6377e-02,  9.3710e-03],
          [-1.7654e-02,  2.5221e-03,  3.4290e-03]],

         [[ 8.0292e-02, -1.9838e-02,  1.4933e-01],
          [ 1.0906e-01,  5.6409e-02, -7.2432e-02],
          [ 1.5895e-02,  5.3547e-02, -4.3971e-02]],

         [[-1.6225e-02, -4.1857e-02,  9.5966e-02],
          [ 6.7745e-02, -4.6588e-02, -6.0717e-02],
          [ 6.9292e-03, -3.4842e-02, -5.3294e-02]]],


        ...,


        [[[-8.9170e-03, -8.0166e-02, -2.6357e-02],
          [-4.9210e-02,  3.8538e-02, -8.3438e-02],
          [ 1.8644e-02,  4.2080e-02, -1.4715e-01]],

         [[-1.3779e-01,  4.4463e-02, -2.1624e-02],
          [-6.9243e-02, -2.8055e-02, -4.6662e-02],
          [ 4.2572e-03, -9.9353e-02, -2.8171e-02]],

         [[ 7.5971e-02,  1.9736e-02, -6.3531e-03],
          [-7.1556e-02,  9.0469e-02,  3.6869e-03],
          [-3.5117e-02,  4.3885e-02, -1.1032e-01]],

         ...,

         [[-7.7045e-02,  2.9623e-02,  7.0622e-02],
          [ 6.9870e-02, -6.5900e-02, -7.4518e-02],
          [-6.6722e-02, -7.8473e-02, -6.9474e-02]],

         [[-3.3203e-02,  1.0561e-02, -4.2288e-02],
          [-3.3616e-04,  1.8604e-02, -6.1533e-02],
          [-4.7348e-02,  4.2248e-02,  4.0556e-02]],

         [[ 9.2193e-02,  8.1082e-02, -3.9034e-02],
          [-3.5905e-02,  7.0032e-03, -2.7980e-02],
          [-1.0762e-02, -1.8497e-02,  3.7016e-02]]],


        [[[ 1.6416e-02, -3.9055e-02, -2.5996e-02],
          [-3.8514e-02, -1.3582e-01, -7.9832e-03],
          [ 5.2093e-02, -4.2921e-02, -6.1632e-02]],

         [[ 7.8445e-02,  3.2059e-02, -2.9497e-02],
          [-2.9382e-02, -8.7966e-02, -4.7205e-02],
          [-3.1417e-02,  9.1316e-02, -6.4214e-02]],

         [[-1.9408e-02, -1.0521e-01,  6.3593e-02],
          [-5.6552e-02,  8.2697e-04,  3.3690e-02],
          [ 6.3027e-03,  1.0867e-01,  9.0270e-02]],

         ...,

         [[-1.3548e-01,  6.4694e-02,  4.0951e-02],
          [ 3.8169e-02,  9.8294e-02, -8.2997e-02],
          [ 9.7745e-03, -6.8860e-02,  3.4602e-02]],

         [[ 5.4423e-02,  8.6664e-03, -1.9132e-02],
          [ 2.3513e-02, -6.2788e-02, -1.3035e-01],
          [-4.9684e-02,  1.8637e-02,  7.5953e-02]],

         [[-1.4430e-02,  8.1288e-02, -7.5066e-02],
          [ 6.0007e-02,  7.1748e-03, -7.5557e-02],
          [ 1.0586e-02, -6.7441e-02,  4.3082e-03]]],


        [[[ 6.8993e-02, -1.1766e-01,  3.6519e-02],
          [ 2.7632e-02, -7.6471e-02,  3.6616e-02],
          [-1.7695e-03,  1.1770e-03,  3.1557e-02]],

         [[-4.1969e-02,  4.6232e-02, -1.0598e-01],
          [-6.1072e-02, -3.6045e-02,  5.7605e-03],
          [ 1.4154e-01, -4.5479e-02,  6.0672e-02]],

         [[ 3.4835e-02, -1.1174e-02, -1.1878e-01],
          [ 2.6236e-02,  1.4107e-02,  7.8976e-03],
          [-4.0302e-02, -2.2307e-02,  2.0782e-02]],

         ...,

         [[-1.1170e-01,  1.7285e-02, -2.4060e-02],
          [-8.0936e-02,  2.6291e-02, -3.4177e-02],
          [ 8.5025e-02,  1.2674e-02, -2.2599e-03]],

         [[ 4.2695e-02,  4.5510e-02, -5.0336e-03],
          [ 6.2069e-05,  2.1997e-02, -6.0741e-02],
          [ 5.7881e-02, -3.2504e-02,  1.8059e-02]],

         [[-5.7607e-02,  7.6785e-02, -2.4168e-02],
          [ 2.0224e-02, -1.9465e-02, -2.3601e-02],
          [-8.8195e-03, -1.7259e-02, -2.1259e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[ 2.7619e-02, -1.0438e-01, -2.9337e-02],
          [-1.8723e-02,  1.1201e-02,  3.5051e-02],
          [ 6.3976e-03, -2.2988e-02, -2.4822e-02]],

         [[-1.4377e-04, -1.7953e-02,  3.1434e-02],
          [ 7.2395e-03,  1.2305e-01,  2.0953e-04],
          [-1.0374e-01, -4.4194e-02, -8.5448e-02]],

         [[-1.6327e-02,  3.4102e-02,  3.1893e-02],
          [ 9.0610e-02, -4.1232e-03, -1.1244e-02],
          [-1.4515e-01, -1.6393e-02,  7.4198e-02]],

         ...,

         [[ 5.1028e-02,  1.8283e-01, -2.1316e-02],
          [ 1.4418e-02,  6.5769e-02, -1.4138e-02],
          [-2.9025e-03,  1.8098e-02,  1.0933e-02]],

         [[ 2.3766e-01,  3.1338e-02,  2.5037e-02],
          [ 5.0191e-02,  7.1587e-02, -9.5602e-02],
          [ 6.0896e-04, -1.1189e-01,  8.1645e-02]],

         [[-9.1466e-02,  1.1737e-02,  1.0217e-01],
          [-6.4023e-02,  1.6184e-02,  5.0536e-03],
          [-1.1664e-01, -3.1744e-03,  5.8173e-02]]],


        [[[-1.2912e-03, -7.5905e-02, -3.4842e-02],
          [-1.1609e-01, -3.5915e-02,  5.4277e-02],
          [ 1.0039e-01,  1.5983e-02, -3.0380e-03]],

         [[-6.6912e-02, -4.0391e-02,  3.3052e-03],
          [ 1.6409e-02,  3.1196e-02,  1.5962e-01],
          [ 7.3524e-03,  6.2090e-02,  8.0604e-04]],

         [[ 5.3706e-02, -9.5911e-02,  1.9131e-02],
          [-6.9694e-02,  3.7425e-02,  5.5314e-03],
          [ 2.4489e-02,  2.3639e-02, -1.7318e-03]],

         ...,

         [[-3.9703e-02, -5.7038e-02, -7.8681e-02],
          [ 1.0075e-01,  9.5091e-02, -7.0506e-02],
          [-1.9506e-03,  6.0112e-02, -4.4982e-02]],

         [[ 1.8035e-02, -5.5350e-02,  2.8086e-02],
          [ 4.8069e-03, -1.8226e-02, -5.9231e-02],
          [ 2.3335e-02,  2.6169e-02,  4.2819e-02]],

         [[ 1.0589e-02, -3.8668e-02,  1.0588e-02],
          [-3.6908e-03, -1.3784e-01,  4.7554e-02],
          [ 7.6227e-02, -2.3646e-03,  2.6006e-02]]],


        [[[ 3.3301e-02,  1.5251e-05,  8.4462e-02],
          [-6.1726e-02,  3.4515e-02, -4.9908e-03],
          [-1.4284e-03,  8.6756e-03,  5.8424e-03]],

         [[ 9.7686e-02, -6.7618e-02, -1.4391e-01],
          [-5.6644e-03,  9.6320e-04,  5.8685e-03],
          [ 4.2038e-04, -1.3084e-02,  6.8327e-03]],

         [[ 1.1510e-01,  7.0677e-02, -2.8428e-02],
          [-1.7048e-03,  8.1042e-02,  5.4509e-02],
          [ 4.5036e-02,  1.0534e-02, -3.7103e-02]],

         ...,

         [[ 6.4397e-02, -1.9893e-02, -5.4411e-02],
          [ 8.5269e-03, -8.6497e-02,  2.5608e-03],
          [-1.0378e-02, -7.8683e-02, -2.1468e-02]],

         [[-5.0432e-02,  1.3129e-02,  9.9114e-02],
          [ 8.6388e-03, -1.1133e-01, -5.4826e-02],
          [ 2.8019e-02, -4.9160e-02, -1.5317e-02]],

         [[-4.4031e-02,  2.3688e-02,  4.0580e-02],
          [ 3.6779e-02,  6.8827e-02,  3.2774e-02],
          [-3.4189e-02,  7.8365e-02, -9.6202e-03]]],


        ...,


        [[[ 1.3911e-01, -1.1934e-01,  3.4789e-02],
          [-9.6842e-02,  2.0220e-02, -6.2197e-03],
          [-7.4495e-02, -5.6876e-02, -7.2981e-02]],

         [[ 4.4686e-02, -4.6108e-02,  1.1648e-02],
          [-2.9381e-02,  1.3312e-01, -5.6630e-02],
          [ 4.5297e-03, -1.3769e-01,  3.9224e-02]],

         [[-3.9771e-02, -2.4487e-02, -5.9773e-02],
          [ 1.3569e-02,  1.6858e-02, -1.5521e-02],
          [-1.6503e-02, -1.1741e-02, -5.1846e-02]],

         ...,

         [[-6.9755e-02, -3.5372e-03, -6.5782e-02],
          [-1.0789e-01, -3.4632e-02,  1.9177e-02],
          [ 5.0073e-02, -4.8472e-02, -5.7502e-02]],

         [[-1.2963e-02,  8.3623e-03, -3.7806e-02],
          [-6.8134e-02, -1.5589e-02,  1.0189e-01],
          [ 1.2676e-01, -3.0850e-02,  4.3680e-03]],

         [[ 7.4928e-02,  9.0791e-02,  9.9121e-03],
          [ 6.7751e-02,  7.7531e-02,  8.7207e-03],
          [-6.3372e-03,  2.3387e-02,  3.5286e-02]]],


        [[[-7.8528e-03,  6.0030e-02,  8.6079e-02],
          [-6.1154e-02,  4.9860e-03, -5.9470e-02],
          [ 7.6237e-02, -5.0086e-02,  3.4129e-02]],

         [[ 5.3157e-03, -1.8973e-02,  1.1318e-01],
          [-4.6876e-03, -2.8450e-02,  3.8169e-02],
          [ 7.2397e-02,  7.0799e-02, -6.1157e-02]],

         [[-8.1782e-02,  6.4881e-02, -3.2362e-02],
          [-2.4991e-02, -5.1330e-02,  4.4773e-02],
          [-3.5221e-02, -1.6655e-02, -8.8296e-02]],

         ...,

         [[ 3.5520e-03,  1.1071e-01,  1.0230e-01],
          [ 3.7973e-02, -3.0209e-02,  4.9127e-02],
          [ 3.2888e-02,  1.0906e-02,  1.0992e-02]],

         [[-3.1656e-02,  8.9663e-03, -2.8492e-02],
          [ 4.6091e-03, -1.9673e-03, -1.0530e-02],
          [ 5.6446e-02, -9.6175e-03,  7.3314e-02]],

         [[ 6.0451e-02, -1.1442e-02,  7.4856e-02],
          [ 4.0605e-02, -6.6213e-03, -1.9696e-02],
          [ 1.0956e-02,  2.0603e-02,  1.0832e-02]]],


        [[[ 3.5447e-02, -4.8406e-02,  3.4825e-02],
          [ 5.9532e-02, -3.3965e-02,  3.6054e-02],
          [ 3.4993e-02, -1.2347e-01,  1.4750e-02]],

         [[ 2.9891e-02,  9.5799e-03, -1.0879e-01],
          [-3.8277e-02, -1.4639e-01,  1.2833e-02],
          [-3.1393e-02, -7.8337e-02, -1.9259e-03]],

         [[ 2.5117e-03,  1.2965e-01,  1.4279e-02],
          [ 3.1819e-03, -4.8200e-02,  1.0437e-01],
          [ 2.8188e-02, -1.3063e-02,  5.6102e-02]],

         ...,

         [[-1.0175e-01, -2.3905e-02, -3.6369e-03],
          [ 8.6593e-02,  4.3095e-03,  8.0047e-02],
          [-2.6718e-02,  2.9487e-02,  9.7281e-02]],

         [[ 1.3763e-01,  3.5721e-02, -2.7632e-02],
          [-4.1866e-02,  7.1963e-03, -4.7800e-03],
          [-6.8756e-02, -9.6409e-03,  9.2954e-02]],

         [[ 4.8826e-02, -3.2455e-02,  4.1865e-02],
          [-3.1980e-02, -3.2234e-02,  1.0659e-01],
          [ 8.7956e-02, -1.8434e-02, -3.9735e-02]]]], device='cuda:0')
module.encoder.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.conv2.weight Parameter containing:
tensor([[[[-0.0861]],

         [[-0.0415]],

         [[ 0.1004]],

         ...,

         [[-0.0250]],

         [[ 0.1175]],

         [[-0.0594]]],


        [[[-0.0309]],

         [[ 0.0889]],

         [[ 0.0890]],

         ...,

         [[ 0.0396]],

         [[-0.0100]],

         [[ 0.1819]]],


        [[[-0.0046]],

         [[-0.0872]],

         [[-0.0309]],

         ...,

         [[ 0.0904]],

         [[-0.0317]],

         [[ 0.0452]]],


        ...,


        [[[-0.0458]],

         [[-0.0042]],

         [[-0.0690]],

         ...,

         [[-0.0822]],

         [[-0.0652]],

         [[ 0.0562]]],


        [[[-0.0772]],

         [[ 0.0963]],

         [[-0.0856]],

         ...,

         [[-0.0074]],

         [[-0.1166]],

         [[ 0.0230]]],


        [[[ 0.0226]],

         [[-0.0905]],

         [[-0.0222]],

         ...,

         [[-0.1057]],

         [[ 0.1048]],

         [[ 0.0950]]]], device='cuda:0')
module.encoder.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-4.4543e-02, -1.9988e-02,  8.4248e-03],
          [ 9.4354e-02, -2.8361e-02,  2.6065e-02],
          [ 1.0515e-01,  9.3318e-02, -2.2093e-02]],

         [[-3.5009e-02,  7.0484e-02, -3.1830e-02],
          [-6.2900e-02, -3.6598e-02,  2.2037e-02],
          [ 3.1786e-02,  6.0356e-02,  2.5679e-02]],

         [[-7.0596e-02,  4.0750e-03,  1.4259e-02],
          [ 5.6268e-02, -5.4153e-02, -4.2779e-03],
          [ 7.1931e-02,  2.4980e-02, -2.9742e-02]],

         ...,

         [[ 5.9555e-03,  3.6979e-02, -4.0891e-02],
          [ 4.8292e-02, -2.9160e-02,  5.6646e-03],
          [-5.0371e-02,  1.6117e-02, -5.0624e-02]],

         [[ 6.8937e-02, -2.1539e-02, -2.6546e-02],
          [-2.5039e-02,  7.0948e-02,  2.9997e-04],
          [-2.3809e-02, -6.4404e-02,  2.4774e-02]],

         [[ 1.1573e-03, -1.6006e-02,  3.8583e-02],
          [-3.2885e-02,  5.7085e-02,  4.1627e-03],
          [-4.3063e-02,  2.0210e-02,  6.3288e-03]]],


        [[[-5.8878e-02,  1.5939e-02, -9.4443e-04],
          [-2.1884e-02, -4.3786e-02, -2.0080e-02],
          [-1.3398e-02,  4.1071e-02, -1.1905e-02]],

         [[-4.6342e-02,  9.4047e-02, -7.0868e-02],
          [-5.6574e-05,  2.1589e-02, -5.8555e-02],
          [ 5.7488e-02,  8.2302e-02,  5.0448e-03]],

         [[-5.4564e-02,  1.8282e-02,  2.1027e-02],
          [-2.4081e-02,  9.6790e-02, -3.9611e-02],
          [ 4.3391e-02,  2.8772e-02, -4.6273e-03]],

         ...,

         [[ 2.4477e-02,  7.5131e-02,  2.2400e-02],
          [ 1.7491e-02, -5.4869e-02, -6.5646e-02],
          [-4.7711e-02, -7.4675e-02, -7.8166e-03]],

         [[ 4.7077e-02,  5.4622e-02,  2.0499e-02],
          [ 1.4459e-02,  2.6372e-03,  3.5642e-02],
          [ 2.1520e-02, -5.1692e-04, -1.6000e-05]],

         [[-3.8478e-02, -1.5410e-02,  5.2741e-02],
          [ 4.2864e-02,  4.2628e-02, -7.3933e-02],
          [ 5.6379e-02, -5.0309e-02,  2.3651e-02]]],


        [[[ 1.0898e-01, -5.7844e-02,  1.2015e-02],
          [ 2.5124e-02,  2.1570e-02, -3.6297e-02],
          [ 1.6922e-02, -3.2644e-03, -1.1577e-02]],

         [[ 5.7209e-02, -1.6736e-02,  2.9088e-02],
          [ 7.3350e-02,  1.8174e-02, -7.9218e-03],
          [ 1.7496e-02, -7.9942e-02,  6.3586e-04]],

         [[-6.3491e-02,  1.1440e-02,  7.7433e-02],
          [-6.1660e-02, -3.3171e-02, -2.2037e-02],
          [-7.2521e-04,  2.6532e-02,  9.1005e-02]],

         ...,

         [[-3.7237e-02, -3.1828e-03, -4.3543e-02],
          [-3.6985e-02, -1.0239e-02, -1.6718e-03],
          [ 6.0225e-02,  5.6318e-02, -4.2101e-02]],

         [[ 1.8285e-02, -7.0288e-03, -5.0493e-02],
          [ 2.4108e-02,  2.5936e-02, -4.8599e-02],
          [-1.0283e-01, -4.1757e-02,  2.5521e-02]],

         [[-1.6530e-02, -1.1510e-02,  2.0130e-02],
          [-1.2830e-01,  3.9444e-02, -1.0975e-02],
          [-6.0565e-02, -1.8436e-02, -3.7060e-02]]],


        ...,


        [[[ 1.0791e-02,  2.4571e-02,  6.7597e-02],
          [ 3.7579e-02, -7.2782e-02, -1.7892e-01],
          [-4.9439e-02, -1.0634e-02, -1.1106e-01]],

         [[ 4.8048e-02, -4.0574e-04,  2.8048e-02],
          [-5.3607e-02, -1.9460e-02, -4.7017e-03],
          [-7.0456e-02,  2.7177e-03, -5.8132e-02]],

         [[-3.1634e-02, -6.9206e-02, -4.2035e-02],
          [ 4.6525e-02, -5.2213e-02, -1.5408e-01],
          [ 3.1700e-02, -5.2633e-02, -2.1779e-02]],

         ...,

         [[-2.7293e-02, -4.3833e-02,  5.1953e-02],
          [ 7.5124e-02,  1.3528e-02,  5.9959e-02],
          [-3.9978e-02,  5.1756e-02,  1.1339e-02]],

         [[-6.1241e-02, -3.9792e-02,  1.2362e-02],
          [ 5.2834e-02, -4.6773e-02, -8.9307e-03],
          [ 1.3794e-02, -6.1492e-02,  2.7664e-03]],

         [[-3.5221e-02,  8.1460e-03,  8.4194e-02],
          [-1.5820e-02,  3.4248e-02,  7.0296e-02],
          [-5.8517e-03,  8.7382e-02,  9.4227e-03]]],


        [[[-6.5260e-02, -3.1659e-02, -6.5826e-03],
          [-2.6401e-02,  8.5758e-03, -2.6052e-02],
          [ 5.5428e-02,  5.1183e-02,  1.5599e-02]],

         [[ 5.0121e-02, -1.6565e-03,  6.1813e-03],
          [-7.3220e-03, -3.4923e-02,  4.7239e-03],
          [ 2.7400e-02, -8.9800e-02,  2.3472e-02]],

         [[ 9.3215e-02,  1.9605e-02,  1.4249e-02],
          [ 9.6985e-02, -1.6386e-02,  1.8941e-02],
          [-9.0564e-02, -2.1865e-02,  1.5478e-02]],

         ...,

         [[-1.2889e-02, -1.3867e-02,  5.1676e-02],
          [-7.0275e-03,  2.7328e-02,  1.7474e-02],
          [ 1.5725e-02, -7.2475e-02,  1.3394e-02]],

         [[ 4.6478e-02,  3.3564e-02, -7.8792e-03],
          [-4.5481e-02, -3.2524e-02,  4.6336e-02],
          [-6.3004e-02, -1.5880e-02, -1.7774e-02]],

         [[-9.9760e-03, -9.4346e-02,  1.4362e-02],
          [-7.8934e-02,  1.7902e-02, -1.6196e-02],
          [ 4.5526e-02, -2.1279e-02, -4.5085e-02]]],


        [[[ 4.2436e-02, -4.2993e-02, -2.7069e-02],
          [ 2.5018e-04,  2.2521e-02, -6.1247e-02],
          [-4.5107e-02, -6.1511e-04,  6.5541e-03]],

         [[ 6.2195e-02,  7.6326e-02, -8.2351e-02],
          [ 6.7871e-02,  6.3494e-02, -1.7113e-03],
          [-1.1708e-02, -6.2585e-02,  6.3002e-02]],

         [[-4.4775e-02, -3.8539e-02,  9.7107e-02],
          [ 4.6358e-03,  5.0758e-02,  1.9862e-03],
          [-3.1664e-02,  9.4675e-02,  3.5398e-02]],

         ...,

         [[-3.5560e-02,  2.7005e-02, -4.8699e-02],
          [ 8.7716e-02,  3.2716e-02,  5.9285e-02],
          [ 8.7333e-03,  3.3728e-02, -5.9624e-02]],

         [[ 1.0681e-01,  1.4648e-02,  1.4593e-02],
          [-1.4728e-02, -2.8692e-02, -2.1291e-02],
          [-1.7126e-02, -2.6269e-02,  6.9719e-03]],

         [[-7.3857e-02,  9.2064e-03, -4.5881e-02],
          [-6.2878e-02, -7.3403e-02,  4.4994e-02],
          [ 3.2976e-02,  7.6823e-03,  2.5252e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[-2.1457e-02,  4.9226e-02, -3.6431e-02],
          [ 5.8111e-02,  9.9664e-03,  6.9755e-02],
          [ 5.9202e-02,  4.6769e-02, -1.2863e-02]],

         [[-6.9578e-02, -1.5957e-02, -4.2533e-03],
          [-7.9885e-02, -2.2029e-02, -1.0109e-02],
          [ 4.0516e-02,  5.5410e-03,  9.8798e-02]],

         [[ 3.8120e-04, -3.7561e-02, -1.4211e-02],
          [-1.1629e-02,  2.8700e-02,  9.0981e-02],
          [ 3.0969e-02,  7.7596e-02, -2.0914e-02]],

         ...,

         [[ 4.0434e-02,  5.4543e-03, -4.4816e-02],
          [ 5.0307e-02, -4.2676e-02, -5.0301e-02],
          [ 5.6450e-02, -6.2169e-03,  3.6751e-02]],

         [[-4.9240e-02,  7.7397e-02, -1.5957e-02],
          [-7.8838e-03, -1.2609e-02, -6.8145e-02],
          [-3.9871e-02,  4.4758e-02, -6.5548e-02]],

         [[ 4.5258e-02,  1.7497e-01, -2.6957e-02],
          [-1.8195e-02, -3.9714e-02,  2.5885e-02],
          [-3.6383e-02, -3.2038e-02,  1.4642e-02]]],


        [[[ 8.3734e-02, -8.0134e-02,  8.1009e-02],
          [-9.1520e-02, -5.6900e-02,  4.7899e-02],
          [ 1.7189e-02,  3.3023e-02,  6.0653e-02]],

         [[-1.0934e-02,  3.4569e-02, -2.0337e-03],
          [ 2.5893e-02, -2.5809e-02,  4.5106e-02],
          [ 2.5867e-02,  1.9076e-03, -4.9476e-02]],

         [[-2.2176e-02, -1.8452e-02,  5.4959e-02],
          [ 1.0504e-01,  7.3305e-02, -4.8625e-02],
          [ 1.1803e-02, -4.0220e-02,  6.0458e-02]],

         ...,

         [[ 3.5632e-02,  1.7512e-02, -4.5859e-04],
          [ 2.7516e-02, -1.2768e-01,  1.9540e-03],
          [-2.9335e-02,  7.6430e-02, -2.6455e-02]],

         [[ 5.4712e-02, -9.4482e-02,  4.9793e-02],
          [ 8.9519e-03, -1.0755e-02, -3.4496e-02],
          [-1.5075e-02,  3.6794e-02, -1.8624e-02]],

         [[-1.5275e-02, -8.3747e-02,  2.1485e-02],
          [ 4.7807e-02,  1.6451e-01, -3.0301e-02],
          [-5.0411e-02, -1.8757e-02, -1.1830e-01]]],


        [[[ 6.1238e-02, -7.5178e-03,  5.8885e-02],
          [-3.5887e-02, -2.9942e-02, -2.7049e-02],
          [ 1.5074e-02, -6.0091e-02,  6.6827e-02]],

         [[ 8.1061e-02, -3.5365e-02,  8.5460e-03],
          [-2.5806e-02,  8.2845e-02, -9.0624e-03],
          [ 3.2605e-02,  2.7806e-02,  1.5560e-02]],

         [[-1.1994e-01,  2.9449e-02, -5.0543e-02],
          [ 4.7145e-03,  2.9705e-02, -2.5346e-02],
          [ 6.0199e-02, -2.3426e-02,  7.6899e-02]],

         ...,

         [[-1.6626e-02,  5.5849e-02, -5.8047e-02],
          [-4.2790e-02, -4.4315e-02, -1.2624e-02],
          [ 1.8779e-02, -5.7206e-02, -3.6966e-02]],

         [[ 8.3093e-04,  5.8318e-02, -2.2700e-02],
          [-7.6617e-02, -3.1978e-02,  3.5516e-03],
          [-7.4848e-02, -2.1237e-02, -8.7346e-02]],

         [[-2.1793e-03,  3.3156e-03,  9.1454e-02],
          [-8.4659e-02,  7.0434e-03,  6.9400e-03],
          [ 9.9067e-02,  9.6714e-03,  4.6711e-02]]],


        ...,


        [[[-1.4171e-02,  2.2498e-02,  4.1961e-02],
          [-2.5988e-02, -4.3277e-02,  5.2185e-02],
          [-9.9794e-04, -2.6033e-02, -1.5906e-02]],

         [[-5.6231e-03, -2.9005e-02, -1.9638e-02],
          [ 1.2317e-02,  6.8731e-02,  2.6136e-02],
          [-4.1085e-02,  4.9722e-02, -9.3304e-04]],

         [[ 2.1723e-02, -2.4537e-02,  8.4101e-02],
          [ 4.4258e-02, -2.9865e-02, -1.3290e-02],
          [ 2.4677e-02, -6.3423e-02, -3.5028e-02]],

         ...,

         [[-2.3527e-02,  2.8978e-02,  1.3438e-02],
          [ 1.6587e-02, -5.1304e-03, -5.3010e-02],
          [ 1.3870e-02, -4.6282e-02, -5.0086e-02]],

         [[-5.6459e-02, -8.2617e-03,  4.7710e-02],
          [ 1.0114e-01,  4.6518e-05,  1.6926e-02],
          [-1.5021e-02,  2.8118e-02,  6.7521e-02]],

         [[ 4.9106e-02,  4.2285e-02, -8.6612e-03],
          [-7.6687e-03, -1.7587e-03, -1.7701e-03],
          [ 1.3667e-01, -2.8556e-02, -7.5091e-02]]],


        [[[ 2.1934e-02,  2.4777e-02,  1.1012e-02],
          [ 1.9951e-02,  2.3833e-02, -5.1493e-02],
          [ 1.2695e-01,  8.6006e-02, -1.3725e-02]],

         [[-5.0062e-02,  5.0158e-03,  4.8239e-02],
          [-6.8485e-02, -2.5007e-03,  5.8050e-03],
          [ 2.1512e-02,  4.5966e-02,  2.6141e-02]],

         [[ 5.3493e-03,  9.1912e-02,  6.0055e-02],
          [-2.3995e-02,  1.7145e-02, -1.9330e-02],
          [ 6.3272e-04,  2.2848e-02,  2.6708e-02]],

         ...,

         [[ 1.4393e-02, -3.8151e-02, -1.1964e-02],
          [-9.0290e-02,  6.1892e-03,  2.1710e-02],
          [ 7.1872e-02,  1.3940e-01, -4.3602e-02]],

         [[ 6.8580e-02, -4.4439e-02,  3.9696e-02],
          [-7.4504e-02,  2.8149e-03, -8.5767e-02],
          [ 6.3931e-02, -9.4375e-02,  2.2306e-02]],

         [[-2.5312e-02,  9.8120e-02,  2.6080e-02],
          [-4.3172e-02, -2.7018e-02,  6.1405e-02],
          [ 7.3675e-02, -2.4353e-03,  1.5005e-02]]],


        [[[ 2.2101e-02, -2.7093e-02, -2.8031e-02],
          [ 8.8773e-03, -1.1827e-02, -3.4554e-02],
          [ 1.1474e-01, -8.8115e-02, -1.6159e-02]],

         [[-3.7747e-02, -4.4704e-02,  1.5657e-01],
          [-5.4759e-02,  4.5129e-02, -4.8927e-02],
          [-2.3729e-02, -8.3598e-03,  4.1126e-02]],

         [[ 8.3652e-04, -6.8693e-02, -2.7805e-02],
          [-6.3738e-02,  2.0377e-02, -1.2500e-02],
          [ 5.6346e-02,  3.8373e-02,  1.1135e-01]],

         ...,

         [[-2.5689e-02,  2.4747e-02, -2.3479e-02],
          [-1.0484e-01, -1.4893e-01,  1.3652e-02],
          [ 4.1490e-02, -7.6361e-02, -2.2569e-02]],

         [[ 9.0686e-02,  1.1232e-01,  7.3063e-02],
          [-8.7869e-02,  5.3771e-02,  6.5667e-03],
          [ 2.4599e-02,  1.2498e-02, -2.9652e-02]],

         [[ 7.1085e-03, -9.5538e-02, -4.6369e-02],
          [ 3.0272e-02,  3.6992e-02, -6.2011e-02],
          [ 3.2283e-03, -5.8279e-02,  6.6906e-02]]]], device='cuda:0')
module.encoder.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0634]],

         [[ 0.2424]],

         [[ 0.0733]],

         ...,

         [[-0.1277]],

         [[ 0.0422]],

         [[ 0.0342]]],


        [[[-0.0378]],

         [[ 0.4208]],

         [[ 0.0699]],

         ...,

         [[ 0.1932]],

         [[ 0.0297]],

         [[-0.0184]]],


        [[[ 0.1927]],

         [[-0.0920]],

         [[-0.0218]],

         ...,

         [[ 0.2364]],

         [[-0.0263]],

         [[-0.0990]]],


        ...,


        [[[-0.0188]],

         [[ 0.0884]],

         [[ 0.0433]],

         ...,

         [[-0.0794]],

         [[-0.1408]],

         [[ 0.1136]]],


        [[[ 0.1601]],

         [[-0.1102]],

         [[ 0.0853]],

         ...,

         [[-0.0206]],

         [[ 0.2132]],

         [[-0.1903]]],


        [[[-0.0856]],

         [[ 0.0519]],

         [[ 0.0056]],

         ...,

         [[-0.1356]],

         [[ 0.0149]],

         [[ 0.1950]]]], device='cuda:0')
module.encoder.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[ 0.0117, -0.0221, -0.0318],
          [-0.0503, -0.0113, -0.0086],
          [ 0.0160, -0.1167,  0.0089]],

         [[ 0.0319, -0.0370, -0.0292],
          [ 0.0126,  0.0372, -0.0304],
          [-0.0198, -0.0157,  0.0319]],

         [[-0.0477,  0.0072,  0.0933],
          [-0.0515,  0.0413,  0.0023],
          [-0.0082,  0.0938, -0.1319]],

         ...,

         [[-0.0163,  0.0314, -0.0286],
          [-0.0053,  0.0174, -0.0843],
          [ 0.0414, -0.0304, -0.0509]],

         [[-0.0614, -0.0220,  0.0123],
          [-0.0996, -0.0022,  0.0090],
          [-0.0004, -0.0103, -0.0746]],

         [[ 0.0826,  0.0069, -0.0469],
          [ 0.0236,  0.0786,  0.0009],
          [ 0.0479,  0.0929,  0.0171]]],


        [[[-0.1103,  0.0222, -0.0263],
          [-0.0065,  0.0288, -0.0530],
          [-0.1040,  0.0284,  0.0044]],

         [[ 0.0380, -0.0065, -0.0310],
          [ 0.0114, -0.0334,  0.0004],
          [ 0.0853,  0.0482,  0.0361]],

         [[-0.0019,  0.0821, -0.0281],
          [ 0.0851, -0.0696, -0.0092],
          [ 0.0189,  0.0183,  0.0519]],

         ...,

         [[-0.0430,  0.0511, -0.0059],
          [-0.0834, -0.0588, -0.0439],
          [-0.0486, -0.0039, -0.0423]],

         [[-0.0795,  0.0936,  0.0855],
          [ 0.0260, -0.0028, -0.0782],
          [-0.0004,  0.0009, -0.0125]],

         [[ 0.0859,  0.0309, -0.0190],
          [ 0.0024, -0.0019, -0.0812],
          [ 0.0025, -0.0054, -0.0766]]],


        [[[-0.0250,  0.0619, -0.0371],
          [ 0.0401,  0.0621, -0.0640],
          [ 0.0349, -0.0417,  0.0534]],

         [[-0.0556,  0.0667,  0.0512],
          [ 0.0148, -0.0200, -0.0847],
          [ 0.0038,  0.0110, -0.0272]],

         [[-0.0949, -0.0070, -0.0076],
          [-0.0917,  0.0137, -0.0178],
          [ 0.0196,  0.0762, -0.0378]],

         ...,

         [[-0.0347, -0.0331, -0.0133],
          [-0.0048,  0.0015, -0.0017],
          [-0.0175, -0.0132,  0.0136]],

         [[ 0.0415,  0.0221,  0.0572],
          [ 0.0751,  0.0561, -0.0017],
          [-0.0812,  0.0384, -0.0025]],

         [[ 0.0075,  0.0431,  0.1027],
          [ 0.0828, -0.0419,  0.0550],
          [-0.0408, -0.0109, -0.0621]]],


        ...,


        [[[-0.0416,  0.0995, -0.0644],
          [-0.0149,  0.0426,  0.0169],
          [ 0.0490, -0.0229,  0.0585]],

         [[-0.0058, -0.0913,  0.0866],
          [-0.0015,  0.0330, -0.0387],
          [-0.0178,  0.0997,  0.0129]],

         [[ 0.0387,  0.0344, -0.0707],
          [ 0.0461,  0.0022, -0.0270],
          [ 0.0265, -0.0263,  0.0254]],

         ...,

         [[-0.0371,  0.0645, -0.0429],
          [-0.0117,  0.0463, -0.0262],
          [-0.0684, -0.0099,  0.0331]],

         [[ 0.0034, -0.0411,  0.0025],
          [-0.0491, -0.0207, -0.0117],
          [ 0.1093,  0.0907,  0.0674]],

         [[-0.0393, -0.0030, -0.0147],
          [-0.0283,  0.0229, -0.0696],
          [ 0.0152, -0.0597,  0.0624]]],


        [[[ 0.0552,  0.0047,  0.0238],
          [-0.0328, -0.0048, -0.0850],
          [-0.0144, -0.0155,  0.0394]],

         [[-0.0286, -0.0822,  0.0240],
          [ 0.0348,  0.0353,  0.0172],
          [ 0.0997, -0.0923,  0.0275]],

         [[ 0.0303, -0.0367,  0.0121],
          [-0.0097, -0.0482,  0.0057],
          [-0.0037,  0.0436,  0.0484]],

         ...,

         [[ 0.0896,  0.0031, -0.0078],
          [ 0.0266,  0.0524,  0.0600],
          [ 0.0103, -0.0033, -0.0136]],

         [[-0.0097,  0.0514,  0.0312],
          [-0.0267,  0.0183, -0.0277],
          [ 0.0451,  0.0776, -0.0353]],

         [[-0.0773,  0.0251,  0.0019],
          [ 0.1475,  0.0998,  0.0190],
          [-0.0002, -0.0038, -0.0078]]],


        [[[-0.0557, -0.0074,  0.0184],
          [-0.0269, -0.0048,  0.0194],
          [-0.0456,  0.0412, -0.0640]],

         [[ 0.0613,  0.0475, -0.0104],
          [ 0.0066,  0.0097, -0.0059],
          [-0.0373, -0.0349,  0.0778]],

         [[ 0.0930,  0.1022,  0.1015],
          [ 0.0607,  0.0655,  0.0030],
          [-0.0071,  0.0092,  0.0632]],

         ...,

         [[-0.0868, -0.0093, -0.0781],
          [-0.0022,  0.0331, -0.0564],
          [ 0.0302,  0.0185,  0.0796]],

         [[-0.0104, -0.0479,  0.0034],
          [-0.0381,  0.0382,  0.0398],
          [-0.0059, -0.0502,  0.0015]],

         [[-0.0246,  0.0217,  0.0279],
          [ 0.0103,  0.0209, -0.0354],
          [ 0.0348,  0.0596, -0.0720]]]], device='cuda:0')
module.encoder.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[-0.0082, -0.0230, -0.0111],
          [-0.0322, -0.0901,  0.0372],
          [-0.0110,  0.0503, -0.0024]],

         [[ 0.0072, -0.0489,  0.1015],
          [-0.0513,  0.0327,  0.0627],
          [ 0.0408, -0.0058, -0.0155]],

         [[-0.0306, -0.0393, -0.0617],
          [-0.0034,  0.0156, -0.0111],
          [ 0.0759, -0.0553, -0.0276]],

         ...,

         [[ 0.0392,  0.0266, -0.0256],
          [-0.0077,  0.0234, -0.0705],
          [ 0.0177, -0.0540,  0.0370]],

         [[-0.0313, -0.1318,  0.0105],
          [-0.0731, -0.0289, -0.0463],
          [ 0.0634,  0.0231, -0.0077]],

         [[ 0.0157, -0.0565,  0.0842],
          [ 0.0279,  0.0244, -0.0827],
          [ 0.0774, -0.0474, -0.0695]]],


        [[[-0.1119,  0.0240, -0.0052],
          [ 0.0550,  0.0139,  0.1249],
          [-0.0429, -0.0076, -0.0583]],

         [[-0.0321,  0.0061, -0.0037],
          [-0.0129, -0.0476,  0.0651],
          [ 0.0064,  0.0075, -0.0886]],

         [[ 0.0204, -0.1036, -0.0597],
          [-0.0792,  0.0074, -0.0253],
          [-0.0604, -0.0399, -0.0519]],

         ...,

         [[ 0.0060, -0.0271, -0.0372],
          [ 0.0069, -0.0294, -0.0771],
          [ 0.0277, -0.0137, -0.0324]],

         [[-0.1147, -0.0240,  0.0738],
          [ 0.0389,  0.0328, -0.0321],
          [-0.0044,  0.0505, -0.0076]],

         [[ 0.0168,  0.0364, -0.0128],
          [ 0.0511,  0.0132, -0.0689],
          [ 0.0633,  0.0239,  0.0437]]],


        [[[ 0.0759, -0.0140, -0.0361],
          [ 0.0048,  0.0669, -0.0348],
          [ 0.0629, -0.0291, -0.0114]],

         [[ 0.0202,  0.0644, -0.0089],
          [ 0.0913,  0.0190, -0.0426],
          [-0.0951, -0.0082, -0.0026]],

         [[ 0.0311,  0.0051, -0.0093],
          [-0.0342,  0.0574, -0.0150],
          [-0.0125,  0.0369,  0.0135]],

         ...,

         [[ 0.0421, -0.0758, -0.0806],
          [-0.0602, -0.0034, -0.0053],
          [-0.0521, -0.0769, -0.0429]],

         [[-0.0442,  0.0019,  0.0415],
          [-0.0965, -0.0214,  0.0212],
          [ 0.0020, -0.0251,  0.0533]],

         [[-0.0104,  0.0165,  0.0151],
          [ 0.0038,  0.0328, -0.0021],
          [ 0.0073,  0.0150, -0.0259]]],


        ...,


        [[[ 0.0162, -0.0695, -0.0046],
          [ 0.0527, -0.0561,  0.0448],
          [-0.0055,  0.0460, -0.0088]],

         [[-0.0259, -0.0123,  0.0390],
          [-0.0508, -0.0740,  0.0210],
          [ 0.0190, -0.0141, -0.0144]],

         [[ 0.0063, -0.0296, -0.0132],
          [ 0.0145,  0.0135,  0.0050],
          [-0.0260,  0.0110, -0.1092]],

         ...,

         [[-0.0885,  0.0524,  0.1058],
          [ 0.0400, -0.0989,  0.0350],
          [-0.0028,  0.0248,  0.0059]],

         [[-0.0167,  0.0160,  0.0547],
          [-0.0067,  0.0269, -0.0050],
          [ 0.0186,  0.0152,  0.1051]],

         [[ 0.0423, -0.0050,  0.0374],
          [ 0.0187,  0.0264, -0.0578],
          [-0.0476,  0.0028, -0.0009]]],


        [[[ 0.0098,  0.0183,  0.0484],
          [ 0.0629, -0.0071, -0.0612],
          [ 0.0500,  0.0109, -0.0810]],

         [[ 0.0478, -0.0642,  0.0243],
          [ 0.0015,  0.0172, -0.0364],
          [-0.0208,  0.0537, -0.0650]],

         [[-0.0094,  0.0056,  0.0742],
          [ 0.0073,  0.0407, -0.0030],
          [-0.0451, -0.0287, -0.0383]],

         ...,

         [[-0.1005,  0.0233,  0.0483],
          [ 0.0349, -0.0067,  0.1297],
          [ 0.0368, -0.0234,  0.0057]],

         [[-0.0101, -0.0105,  0.0139],
          [-0.0493, -0.0489,  0.0556],
          [-0.0294, -0.0237,  0.0106]],

         [[-0.0102, -0.0158,  0.0491],
          [ 0.0399, -0.0886, -0.0068],
          [ 0.0712, -0.0151, -0.1134]]],


        [[[-0.0394,  0.0388, -0.0013],
          [-0.0226,  0.0057, -0.0534],
          [-0.0060, -0.0032, -0.0191]],

         [[-0.0540,  0.0124,  0.0217],
          [ 0.0474, -0.0154, -0.0505],
          [ 0.0352, -0.0042, -0.0285]],

         [[ 0.0140,  0.0042, -0.0120],
          [-0.0233, -0.0504, -0.0443],
          [-0.0329,  0.0159, -0.0187]],

         ...,

         [[ 0.0156,  0.0467,  0.0324],
          [ 0.0253,  0.0517, -0.0423],
          [ 0.1138,  0.0308,  0.0200]],

         [[ 0.0813,  0.0498, -0.0443],
          [-0.0307,  0.0348, -0.0358],
          [-0.0337, -0.0102, -0.0258]],

         [[-0.0280, -0.0088,  0.0399],
          [ 0.0813,  0.1159,  0.0041],
          [-0.0039,  0.1179, -0.0225]]]], device='cuda:0')
module.encoder.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.encoder.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 1.1477e-02,  6.2484e-02, -3.9717e-03],
          [ 2.5499e-03, -9.7018e-02,  1.5023e-02],
          [-1.9611e-02,  3.0039e-02, -1.8673e-02]],

         [[ 7.5812e-03, -1.9979e-02, -3.4451e-02],
          [-1.9787e-02,  9.2640e-02,  1.8609e-02],
          [-2.0119e-03,  2.0547e-03,  4.3060e-02]],

         [[ 6.9663e-02,  5.2592e-02,  3.3870e-02],
          [ 2.4244e-02, -2.1891e-02,  2.5689e-02],
          [-6.1735e-03, -4.2605e-02, -1.7252e-02]],

         ...,

         [[-5.4995e-02, -7.6233e-03,  1.6785e-04],
          [-3.3667e-02, -3.9660e-02, -2.4484e-02],
          [-3.8893e-02,  6.9128e-02,  5.5979e-02]],

         [[ 3.0225e-02, -6.4956e-02,  4.5092e-02],
          [-1.3358e-02,  6.0874e-03, -4.4646e-02],
          [-9.3854e-02,  1.6848e-02, -1.2581e-02]],

         [[ 7.4606e-02, -2.4904e-02, -2.9523e-02],
          [-2.2763e-02, -2.9888e-02,  4.5189e-02],
          [ 1.6232e-02,  5.4205e-02, -6.1013e-03]]],


        [[[-6.4351e-02,  3.7185e-02,  4.9097e-02],
          [-5.1292e-02,  3.1486e-03,  2.2552e-02],
          [-1.7661e-03,  1.2113e-02, -5.3213e-02]],

         [[-1.9941e-02,  7.8618e-02,  1.8187e-02],
          [ 2.0938e-02,  9.1116e-02, -2.4060e-02],
          [ 5.4325e-02, -9.3984e-02,  4.6733e-02]],

         [[-3.4653e-02,  9.6301e-03,  3.2458e-02],
          [ 2.8029e-02, -1.7080e-02,  5.3251e-02],
          [-1.9206e-02,  8.9078e-03,  3.0245e-02]],

         ...,

         [[-2.3434e-02,  8.5167e-02,  2.8458e-02],
          [-2.3752e-02,  4.1394e-03, -1.8158e-02],
          [-4.0644e-02, -3.2634e-04, -2.6200e-02]],

         [[-9.4967e-02, -1.8847e-02, -1.5692e-02],
          [-1.9809e-02,  1.3984e-02, -3.9563e-02],
          [ 3.4157e-02,  8.2835e-06,  6.9858e-02]],

         [[-1.0920e-02,  6.3200e-03,  2.5984e-04],
          [-2.0143e-02,  3.5161e-02, -3.7419e-02],
          [-3.8741e-03,  3.6928e-04, -8.8691e-03]]],


        [[[-2.2673e-02, -1.5505e-03,  3.8870e-02],
          [-6.2640e-02, -1.2128e-01, -2.4876e-02],
          [-1.2351e-02, -3.1941e-03,  1.2011e-02]],

         [[-1.4300e-02, -6.0173e-02,  7.2646e-02],
          [ 3.6219e-02,  2.0433e-02,  4.6618e-03],
          [ 5.9352e-02, -6.9611e-02,  4.3060e-02]],

         [[-5.9028e-02,  2.0915e-02,  5.9433e-02],
          [-2.1154e-02, -9.5162e-03, -3.8903e-02],
          [-6.9328e-03, -3.4379e-02,  4.0921e-02]],

         ...,

         [[ 2.3883e-02, -9.5816e-02,  2.2963e-02],
          [ 4.4419e-02, -8.3890e-04,  2.2324e-02],
          [ 6.1912e-02,  3.1025e-02,  7.3603e-03]],

         [[ 3.2612e-02, -1.1242e-03,  6.3304e-02],
          [ 6.6216e-03, -2.6877e-02, -2.1621e-02],
          [ 4.7287e-02, -1.0941e-02, -3.3608e-02]],

         [[-3.8478e-02, -6.0837e-03, -3.8366e-02],
          [-3.1986e-02, -1.9354e-02, -1.8134e-03],
          [-2.6747e-03, -2.5710e-02,  7.9718e-03]]],


        ...,


        [[[ 2.6117e-02, -6.5636e-04,  2.7629e-03],
          [ 5.8075e-02, -3.4855e-03,  2.5977e-02],
          [ 2.0052e-02, -4.3514e-02,  1.3994e-02]],

         [[-2.7258e-02, -4.5424e-02,  1.1288e-01],
          [-4.6266e-02,  4.0504e-02, -3.7001e-02],
          [ 1.2508e-02,  3.4427e-02, -2.7196e-02]],

         [[ 7.9248e-03, -1.6309e-02, -2.3476e-02],
          [-1.2296e-02,  7.5312e-02, -3.6619e-02],
          [-4.0338e-02, -8.6691e-02, -1.8546e-02]],

         ...,

         [[ 5.5493e-03, -1.7852e-02,  6.2476e-03],
          [ 7.2376e-03,  1.2902e-02, -8.3814e-03],
          [-1.7500e-02, -5.7747e-03,  5.9625e-02]],

         [[-5.7215e-02,  7.5292e-03,  5.3518e-03],
          [ 2.4586e-02, -2.8795e-02, -1.0144e-01],
          [-3.0053e-02,  2.5049e-02, -2.3325e-02]],

         [[ 4.2365e-03,  6.9870e-02, -7.6848e-02],
          [-2.5149e-02,  1.7222e-02,  5.5267e-02],
          [ 6.2957e-03,  3.9997e-02, -5.3621e-02]]],


        [[[-4.1811e-02, -8.7836e-03,  4.3657e-02],
          [ 2.6418e-02, -3.5200e-02,  3.6594e-02],
          [ 3.2857e-02,  3.1487e-02, -2.1386e-02]],

         [[-1.4360e-02,  4.2455e-02,  5.2168e-02],
          [ 1.2840e-02, -6.0572e-02, -1.1427e-02],
          [-2.8821e-03, -8.8660e-02,  2.1265e-02]],

         [[-1.8908e-03,  3.4509e-02, -1.8272e-02],
          [-2.7247e-02,  3.9046e-02, -2.2846e-02],
          [ 3.0349e-02, -2.8913e-02,  9.6803e-03]],

         ...,

         [[-5.0572e-02,  2.9876e-03, -8.9642e-03],
          [ 8.8753e-02, -7.3613e-03, -2.1052e-02],
          [-2.3930e-02,  5.6149e-02,  5.5408e-02]],

         [[-4.9367e-03, -2.3538e-03, -8.4782e-03],
          [-8.6950e-02, -3.6495e-02, -4.6541e-02],
          [ 1.5059e-02, -5.3855e-03,  7.2152e-03]],

         [[-2.1748e-02, -3.8068e-02, -3.1480e-02],
          [ 3.8725e-02, -5.4990e-03, -7.2600e-02],
          [ 1.2148e-01, -2.9203e-02,  6.4562e-02]]],


        [[[-7.1152e-03, -2.1627e-02, -1.0857e-01],
          [ 6.5388e-03,  2.2686e-03,  3.6875e-02],
          [-2.5234e-02,  2.3882e-03,  3.0690e-02]],

         [[ 2.0492e-02, -3.1253e-02, -1.3720e-02],
          [-1.8090e-02,  2.8145e-02, -7.2518e-02],
          [-2.3985e-02,  2.3720e-02, -1.0326e-02]],

         [[ 2.0632e-02, -3.5735e-02, -1.8627e-03],
          [ 5.3601e-02, -6.3981e-02, -7.4616e-02],
          [ 6.3219e-02,  7.8532e-03, -3.1169e-02]],

         ...,

         [[-3.8395e-02,  1.6435e-02,  4.1183e-02],
          [ 3.5124e-02, -7.3845e-02,  4.7183e-02],
          [ 2.4671e-02, -5.2940e-02, -1.6739e-02]],

         [[-3.0608e-02,  4.9377e-02, -2.9415e-02],
          [ 9.8057e-03, -1.1047e-01, -1.1624e-01],
          [-9.3361e-03,  2.6745e-02,  6.1592e-02]],

         [[-3.1615e-02, -3.4604e-02,  2.0447e-02],
          [-5.4939e-03, -6.2528e-02,  7.6404e-02],
          [ 8.5539e-02, -2.4476e-02,  2.1717e-02]]]], device='cuda:0')
module.encoder.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[-0.0404, -0.0334, -0.0122],
          [ 0.0096, -0.0503, -0.0080],
          [ 0.0089, -0.0370,  0.0050]],

         [[-0.0699,  0.0222,  0.0466],
          [-0.0210,  0.0554, -0.0010],
          [ 0.0002,  0.0115,  0.0173]],

         [[ 0.0058, -0.0047,  0.0140],
          [ 0.0224,  0.0140,  0.0469],
          [-0.0555,  0.0105, -0.0093]],

         ...,

         [[ 0.0677, -0.0400,  0.0397],
          [ 0.0234, -0.0322, -0.0218],
          [-0.0676, -0.0719, -0.0377]],

         [[-0.0383,  0.0144, -0.0298],
          [ 0.0634, -0.0566,  0.0560],
          [-0.0174,  0.1105,  0.0303]],

         [[-0.0578, -0.0850, -0.0806],
          [-0.0016,  0.0369,  0.0390],
          [-0.0110, -0.0696,  0.0648]]],


        [[[ 0.0155,  0.0332,  0.0510],
          [ 0.0136, -0.0587,  0.0376],
          [-0.0224, -0.0410,  0.0391]],

         [[-0.0109,  0.0563,  0.0114],
          [ 0.0117,  0.0086, -0.0238],
          [-0.0448, -0.0564, -0.0035]],

         [[-0.0211,  0.0535, -0.0143],
          [ 0.0206,  0.0047, -0.0265],
          [ 0.1055,  0.0681,  0.0258]],

         ...,

         [[ 0.0050, -0.0654, -0.0230],
          [ 0.0426,  0.0138, -0.0509],
          [-0.0591,  0.0501,  0.0086]],

         [[-0.0205, -0.0123, -0.0293],
          [ 0.0225,  0.0470, -0.0318],
          [ 0.0083, -0.0413,  0.0240]],

         [[-0.0487,  0.0479, -0.0563],
          [-0.0511,  0.0144,  0.0320],
          [-0.0332,  0.0847,  0.0089]]],


        [[[ 0.0150,  0.0531,  0.0060],
          [-0.0552, -0.0849,  0.0242],
          [-0.0088, -0.0129,  0.0138]],

         [[ 0.0743,  0.0272, -0.0480],
          [-0.0387,  0.0534, -0.0241],
          [ 0.0022,  0.0757, -0.0263]],

         [[-0.0771, -0.0529,  0.0493],
          [ 0.0092,  0.0720, -0.0614],
          [ 0.0422, -0.0245,  0.0317]],

         ...,

         [[ 0.0857, -0.0685,  0.0290],
          [ 0.0855, -0.0117,  0.0295],
          [-0.0478,  0.0326, -0.0254]],

         [[-0.0224, -0.1014,  0.0474],
          [ 0.0392,  0.0678,  0.0031],
          [ 0.0976,  0.0016,  0.0542]],

         [[-0.0271,  0.0629, -0.0489],
          [-0.0116, -0.0143, -0.0473],
          [ 0.0482, -0.0231, -0.0023]]],


        ...,


        [[[-0.0439,  0.0195,  0.0546],
          [-0.0326,  0.0510,  0.0214],
          [ 0.0566, -0.0093, -0.0220]],

         [[-0.0511, -0.0297, -0.0236],
          [-0.0309, -0.0315,  0.0916],
          [ 0.0242, -0.0513, -0.0326]],

         [[ 0.0397, -0.0438,  0.0334],
          [-0.0244, -0.0325, -0.0787],
          [-0.0103, -0.0077, -0.0235]],

         ...,

         [[ 0.0213,  0.0076, -0.0106],
          [ 0.0264, -0.0294, -0.0110],
          [ 0.0184,  0.0111, -0.0366]],

         [[ 0.0011, -0.0056,  0.0369],
          [-0.0735, -0.0763,  0.0626],
          [ 0.0400,  0.1263, -0.0580]],

         [[-0.0293, -0.0143, -0.0188],
          [ 0.0060,  0.0004,  0.0701],
          [ 0.0508,  0.0324,  0.0286]]],


        [[[ 0.0501, -0.0403, -0.0347],
          [-0.0295, -0.0541,  0.0596],
          [-0.0390,  0.0144,  0.0051]],

         [[-0.0630, -0.0157, -0.0421],
          [ 0.0528,  0.0224, -0.0514],
          [ 0.0168, -0.0393, -0.0392]],

         [[-0.0614, -0.0099,  0.0246],
          [ 0.0155, -0.0091, -0.0102],
          [ 0.0184,  0.0248,  0.0225]],

         ...,

         [[-0.0049, -0.0225,  0.0060],
          [-0.0163,  0.0510, -0.0128],
          [-0.0196,  0.0023,  0.0532]],

         [[-0.0354, -0.0270, -0.0517],
          [-0.0649, -0.0322, -0.0535],
          [-0.0091,  0.0215, -0.0432]],

         [[ 0.0166, -0.0249, -0.0050],
          [ 0.0242, -0.0718, -0.0313],
          [ 0.0218,  0.0375, -0.1096]]],


        [[[-0.0199,  0.0011,  0.0415],
          [ 0.0324,  0.0190,  0.0231],
          [-0.0024,  0.1233, -0.0839]],

         [[-0.0112, -0.0451,  0.0006],
          [ 0.1365,  0.0313,  0.0178],
          [ 0.0154, -0.0064,  0.0193]],

         [[-0.0295,  0.0186, -0.0116],
          [-0.0514, -0.0238,  0.0282],
          [-0.0003, -0.0297,  0.0019]],

         ...,

         [[-0.0188,  0.0097,  0.0026],
          [ 0.0259, -0.0326, -0.0351],
          [-0.0474,  0.0387,  0.0398]],

         [[ 0.0299,  0.0111,  0.0154],
          [ 0.0068, -0.0559, -0.0516],
          [-0.0104,  0.0211, -0.0240]],

         [[ 0.0112, -0.0225,  0.0832],
          [-0.0012,  0.0236, -0.0672],
          [-0.0152,  0.0093, -0.0011]]]], device='cuda:0')
module.encoder.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[-0.1736]],

         [[-0.0237]],

         [[-0.1272]],

         ...,

         [[ 0.0100]],

         [[ 0.0792]],

         [[-0.2530]]],


        [[[ 0.1556]],

         [[-0.0049]],

         [[-0.1245]],

         ...,

         [[-0.0773]],

         [[ 0.2748]],

         [[-0.0977]]],


        [[[ 0.0421]],

         [[ 0.1332]],

         [[-0.0108]],

         ...,

         [[ 0.0974]],

         [[ 0.0797]],

         [[ 0.0616]]],


        ...,


        [[[-0.1109]],

         [[ 0.0150]],

         [[ 0.0812]],

         ...,

         [[-0.0775]],

         [[-0.0461]],

         [[ 0.1561]]],


        [[[-0.0491]],

         [[-0.0110]],

         [[ 0.0221]],

         ...,

         [[-0.0371]],

         [[-0.1304]],

         [[ 0.0554]]],


        [[[ 0.0928]],

         [[ 0.0226]],

         [[ 0.1029]],

         ...,

         [[-0.0760]],

         [[ 0.0486]],

         [[ 0.1067]]]], device='cuda:0')
module.encoder.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0049, -0.0907,  0.0838],
          [-0.0144,  0.0348, -0.0299],
          [-0.0390,  0.0159,  0.0137]],

         [[-0.0443, -0.0518, -0.0376],
          [-0.0748, -0.0134, -0.0100],
          [ 0.1028,  0.0086, -0.0125]],

         [[ 0.0419, -0.0168, -0.0916],
          [-0.0212, -0.0543, -0.0161],
          [-0.0689,  0.0852,  0.0006]],

         ...,

         [[-0.0683, -0.0571, -0.0681],
          [ 0.0340,  0.0018,  0.0682],
          [-0.0325, -0.0017,  0.0809]],

         [[ 0.0100, -0.0116,  0.0236],
          [-0.0218, -0.0612,  0.0028],
          [-0.0256, -0.0136,  0.1103]],

         [[ 0.0886,  0.0475,  0.0613],
          [ 0.0063, -0.1126,  0.0025],
          [ 0.0413, -0.0058, -0.0220]]],


        [[[-0.0194, -0.0342, -0.0470],
          [-0.0447, -0.0456,  0.0622],
          [-0.0909,  0.0142,  0.0008]],

         [[ 0.0386, -0.0145, -0.0254],
          [ 0.0090, -0.0068,  0.0157],
          [ 0.0225,  0.1021,  0.0334]],

         [[-0.0478,  0.0227, -0.0213],
          [-0.0128, -0.0300,  0.0257],
          [-0.0058,  0.0180,  0.0264]],

         ...,

         [[ 0.0302,  0.0569,  0.0190],
          [-0.0104, -0.0065, -0.0324],
          [-0.0733, -0.0152,  0.1060]],

         [[-0.0082, -0.0026,  0.0323],
          [-0.0911,  0.0010, -0.0173],
          [-0.0376, -0.0587,  0.0778]],

         [[ 0.0043,  0.0248,  0.0554],
          [ 0.0187, -0.0618, -0.0556],
          [-0.0687,  0.0487,  0.0157]]],


        [[[-0.0162,  0.0346, -0.0209],
          [ 0.0265, -0.0341, -0.0690],
          [-0.0078, -0.0101, -0.0018]],

         [[ 0.0048, -0.0017, -0.0735],
          [-0.0104, -0.0425, -0.0652],
          [-0.0407,  0.0650, -0.0270]],

         [[-0.0012, -0.0384,  0.0271],
          [-0.0811,  0.0251, -0.0063],
          [ 0.0179, -0.0120, -0.0041]],

         ...,

         [[ 0.0041, -0.0716,  0.0285],
          [-0.0238,  0.0376,  0.0067],
          [-0.0207, -0.0024,  0.0342]],

         [[ 0.0379,  0.0545, -0.0592],
          [ 0.0449,  0.0595, -0.0427],
          [ 0.0514,  0.0110, -0.0125]],

         [[-0.0021,  0.1026, -0.0131],
          [ 0.0086, -0.0005,  0.0065],
          [ 0.0356, -0.0118,  0.0951]]],


        ...,


        [[[-0.0035, -0.0045, -0.0039],
          [-0.0427,  0.0157,  0.0193],
          [ 0.0313,  0.1013,  0.0257]],

         [[ 0.0193, -0.0895,  0.0113],
          [ 0.0217,  0.0142, -0.0284],
          [ 0.0093,  0.0282, -0.0109]],

         [[ 0.0169, -0.0454, -0.0155],
          [-0.0412, -0.0181, -0.0114],
          [-0.0107,  0.0600, -0.0284]],

         ...,

         [[ 0.0175,  0.0566, -0.0173],
          [ 0.0398,  0.1561,  0.0030],
          [-0.0385, -0.0298,  0.1022]],

         [[-0.0669, -0.0478, -0.0226],
          [ 0.0189,  0.0382, -0.0456],
          [ 0.0546, -0.0399,  0.0045]],

         [[ 0.0432, -0.0083,  0.0063],
          [-0.0239, -0.0722,  0.0080],
          [-0.0010, -0.0131, -0.0307]]],


        [[[-0.0191, -0.0569,  0.0053],
          [-0.0332, -0.0456, -0.0384],
          [-0.0259, -0.0582, -0.0501]],

         [[ 0.0386,  0.0585,  0.0503],
          [ 0.0262,  0.0255, -0.0269],
          [ 0.0209,  0.0816, -0.0092]],

         [[ 0.0123,  0.0015, -0.0071],
          [ 0.0381, -0.0398, -0.0067],
          [-0.0185, -0.0454, -0.0422]],

         ...,

         [[ 0.0938, -0.0429, -0.0174],
          [ 0.0279, -0.0205, -0.0313],
          [-0.0018,  0.0255,  0.0398]],

         [[-0.0078,  0.0113, -0.0208],
          [-0.0312, -0.0323, -0.0802],
          [-0.0650, -0.0372,  0.0145]],

         [[-0.0204, -0.0097,  0.0015],
          [ 0.0209, -0.0289, -0.0154],
          [ 0.0025, -0.0036, -0.0727]]],


        [[[-0.0114, -0.0261, -0.0056],
          [-0.0614, -0.0574,  0.0066],
          [-0.0623,  0.0320,  0.0052]],

         [[ 0.0278,  0.0656, -0.0761],
          [ 0.0074, -0.0026, -0.0222],
          [ 0.0362,  0.0601,  0.0491]],

         [[-0.0455,  0.0021, -0.0008],
          [-0.0180, -0.0139, -0.0266],
          [ 0.0683, -0.0715, -0.0396]],

         ...,

         [[ 0.0404, -0.0239,  0.0376],
          [ 0.0080, -0.0118, -0.0134],
          [-0.0243,  0.0040,  0.0069]],

         [[ 0.0458, -0.0144, -0.0068],
          [ 0.0827,  0.0014, -0.0487],
          [-0.0182,  0.0051,  0.0190]],

         [[-0.0270,  0.0026, -0.0163],
          [ 0.0105, -0.0535,  0.0409],
          [-0.0698, -0.0179,  0.0051]]]], device='cuda:0')
module.encoder.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.encoder.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 5.6682e-02,  3.9727e-02,  4.6069e-02],
          [ 3.2081e-02, -2.0775e-02, -6.2304e-02],
          [-6.3603e-03, -7.3643e-02, -1.0437e-01]],

         [[-4.6144e-02,  4.2020e-02, -3.4887e-02],
          [ 9.4830e-03, -3.8071e-02,  1.2956e-02],
          [-7.2262e-03, -2.6657e-02, -7.8945e-02]],

         [[-1.1455e-02,  5.5839e-02, -2.5159e-02],
          [ 6.3405e-02,  2.4568e-02, -2.1759e-02],
          [-7.3336e-02, -4.7222e-02, -5.3978e-02]],

         ...,

         [[-2.1878e-02, -1.2067e-02, -3.3934e-02],
          [-1.9224e-02, -3.0986e-02,  3.9416e-03],
          [-2.7270e-02,  4.0502e-02, -2.0617e-02]],

         [[ 2.6352e-02, -1.0589e-02,  2.3301e-02],
          [ 2.2650e-02, -2.3420e-02, -1.3024e-03],
          [ 1.1008e-01, -1.2027e-02, -3.4527e-02]],

         [[ 2.6237e-02, -1.8163e-02, -7.5748e-03],
          [-2.7350e-02, -1.6776e-03,  9.9516e-02],
          [ 2.9771e-02,  2.3305e-02,  4.9030e-02]]],


        [[[ 2.9472e-02,  1.5406e-02,  3.0477e-02],
          [-1.3021e-02,  5.2188e-02,  3.7792e-02],
          [-1.8386e-02, -1.6119e-02,  2.5352e-02]],

         [[ 1.0622e-02, -2.8237e-02,  3.4009e-02],
          [-2.9467e-02, -2.7321e-02,  6.1897e-03],
          [-3.8316e-02,  1.3755e-02,  2.7549e-02]],

         [[-6.6285e-02, -3.6989e-02,  1.1721e-02],
          [ 9.4278e-03,  3.0182e-02,  3.1073e-02],
          [-3.9712e-02, -1.9717e-02,  5.2170e-02]],

         ...,

         [[-8.6189e-03,  1.5493e-02, -4.7214e-02],
          [-2.8828e-03,  2.0599e-03, -8.8390e-02],
          [-4.1000e-02, -7.7015e-03, -5.5847e-02]],

         [[ 1.5659e-02,  5.5411e-02, -1.9245e-02],
          [-5.4281e-03, -2.6234e-02, -1.5368e-02],
          [ 6.4239e-02,  5.8256e-02, -5.3615e-02]],

         [[-1.5782e-03, -8.9976e-03, -2.6284e-02],
          [ 1.7497e-02,  2.9050e-03,  4.9355e-02],
          [ 1.3261e-02,  4.2313e-02,  2.9204e-02]]],


        [[[-6.6042e-02,  2.8057e-02, -2.7591e-02],
          [-3.1144e-02, -3.2265e-02, -4.0697e-02],
          [ 6.4572e-02,  3.0741e-02,  1.5740e-02]],

         [[ 7.6560e-03, -7.7157e-02,  7.1279e-02],
          [-6.3286e-02,  5.9239e-02, -5.0389e-02],
          [ 2.6566e-03, -7.7509e-03,  2.3480e-02]],

         [[-2.9038e-03,  1.1281e-02, -3.1884e-02],
          [ 5.2027e-02,  4.3111e-02, -7.1311e-02],
          [-2.2329e-02, -4.6193e-02, -6.4159e-02]],

         ...,

         [[-3.5175e-02,  2.0506e-03,  8.8893e-02],
          [-6.1304e-02, -5.1252e-05,  4.0255e-02],
          [ 3.1691e-02, -5.5229e-02, -4.0919e-03]],

         [[-1.5575e-02,  2.1224e-02, -2.6627e-02],
          [ 1.2197e-01, -1.0252e-03, -1.5150e-02],
          [-4.2212e-03, -7.2468e-02, -1.4724e-02]],

         [[ 9.9069e-03, -5.3251e-02, -1.9262e-02],
          [ 1.8637e-02,  5.4150e-02, -1.5608e-02],
          [ 3.3940e-02, -3.3080e-02,  2.4653e-02]]],


        ...,


        [[[ 1.2572e-02,  3.3519e-02,  1.4882e-02],
          [-6.7485e-02, -5.8334e-02,  2.8826e-02],
          [ 5.8739e-02,  2.0476e-02,  7.1809e-02]],

         [[ 4.1154e-03,  5.8607e-02,  1.1548e-01],
          [-2.6269e-02, -5.2022e-03,  3.6470e-02],
          [-1.0154e-02, -4.8966e-02, -1.4702e-02]],

         [[-2.1714e-02,  2.7823e-02, -8.8115e-03],
          [ 6.3276e-02,  5.5299e-02, -1.0413e-02],
          [-3.4531e-02, -2.8777e-02, -2.0865e-02]],

         ...,

         [[-3.4411e-02, -4.9217e-02,  1.3605e-02],
          [-5.4007e-02,  4.5947e-03,  6.5597e-02],
          [-4.9945e-02,  2.0533e-02, -8.0260e-02]],

         [[-1.5630e-02, -6.0366e-03,  6.0516e-02],
          [ 3.2360e-02, -5.9630e-02,  4.5092e-02],
          [-2.1451e-02, -5.7600e-02, -1.3000e-02]],

         [[ 3.8712e-02, -4.5091e-02,  1.9571e-02],
          [-5.6701e-03,  3.2962e-02, -9.3754e-03],
          [ 3.4184e-02,  8.7017e-03, -6.6628e-02]]],


        [[[-8.8032e-03, -6.2871e-02,  3.4531e-02],
          [-6.1109e-03,  3.9507e-02,  4.6572e-02],
          [ 5.8655e-02, -5.3870e-02,  5.6934e-04]],

         [[ 4.9653e-02, -9.5874e-02, -5.6898e-02],
          [-6.7883e-03, -7.3427e-02, -3.8372e-02],
          [ 4.3453e-02,  4.2730e-03, -3.4559e-02]],

         [[-1.3055e-03,  1.3048e-02, -6.7779e-02],
          [-4.6368e-02,  1.1801e-01,  1.4802e-02],
          [ 4.7599e-02, -1.7983e-02, -4.9984e-02]],

         ...,

         [[-1.7917e-02,  1.3122e-02,  6.2340e-03],
          [ 8.7078e-03, -4.5988e-02, -5.6847e-02],
          [ 5.7806e-02,  6.9311e-03,  3.6929e-02]],

         [[-4.3696e-02, -1.0707e-02, -2.7788e-02],
          [ 2.9433e-03,  3.2725e-02, -2.7842e-02],
          [ 3.1122e-02, -4.4843e-02,  6.4708e-02]],

         [[ 7.8533e-02,  7.7676e-02,  2.7190e-02],
          [-1.0027e-01, -1.4460e-02,  2.0407e-02],
          [-4.9190e-02, -1.4912e-02,  2.5709e-02]]],


        [[[-5.6482e-03, -1.2988e-02, -4.9162e-03],
          [ 1.5090e-02,  1.9709e-02, -4.9545e-02],
          [-3.5118e-02, -5.8545e-02, -2.7321e-02]],

         [[-2.2292e-02,  4.0357e-02,  1.1159e-01],
          [ 3.1141e-02, -6.0070e-02,  5.9864e-02],
          [ 4.9380e-02, -2.3897e-02, -4.3656e-02]],

         [[ 3.3704e-02,  1.6101e-02, -5.0631e-02],
          [-1.6299e-02, -1.2722e-02,  5.0475e-02],
          [ 6.6788e-02,  1.5548e-02, -1.6304e-02]],

         ...,

         [[-3.2982e-02, -4.7426e-03, -1.6526e-01],
          [-2.8301e-02,  2.0237e-02, -3.6487e-02],
          [ 1.1743e-01, -8.5555e-02, -4.0120e-02]],

         [[ 7.4478e-02,  7.0870e-03, -6.4075e-02],
          [-3.1776e-02, -3.4767e-02, -7.5498e-03],
          [-4.3119e-02,  7.3992e-03, -1.3864e-02]],

         [[ 6.5306e-02,  2.7193e-02,  4.7352e-02],
          [-4.2008e-02,  6.1984e-02, -1.5635e-02],
          [-7.9979e-03,  2.2434e-02,  4.2429e-02]]]], device='cuda:0')
module.encoder.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.weight Parameter containing:
tensor([[[[-0.0198]],

         [[ 0.0032]],

         [[ 0.0753]],

         ...,

         [[-0.0181]],

         [[ 0.0762]],

         [[-0.1358]]],


        [[[-0.2140]],

         [[-0.0567]],

         [[ 0.0932]],

         ...,

         [[-0.0350]],

         [[-0.1319]],

         [[-0.1085]]],


        [[[ 0.0402]],

         [[-0.0538]],

         [[ 0.0453]],

         ...,

         [[-0.0312]],

         [[-0.0665]],

         [[-0.0655]]],


        ...,


        [[[-0.0325]],

         [[ 0.2891]],

         [[ 0.0540]],

         ...,

         [[-0.0480]],

         [[-0.0852]],

         [[ 0.0459]]],


        [[[ 0.0712]],

         [[ 0.0080]],

         [[-0.0537]],

         ...,

         [[ 0.0611]],

         [[ 0.0583]],

         [[-0.0266]]],


        [[[-0.1036]],

         [[-0.0529]],

         [[ 0.0069]],

         ...,

         [[ 0.0527]],

         [[-0.0685]],

         [[-0.0287]]]], device='cuda:0')
module.decoder.encoder.corr_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.corr_net.1.conv.weight Parameter containing:
tensor([[[[ 0.0273,  0.0305, -0.0457],
          [ 0.0361, -0.0593,  0.0739],
          [ 0.0433, -0.0503,  0.0163]],

         [[-0.0159, -0.0476,  0.0314],
          [ 0.0192, -0.0068,  0.0190],
          [ 0.0496, -0.0386,  0.0028]],

         [[ 0.0025, -0.0212,  0.0250],
          [-0.0317,  0.0121, -0.0289],
          [ 0.0319,  0.0359, -0.0436]],

         ...,

         [[ 0.0445, -0.0356, -0.0480],
          [ 0.0005,  0.0272,  0.0489],
          [ 0.0357, -0.0044,  0.0612]],

         [[-0.0427,  0.0312,  0.0125],
          [ 0.0244,  0.0176,  0.0086],
          [ 0.0167,  0.0289,  0.0050]],

         [[ 0.0452, -0.0040,  0.0265],
          [ 0.0037,  0.0446,  0.0003],
          [ 0.0137, -0.0029,  0.0071]]],


        [[[ 0.0089, -0.0224, -0.0323],
          [-0.0320,  0.0057,  0.0067],
          [ 0.0461, -0.0339, -0.0331]],

         [[ 0.0161,  0.0179,  0.0137],
          [ 0.0475,  0.0259,  0.0303],
          [ 0.0121, -0.0046, -0.0496]],

         [[ 0.0047,  0.0498, -0.0208],
          [ 0.0269, -0.0572,  0.0498],
          [-0.0112, -0.0041,  0.0178]],

         ...,

         [[ 0.0100, -0.0078, -0.0127],
          [ 0.0289,  0.0017, -0.0289],
          [ 0.0005,  0.0379,  0.0042]],

         [[-0.0111, -0.0121,  0.0241],
          [ 0.0398,  0.0588,  0.0099],
          [ 0.0297,  0.0062,  0.0324]],

         [[ 0.0215,  0.0425,  0.0229],
          [-0.0057,  0.0730, -0.0049],
          [-0.0027,  0.0449,  0.0328]]],


        [[[-0.0016, -0.0938, -0.0259],
          [-0.0026, -0.0103,  0.0029],
          [ 0.0517,  0.0264,  0.0181]],

         [[ 0.0381,  0.0562, -0.0514],
          [-0.0178,  0.0706, -0.0242],
          [ 0.0138, -0.0042, -0.0004]],

         [[ 0.0415,  0.0116, -0.0614],
          [-0.0512, -0.0403,  0.0428],
          [ 0.0755, -0.0062, -0.0110]],

         ...,

         [[-0.0166,  0.0515,  0.0609],
          [ 0.0174, -0.0085, -0.0073],
          [-0.0454, -0.0008,  0.0612]],

         [[-0.0399,  0.0264,  0.0175],
          [ 0.0115,  0.0199, -0.0143],
          [-0.0207,  0.0022, -0.0037]],

         [[ 0.0087, -0.0165, -0.0005],
          [-0.0472,  0.0324, -0.0536],
          [ 0.0161, -0.0028,  0.0233]]],


        ...,


        [[[ 0.0566, -0.0598,  0.0134],
          [ 0.0058, -0.0408,  0.0042],
          [-0.0418,  0.0157,  0.0249]],

         [[ 0.0513, -0.0393, -0.0509],
          [-0.0336,  0.0496,  0.0230],
          [-0.0195, -0.0070,  0.0024]],

         [[ 0.0417,  0.0615,  0.0204],
          [-0.0242, -0.1003,  0.0248],
          [ 0.0154,  0.0426, -0.0155]],

         ...,

         [[ 0.0173,  0.0309, -0.0670],
          [-0.0499, -0.0055, -0.0366],
          [-0.0071, -0.0203,  0.0309]],

         [[-0.0253, -0.0085, -0.0196],
          [ 0.0072,  0.0272,  0.0578],
          [-0.0032, -0.0067,  0.0400]],

         [[ 0.0200,  0.0138,  0.0468],
          [ 0.0631, -0.0250,  0.0127],
          [ 0.0382, -0.0108, -0.0015]]],


        [[[-0.0857,  0.0364,  0.0970],
          [ 0.0051,  0.0248,  0.0411],
          [-0.0216,  0.0179,  0.0008]],

         [[ 0.0163,  0.0026,  0.0335],
          [-0.0117,  0.0307, -0.0195],
          [ 0.0253, -0.0066, -0.0176]],

         [[-0.0253,  0.0777,  0.0551],
          [-0.0131, -0.0172, -0.0351],
          [-0.0406,  0.0071,  0.0002]],

         ...,

         [[ 0.0016,  0.0082,  0.0288],
          [ 0.0664,  0.0331,  0.0021],
          [-0.0313,  0.0849,  0.0682]],

         [[ 0.0249, -0.0301, -0.0251],
          [-0.0304, -0.0363, -0.0472],
          [ 0.0256, -0.0231, -0.0018]],

         [[ 0.0109, -0.0191,  0.0083],
          [ 0.0060,  0.0106, -0.0044],
          [-0.0276, -0.0054, -0.0077]]],


        [[[ 0.0141, -0.0043, -0.0246],
          [-0.0189,  0.0115, -0.0148],
          [-0.0043, -0.0131,  0.0681]],

         [[ 0.0667, -0.0709,  0.0558],
          [ 0.0340, -0.0205,  0.0254],
          [ 0.0183,  0.0371,  0.0457]],

         [[ 0.0420,  0.0591, -0.0132],
          [ 0.0626,  0.0173,  0.0334],
          [ 0.0242, -0.0574,  0.0777]],

         ...,

         [[-0.0530,  0.0478,  0.0053],
          [-0.0536, -0.0010, -0.0083],
          [-0.0017,  0.0689, -0.0567]],

         [[ 0.0416,  0.0571, -0.0216],
          [-0.0631, -0.0288,  0.0205],
          [ 0.0015,  0.0259,  0.0426]],

         [[ 0.0284, -0.0201, -0.0458],
          [ 0.0118, -0.0229,  0.0128],
          [-0.0103,  0.0094, -0.0158]]]], device='cuda:0')
module.decoder.encoder.corr_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.flow_net.0.conv.weight Parameter containing:
tensor([[[[ 1.0067e-02, -1.9254e-02, -8.3929e-03,  ...,  5.8543e-03,
           -1.7712e-02, -3.4679e-03],
          [ 1.7739e-03,  1.2070e-02, -2.5571e-02,  ..., -1.6632e-02,
            1.1785e-02,  2.1205e-02],
          [ 6.2871e-02, -5.0774e-04, -9.7404e-04,  ..., -1.0984e-02,
           -1.5724e-03, -7.0069e-03],
          ...,
          [ 2.2055e-02,  1.4774e-02, -1.6382e-02,  ...,  2.6447e-02,
           -3.2288e-02,  2.0845e-02],
          [ 7.5693e-03,  5.7295e-03, -3.5302e-02,  ...,  2.3581e-02,
           -1.6887e-02,  5.6914e-04],
          [-2.0790e-03,  4.9111e-03,  5.4067e-04,  ...,  8.6769e-03,
           -5.7548e-03,  1.0572e-02]],

         [[ 4.2352e-02,  7.5286e-03, -2.1975e-02,  ...,  1.2645e-02,
           -1.3779e-02, -1.1602e-02],
          [-8.3419e-03, -5.5668e-02, -9.8478e-03,  ..., -1.1287e-02,
            1.8359e-02,  8.6481e-04],
          [ 2.7894e-02,  6.2006e-03, -1.9159e-04,  ...,  1.1032e-02,
            1.7013e-02, -4.0843e-02],
          ...,
          [-2.1018e-02,  1.6831e-02,  4.0984e-02,  ..., -1.3689e-02,
            1.9476e-02, -1.2356e-02],
          [-8.4108e-04, -7.5333e-03, -2.0587e-02,  ..., -3.0729e-02,
           -2.7233e-02,  1.0384e-03],
          [-2.5150e-02,  2.3931e-02, -1.2958e-02,  ..., -3.7520e-03,
            3.9240e-02, -2.1258e-02]]],


        [[[-2.2187e-02, -1.8881e-02, -6.5500e-03,  ..., -2.6937e-02,
            1.2580e-02, -2.2101e-03],
          [ 2.9429e-03, -1.0153e-02,  3.8186e-02,  ...,  2.4732e-03,
           -2.6498e-02,  3.7385e-02],
          [ 9.5624e-03,  3.1169e-03,  2.7551e-02,  ..., -5.4563e-03,
            1.3474e-03,  2.5319e-02],
          ...,
          [ 1.1591e-02, -9.9443e-03,  1.6503e-02,  ..., -3.1063e-02,
            1.0220e-02, -4.2056e-03],
          [-3.2676e-02,  5.0438e-03, -8.8823e-03,  ..., -2.1369e-03,
           -2.7318e-02, -1.6429e-02],
          [ 6.7602e-03, -1.4707e-02, -6.4101e-04,  ...,  6.2906e-03,
           -7.6190e-03,  3.4358e-03]],

         [[ 4.7160e-03, -3.3349e-02,  6.1553e-03,  ..., -3.2397e-02,
           -2.3844e-02, -1.8829e-04],
          [-9.3793e-03,  1.8730e-02,  1.7045e-02,  ...,  4.7631e-02,
            8.8278e-03, -1.0280e-02],
          [ 2.6484e-03,  2.0980e-03,  2.1330e-03,  ...,  1.2849e-02,
            1.3194e-03,  1.3966e-02],
          ...,
          [ 5.9597e-03, -4.0231e-04, -5.2631e-03,  ...,  2.8893e-02,
           -1.5989e-02,  3.8162e-02],
          [-1.1531e-02,  1.1618e-02, -4.2314e-03,  ...,  1.9648e-02,
            8.6736e-03,  1.5434e-02],
          [-1.4438e-02, -4.2845e-03, -6.2559e-04,  ..., -2.2737e-03,
           -2.0183e-02,  1.7559e-02]]],


        [[[ 1.5638e-02,  3.0763e-03,  2.8221e-02,  ..., -2.7012e-03,
           -2.5223e-02,  5.8481e-03],
          [ 1.4659e-02, -1.4195e-02, -4.2380e-02,  ...,  5.5966e-02,
            9.6324e-03,  1.9871e-02],
          [ 1.7106e-02,  5.4935e-03, -8.3504e-03,  ...,  1.1982e-02,
           -1.5541e-02, -1.6135e-02],
          ...,
          [ 3.5343e-02,  4.1351e-03,  1.0451e-03,  ...,  3.8503e-03,
            1.0121e-02, -1.0013e-02],
          [ 1.4039e-02, -6.9864e-03, -2.7923e-02,  ...,  2.7773e-02,
           -5.2603e-03,  3.8087e-02],
          [ 1.1152e-03, -3.1441e-05,  5.0910e-02,  ..., -1.6418e-02,
           -1.0374e-02,  9.9768e-03]],

         [[ 9.6432e-03, -2.1223e-02,  2.3497e-02,  ...,  1.1274e-02,
           -1.2123e-02, -2.0858e-02],
          [ 1.0205e-03, -3.6504e-02, -1.3168e-02,  ...,  2.7479e-02,
           -1.1564e-03,  1.1042e-02],
          [ 5.5665e-03,  1.0667e-02, -2.8817e-03,  ...,  1.4307e-02,
            7.1869e-03, -1.2536e-02],
          ...,
          [-1.4928e-02, -1.3162e-02,  6.4062e-03,  ..., -6.3780e-03,
           -1.9811e-03, -2.2014e-03],
          [-3.4150e-02, -4.1956e-03,  2.6737e-03,  ...,  3.1997e-03,
            5.6454e-03, -2.0357e-03],
          [-4.7770e-03, -1.4919e-02, -9.9966e-03,  ...,  1.7835e-02,
           -1.2384e-02,  5.8247e-03]]],


        ...,


        [[[ 1.3922e-02, -1.1158e-02, -1.3395e-02,  ..., -8.3629e-03,
            1.4738e-03,  2.9944e-03],
          [-1.0117e-02,  2.3432e-02, -1.3544e-02,  ...,  4.4540e-03,
           -1.7136e-02,  3.6789e-02],
          [ 8.2942e-03, -2.2039e-02,  2.6859e-02,  ...,  3.3144e-03,
           -4.3846e-02,  3.2755e-02],
          ...,
          [-2.3155e-02,  1.8519e-02,  7.5679e-03,  ..., -2.9797e-02,
           -2.0977e-02, -3.7652e-02],
          [-2.3939e-02, -2.4794e-02, -1.2805e-02,  ..., -5.1733e-02,
            1.1401e-02,  3.1481e-03],
          [ 1.1705e-02,  1.1848e-02, -1.7153e-02,  ...,  1.3625e-02,
            2.7805e-02, -1.1345e-04]],

         [[-7.1589e-03,  6.8948e-03, -2.2232e-02,  ..., -1.1956e-02,
            9.7566e-03,  6.5456e-04],
          [-1.8142e-02, -6.6934e-03, -2.8979e-02,  ..., -1.8033e-02,
           -3.7688e-02,  3.2072e-04],
          [ 7.5403e-03, -6.1853e-03,  2.6934e-02,  ...,  1.7320e-03,
           -3.8939e-03,  5.2691e-03],
          ...,
          [ 9.4730e-03,  2.1919e-02, -3.3279e-03,  ...,  3.2694e-03,
            5.3112e-03,  8.5045e-04],
          [ 1.8352e-02, -6.5383e-04, -1.4232e-02,  ..., -9.5250e-04,
           -5.9381e-03,  6.9843e-03],
          [-1.4050e-02, -1.3521e-03, -2.9032e-03,  ..., -1.9671e-02,
            2.0789e-02, -2.2146e-02]]],


        [[[-4.0276e-03,  3.8103e-03,  2.2887e-02,  ..., -5.1404e-03,
            1.3628e-02,  4.6935e-03],
          [-6.2855e-03,  8.2391e-04, -3.7918e-02,  ...,  1.2292e-02,
            1.1789e-02, -3.5069e-02],
          [ 1.1527e-02,  2.6700e-02,  1.6610e-02,  ..., -2.4258e-02,
           -2.1466e-03,  1.3638e-02],
          ...,
          [-2.4596e-03, -1.3179e-02,  8.6871e-03,  ...,  4.7180e-03,
           -1.0843e-02,  2.7906e-03],
          [-1.4809e-02, -9.9834e-03,  1.9423e-02,  ..., -5.2512e-03,
            9.8840e-03, -8.1741e-03],
          [ 3.8259e-02,  2.7653e-02, -1.7291e-02,  ...,  1.5348e-02,
            2.0136e-02,  1.3838e-02]],

         [[-5.0914e-03,  3.7629e-03, -8.5828e-03,  ..., -1.3130e-02,
            4.0117e-02,  2.9905e-03],
          [ 2.2903e-02,  2.5798e-03, -1.3508e-03,  ..., -2.4541e-03,
            2.3851e-03, -2.4935e-02],
          [ 1.8105e-02,  1.6117e-02,  2.6915e-02,  ...,  4.5830e-02,
           -1.0899e-02, -8.7253e-03],
          ...,
          [ 4.6253e-02, -5.1368e-03, -3.8993e-02,  ...,  1.3496e-02,
           -1.7461e-03, -1.9344e-02],
          [-1.1824e-02,  8.4695e-04, -2.8445e-03,  ...,  5.0720e-03,
           -2.4544e-02,  4.6726e-03],
          [-9.7711e-04,  5.1939e-03,  8.2302e-03,  ..., -9.4182e-03,
            4.4121e-03,  1.1199e-02]]],


        [[[-1.6558e-02, -7.4988e-03,  2.0046e-02,  ...,  6.2823e-03,
           -4.8628e-03,  1.5305e-02],
          [-5.9928e-03,  2.1198e-02, -1.5973e-02,  ..., -5.2377e-03,
            2.6402e-02, -9.4044e-03],
          [ 1.1525e-02,  2.4778e-02, -4.5116e-03,  ...,  2.1671e-02,
           -2.8979e-02,  1.0434e-02],
          ...,
          [-6.2192e-03, -1.6220e-02,  1.8229e-02,  ..., -1.4984e-02,
           -9.5682e-03,  2.5605e-02],
          [ 3.3158e-03,  3.2612e-02,  8.4206e-03,  ...,  3.2298e-03,
            1.6741e-02, -1.8583e-02],
          [-1.6626e-02, -2.3081e-03,  1.9184e-02,  ..., -2.2482e-02,
            1.8391e-03, -1.2787e-02]],

         [[ 2.4031e-02,  1.4056e-02,  4.1622e-03,  ..., -1.1502e-03,
            1.0778e-02, -2.1966e-02],
          [ 2.2459e-02, -2.7358e-02, -1.5766e-02,  ...,  1.0149e-02,
           -1.5044e-02,  1.2266e-02],
          [ 2.8043e-02, -1.5813e-02, -1.1564e-02,  ...,  3.3818e-03,
           -2.6406e-02,  8.4106e-03],
          ...,
          [-1.5019e-03,  4.9902e-03,  3.6320e-02,  ...,  4.4899e-03,
           -1.1981e-02, -1.2290e-04],
          [ 2.9143e-02,  1.3665e-02,  2.2951e-02,  ...,  1.4089e-02,
            2.1696e-02,  5.4392e-03],
          [-3.2646e-02,  1.2445e-02, -1.6489e-02,  ...,  2.7603e-02,
           -2.9242e-02,  1.2228e-02]]]], device='cuda:0')
module.decoder.encoder.flow_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.weight Parameter containing:
tensor([[[[-0.0562,  0.0425, -0.1359],
          [ 0.0734, -0.0479, -0.0643],
          [ 0.0255,  0.1041,  0.0045]],

         [[-0.0271, -0.0113,  0.0468],
          [ 0.0330, -0.0829,  0.0192],
          [ 0.0342, -0.0225, -0.0336]],

         [[-0.0708,  0.1267, -0.0260],
          [ 0.0066, -0.0759,  0.0781],
          [-0.0075, -0.0487, -0.0126]],

         ...,

         [[-0.0582,  0.0726,  0.0496],
          [-0.0142, -0.0443,  0.0718],
          [-0.0188, -0.0575, -0.0890]],

         [[ 0.0547,  0.0383,  0.0345],
          [ 0.1217,  0.0342, -0.0380],
          [ 0.0811, -0.1129,  0.0525]],

         [[-0.0021, -0.1957, -0.0005],
          [-0.0736, -0.0030, -0.0151],
          [-0.0300, -0.0263,  0.0432]]],


        [[[-0.0123, -0.0319,  0.0580],
          [ 0.0320, -0.0176,  0.1217],
          [-0.0579, -0.0072, -0.0080]],

         [[-0.0238,  0.0098,  0.0508],
          [-0.0123, -0.0136,  0.0101],
          [ 0.0755, -0.0414,  0.0425]],

         [[ 0.0512,  0.0154, -0.0329],
          [-0.0760, -0.0010,  0.0998],
          [-0.0906,  0.0435,  0.0326]],

         ...,

         [[-0.0754,  0.0354,  0.0068],
          [ 0.0623,  0.0240,  0.0168],
          [-0.1296, -0.0207,  0.0506]],

         [[-0.0183,  0.0176,  0.0076],
          [-0.0443, -0.0130,  0.0230],
          [ 0.0142,  0.0769, -0.0348]],

         [[ 0.0024,  0.0146, -0.0348],
          [ 0.0373,  0.0741, -0.0035],
          [ 0.0743,  0.0607, -0.0162]]],


        [[[-0.1446,  0.0493, -0.0341],
          [-0.0222, -0.0599, -0.0059],
          [-0.0267, -0.0177, -0.0870]],

         [[-0.0842,  0.1123, -0.0223],
          [-0.1201, -0.0668,  0.0435],
          [-0.0234,  0.0311, -0.0157]],

         [[ 0.0946,  0.0298, -0.0141],
          [-0.0432,  0.0050, -0.0546],
          [ 0.0327,  0.0397, -0.0114]],

         ...,

         [[-0.0356, -0.0712,  0.1021],
          [-0.1047, -0.0189,  0.0208],
          [-0.0541, -0.0723, -0.0486]],

         [[-0.1060,  0.0192,  0.0614],
          [-0.0471, -0.0362,  0.0620],
          [ 0.0390, -0.0368, -0.0957]],

         [[-0.0084, -0.0445, -0.0692],
          [-0.0522,  0.0592,  0.0139],
          [-0.0140,  0.0343, -0.0485]]],


        ...,


        [[[ 0.0767,  0.0942,  0.0360],
          [ 0.0699,  0.0250,  0.0023],
          [ 0.0949, -0.1050,  0.0539]],

         [[-0.0292, -0.0278, -0.0119],
          [-0.0295, -0.1131,  0.0485],
          [-0.0656, -0.0579,  0.0281]],

         [[ 0.1227,  0.0189,  0.0243],
          [ 0.0486, -0.0151,  0.0719],
          [ 0.1119,  0.0564, -0.0537]],

         ...,

         [[-0.0321, -0.0252, -0.0289],
          [-0.1045, -0.0113, -0.0888],
          [ 0.0276, -0.0305, -0.0547]],

         [[-0.0345, -0.0935,  0.0032],
          [ 0.0436, -0.0258, -0.0092],
          [ 0.0641,  0.0931, -0.0268]],

         [[-0.0352,  0.0366,  0.0360],
          [-0.0306, -0.0595,  0.0011],
          [-0.0641,  0.0730, -0.0088]]],


        [[[-0.0308, -0.0459, -0.0686],
          [ 0.0627, -0.1609,  0.0110],
          [-0.0334, -0.0227, -0.0911]],

         [[ 0.0825,  0.1372, -0.0169],
          [-0.0005, -0.0965, -0.0670],
          [ 0.0228,  0.0287,  0.0661]],

         [[ 0.0111, -0.0383,  0.0259],
          [ 0.0490, -0.0117, -0.0544],
          [ 0.0238,  0.0196,  0.0657]],

         ...,

         [[ 0.0504, -0.0050, -0.0699],
          [ 0.0136, -0.0245,  0.0111],
          [ 0.0264,  0.0413,  0.0031]],

         [[-0.0437,  0.0483, -0.0344],
          [ 0.0117, -0.0021, -0.0694],
          [-0.0762,  0.0700,  0.0073]],

         [[-0.0511, -0.0286,  0.0086],
          [-0.0377,  0.0045,  0.0144],
          [ 0.1441, -0.0407, -0.1554]]],


        [[[ 0.0239, -0.0584,  0.0171],
          [-0.0522, -0.0736, -0.0753],
          [-0.0007,  0.0498,  0.0534]],

         [[ 0.0232, -0.0528, -0.0543],
          [ 0.0381,  0.0033, -0.0277],
          [ 0.0785, -0.0375, -0.0224]],

         [[-0.1100,  0.0052, -0.0308],
          [-0.0329, -0.0703,  0.1122],
          [-0.0069,  0.0238,  0.0539]],

         ...,

         [[ 0.0174, -0.0705, -0.1226],
          [ 0.0506,  0.0020, -0.0754],
          [ 0.0054,  0.0364,  0.0573]],

         [[-0.0048, -0.0333,  0.1041],
          [-0.0245, -0.0400, -0.0878],
          [ 0.0466,  0.0258, -0.0277]],

         [[-0.0229,  0.0053,  0.0431],
          [-0.0814,  0.0990,  0.1057],
          [ 0.0330, -0.0213,  0.0405]]]], device='cuda:0')
module.decoder.encoder.flow_net.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.encoder.out_net.0.conv.weight Parameter containing:
tensor([[[[-0.0296, -0.0512,  0.0178],
          [-0.0595, -0.0254,  0.0303],
          [-0.0390, -0.0561, -0.0592]],

         [[-0.0049,  0.0290,  0.0547],
          [ 0.0057,  0.0165,  0.0475],
          [ 0.0056,  0.0592, -0.0210]],

         [[ 0.0223,  0.0532,  0.0873],
          [ 0.0148, -0.0601, -0.0389],
          [-0.0083,  0.0104, -0.0126]],

         ...,

         [[-0.0427,  0.0147, -0.0094],
          [-0.0529,  0.0118, -0.0016],
          [ 0.0639, -0.0681,  0.0198]],

         [[ 0.0128,  0.0027,  0.0403],
          [-0.0169,  0.0300, -0.0813],
          [-0.0392,  0.1072, -0.0477]],

         [[-0.0055,  0.0582,  0.0317],
          [ 0.0064,  0.0280,  0.0488],
          [-0.0791,  0.0151, -0.0527]]],


        [[[ 0.0144,  0.0249,  0.0199],
          [ 0.0477, -0.0556, -0.0109],
          [-0.0088, -0.0010, -0.0447]],

         [[-0.0188,  0.0687,  0.0053],
          [ 0.0642,  0.0022,  0.0986],
          [-0.0419, -0.0120,  0.0215]],

         [[ 0.0492, -0.0604,  0.0246],
          [-0.0332,  0.0062, -0.0261],
          [ 0.0287, -0.0359,  0.0710]],

         ...,

         [[-0.0372, -0.0441, -0.0663],
          [-0.0376, -0.0296, -0.0402],
          [-0.0346,  0.0671, -0.0605]],

         [[ 0.0191, -0.0578,  0.0318],
          [ 0.0238,  0.0096,  0.0990],
          [-0.0390, -0.0009,  0.0138]],

         [[ 0.0068,  0.0427, -0.0605],
          [-0.0435,  0.0328,  0.0235],
          [-0.0671,  0.0669, -0.0151]]],


        [[[-0.0259,  0.0317,  0.0479],
          [-0.0565,  0.0148,  0.0194],
          [ 0.0116, -0.0744,  0.0418]],

         [[ 0.0252,  0.0211,  0.0386],
          [-0.0433, -0.0095,  0.0010],
          [ 0.0366, -0.0373,  0.0242]],

         [[-0.0133,  0.0651,  0.0355],
          [-0.0081,  0.0174, -0.0047],
          [ 0.0107, -0.0084, -0.0011]],

         ...,

         [[ 0.0162, -0.0733,  0.0286],
          [ 0.0795,  0.0357,  0.0155],
          [ 0.0440, -0.0491,  0.0886]],

         [[-0.0372, -0.0679,  0.0007],
          [-0.0043,  0.0300,  0.0310],
          [ 0.0539,  0.0102, -0.0100]],

         [[ 0.0129, -0.0514,  0.0129],
          [ 0.0148, -0.0925, -0.0532],
          [-0.0161, -0.0066, -0.0019]]],


        ...,


        [[[ 0.0490, -0.0066,  0.0109],
          [ 0.0229, -0.0157, -0.0229],
          [-0.0854, -0.0179,  0.0543]],

         [[ 0.0237,  0.0160,  0.0347],
          [ 0.0122,  0.0845,  0.0989],
          [ 0.0609, -0.0437, -0.0645]],

         [[ 0.0035,  0.0391, -0.1061],
          [-0.0246, -0.0155,  0.0860],
          [-0.0030, -0.0503, -0.0043]],

         ...,

         [[-0.0999, -0.0968,  0.0702],
          [ 0.0074, -0.0623, -0.0803],
          [-0.0311, -0.0056,  0.0341]],

         [[ 0.0774,  0.0011, -0.0587],
          [ 0.0670,  0.0022, -0.0694],
          [ 0.0353,  0.0641,  0.0477]],

         [[-0.0707,  0.0036,  0.0033],
          [ 0.0875,  0.0162, -0.0610],
          [ 0.0684,  0.0199, -0.0057]]],


        [[[-0.0185, -0.0164, -0.0040],
          [-0.0049, -0.0056,  0.1008],
          [-0.0362, -0.0134, -0.0185]],

         [[-0.0636,  0.0217, -0.0600],
          [ 0.0162, -0.0052,  0.0496],
          [-0.0658, -0.0421, -0.0368]],

         [[-0.0099,  0.0209, -0.0008],
          [-0.0364, -0.0590,  0.0738],
          [ 0.0696, -0.0291,  0.0154]],

         ...,

         [[-0.1240,  0.0646, -0.1031],
          [-0.0236, -0.0254,  0.0291],
          [-0.0440, -0.0539,  0.0051]],

         [[ 0.0183, -0.0371, -0.0515],
          [ 0.0139, -0.0041,  0.0294],
          [-0.0469,  0.0003,  0.0551]],

         [[-0.0146,  0.0018,  0.0054],
          [-0.0183, -0.0222,  0.0268],
          [ 0.0703, -0.0024,  0.0408]]],


        [[[-0.0689,  0.0335,  0.0747],
          [-0.0497,  0.0014, -0.0484],
          [-0.0189, -0.0448, -0.0561]],

         [[ 0.0161, -0.0154, -0.0181],
          [-0.0198,  0.0698, -0.0265],
          [ 0.0248,  0.0034, -0.0018]],

         [[-0.0164,  0.0358,  0.0160],
          [ 0.0108, -0.0330, -0.0615],
          [-0.0002,  0.0242,  0.0041]],

         ...,

         [[ 0.0178, -0.0108,  0.0528],
          [-0.0038, -0.0896, -0.0127],
          [ 0.0566,  0.0354, -0.0240]],

         [[ 0.0667, -0.0211, -0.0652],
          [ 0.0278, -0.0230, -0.0144],
          [ 0.0374, -0.0323, -0.0393]],

         [[ 0.0064, -0.0449, -0.0003],
          [-0.0370,  0.0524, -0.0140],
          [ 0.0069, -0.0223, -0.0476]]]], device='cuda:0')
module.decoder.encoder.out_net.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.0.conv.weight Parameter containing:
tensor([[[[ 0.0054,  0.0212,  0.0110, -0.0140,  0.0140]],

         [[ 0.0109,  0.0165,  0.0226,  0.0069, -0.0254]],

         [[ 0.0570,  0.0046, -0.0120, -0.0305,  0.0264]],

         ...,

         [[-0.0057,  0.0141, -0.0152,  0.0112, -0.0524]],

         [[ 0.0125, -0.0125, -0.0076,  0.0176,  0.0081]],

         [[ 0.0253, -0.0077,  0.0265,  0.0321, -0.0122]]],


        [[[ 0.0245, -0.0282, -0.0002, -0.0358,  0.0108]],

         [[-0.0018,  0.0085,  0.0847,  0.0232, -0.0063]],

         [[-0.0017, -0.0584, -0.0015, -0.0186,  0.0024]],

         ...,

         [[ 0.0360, -0.0096, -0.0183,  0.0359,  0.0026]],

         [[-0.0158, -0.0226, -0.0201,  0.0208, -0.0150]],

         [[-0.0050, -0.0140, -0.0085,  0.0020,  0.0171]]],


        [[[-0.0209,  0.0144,  0.0207,  0.0175,  0.0170]],

         [[ 0.0314, -0.0141, -0.0301,  0.0028, -0.0094]],

         [[-0.0484, -0.0130, -0.0085,  0.0284, -0.0252]],

         ...,

         [[-0.0024, -0.0010, -0.0231, -0.0078, -0.0063]],

         [[-0.0114, -0.0021, -0.0071, -0.0238,  0.0339]],

         [[-0.0387, -0.0115, -0.0169,  0.0115, -0.0196]]],


        ...,


        [[[ 0.0086,  0.0352,  0.0070,  0.0179,  0.0072]],

         [[ 0.0181,  0.0289, -0.0113,  0.0334, -0.0173]],

         [[ 0.0137, -0.0430,  0.0039, -0.0026, -0.0517]],

         ...,

         [[ 0.0278, -0.0219, -0.0359, -0.0208, -0.0345]],

         [[-0.0056, -0.0073, -0.0330, -0.0310,  0.0277]],

         [[ 0.0165,  0.0247,  0.0036, -0.0130, -0.0155]]],


        [[[-0.0565, -0.0088,  0.0544, -0.0002,  0.0135]],

         [[ 0.0220, -0.0085,  0.0032, -0.0386,  0.0407]],

         [[-0.0232,  0.0024,  0.0029, -0.0115, -0.0017]],

         ...,

         [[ 0.0134, -0.0376,  0.0013, -0.0011, -0.0237]],

         [[-0.0142,  0.0126, -0.0058,  0.0066,  0.0129]],

         [[-0.0214, -0.0161,  0.0032,  0.0141, -0.0251]]],


        [[[ 0.0099, -0.0586, -0.0411,  0.0138, -0.0469]],

         [[ 0.0251,  0.0339,  0.0077, -0.0101,  0.0025]],

         [[ 0.0017, -0.0120, -0.0007,  0.0111, -0.0070]],

         ...,

         [[-0.0178, -0.0046, -0.0078, -0.0380, -0.0183]],

         [[ 0.0249, -0.0207,  0.0209, -0.0146, -0.0010]],

         [[ 0.0091,  0.0310, -0.0068, -0.0007, -0.0198]]]], device='cuda:0')
module.decoder.gru.conv_z.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_z.1.conv.weight Parameter containing:
tensor([[[[ 2.8681e-03],
          [ 3.7945e-03],
          [-1.1966e-02],
          [-2.9308e-02],
          [-9.1940e-03]],

         [[ 1.4372e-02],
          [ 3.4104e-02],
          [-9.4622e-03],
          [-2.3338e-02],
          [-1.2896e-02]],

         [[ 6.1985e-03],
          [ 1.7314e-02],
          [-5.4577e-03],
          [-1.7487e-02],
          [ 3.3520e-03]],

         ...,

         [[-2.6846e-02],
          [-6.0956e-03],
          [-1.3585e-02],
          [ 1.9101e-02],
          [ 5.0427e-03]],

         [[ 1.8285e-02],
          [ 1.2145e-02],
          [ 1.5510e-02],
          [ 2.9025e-03],
          [ 1.7627e-02]],

         [[-2.0534e-02],
          [-7.6593e-03],
          [-3.2955e-02],
          [-1.3431e-02],
          [-2.0536e-02]]],


        [[[-2.2275e-02],
          [-1.0773e-02],
          [-5.0487e-03],
          [ 2.0923e-02],
          [-2.6245e-02]],

         [[ 3.9064e-03],
          [ 1.5584e-02],
          [-2.2324e-02],
          [-4.2500e-03],
          [-1.6896e-02]],

         [[ 1.6110e-02],
          [-1.3221e-02],
          [-2.9991e-02],
          [-3.1204e-02],
          [-1.0510e-02]],

         ...,

         [[ 4.6418e-02],
          [-1.4805e-02],
          [ 8.2918e-03],
          [ 2.9305e-02],
          [-1.7786e-02]],

         [[-9.9845e-04],
          [ 3.4105e-03],
          [-3.3374e-02],
          [-5.3494e-03],
          [ 7.3771e-03]],

         [[ 3.1381e-02],
          [-4.0615e-02],
          [ 8.2067e-03],
          [ 1.5392e-02],
          [ 1.2054e-02]]],


        [[[-2.7430e-02],
          [ 1.6502e-02],
          [ 7.2857e-03],
          [ 2.8201e-02],
          [-4.4040e-03]],

         [[-6.3322e-03],
          [ 7.8645e-03],
          [-1.5841e-02],
          [-1.2238e-02],
          [-2.0470e-02]],

         [[-2.3653e-02],
          [-2.1770e-02],
          [ 2.0811e-02],
          [ 1.4644e-02],
          [ 8.2356e-03]],

         ...,

         [[-3.2814e-04],
          [ 1.2991e-03],
          [ 4.2369e-02],
          [-1.3566e-02],
          [ 8.3006e-03]],

         [[-4.1352e-02],
          [ 2.9414e-02],
          [-2.8351e-02],
          [-6.4660e-03],
          [ 1.1074e-02]],

         [[-1.5586e-02],
          [-1.7157e-02],
          [-1.9165e-02],
          [-1.0036e-02],
          [-3.3387e-02]]],


        ...,


        [[[ 1.8199e-02],
          [-1.2221e-02],
          [ 2.5608e-02],
          [-2.7903e-02],
          [ 4.4410e-02]],

         [[ 3.5614e-03],
          [ 2.4265e-02],
          [ 1.2954e-02],
          [ 1.8635e-02],
          [ 1.1889e-03]],

         [[-1.9970e-02],
          [ 2.9975e-02],
          [ 2.9758e-02],
          [-5.2161e-03],
          [ 1.6482e-02]],

         ...,

         [[ 2.1302e-02],
          [ 9.1541e-03],
          [-2.3320e-02],
          [-3.6603e-02],
          [-1.4853e-02]],

         [[-1.5857e-02],
          [ 4.1009e-02],
          [ 1.4856e-02],
          [-1.1495e-02],
          [-3.6023e-02]],

         [[ 2.8487e-02],
          [ 4.5349e-02],
          [ 2.7759e-03],
          [-9.8145e-03],
          [ 7.7262e-02]]],


        [[[-3.4306e-03],
          [-5.4028e-02],
          [ 9.6984e-03],
          [ 8.7898e-03],
          [-5.4005e-03]],

         [[-1.2855e-02],
          [ 7.6516e-03],
          [-1.1153e-03],
          [-2.4245e-03],
          [-1.6726e-02]],

         [[-3.4811e-02],
          [-2.4448e-02],
          [-4.9544e-04],
          [-1.7377e-02],
          [-1.6530e-02]],

         ...,

         [[ 1.6398e-05],
          [ 2.5909e-02],
          [ 5.4324e-03],
          [ 6.9329e-03],
          [ 3.1878e-02]],

         [[-2.0390e-02],
          [-4.9740e-02],
          [ 3.3493e-02],
          [ 1.2011e-02],
          [-2.0989e-03]],

         [[-2.2789e-02],
          [-5.3194e-02],
          [ 9.0486e-03],
          [ 4.1114e-03],
          [ 4.8448e-02]]],


        [[[ 8.8979e-03],
          [ 4.4694e-03],
          [ 5.9498e-03],
          [ 2.4676e-02],
          [ 1.5926e-02]],

         [[-4.1978e-02],
          [-1.0239e-02],
          [-4.1288e-03],
          [-3.3218e-02],
          [-2.7979e-02]],

         [[-6.6174e-02],
          [-2.1278e-02],
          [-1.5960e-02],
          [-1.3881e-02],
          [-6.7135e-03]],

         ...,

         [[-1.1414e-02],
          [-6.9802e-04],
          [ 1.6676e-02],
          [-2.4474e-02],
          [ 4.3618e-03]],

         [[-2.2245e-02],
          [-2.7448e-02],
          [ 3.4570e-03],
          [-3.0055e-02],
          [ 1.4432e-02]],

         [[-8.9411e-03],
          [ 2.2769e-02],
          [-2.0324e-02],
          [ 2.8327e-02],
          [ 2.5703e-02]]]], device='cuda:0')
module.decoder.gru.conv_z.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.0.conv.weight Parameter containing:
tensor([[[[-2.0313e-02, -2.5233e-02, -6.8632e-03, -9.4007e-03,  1.8500e-02]],

         [[ 1.6628e-02, -3.0678e-02,  5.2180e-03, -1.4309e-02, -6.8172e-03]],

         [[-7.2158e-03,  1.9027e-02,  1.6687e-02, -2.7174e-02,  1.3328e-02]],

         ...,

         [[ 4.5413e-02, -2.5600e-02,  2.2266e-02,  9.1861e-04, -4.7453e-02]],

         [[-1.7367e-02,  7.1335e-03, -1.9835e-03, -3.9739e-02, -6.3207e-03]],

         [[ 1.6488e-02, -2.8594e-02, -6.1446e-03, -4.5298e-03,  4.1574e-03]]],


        [[[-1.3898e-02, -3.3466e-02,  7.0509e-03, -1.3355e-02,  1.0449e-02]],

         [[-6.8543e-03, -2.6141e-02, -3.4211e-02,  1.8423e-03,  2.2755e-02]],

         [[-2.0978e-03,  7.7924e-03,  1.3642e-02, -1.7097e-02,  1.3154e-02]],

         ...,

         [[ 1.6131e-02, -4.9866e-03, -4.4994e-03, -2.2488e-03,  2.0059e-02]],

         [[ 1.0393e-02,  5.0645e-03, -8.6385e-03,  1.7752e-02,  2.7338e-02]],

         [[ 1.4875e-03, -4.1783e-02,  5.2225e-03, -7.3438e-03,  3.4718e-02]]],


        [[[ 1.3663e-03,  4.1234e-02,  2.8258e-02, -1.5303e-02, -7.3770e-03]],

         [[-4.3610e-02, -8.9881e-03, -4.0330e-03, -2.4889e-02,  4.2859e-03]],

         [[ 1.0132e-02, -6.9095e-03, -3.9570e-03, -1.6029e-02,  2.3857e-02]],

         ...,

         [[-2.6229e-02,  1.5847e-02, -1.1139e-03, -7.3084e-03,  7.5952e-03]],

         [[-1.0760e-02,  8.2666e-03, -5.8646e-03, -2.2981e-02,  8.5881e-03]],

         [[-2.1241e-03,  9.5736e-03,  2.3208e-02,  4.9226e-03, -2.7064e-02]]],


        ...,


        [[[ 5.2103e-03,  1.6584e-02, -2.6358e-02, -1.0095e-02, -2.2199e-02]],

         [[-2.7169e-02,  1.5181e-03,  1.7789e-02,  4.8371e-03,  2.6791e-02]],

         [[ 3.6775e-02,  1.2075e-02, -1.7115e-03,  1.5979e-02, -1.1053e-02]],

         ...,

         [[ 1.9862e-03,  5.7871e-03, -2.8627e-02, -1.3707e-02,  4.4608e-02]],

         [[-2.6583e-02, -9.3100e-03, -1.8395e-02, -2.5689e-02,  1.7614e-02]],

         [[-8.1941e-03, -3.2968e-02,  3.3613e-02, -9.1652e-03,  2.1891e-03]]],


        [[[ 2.8762e-02, -1.2293e-02, -2.8156e-02,  8.1197e-03,  2.6367e-02]],

         [[-4.5636e-03,  8.5948e-03,  4.6662e-04, -1.3755e-02, -1.0258e-02]],

         [[ 2.7499e-02, -2.7111e-02,  2.4583e-02,  4.6155e-03, -1.3593e-02]],

         ...,

         [[ 1.2094e-02,  1.6518e-02,  4.2966e-02,  7.7082e-04,  1.4406e-02]],

         [[ 9.1670e-03, -7.9580e-03, -7.1321e-03, -1.8673e-02, -8.7863e-03]],

         [[-1.3324e-02,  1.7884e-02, -7.9035e-03, -2.0428e-02,  3.1786e-02]]],


        [[[-5.1207e-02, -1.7036e-02,  2.8516e-02, -5.4286e-03,  5.1074e-02]],

         [[-2.2318e-02,  1.4245e-03,  5.5487e-05, -8.4002e-03, -3.5052e-02]],

         [[-8.3477e-03, -9.8200e-03, -1.1389e-02, -1.0807e-02,  2.0654e-02]],

         ...,

         [[-6.4125e-03, -8.3534e-04, -3.1516e-02, -1.8272e-03,  1.8049e-02]],

         [[ 2.8284e-02,  2.0030e-02, -2.1086e-02, -6.3836e-03,  3.9020e-02]],

         [[ 2.1385e-02, -3.2313e-02, -1.2474e-02,  4.3430e-03,  3.6186e-02]]]],
       device='cuda:0')
module.decoder.gru.conv_r.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_r.1.conv.weight Parameter containing:
tensor([[[[-0.0206],
          [-0.0236],
          [ 0.0022],
          [-0.0194],
          [ 0.0039]],

         [[-0.0389],
          [ 0.0139],
          [ 0.0307],
          [-0.0006],
          [-0.0136]],

         [[-0.0273],
          [ 0.0188],
          [-0.0273],
          [ 0.0123],
          [ 0.0088]],

         ...,

         [[ 0.0066],
          [ 0.0307],
          [ 0.0199],
          [ 0.0291],
          [-0.0026]],

         [[-0.0154],
          [ 0.0174],
          [ 0.0020],
          [-0.0048],
          [ 0.0194]],

         [[-0.0054],
          [ 0.0107],
          [ 0.0138],
          [ 0.0132],
          [ 0.0165]]],


        [[[-0.0143],
          [-0.0027],
          [ 0.0054],
          [-0.0074],
          [ 0.0322]],

         [[ 0.0177],
          [-0.0044],
          [ 0.0121],
          [ 0.0340],
          [-0.0015]],

         [[ 0.0071],
          [-0.0368],
          [ 0.0010],
          [-0.0177],
          [-0.0168]],

         ...,

         [[ 0.0212],
          [-0.0045],
          [-0.0347],
          [-0.0004],
          [-0.0036]],

         [[-0.0077],
          [-0.0085],
          [ 0.0090],
          [ 0.0282],
          [ 0.0025]],

         [[ 0.0024],
          [ 0.0263],
          [-0.0440],
          [-0.0144],
          [ 0.0181]]],


        [[[ 0.0047],
          [ 0.0175],
          [ 0.0304],
          [ 0.0296],
          [-0.0110]],

         [[ 0.0101],
          [-0.0144],
          [-0.0064],
          [ 0.0091],
          [ 0.0063]],

         [[-0.0133],
          [ 0.0318],
          [-0.0195],
          [-0.0066],
          [-0.0101]],

         ...,

         [[ 0.0131],
          [-0.0237],
          [ 0.0086],
          [-0.0243],
          [ 0.0062]],

         [[ 0.0078],
          [ 0.0174],
          [-0.0116],
          [-0.0231],
          [-0.0214]],

         [[ 0.0393],
          [ 0.0374],
          [ 0.0109],
          [ 0.0315],
          [ 0.0016]]],


        ...,


        [[[ 0.0065],
          [ 0.0148],
          [ 0.0287],
          [-0.0062],
          [ 0.0041]],

         [[ 0.0074],
          [ 0.0266],
          [ 0.0022],
          [ 0.0030],
          [ 0.0317]],

         [[ 0.0168],
          [-0.0034],
          [ 0.0108],
          [ 0.0019],
          [ 0.0093]],

         ...,

         [[-0.0353],
          [ 0.0332],
          [-0.0032],
          [ 0.0002],
          [ 0.0129]],

         [[ 0.0195],
          [-0.0301],
          [ 0.0188],
          [-0.0307],
          [ 0.0014]],

         [[-0.0175],
          [ 0.0367],
          [ 0.0112],
          [-0.0137],
          [ 0.0051]]],


        [[[-0.0092],
          [-0.0316],
          [ 0.0206],
          [-0.0160],
          [ 0.0192]],

         [[ 0.0149],
          [ 0.0669],
          [ 0.0035],
          [-0.0138],
          [ 0.0066]],

         [[-0.0211],
          [-0.0145],
          [-0.0078],
          [-0.0037],
          [ 0.0225]],

         ...,

         [[ 0.0062],
          [ 0.0231],
          [ 0.0109],
          [-0.0022],
          [-0.0079]],

         [[-0.0071],
          [-0.0103],
          [ 0.0399],
          [-0.0208],
          [-0.0253]],

         [[ 0.0286],
          [-0.0422],
          [-0.0265],
          [-0.0182],
          [ 0.0129]]],


        [[[-0.0253],
          [ 0.0357],
          [-0.0100],
          [ 0.0030],
          [-0.0341]],

         [[-0.0101],
          [ 0.0467],
          [-0.0367],
          [ 0.0057],
          [ 0.0012]],

         [[-0.0093],
          [-0.0066],
          [ 0.0112],
          [-0.0311],
          [ 0.0202]],

         ...,

         [[-0.0101],
          [ 0.0347],
          [-0.0072],
          [ 0.0392],
          [-0.0023]],

         [[-0.0453],
          [ 0.0173],
          [ 0.0139],
          [ 0.0151],
          [ 0.0298]],

         [[-0.0251],
          [-0.0239],
          [-0.0007],
          [-0.0245],
          [ 0.0177]]]], device='cuda:0')
module.decoder.gru.conv_r.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.0.conv.weight Parameter containing:
tensor([[[[-0.0057,  0.0407,  0.0100, -0.0290,  0.0019]],

         [[-0.0058,  0.0164,  0.0041, -0.0106, -0.0041]],

         [[-0.0009, -0.0506, -0.0047, -0.0041,  0.0062]],

         ...,

         [[-0.0356,  0.0274, -0.0293, -0.0202, -0.0466]],

         [[ 0.0345,  0.0157, -0.0073,  0.0354,  0.0026]],

         [[-0.0402, -0.0090,  0.0329, -0.0347, -0.0336]]],


        [[[-0.0018,  0.0191, -0.0055, -0.0324,  0.0048]],

         [[-0.0290, -0.0073, -0.0038, -0.0610, -0.0275]],

         [[ 0.0418, -0.0165, -0.0440,  0.0203, -0.0133]],

         ...,

         [[-0.0045,  0.0224, -0.0156, -0.0256,  0.0116]],

         [[ 0.0596,  0.0113,  0.0457,  0.0198, -0.0051]],

         [[-0.0087,  0.0004, -0.0109,  0.0021, -0.0318]]],


        [[[-0.0197,  0.0387, -0.0170,  0.0131, -0.0111]],

         [[-0.0348,  0.0066,  0.0043, -0.0057, -0.0092]],

         [[ 0.0052, -0.0169,  0.0130,  0.0042, -0.0009]],

         ...,

         [[-0.0258, -0.0124,  0.0281,  0.0352,  0.0321]],

         [[-0.0011, -0.0549,  0.0354, -0.0228,  0.0147]],

         [[ 0.0226,  0.0255, -0.0057,  0.0288,  0.0116]]],


        ...,


        [[[ 0.0307, -0.0046, -0.0043,  0.0244,  0.0201]],

         [[ 0.0168, -0.0097, -0.0245,  0.0112, -0.0019]],

         [[-0.0190,  0.0202,  0.0031,  0.0289, -0.0724]],

         ...,

         [[ 0.0336,  0.0305, -0.0184,  0.0068,  0.0014]],

         [[-0.0080,  0.0083, -0.0341,  0.0229,  0.0340]],

         [[ 0.0081,  0.0068,  0.0019,  0.0162, -0.0264]]],


        [[[ 0.0088,  0.0610,  0.0288,  0.0453,  0.0310]],

         [[-0.0045, -0.0203, -0.0117,  0.0153, -0.0014]],

         [[-0.0029,  0.0192, -0.0003, -0.0232,  0.0462]],

         ...,

         [[ 0.0076, -0.0124,  0.0409, -0.0281, -0.0212]],

         [[-0.0307,  0.0080, -0.0369,  0.0048,  0.0059]],

         [[ 0.0308, -0.0235,  0.0017,  0.0215, -0.0216]]],


        [[[-0.0331,  0.0320,  0.0143,  0.0232,  0.0188]],

         [[-0.0074, -0.0280, -0.0237, -0.0133, -0.0164]],

         [[ 0.0081, -0.0427,  0.0191, -0.0342,  0.0015]],

         ...,

         [[ 0.0197,  0.0297, -0.0310,  0.0098, -0.0068]],

         [[-0.0118,  0.0104,  0.0132,  0.0140, -0.0129]],

         [[ 0.0143, -0.0076,  0.0218, -0.0150, -0.0113]]]], device='cuda:0')
module.decoder.gru.conv_q.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.gru.conv_q.1.conv.weight Parameter containing:
tensor([[[[-2.6235e-02],
          [-3.7616e-02],
          [-2.5715e-03],
          [ 3.5400e-02],
          [ 1.9160e-02]],

         [[ 1.8429e-02],
          [ 1.0965e-03],
          [ 3.1651e-02],
          [-2.8958e-02],
          [ 1.3911e-02]],

         [[-3.9274e-02],
          [-4.0925e-02],
          [ 1.8421e-03],
          [ 6.9745e-03],
          [-3.9477e-03]],

         ...,

         [[ 1.6408e-02],
          [ 3.8031e-04],
          [ 4.1988e-02],
          [ 4.6843e-02],
          [-4.6898e-02]],

         [[ 1.8173e-02],
          [ 2.2838e-02],
          [-3.8721e-02],
          [ 3.4806e-02],
          [-1.1949e-02]],

         [[-1.0713e-02],
          [-7.9379e-03],
          [-2.9405e-02],
          [-2.2581e-02],
          [-4.9342e-02]]],


        [[[ 4.4323e-04],
          [ 3.1458e-02],
          [ 3.1294e-03],
          [-2.1591e-03],
          [ 3.8294e-02]],

         [[-1.3124e-02],
          [ 1.9320e-02],
          [-1.8752e-03],
          [-1.2182e-02],
          [-2.0570e-02]],

         [[ 2.8346e-02],
          [-3.7847e-04],
          [-3.6195e-02],
          [-1.0130e-02],
          [-6.9299e-03]],

         ...,

         [[-8.1563e-03],
          [-3.4810e-02],
          [-1.5850e-02],
          [-4.7157e-05],
          [-2.6502e-02]],

         [[ 7.6279e-03],
          [-5.8112e-03],
          [-1.6557e-02],
          [ 1.3622e-02],
          [ 1.7494e-02]],

         [[-4.3709e-03],
          [-1.2854e-02],
          [ 2.1395e-02],
          [ 2.4751e-02],
          [-2.8990e-02]]],


        [[[ 3.8827e-03],
          [ 3.7366e-02],
          [-2.8569e-02],
          [ 4.6924e-03],
          [-2.5920e-03]],

         [[ 1.4029e-02],
          [ 2.3769e-02],
          [-2.5886e-02],
          [-6.9519e-03],
          [ 3.2452e-02]],

         [[-6.9502e-02],
          [ 1.1989e-02],
          [-3.0401e-03],
          [ 2.0041e-02],
          [ 3.1279e-02]],

         ...,

         [[-1.9511e-02],
          [-5.2250e-03],
          [ 2.3399e-02],
          [ 3.7451e-02],
          [-3.4701e-03]],

         [[-2.3758e-03],
          [ 2.5900e-02],
          [ 2.3038e-02],
          [ 9.4002e-03],
          [-3.7410e-02]],

         [[-4.1185e-02],
          [-2.5327e-02],
          [ 2.0069e-03],
          [-1.3891e-02],
          [-1.1046e-02]]],


        ...,


        [[[-1.6952e-02],
          [-2.7835e-02],
          [-1.1823e-02],
          [ 3.4007e-02],
          [ 7.6394e-03]],

         [[ 3.1592e-03],
          [ 3.4570e-02],
          [ 2.2945e-02],
          [ 3.4477e-02],
          [ 6.6121e-03]],

         [[-4.8217e-02],
          [ 9.6393e-03],
          [-1.7091e-02],
          [-3.6245e-02],
          [ 4.9381e-03]],

         ...,

         [[ 1.3667e-02],
          [-1.2895e-02],
          [ 1.4204e-03],
          [-2.4315e-02],
          [-7.4897e-03]],

         [[-5.9522e-03],
          [-2.0174e-02],
          [ 7.2830e-03],
          [-2.9595e-02],
          [-3.3092e-02]],

         [[-1.8837e-04],
          [ 1.3223e-02],
          [-1.1838e-02],
          [ 6.5738e-03],
          [-4.0382e-03]]],


        [[[ 5.0406e-02],
          [-1.7433e-02],
          [-5.5233e-03],
          [-2.6139e-02],
          [-4.0605e-02]],

         [[ 2.1471e-02],
          [-2.1146e-03],
          [-1.4015e-02],
          [-1.0499e-02],
          [-1.6253e-03]],

         [[ 9.2868e-03],
          [ 2.6712e-02],
          [ 1.0095e-02],
          [ 6.0442e-03],
          [-4.5158e-04]],

         ...,

         [[-4.3025e-02],
          [-3.1863e-03],
          [-1.4167e-02],
          [ 3.5904e-03],
          [ 2.8868e-02]],

         [[-2.0036e-02],
          [ 1.5473e-02],
          [ 3.5752e-02],
          [ 5.0506e-03],
          [-2.5667e-03]],

         [[ 6.7834e-03],
          [-2.6713e-02],
          [ 4.2445e-02],
          [ 2.9832e-02],
          [-2.4092e-02]]],


        [[[-3.4288e-02],
          [ 2.1115e-02],
          [ 1.1107e-02],
          [-1.4273e-03],
          [-2.5807e-03]],

         [[-5.6793e-02],
          [ 3.4758e-02],
          [ 2.5227e-02],
          [ 2.2439e-02],
          [-1.4026e-02]],

         [[-1.5495e-02],
          [-3.0199e-03],
          [-4.8095e-02],
          [ 2.1850e-02],
          [-8.3450e-03]],

         ...,

         [[-2.3806e-02],
          [-1.6138e-02],
          [-8.0450e-03],
          [ 3.3941e-04],
          [ 3.7650e-02]],

         [[ 1.3911e-02],
          [-2.5125e-02],
          [-1.0861e-02],
          [ 3.4871e-02],
          [-8.8342e-03]],

         [[-2.5257e-02],
          [-2.3381e-02],
          [-9.1348e-03],
          [-2.3796e-02],
          [-5.2709e-03]]]], device='cuda:0')
module.decoder.gru.conv_q.1.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.weight Parameter containing:
tensor([[[[ 0.0425, -0.0556,  0.0020],
          [ 0.0098, -0.0205, -0.0253],
          [-0.0521, -0.0151, -0.0361]],

         [[ 0.0038,  0.0715,  0.0188],
          [-0.0137, -0.0056,  0.0448],
          [ 0.0131, -0.0324,  0.0010]],

         [[-0.0134, -0.0004,  0.0819],
          [ 0.0035, -0.0151, -0.0091],
          [-0.0013,  0.0556, -0.0095]],

         ...,

         [[ 0.0101,  0.0600,  0.0316],
          [-0.0046,  0.0261, -0.0300],
          [ 0.0141,  0.0397, -0.0287]],

         [[ 0.0236, -0.0009, -0.0048],
          [-0.0598,  0.0347, -0.0117],
          [-0.0141,  0.0141,  0.0019]],

         [[ 0.0285,  0.0079, -0.0177],
          [-0.0191,  0.0040, -0.0635],
          [-0.0052, -0.0190,  0.0461]]],


        [[[-0.0003, -0.0008,  0.0289],
          [-0.0126, -0.0204,  0.0198],
          [ 0.0113, -0.0039, -0.0452]],

         [[ 0.0294, -0.0188,  0.0052],
          [ 0.0431,  0.0457, -0.0349],
          [-0.0113, -0.0018, -0.0195]],

         [[ 0.0233, -0.0266,  0.0312],
          [ 0.0302,  0.0181, -0.0307],
          [-0.0096, -0.0434, -0.0140]],

         ...,

         [[ 0.0076, -0.0311, -0.0254],
          [ 0.0366,  0.0325,  0.0603],
          [-0.0589,  0.0314, -0.0033]],

         [[-0.0242, -0.0220, -0.0160],
          [ 0.0070, -0.0254,  0.0193],
          [-0.0002, -0.0149, -0.0376]],

         [[-0.0189,  0.0490, -0.0507],
          [-0.0692, -0.0257, -0.0208],
          [-0.0298, -0.0152, -0.0318]]],


        [[[-0.0291, -0.0378, -0.0144],
          [-0.0040,  0.0051, -0.0305],
          [-0.0243, -0.0097, -0.0269]],

         [[ 0.0442,  0.0478, -0.0119],
          [-0.0291,  0.0133, -0.0286],
          [-0.0144,  0.0181,  0.0081]],

         [[ 0.0221,  0.0197,  0.0363],
          [-0.0415,  0.0271,  0.0158],
          [ 0.0209,  0.0004,  0.0376]],

         ...,

         [[ 0.0112, -0.0411,  0.0266],
          [ 0.0103, -0.0083, -0.0311],
          [ 0.0026,  0.0168,  0.0286]],

         [[-0.0124,  0.0468,  0.0453],
          [-0.0114,  0.0158,  0.0077],
          [ 0.0311, -0.0058,  0.0266]],

         [[-0.0117,  0.0507,  0.0170],
          [ 0.0175, -0.0049,  0.0514],
          [ 0.0330, -0.0701,  0.0042]]],


        ...,


        [[[-0.0093, -0.0192,  0.0126],
          [ 0.0091, -0.0202,  0.0455],
          [ 0.0480,  0.0157, -0.0200]],

         [[-0.0228, -0.0148,  0.0207],
          [ 0.0126, -0.0090, -0.0134],
          [-0.0555,  0.0303,  0.0001]],

         [[ 0.0374,  0.0065, -0.0088],
          [-0.0199, -0.0339, -0.0091],
          [-0.0029,  0.0027, -0.0066]],

         ...,

         [[-0.0393,  0.0019,  0.0191],
          [ 0.0171,  0.0314,  0.0418],
          [ 0.0194,  0.0022, -0.0635]],

         [[ 0.0076,  0.0040,  0.0052],
          [-0.0406,  0.0468, -0.0182],
          [-0.0159,  0.0079,  0.0120]],

         [[-0.0218,  0.0011,  0.0129],
          [ 0.0162,  0.0317,  0.0049],
          [-0.0663, -0.0093,  0.0019]]],


        [[[ 0.0169, -0.0282, -0.0443],
          [ 0.0342,  0.0456,  0.0128],
          [ 0.0343,  0.0155, -0.0217]],

         [[-0.0330, -0.0122,  0.0104],
          [ 0.0068,  0.0373,  0.0427],
          [-0.0117,  0.0511,  0.0142]],

         [[-0.0225,  0.0257, -0.0184],
          [ 0.0156,  0.0079, -0.0414],
          [ 0.0043, -0.0059,  0.0365]],

         ...,

         [[-0.0241, -0.0157,  0.0432],
          [-0.0447, -0.0104, -0.0149],
          [-0.0034, -0.0419,  0.0325]],

         [[-0.0358, -0.0226,  0.0353],
          [-0.0405, -0.0119,  0.0076],
          [-0.0003, -0.0057, -0.0198]],

         [[ 0.0097,  0.0278,  0.0203],
          [ 0.0018,  0.0064, -0.0100],
          [ 0.0082,  0.0386,  0.0200]]],


        [[[-0.0359,  0.0224, -0.0339],
          [-0.0153,  0.0221,  0.0207],
          [-0.0033, -0.0127, -0.0134]],

         [[ 0.0060,  0.0267,  0.0358],
          [-0.0763,  0.0562,  0.0158],
          [-0.0116,  0.0086,  0.0508]],

         [[-0.0218, -0.0161, -0.0067],
          [ 0.0392,  0.0304, -0.0203],
          [-0.0150, -0.0160, -0.0025]],

         ...,

         [[-0.0374, -0.0161, -0.0149],
          [-0.0190,  0.0454,  0.0079],
          [-0.0136, -0.0007,  0.0152]],

         [[ 0.0230, -0.0074,  0.0347],
          [ 0.0583,  0.0468, -0.0171],
          [-0.0075,  0.0121,  0.0007]],

         [[ 0.0190, -0.0388,  0.0268],
          [-0.0433,  0.0398,  0.0355],
          [ 0.0179, -0.0498,  0.0079]]]], device='cuda:0')
module.decoder.flow_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.flow_pred.predict_layer.weight Parameter containing:
tensor([[[[ 4.2631e-03,  1.4230e-02, -4.6529e-04],
          [-1.0227e-02, -7.7445e-04, -1.8238e-02],
          [ 1.5711e-03,  2.0404e-02,  1.3998e-02]],

         [[-2.0488e-02, -1.5151e-04,  1.7093e-03],
          [ 1.5640e-02,  6.9072e-03, -2.2010e-03],
          [ 1.0757e-02, -1.1902e-02, -1.9885e-02]],

         [[ 1.2650e-02, -1.7027e-02,  8.4259e-03],
          [ 1.3449e-02,  1.2007e-02, -1.2140e-02],
          [ 4.6802e-03,  1.0848e-02,  7.6008e-03]],

         ...,

         [[-1.8982e-02,  4.5126e-03,  1.2767e-02],
          [ 1.2950e-02,  9.9875e-03, -1.9348e-02],
          [-1.4588e-02,  7.9267e-03, -1.2847e-03]],

         [[-4.8977e-03,  2.1107e-03, -8.1557e-03],
          [-1.9357e-02,  1.3705e-02, -2.2346e-03],
          [-1.4350e-03, -3.9621e-03,  2.9974e-05]],

         [[-9.0153e-03,  8.4493e-03,  1.9144e-02],
          [-1.9529e-02, -1.0839e-02, -7.5191e-04],
          [-1.5458e-02, -7.1776e-03, -3.0379e-04]]],


        [[[ 1.5267e-02, -7.2419e-03, -1.8736e-02],
          [-1.9532e-02, -1.9296e-02, -1.1215e-02],
          [ 1.6238e-02,  1.0511e-03,  1.4525e-02]],

         [[ 1.8594e-02,  9.6809e-03,  4.4075e-03],
          [-2.0610e-02, -9.1627e-03, -1.0182e-02],
          [ 8.3499e-03, -1.6232e-02,  1.4669e-02]],

         [[-8.2445e-04, -5.2288e-03, -1.6512e-02],
          [-9.2330e-04, -1.2780e-02,  4.4996e-03],
          [ 4.1684e-03, -1.0903e-02, -1.1876e-02]],

         ...,

         [[-1.1046e-02,  3.5545e-03, -8.3842e-03],
          [ 2.0828e-02,  1.0144e-02,  1.3102e-02],
          [ 8.7681e-03, -8.5982e-03,  1.3102e-02]],

         [[-7.0164e-03,  2.1157e-03,  2.4343e-03],
          [ 8.7519e-03,  5.7512e-03,  9.2956e-03],
          [ 2.1269e-03,  9.9061e-03,  3.8400e-03]],

         [[ 1.2907e-03, -9.3226e-03, -8.1389e-03],
          [ 1.4565e-02, -4.5845e-03, -2.2901e-04],
          [ 9.4240e-03,  5.7946e-03, -1.5168e-02]]]], device='cuda:0')
module.decoder.flow_pred.predict_layer.bias Parameter containing:
tensor([ 0.0113, -0.0058], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.weight Parameter containing:
tensor([[[[-0.0197,  0.0100, -0.0388],
          [-0.0047, -0.0362,  0.0022],
          [ 0.0421, -0.0173, -0.0038]],

         [[ 0.0176, -0.0322,  0.0088],
          [ 0.0180, -0.0230,  0.0520],
          [-0.0473, -0.0083, -0.0005]],

         [[-0.0077,  0.0020,  0.0247],
          [ 0.0374,  0.0369, -0.0339],
          [-0.0028,  0.0385,  0.0069]],

         ...,

         [[-0.0355, -0.0104,  0.0415],
          [-0.0115,  0.0146,  0.0217],
          [ 0.0007,  0.0177,  0.0137]],

         [[-0.0323,  0.0074, -0.0493],
          [-0.0086,  0.0040, -0.0339],
          [-0.0357, -0.0280,  0.0035]],

         [[ 0.0069, -0.0154,  0.0162],
          [-0.0408, -0.0083,  0.0432],
          [ 0.0167, -0.0123,  0.0043]]],


        [[[ 0.0133, -0.0002,  0.0205],
          [-0.0396,  0.0100, -0.0084],
          [ 0.0047,  0.0005, -0.0400]],

         [[ 0.0154,  0.0609,  0.0421],
          [ 0.0051, -0.0365, -0.0543],
          [ 0.0301,  0.0273,  0.0084]],

         [[-0.0189,  0.0330,  0.0097],
          [ 0.0280,  0.0116, -0.0746],
          [-0.0253,  0.0495,  0.0162]],

         ...,

         [[ 0.0290,  0.0334,  0.0308],
          [-0.0004, -0.0102,  0.0437],
          [-0.0131, -0.0073, -0.0365]],

         [[-0.0311, -0.0274,  0.0203],
          [ 0.0138,  0.0204,  0.0142],
          [-0.0172, -0.0211,  0.0123]],

         [[ 0.0181,  0.0056,  0.0198],
          [-0.0278,  0.0275, -0.0626],
          [-0.0152,  0.0280,  0.0206]]],


        [[[ 0.0080,  0.0249, -0.0274],
          [ 0.0590,  0.0580, -0.0095],
          [-0.0185, -0.0040, -0.0178]],

         [[-0.0431, -0.0138,  0.0003],
          [ 0.0297, -0.0404,  0.0075],
          [-0.0170, -0.0272,  0.0015]],

         [[ 0.0122, -0.0081,  0.0060],
          [ 0.0320, -0.0268, -0.0552],
          [-0.0037, -0.0713, -0.0185]],

         ...,

         [[-0.0249,  0.0489, -0.0022],
          [ 0.0721,  0.0064, -0.0153],
          [-0.0127, -0.0818, -0.0514]],

         [[-0.0303,  0.0054,  0.0684],
          [-0.0423,  0.0292, -0.0229],
          [-0.0073,  0.0231,  0.0085]],

         [[ 0.0368,  0.0163, -0.0399],
          [ 0.0070,  0.0101, -0.0516],
          [ 0.0231, -0.0174, -0.0003]]],


        ...,


        [[[-0.0335, -0.0184,  0.0632],
          [-0.0202, -0.0504,  0.0228],
          [ 0.0462,  0.0014,  0.0261]],

         [[ 0.0152,  0.0766, -0.0001],
          [ 0.0063, -0.0100, -0.0232],
          [-0.0167,  0.0116, -0.0422]],

         [[-0.0350,  0.0216, -0.0233],
          [-0.0106, -0.0156, -0.0494],
          [-0.0016,  0.0082, -0.0180]],

         ...,

         [[-0.0196,  0.0104, -0.0111],
          [-0.0146, -0.0192, -0.0130],
          [ 0.0031,  0.0062, -0.0132]],

         [[ 0.0108,  0.0059, -0.0043],
          [-0.0185, -0.0386,  0.0329],
          [-0.0306, -0.0375, -0.0078]],

         [[-0.0179, -0.0264, -0.0254],
          [-0.0505,  0.0606,  0.0196],
          [-0.0356,  0.0154, -0.0448]]],


        [[[-0.0079,  0.0017,  0.0158],
          [-0.0089, -0.0261, -0.0031],
          [-0.0310,  0.0060,  0.0364]],

         [[ 0.0189,  0.0221, -0.0175],
          [ 0.0065,  0.0059,  0.0062],
          [ 0.0205,  0.0425, -0.0151]],

         [[-0.0311,  0.0081, -0.0175],
          [-0.0386,  0.0487,  0.0335],
          [ 0.0096, -0.0526,  0.0153]],

         ...,

         [[-0.0207, -0.0197,  0.0028],
          [-0.0345, -0.0066, -0.0319],
          [ 0.0074, -0.0116, -0.0233]],

         [[-0.0135,  0.0340, -0.0318],
          [ 0.0410, -0.0211, -0.0341],
          [-0.0212, -0.0263, -0.0097]],

         [[-0.0090, -0.0673, -0.0104],
          [-0.0126, -0.0348,  0.0093],
          [ 0.0093, -0.0179, -0.0361]]],


        [[[-0.0439, -0.0181,  0.0042],
          [-0.0153,  0.0098,  0.0829],
          [-0.0538,  0.0129,  0.0372]],

         [[ 0.0473, -0.0148,  0.0280],
          [-0.0226, -0.0294,  0.0200],
          [-0.0402,  0.0367,  0.0356]],

         [[ 0.0273, -0.0613, -0.0144],
          [-0.0127, -0.0318, -0.0062],
          [-0.0387,  0.0357, -0.0453]],

         ...,

         [[ 0.0137, -0.0210, -0.0687],
          [-0.0522,  0.0199, -0.0183],
          [-0.0085, -0.0322,  0.0125]],

         [[-0.0016,  0.0163, -0.0313],
          [-0.0187, -0.0236,  0.0182],
          [-0.0022, -0.0605,  0.0451]],

         [[ 0.0011,  0.0104, -0.0121],
          [ 0.0098, -0.0103,  0.0089],
          [ 0.0497,  0.0012,  0.0495]]]], device='cuda:0')
module.decoder.mask_pred.layers.0.conv.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.decoder.mask_pred.predict_layer.weight Parameter containing:
tensor([[[[-4.8332e-02]],

         [[-7.7859e-05]],

         [[-3.3048e-02]],

         ...,

         [[ 2.7959e-02]],

         [[ 1.2201e-02]],

         [[ 2.2345e-02]]],


        [[[ 4.2073e-02]],

         [[ 2.5032e-02]],

         [[ 1.6989e-02]],

         ...,

         [[-5.5378e-02]],

         [[ 1.2990e-02]],

         [[-4.0004e-02]]],


        [[[ 3.4722e-03]],

         [[-5.3003e-02]],

         [[ 5.1176e-02]],

         ...,

         [[-5.6538e-02]],

         [[ 1.6265e-02]],

         [[-2.6466e-02]]],


        ...,


        [[[ 1.9198e-02]],

         [[ 1.9351e-02]],

         [[-9.8990e-03]],

         ...,

         [[-2.6005e-02]],

         [[ 2.8586e-02]],

         [[-4.0726e-02]]],


        [[[ 3.9202e-02]],

         [[ 2.7987e-02]],

         [[ 4.1776e-02]],

         ...,

         [[-5.8096e-03]],

         [[-3.7223e-02]],

         [[-2.7656e-02]]],


        [[[-5.7721e-02]],

         [[ 1.8532e-02]],

         [[ 1.3144e-02]],

         ...,

         [[-2.9447e-02]],

         [[ 5.1807e-02]],

         [[ 4.1543e-02]]]], device='cuda:0')
module.decoder.mask_pred.predict_layer.bias Parameter containing:
tensor([ 0.0069, -0.0258, -0.0512, -0.0218,  0.0366,  0.0226, -0.0066,  0.0162,
         0.0543, -0.0368, -0.0615,  0.0147, -0.0252, -0.0222, -0.0103, -0.0126,
        -0.0201, -0.0558, -0.0293,  0.0082, -0.0555, -0.0265, -0.0206,  0.0366,
        -0.0434,  0.0205, -0.0544, -0.0438, -0.0146,  0.0362,  0.0008,  0.0458,
        -0.0128, -0.0363,  0.0405,  0.0604,  0.0099, -0.0258, -0.0227, -0.0142,
         0.0183,  0.0299,  0.0214, -0.0589,  0.0523,  0.0601, -0.0065, -0.0596,
        -0.0210,  0.0162, -0.0554,  0.0556,  0.0385, -0.0537,  0.0515, -0.0117,
         0.0486,  0.0467,  0.0083,  0.0105, -0.0058,  0.0385,  0.0023, -0.0610,
         0.0460,  0.0590,  0.0351, -0.0606, -0.0115, -0.0023, -0.0004,  0.0474,
         0.0513,  0.0624,  0.0426,  0.0284,  0.0598, -0.0162, -0.0143,  0.0247,
        -0.0455, -0.0282,  0.0469, -0.0295, -0.0064,  0.0600,  0.0532, -0.0582,
        -0.0507, -0.0137,  0.0517,  0.0086, -0.0009,  0.0134,  0.0487, -0.0592,
        -0.0131, -0.0202, -0.0302, -0.0158,  0.0367, -0.0480,  0.0318, -0.0251,
        -0.0497, -0.0399, -0.0448, -0.0338,  0.0589, -0.0590, -0.0490,  0.0368,
         0.0213, -0.0583, -0.0366, -0.0129, -0.0122,  0.0148, -0.0488,  0.0221,
        -0.0216, -0.0151,  0.0324, -0.0295, -0.0319, -0.0305,  0.0084, -0.0395,
        -0.0120, -0.0601,  0.0398,  0.0603, -0.0151,  0.0370, -0.0078,  0.0423,
        -0.0179, -0.0187, -0.0042, -0.0505, -0.0041, -0.0611, -0.0599,  0.0018,
         0.0413,  0.0406, -0.0599, -0.0435,  0.0410, -0.0088, -0.0117,  0.0117,
         0.0604, -0.0581, -0.0207,  0.0517,  0.0423,  0.0208,  0.0169,  0.0079,
         0.0269, -0.0186,  0.0462, -0.0003, -0.0393,  0.0358,  0.0270,  0.0051,
        -0.0371, -0.0050,  0.0242, -0.0614, -0.0293, -0.0343,  0.0187,  0.0258,
         0.0514,  0.0251, -0.0187, -0.0597, -0.0050, -0.0212,  0.0312,  0.0180,
        -0.0350,  0.0056, -0.0344, -0.0162, -0.0441, -0.0360, -0.0527,  0.0573,
         0.0355,  0.0367, -0.0462,  0.0439, -0.0302, -0.0455, -0.0545,  0.0253,
         0.0311,  0.0161, -0.0405, -0.0380, -0.0129,  0.0318,  0.0120,  0.0194,
        -0.0292, -0.0592,  0.0385, -0.0072, -0.0099,  0.0527,  0.0064,  0.0275,
         0.0260,  0.0448, -0.0400, -0.0334,  0.0252, -0.0514, -0.0470, -0.0119,
         0.0031, -0.0053, -0.0492,  0.0257, -0.0556,  0.0615,  0.0072,  0.0616,
         0.0127, -0.0388, -0.0389, -0.0178, -0.0535, -0.0299,  0.0114, -0.0226,
        -0.0556,  0.0622, -0.0089, -0.0314, -0.0441,  0.0613, -0.0309,  0.0564,
         0.0244,  0.0139, -0.0475,  0.0186,  0.0221, -0.0270,  0.0469,  0.0554,
         0.0392, -0.0180,  0.0543, -0.0089, -0.0386,  0.0248,  0.0139,  0.0159,
        -0.0438, -0.0017, -0.0413, -0.0149,  0.0527, -0.0451,  0.0173,  0.0520,
        -0.0575, -0.0273, -0.0313, -0.0327,  0.0441, -0.0450, -0.0486, -0.0155,
        -0.0441,  0.0539,  0.0210, -0.0484,  0.0285, -0.0616,  0.0033,  0.0382,
         0.0298,  0.0242, -0.0115,  0.0222, -0.0579, -0.0407, -0.0083, -0.0334,
         0.0504, -0.0290,  0.0532, -0.0159, -0.0218,  0.0351, -0.0572,  0.0142,
         0.0320,  0.0097, -0.0034,  0.0055, -0.0422, -0.0230,  0.0436,  0.0105,
         0.0039,  0.0163, -0.0130,  0.0115,  0.0543, -0.0515, -0.0322, -0.0296,
         0.0523,  0.0350, -0.0589, -0.0353, -0.0156, -0.0253,  0.0173, -0.0527,
        -0.0281, -0.0109,  0.0296, -0.0571, -0.0293, -0.0253, -0.0390,  0.0546,
         0.0075,  0.0616,  0.0366, -0.0434, -0.0129, -0.0321,  0.0106,  0.0328,
         0.0577,  0.0476, -0.0376,  0.0105, -0.0569, -0.0148,  0.0056,  0.0284,
        -0.0015, -0.0047, -0.0403,  0.0217, -0.0429,  0.0501, -0.0448,  0.0508,
        -0.0106,  0.0539,  0.0622,  0.0036,  0.0004, -0.0377, -0.0518,  0.0328,
         0.0385, -0.0037,  0.0344,  0.0502, -0.0584, -0.0292,  0.0605,  0.0044,
        -0.0436, -0.0252, -0.0457,  0.0300,  0.0356, -0.0029, -0.0016, -0.0236,
        -0.0041,  0.0086, -0.0009,  0.0517,  0.0268, -0.0142,  0.0277, -0.0213,
        -0.0351, -0.0570,  0.0312, -0.0459,  0.0528,  0.0203, -0.0465,  0.0074,
         0.0021, -0.0453, -0.0225, -0.0209,  0.0062,  0.0294, -0.0158, -0.0618,
         0.0135,  0.0474, -0.0329, -0.0511,  0.0128, -0.0139,  0.0540,  0.0072,
        -0.0119, -0.0613,  0.0443,  0.0336,  0.0063,  0.0113, -0.0522,  0.0303,
         0.0003,  0.0202, -0.0152,  0.0617, -0.0179, -0.0155,  0.0154, -0.0201,
         0.0316,  0.0383,  0.0553, -0.0542, -0.0554,  0.0127, -0.0101, -0.0506,
        -0.0393, -0.0112, -0.0323, -0.0561,  0.0283, -0.0593, -0.0590,  0.0073,
        -0.0463, -0.0102,  0.0456, -0.0088,  0.0028, -0.0229,  0.0075, -0.0595,
        -0.0194,  0.0515, -0.0347, -0.0360, -0.0217, -0.0176,  0.0118, -0.0244,
         0.0490, -0.0352,  0.0325, -0.0341,  0.0288,  0.0324,  0.0588,  0.0205,
        -0.0463,  0.0589, -0.0529, -0.0039, -0.0004,  0.0196,  0.0264, -0.0020,
        -0.0104,  0.0123, -0.0590,  0.0381, -0.0310, -0.0061,  0.0170, -0.0349,
        -0.0591,  0.0037, -0.0332,  0.0478,  0.0285,  0.0524,  0.0226, -0.0045,
        -0.0561, -0.0145,  0.0350, -0.0098, -0.0027, -0.0018,  0.0255, -0.0512,
         0.0018, -0.0218,  0.0333,  0.0146, -0.0434, -0.0463, -0.0279,  0.0342,
        -0.0459, -0.0311,  0.0454,  0.0474, -0.0608, -0.0062, -0.0570,  0.0344,
        -0.0494,  0.0368, -0.0314,  0.0253,  0.0289,  0.0480,  0.0432, -0.0570,
        -0.0475, -0.0300, -0.0586, -0.0111, -0.0329, -0.0518, -0.0388, -0.0237,
         0.0624, -0.0391,  0.0240, -0.0491,  0.0269, -0.0458, -0.0427, -0.0184,
         0.0170, -0.0624, -0.0157, -0.0105, -0.0312, -0.0619,  0.0201, -0.0236,
        -0.0284, -0.0115, -0.0487, -0.0531,  0.0539,  0.0165,  0.0027,  0.0042,
         0.0006,  0.0541,  0.0618, -0.0462, -0.0565, -0.0224, -0.0316,  0.0545,
         0.0462, -0.0098, -0.0530,  0.0010, -0.0296, -0.0301, -0.0342, -0.0232],
       device='cuda:0')
module.context.conv1.weight Parameter containing:
tensor([[[[-2.7463e-03,  2.3389e-02,  6.1909e-02,  ...,  1.2222e-02,
           -3.2637e-03, -2.7599e-02],
          [-2.6101e-03,  2.7365e-02,  2.3884e-02,  ...,  1.3129e-02,
            3.6231e-02,  1.6391e-02],
          [-2.1648e-02, -1.7420e-02,  1.2829e-03,  ..., -3.0358e-03,
            1.9446e-02,  1.7774e-03],
          ...,
          [-4.5500e-02,  2.7914e-02,  4.2595e-03,  ..., -2.5304e-02,
           -2.7642e-02,  1.6209e-02],
          [ 3.2840e-02, -4.5873e-03,  2.6889e-02,  ...,  4.1955e-02,
           -1.3825e-02,  1.4672e-02],
          [-4.9987e-02, -2.9214e-02,  7.5712e-03,  ...,  9.3621e-03,
            3.0933e-02,  1.8409e-02]],

         [[ 4.4755e-02,  1.4091e-02, -2.1506e-02,  ...,  1.9909e-02,
           -2.8964e-02, -2.5577e-02],
          [-4.4603e-03,  8.0185e-03, -1.6100e-02,  ..., -1.6473e-02,
            5.3676e-04, -1.8206e-02],
          [-5.1516e-02,  1.8642e-03,  2.5603e-03,  ..., -1.4839e-02,
           -3.5360e-02,  4.9663e-02],
          ...,
          [ 2.8490e-02, -1.3857e-02,  2.5946e-02,  ..., -2.0140e-02,
            1.4560e-02,  7.2897e-03],
          [-6.5093e-03,  1.2237e-02, -9.2124e-03,  ..., -2.5254e-02,
            1.2972e-02,  4.2561e-02],
          [-2.0938e-02,  2.3990e-02,  4.3066e-02,  ...,  3.9124e-03,
           -1.2661e-02,  2.5837e-02]],

         [[ 4.1481e-03,  4.1470e-02, -3.3194e-02,  ...,  8.0730e-03,
           -1.1800e-03, -5.9792e-02],
          [ 1.4218e-02, -4.4397e-02,  1.2519e-02,  ...,  1.4428e-02,
           -2.5648e-03,  2.3895e-02],
          [ 2.5380e-02,  2.2673e-02, -3.0101e-02,  ...,  5.1226e-02,
           -2.1797e-02, -7.1865e-03],
          ...,
          [-6.7410e-03, -1.7482e-02, -1.7796e-02,  ...,  1.3733e-02,
           -2.5975e-02, -1.9401e-02],
          [ 1.1543e-02, -2.0794e-02,  1.9062e-03,  ..., -7.9175e-03,
            1.9259e-02, -4.7703e-03],
          [-8.8797e-04,  1.9491e-02, -2.7795e-03,  ...,  1.1093e-02,
           -7.0948e-03, -1.4031e-02]]],


        [[[-3.1377e-04, -4.4072e-02, -1.9317e-02,  ..., -5.0337e-02,
           -2.5463e-02, -6.0352e-02],
          [ 3.9431e-02, -5.8071e-03,  2.7715e-02,  ..., -2.2315e-02,
            3.1896e-03, -2.6169e-03],
          [ 4.7744e-02,  1.6261e-02, -3.9281e-02,  ..., -3.0512e-02,
            1.7078e-02, -4.4024e-02],
          ...,
          [ 2.3741e-02,  3.0230e-02, -2.7401e-02,  ..., -1.3500e-02,
           -1.4370e-02,  3.7989e-02],
          [-7.5166e-03, -2.6904e-02, -3.1448e-03,  ...,  2.2953e-03,
           -4.0663e-03,  3.3786e-02],
          [-1.9335e-02,  5.3862e-02,  3.1895e-03,  ...,  3.0601e-02,
           -6.0281e-03, -3.2750e-02]],

         [[-5.6052e-03,  2.2177e-02,  2.4446e-02,  ..., -5.5598e-03,
           -3.9594e-03,  3.5649e-02],
          [-1.8275e-02,  8.7495e-04,  1.5302e-02,  ...,  2.6317e-02,
           -8.6068e-03,  2.5570e-02],
          [ 3.7930e-02, -3.6273e-02, -9.1251e-04,  ..., -3.6634e-02,
           -4.0891e-02,  3.0036e-02],
          ...,
          [ 2.7763e-03, -1.5061e-02, -4.3767e-02,  ..., -3.8642e-02,
            5.7453e-03, -8.3736e-04],
          [ 1.7244e-03,  1.3525e-02,  4.2114e-02,  ..., -4.6247e-02,
           -2.9871e-03, -1.4040e-02],
          [-3.1907e-02, -8.5439e-03,  2.8492e-02,  ...,  5.5053e-03,
            2.5327e-02, -2.4767e-02]],

         [[-2.9277e-02, -4.7822e-02,  1.5635e-02,  ...,  1.6205e-02,
            3.5636e-02, -1.4422e-03],
          [ 6.2534e-02, -1.1471e-02, -2.8095e-02,  ...,  1.4020e-02,
            2.2464e-02,  2.8971e-02],
          [ 2.5981e-02,  3.9612e-02,  1.2206e-02,  ..., -3.2472e-02,
            2.9886e-03,  1.6319e-02],
          ...,
          [-2.8452e-02,  2.2520e-03,  3.7593e-02,  ...,  5.8384e-02,
           -3.8783e-02, -1.6765e-02],
          [ 1.7222e-02, -3.7952e-02, -1.0359e-02,  ..., -2.3755e-02,
            1.5863e-02,  8.5818e-03],
          [ 1.9714e-02, -5.2859e-02,  8.7776e-02,  ...,  1.9717e-02,
            1.4666e-02,  9.2536e-03]]],


        [[[-2.8888e-02,  1.1603e-02,  1.9637e-02,  ..., -2.0763e-02,
            9.3784e-03,  1.8421e-02],
          [ 1.5529e-03,  1.9483e-02, -4.6044e-02,  ..., -3.0666e-02,
            7.1179e-03,  1.2764e-02],
          [-9.9560e-03,  4.4236e-02, -1.1573e-02,  ...,  1.5308e-02,
            1.0011e-02, -8.5319e-03],
          ...,
          [-1.8196e-02, -2.7207e-02, -2.4831e-02,  ...,  2.9709e-02,
           -3.6807e-02,  6.2485e-03],
          [ 1.3105e-02, -1.0819e-02, -3.9783e-02,  ...,  2.2980e-02,
            5.3085e-02,  1.4756e-02],
          [ 3.4210e-02, -7.0374e-03,  3.9728e-02,  ...,  3.6222e-02,
           -6.4225e-03,  3.6950e-02]],

         [[ 9.7037e-03,  3.3029e-02, -1.5931e-02,  ..., -6.1757e-03,
           -5.9913e-03, -4.5002e-03],
          [-2.3299e-02,  6.9284e-03, -1.6295e-03,  ..., -1.9260e-02,
            6.0391e-03,  3.9245e-02],
          [ 2.5583e-02, -3.4100e-02, -4.8766e-02,  ..., -5.4350e-02,
           -3.4169e-02, -3.0814e-02],
          ...,
          [ 2.2896e-02, -2.4795e-03,  1.4192e-02,  ..., -2.9001e-02,
           -1.9793e-02, -1.0043e-02],
          [ 9.2811e-03,  7.1871e-03, -4.4841e-02,  ..., -4.2741e-03,
            2.4900e-02, -3.2002e-03],
          [ 6.1552e-03,  5.3288e-03, -5.9182e-03,  ...,  2.3800e-02,
            2.4781e-02, -2.6269e-02]],

         [[-7.0361e-02,  7.1808e-03,  1.0630e-02,  ..., -2.3760e-02,
            1.1981e-02,  8.4041e-02],
          [ 2.3140e-02,  2.3263e-03, -1.1157e-02,  ..., -1.2731e-02,
            1.2844e-02, -6.0443e-02],
          [ 3.0665e-02, -8.0812e-04,  1.1210e-02,  ..., -1.1502e-02,
           -1.0113e-02,  4.7656e-03],
          ...,
          [ 3.0200e-02, -3.5530e-02, -5.5889e-02,  ...,  4.7642e-02,
            4.9048e-04,  2.2411e-02],
          [-2.4753e-02, -1.0428e-02,  5.7842e-02,  ...,  1.3701e-02,
           -8.0345e-04, -2.9354e-02],
          [ 9.7385e-03,  9.5909e-03, -2.5274e-02,  ..., -1.1345e-02,
            2.9306e-02,  2.9816e-02]]],


        ...,


        [[[ 1.8668e-02,  1.3778e-02,  2.4887e-02,  ...,  6.9673e-03,
           -3.1092e-02,  4.8704e-03],
          [ 8.6051e-03, -7.7074e-03, -1.7015e-02,  ...,  3.6835e-02,
           -1.6402e-02, -1.6918e-02],
          [-2.8128e-02, -2.2960e-03, -2.2547e-02,  ...,  2.8391e-02,
            2.1695e-02,  2.0080e-02],
          ...,
          [-4.0088e-02,  2.4053e-02,  5.2793e-02,  ...,  1.1917e-02,
           -1.7790e-02,  2.2767e-02],
          [-2.0137e-02,  2.8236e-02, -2.7868e-03,  ..., -2.8838e-03,
           -4.0565e-03, -8.0332e-03],
          [-3.3878e-02, -1.3030e-02, -5.0407e-03,  ...,  5.1152e-02,
            2.5384e-02, -5.0600e-03]],

         [[ 2.5597e-02,  5.9854e-03, -6.6908e-04,  ...,  7.9479e-03,
            2.7835e-02, -1.0467e-02],
          [-2.4179e-02,  2.6884e-06,  9.3037e-03,  ...,  2.9363e-03,
            5.3174e-03, -2.1551e-02],
          [-5.3811e-03, -2.3170e-03, -4.6826e-03,  ...,  5.2235e-02,
           -4.5998e-02, -5.8297e-02],
          ...,
          [-2.1090e-02, -1.8246e-02, -1.3382e-02,  ...,  2.0848e-02,
           -1.8034e-02,  3.2926e-03],
          [-1.7745e-02, -4.8402e-02,  3.0766e-03,  ..., -1.9408e-02,
           -4.6717e-02,  4.1786e-03],
          [-1.2528e-02,  1.0450e-02, -6.9845e-04,  ...,  2.7113e-02,
           -2.6234e-02,  4.9713e-02]],

         [[-1.0117e-02,  3.3512e-03, -1.9818e-02,  ..., -1.8847e-02,
           -8.0572e-03, -5.7350e-03],
          [ 1.7456e-02,  3.1708e-03, -1.0270e-06,  ..., -1.7328e-02,
           -1.7891e-02, -5.7300e-03],
          [-3.3680e-02,  7.2356e-03,  1.0378e-02,  ...,  1.4435e-02,
           -2.3827e-02, -4.3003e-03],
          ...,
          [ 3.7749e-02,  9.4754e-03,  1.8288e-02,  ...,  5.0706e-03,
            6.5339e-02, -2.7391e-02],
          [ 7.7301e-03,  1.9669e-03, -5.6854e-03,  ...,  2.2426e-02,
           -1.5048e-02, -1.8927e-02],
          [ 1.9079e-02, -3.3568e-03,  1.3012e-03,  ...,  1.8313e-02,
           -4.0019e-02,  3.2227e-02]]],


        [[[-1.7414e-02, -1.2900e-02, -2.3274e-02,  ..., -1.5010e-02,
            5.6607e-02, -2.2559e-02],
          [ 1.0472e-02, -4.5687e-02, -1.7755e-02,  ..., -1.9289e-02,
           -2.0702e-02, -3.3462e-02],
          [ 4.9420e-03, -1.2646e-02,  1.5586e-02,  ...,  1.8916e-02,
            6.9679e-03,  2.3956e-02],
          ...,
          [ 1.0039e-02,  9.9160e-03,  3.0594e-02,  ...,  2.8438e-02,
            6.9698e-03, -2.9687e-02],
          [ 6.9250e-03,  3.4892e-02,  6.5030e-03,  ..., -5.6974e-03,
            1.6031e-02,  2.4733e-02],
          [ 1.5074e-02,  4.0103e-03,  1.4030e-02,  ...,  3.9650e-02,
           -3.5256e-02, -3.3468e-03]],

         [[ 2.5486e-02,  2.6580e-02,  2.3323e-02,  ..., -3.3661e-02,
           -2.4761e-02,  1.0359e-02],
          [ 2.0070e-02,  8.7615e-03, -5.2686e-02,  ..., -6.4570e-03,
           -1.3017e-02,  2.5279e-03],
          [-3.1770e-03,  3.5283e-02, -6.0222e-03,  ...,  1.6253e-02,
            3.1211e-03,  2.1724e-02],
          ...,
          [ 8.5836e-03, -3.6245e-02,  1.6629e-02,  ..., -2.4355e-02,
           -6.6850e-03, -2.7861e-02],
          [-4.0022e-02, -2.0612e-02, -6.3514e-03,  ...,  1.0798e-02,
            4.8231e-02,  1.8062e-02],
          [-4.7629e-02,  3.4131e-02,  7.0517e-03,  ..., -1.3968e-02,
            1.2614e-02, -5.4072e-02]],

         [[-3.0937e-02,  1.1695e-02, -3.4790e-02,  ...,  4.3401e-02,
           -1.8924e-03,  4.7770e-02],
          [-1.4966e-02,  1.6618e-02, -1.8397e-02,  ...,  3.5215e-02,
            1.7571e-02,  5.0127e-02],
          [-2.4141e-02, -4.6481e-02, -1.3673e-02,  ..., -6.9676e-03,
            2.6413e-02, -4.1094e-02],
          ...,
          [ 4.9911e-02,  5.7050e-02, -5.4219e-03,  ...,  9.4610e-03,
            1.9031e-03,  3.2564e-02],
          [ 4.4206e-03, -6.4438e-03, -1.5426e-02,  ..., -2.3960e-02,
           -1.4175e-02, -1.1074e-02],
          [-1.2470e-03,  4.3964e-02,  2.9823e-03,  ..., -2.2266e-02,
            4.5370e-02, -3.2782e-02]]],


        [[[ 4.8147e-02,  8.8550e-03, -5.1216e-02,  ..., -9.8385e-03,
            1.6707e-02,  4.6870e-03],
          [ 2.8495e-02,  5.4687e-03, -1.6976e-03,  ..., -3.6419e-02,
            5.7927e-03, -7.5048e-03],
          [ 2.9681e-03,  2.5166e-02,  1.5394e-02,  ..., -1.1935e-02,
            5.0392e-02,  2.6335e-03],
          ...,
          [-5.5181e-02, -2.0085e-02,  3.1837e-04,  ..., -3.0428e-02,
            5.2955e-03,  3.8371e-02],
          [ 2.8360e-02, -1.8072e-02,  9.7288e-03,  ..., -3.6788e-02,
            1.6684e-02, -2.3567e-02],
          [ 3.7811e-02, -8.7493e-03, -2.1023e-03,  ...,  7.4109e-03,
            4.9165e-03, -2.7873e-02]],

         [[ 2.1045e-02, -5.5669e-02,  1.4632e-02,  ..., -2.3435e-02,
           -4.0013e-02, -2.7080e-02],
          [ 3.5005e-02,  1.0189e-02, -3.9779e-02,  ...,  3.0641e-02,
            1.3496e-02, -1.3917e-03],
          [-2.3646e-02, -9.4614e-04,  5.4211e-03,  ..., -2.0935e-03,
           -1.8296e-02, -2.8771e-03],
          ...,
          [ 4.3010e-02,  3.4341e-02, -4.3253e-02,  ..., -1.4349e-02,
           -1.7886e-02,  2.4919e-02],
          [ 3.2700e-02,  3.4116e-02, -1.1506e-02,  ...,  6.6439e-02,
           -3.3182e-03,  2.7137e-02],
          [ 2.5413e-02,  1.1715e-02,  2.2900e-02,  ...,  6.5267e-03,
           -4.1801e-02,  1.3057e-02]],

         [[ 6.1046e-03,  8.5614e-03, -1.9600e-02,  ...,  2.5487e-02,
           -1.0188e-02, -6.4082e-03],
          [-4.7628e-03,  6.5355e-03,  1.7759e-02,  ...,  2.6233e-02,
           -6.8678e-03,  7.3463e-03],
          [ 2.1647e-03, -4.8058e-03, -6.8556e-03,  ..., -2.8271e-02,
            3.9280e-03, -4.0947e-02],
          ...,
          [ 2.1049e-02, -2.1107e-02, -1.2344e-02,  ..., -2.5524e-02,
            5.1929e-03, -1.8189e-02],
          [ 5.1976e-02, -4.5208e-02, -2.0557e-02,  ...,  6.1592e-03,
            2.7635e-02, -1.4272e-02],
          [ 2.9170e-02,  2.2070e-02,  3.9964e-02,  ...,  3.1164e-02,
            2.9220e-02,  2.9955e-02]]]], device='cuda:0')
module.context.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv1.weight Parameter containing:
tensor([[[[-1.3190e-02,  8.2261e-03,  1.5756e-02],
          [-1.0576e-02,  1.6250e-02,  9.2073e-03],
          [-4.7066e-02,  2.4125e-02,  6.3838e-02]],

         [[-4.3508e-02,  1.3940e-02,  9.3349e-02],
          [-6.9827e-02, -2.6922e-03, -2.3269e-02],
          [-7.7170e-03,  1.5573e-01, -6.0662e-02]],

         [[ 3.0170e-02,  3.9352e-02,  4.9668e-02],
          [ 4.8595e-02, -7.5841e-02,  2.3829e-02],
          [ 6.5160e-02,  7.2377e-02, -6.8697e-02]],

         ...,

         [[ 6.7348e-02, -1.0966e-01,  5.0904e-03],
          [ 3.7057e-02, -6.8391e-02, -2.4673e-02],
          [-3.4218e-02,  1.6183e-02, -5.7064e-02]],

         [[ 5.8060e-02, -2.3347e-02,  6.2570e-02],
          [-6.4917e-02,  6.8090e-02,  1.3006e-03],
          [-5.0419e-02,  1.9568e-02, -5.0176e-03]],

         [[-4.0804e-02, -3.7403e-02,  1.6256e-02],
          [ 2.3955e-02, -2.4392e-02, -6.9582e-02],
          [ 1.0664e-02, -2.4229e-02,  1.1723e-02]]],


        [[[ 6.5171e-02, -6.4418e-03,  3.5994e-02],
          [-1.3708e-01, -3.0790e-02, -5.6179e-02],
          [ 3.8269e-02, -1.2005e-02, -7.6026e-02]],

         [[ 2.9226e-02, -3.1219e-02, -3.7305e-03],
          [ 1.9738e-02,  1.1867e-01, -1.1401e-01],
          [ 5.2349e-02, -5.7311e-02,  3.8674e-04]],

         [[-1.0129e-01,  2.3822e-02, -9.3611e-02],
          [-1.1419e-02, -5.2388e-02,  4.1147e-02],
          [-2.1477e-02, -4.2310e-03,  2.1193e-03]],

         ...,

         [[ 6.3510e-02, -2.1296e-02,  5.5637e-02],
          [ 1.0989e-01, -4.3822e-02, -4.7193e-06],
          [ 7.3248e-02,  6.0777e-02, -2.0490e-02]],

         [[ 3.1602e-02,  2.6714e-02,  3.1389e-02],
          [-4.7395e-02, -1.9117e-02, -1.2200e-01],
          [-4.8814e-02, -7.3207e-02,  5.8195e-03]],

         [[ 9.2396e-02, -1.7699e-02, -5.2753e-02],
          [-9.4149e-03, -2.4732e-02,  3.4888e-02],
          [-8.4758e-02,  6.5304e-02, -8.9799e-03]]],


        [[[-6.7062e-02,  4.1114e-02,  2.8510e-02],
          [-2.4293e-02, -1.1228e-02,  1.6465e-02],
          [-3.3266e-02, -1.8743e-02, -7.0752e-02]],

         [[ 4.4434e-02, -9.2350e-02,  3.5425e-02],
          [ 1.1600e-01,  7.8078e-02,  3.5605e-02],
          [-6.2933e-02,  8.8999e-03, -7.7838e-02]],

         [[-9.7463e-02, -2.5083e-02,  9.6121e-02],
          [ 6.6322e-02, -3.2280e-02, -7.5686e-02],
          [ 2.7411e-02, -2.2893e-02, -1.5600e-02]],

         ...,

         [[-4.3958e-02, -5.9622e-03, -2.6148e-02],
          [ 4.3310e-03,  1.2290e-02, -5.8216e-02],
          [-4.3661e-02, -2.6450e-02, -8.7950e-03]],

         [[ 5.1547e-02, -9.5782e-02, -5.6467e-02],
          [-4.3623e-03, -6.2109e-02,  6.5044e-02],
          [ 7.8116e-02, -6.5452e-04, -1.3885e-02]],

         [[ 4.9091e-02, -1.8006e-02,  1.8113e-02],
          [ 2.3140e-02, -6.8052e-02, -3.3371e-02],
          [ 9.0052e-03, -8.3948e-02, -5.7872e-03]]],


        ...,


        [[[ 5.1749e-02, -8.6331e-03,  5.6402e-02],
          [-1.0895e-01, -8.8647e-02, -4.3872e-02],
          [-3.7003e-02,  3.9454e-02,  2.0395e-02]],

         [[ 4.1511e-02, -8.9339e-02,  8.1468e-02],
          [-4.5615e-02,  8.2093e-02, -6.8765e-02],
          [ 3.6871e-02,  5.1601e-02, -2.8286e-02]],

         [[-1.3397e-02,  7.6159e-02, -5.8901e-02],
          [ 3.2285e-02, -1.7476e-02,  2.8461e-02],
          [ 2.0475e-02, -3.5831e-02, -3.1384e-02]],

         ...,

         [[-1.1639e-02, -1.9082e-01, -1.7317e-02],
          [ 6.4072e-02,  5.4311e-02,  4.7739e-02],
          [-6.7781e-03, -8.4011e-02, -4.2653e-02]],

         [[-1.3139e-03, -2.4878e-02,  5.6343e-03],
          [-3.6545e-02,  8.5418e-02, -3.5560e-02],
          [-7.3978e-02, -8.8156e-02, -5.8974e-02]],

         [[ 2.6169e-02,  6.4581e-02,  1.4227e-01],
          [ 2.0356e-02,  2.8182e-03, -9.5263e-03],
          [-5.9730e-02,  1.4648e-03, -8.1022e-02]]],


        [[[ 6.8395e-02,  1.6888e-03, -1.3836e-02],
          [ 4.0145e-03, -8.4888e-02, -1.8347e-02],
          [ 2.6612e-02,  1.7047e-02, -4.1455e-02]],

         [[-5.4625e-02,  1.2558e-02, -2.4081e-02],
          [ 1.0316e-02, -1.6188e-02,  3.7356e-02],
          [-7.3183e-02,  3.4737e-02,  6.2713e-02]],

         [[ 2.2564e-02,  2.2612e-02,  1.7156e-01],
          [-9.0750e-02, -5.3038e-02, -6.6975e-03],
          [-5.7319e-02,  1.8568e-02,  2.8259e-03]],

         ...,

         [[-2.9632e-02,  4.6664e-02, -1.5772e-02],
          [-1.8736e-02, -9.7723e-02, -3.9393e-02],
          [-1.1583e-01, -4.0244e-02,  4.3432e-02]],

         [[-3.0674e-02,  4.4819e-02,  5.6545e-02],
          [-3.3117e-02, -5.9849e-02,  3.1581e-02],
          [ 7.7625e-02,  8.7368e-02, -9.4496e-03]],

         [[ 5.8679e-02,  5.9337e-02, -3.2520e-02],
          [ 1.3045e-02,  6.3858e-02, -8.2898e-05],
          [ 3.3485e-02, -1.7843e-02,  2.8418e-02]]],


        [[[-1.0043e-01,  1.7873e-02,  6.4454e-02],
          [ 3.5412e-03, -2.1472e-02, -7.0442e-02],
          [-5.4952e-02, -5.4895e-02, -2.1331e-02]],

         [[ 8.9814e-02,  6.3065e-02, -4.1692e-02],
          [-1.0953e-02, -2.1754e-02, -2.9866e-02],
          [ 2.5079e-02, -5.5594e-02,  4.1606e-02]],

         [[ 8.3654e-03, -1.4315e-02,  3.8616e-02],
          [-4.2138e-02, -1.1264e-01, -1.8614e-02],
          [-1.0666e-01, -2.0789e-02,  7.2092e-02]],

         ...,

         [[-5.3381e-02, -1.0902e-01,  2.3826e-02],
          [ 3.6895e-02, -7.7444e-02, -2.8005e-02],
          [ 9.5172e-03, -6.8554e-02, -2.0284e-02]],

         [[-2.4455e-02,  5.5762e-02,  5.8090e-02],
          [-2.3945e-02,  5.8278e-03, -2.4422e-02],
          [-2.0143e-02,  1.1821e-02,  2.2720e-02]],

         [[-5.9943e-02,  1.1914e-02, -3.9008e-02],
          [ 1.2467e-01,  9.2937e-02,  4.2762e-02],
          [-1.3021e-01,  1.4858e-02, -4.8335e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.conv2.weight Parameter containing:
tensor([[[[ 7.1937e-03, -7.2092e-02, -5.5102e-02],
          [ 3.2689e-02,  7.0665e-03, -3.1819e-02],
          [-3.3658e-02,  8.1371e-02, -7.4323e-02]],

         [[-5.4426e-02,  3.1243e-03, -2.8470e-02],
          [-8.1166e-02, -4.8604e-02,  9.8873e-02],
          [-1.4584e-02, -1.0176e-01, -2.2031e-02]],

         [[ 7.2264e-02, -3.0782e-02, -2.5454e-02],
          [-9.9121e-03,  5.7064e-02,  4.9138e-02],
          [-8.2444e-02, -3.0579e-02,  1.1989e-01]],

         ...,

         [[ 5.6508e-02,  3.7346e-02,  1.4078e-02],
          [ 9.4119e-03,  3.6429e-02, -4.6071e-02],
          [ 1.5609e-03,  4.0641e-02,  2.5677e-02]],

         [[-4.0723e-02, -1.2100e-02,  1.4174e-02],
          [-4.0656e-02, -8.3583e-02,  1.6257e-02],
          [-2.4183e-02,  3.6184e-02,  2.6570e-02]],

         [[ 1.0547e-02, -5.0056e-02, -8.8810e-03],
          [-8.0836e-03,  6.9526e-02,  5.2975e-02],
          [-9.6472e-02, -1.0114e-01, -1.4791e-02]]],


        [[[-1.2907e-01, -1.1204e-01, -5.8160e-02],
          [ 6.2274e-02,  3.1023e-02,  3.9039e-02],
          [ 4.9430e-02,  3.1864e-02,  7.0205e-03]],

         [[ 1.6360e-01,  1.7527e-02, -6.9967e-02],
          [ 4.5698e-02, -2.1240e-02, -9.3921e-02],
          [ 1.4223e-02,  3.4306e-02, -9.1310e-02]],

         [[-3.1142e-02,  6.7914e-02,  1.4862e-03],
          [-1.4054e-01, -6.7534e-02, -3.6434e-02],
          [-6.2768e-03, -5.0700e-03,  1.5591e-04]],

         ...,

         [[ 1.9071e-02, -3.0306e-02, -9.0381e-02],
          [-5.1457e-03, -8.7754e-03,  5.2504e-02],
          [ 2.7824e-02, -1.6596e-02,  4.2724e-02]],

         [[-4.9483e-02, -7.5788e-02,  1.9227e-02],
          [-8.3700e-03,  2.0364e-03,  5.5373e-03],
          [-1.0510e-01,  1.5932e-03, -3.3217e-02]],

         [[ 6.5174e-02,  1.1711e-01,  2.1990e-02],
          [ 5.5049e-02, -8.5512e-02, -2.4728e-02],
          [-1.8473e-02,  2.1175e-03, -7.4830e-02]]],


        [[[ 9.3400e-02, -3.7991e-02,  5.1915e-02],
          [ 1.1185e-01, -1.8013e-02,  1.4084e-01],
          [-9.3458e-03,  4.7761e-02,  7.4037e-02]],

         [[ 3.7303e-02, -1.0192e-02,  2.0307e-02],
          [-9.2615e-03, -1.5731e-02, -3.1837e-02],
          [-1.3734e-03,  9.9676e-02,  9.2150e-02]],

         [[-4.6154e-03, -1.0333e-01,  5.1813e-02],
          [ 6.7397e-02,  5.9622e-02, -1.7858e-02],
          [ 7.8903e-02,  1.3638e-02, -3.8362e-02]],

         ...,

         [[-9.1048e-03, -2.5660e-02,  8.3980e-02],
          [-1.5199e-02, -3.2524e-02, -4.9852e-02],
          [-2.0868e-02,  6.4445e-02,  7.5107e-02]],

         [[-3.8172e-02, -3.5906e-02,  3.7076e-02],
          [-5.9547e-02, -1.9732e-02,  1.0394e-02],
          [-7.8566e-02, -7.4268e-02,  9.5467e-02]],

         [[-3.8706e-02, -7.0696e-03, -7.9432e-03],
          [ 6.8874e-02,  2.9880e-02,  2.3466e-02],
          [ 6.5324e-02,  1.3677e-01, -9.4621e-02]]],


        ...,


        [[[ 3.5273e-02,  2.8943e-02, -3.0242e-02],
          [ 5.5195e-02, -9.6193e-02, -7.1773e-03],
          [ 7.7494e-02,  4.2424e-02, -8.3146e-02]],

         [[ 1.8416e-02,  2.6063e-02, -8.1606e-02],
          [ 3.4323e-02, -4.4932e-02, -1.3660e-02],
          [-2.9667e-02,  1.3058e-01, -3.6755e-02]],

         [[-6.0826e-02,  2.3559e-02,  1.9362e-02],
          [ 1.5896e-02, -6.4867e-02, -8.0220e-02],
          [-1.9288e-02, -8.2215e-02, -2.7006e-02]],

         ...,

         [[-7.8295e-02, -1.0141e-01,  2.4854e-02],
          [-9.5013e-03, -3.6817e-02, -5.5395e-02],
          [ 7.3078e-02,  4.1811e-02, -3.9732e-02]],

         [[-6.1008e-02, -8.5629e-02,  1.1374e-01],
          [-8.6861e-02, -1.3896e-01, -2.9851e-02],
          [ 4.3859e-02, -5.1431e-02, -9.6646e-02]],

         [[-4.9545e-03,  1.8581e-02,  4.4651e-02],
          [-1.2565e-02, -1.2181e-01,  2.0704e-02],
          [-1.8385e-02,  3.1863e-03, -8.1735e-03]]],


        [[[-5.4045e-02, -7.7109e-03, -2.3365e-03],
          [-2.5710e-03,  4.8483e-02,  4.7407e-02],
          [ 3.3937e-02, -6.1143e-02, -9.5523e-03]],

         [[ 1.8666e-02,  7.7981e-02, -1.2384e-01],
          [-9.9158e-03,  2.5210e-02,  3.0573e-02],
          [ 6.7200e-02, -1.8947e-02, -4.5989e-02]],

         [[ 2.2062e-02,  6.5270e-02,  9.8572e-02],
          [ 1.8192e-04,  4.0174e-02,  5.8318e-02],
          [-1.4160e-02,  1.3872e-02,  3.5961e-02]],

         ...,

         [[-1.5672e-02,  2.3003e-02, -1.0861e-01],
          [ 5.3724e-02,  1.0835e-01, -1.1699e-01],
          [ 5.8891e-03,  8.3383e-02,  8.0608e-02]],

         [[ 1.0507e-01, -3.5715e-02,  9.4542e-02],
          [-8.5416e-02,  2.6402e-02,  6.6840e-02],
          [-1.2424e-01,  8.6821e-02,  5.3431e-02]],

         [[ 1.3669e-02,  7.5895e-02,  1.0872e-01],
          [ 7.8200e-02,  6.5486e-02, -9.4932e-03],
          [-1.0067e-03,  8.6711e-02,  3.5899e-02]]],


        [[[-8.8194e-02, -2.2094e-02, -4.0256e-02],
          [ 4.3048e-02,  8.7893e-03,  1.2804e-01],
          [ 1.2721e-02,  2.4669e-02, -4.4801e-03]],

         [[-4.1831e-02,  5.7026e-02, -3.3565e-02],
          [-4.8538e-02, -1.3617e-02,  2.7886e-02],
          [-7.4364e-02, -2.9539e-02,  4.5855e-02]],

         [[ 1.9682e-02, -9.3480e-02, -3.4364e-02],
          [-1.2817e-01, -1.8464e-03,  4.1566e-02],
          [ 1.9765e-02, -2.8234e-02, -1.0186e-01]],

         ...,

         [[ 6.0656e-02, -1.5034e-02, -1.8635e-02],
          [-8.1243e-02, -1.0960e-01, -2.9673e-02],
          [ 2.4812e-03, -4.4623e-03,  1.1861e-01]],

         [[ 1.2836e-02, -6.5127e-02, -6.0555e-02],
          [-3.5699e-02,  4.7439e-02, -4.7622e-02],
          [-8.2893e-02, -7.5451e-02, -1.2675e-02]],

         [[ 3.6202e-02, -1.7908e-02, -5.8132e-02],
          [ 7.6595e-02,  5.3419e-02,  3.4864e-02],
          [-1.0590e-01,  9.7613e-02,  6.0311e-02]]]], device='cuda:0')
module.context.res_layer1.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv1.weight Parameter containing:
tensor([[[[-0.0727,  0.0497,  0.0575],
          [-0.0137, -0.0294,  0.0877],
          [ 0.0947,  0.0043, -0.0056]],

         [[-0.0628, -0.1029,  0.0123],
          [ 0.0191, -0.0105, -0.0749],
          [ 0.0722, -0.0550,  0.0041]],

         [[-0.0021, -0.0153, -0.0527],
          [-0.0109, -0.0517, -0.0345],
          [ 0.0617, -0.0290,  0.0079]],

         ...,

         [[-0.0455, -0.0451, -0.0120],
          [ 0.0780, -0.0106, -0.0189],
          [-0.1230,  0.0547, -0.0044]],

         [[ 0.0337,  0.0038,  0.0481],
          [ 0.0632, -0.0537,  0.0577],
          [-0.1077, -0.0596,  0.0144]],

         [[-0.0519, -0.0025,  0.0397],
          [ 0.1586, -0.0289,  0.1327],
          [-0.0357, -0.0019,  0.0397]]],


        [[[-0.0247, -0.0439,  0.0090],
          [ 0.0462, -0.0139,  0.0160],
          [ 0.0141, -0.0443,  0.0093]],

         [[-0.0048, -0.0201, -0.0360],
          [ 0.0202, -0.0073, -0.0329],
          [ 0.0357, -0.0731, -0.1000]],

         [[-0.0205,  0.0374,  0.0575],
          [-0.0076,  0.0777,  0.1014],
          [-0.0906,  0.0170, -0.0899]],

         ...,

         [[-0.0419,  0.0545,  0.0898],
          [-0.0116,  0.0313, -0.0508],
          [ 0.0111, -0.0467,  0.0772]],

         [[-0.0024,  0.0011,  0.0267],
          [ 0.0409, -0.0462, -0.0756],
          [ 0.0365,  0.0204, -0.0776]],

         [[-0.0707, -0.0683, -0.0574],
          [-0.0783, -0.0948, -0.0357],
          [ 0.1086,  0.0618,  0.1329]]],


        [[[ 0.0239, -0.0548, -0.0133],
          [-0.0168,  0.0631,  0.0189],
          [ 0.0543, -0.0177,  0.0839]],

         [[-0.0311, -0.0196,  0.0002],
          [-0.0213,  0.1048, -0.0817],
          [-0.0237, -0.0023, -0.0812]],

         [[-0.0305,  0.0097, -0.0328],
          [ 0.0246, -0.0206,  0.0771],
          [-0.0777,  0.0527,  0.0277]],

         ...,

         [[-0.0174, -0.0176, -0.0016],
          [ 0.0163, -0.0326, -0.0621],
          [-0.0552, -0.0366, -0.0038]],

         [[-0.0752, -0.0215, -0.0259],
          [-0.1314,  0.0274,  0.0664],
          [-0.0174, -0.0128,  0.0166]],

         [[-0.0819, -0.0422,  0.0092],
          [ 0.0120,  0.0069,  0.0658],
          [-0.0237, -0.0067, -0.0332]]],


        ...,


        [[[-0.0324, -0.0362,  0.0041],
          [-0.0822,  0.0125, -0.0841],
          [ 0.0887, -0.0856, -0.0475]],

         [[ 0.0819,  0.0323,  0.1011],
          [-0.0649, -0.0477, -0.0009],
          [ 0.0078, -0.0693, -0.0569]],

         [[ 0.0115,  0.0317,  0.1225],
          [ 0.0151,  0.0117,  0.0414],
          [-0.1122,  0.0307,  0.0538]],

         ...,

         [[-0.0446, -0.0109, -0.0018],
          [-0.0461,  0.0242,  0.0341],
          [ 0.0080, -0.0525, -0.0817]],

         [[ 0.0645,  0.0311,  0.1367],
          [-0.0033, -0.0609, -0.1090],
          [-0.0570,  0.0309,  0.1045]],

         [[-0.0874, -0.0755, -0.1076],
          [ 0.0093,  0.0531, -0.0113],
          [ 0.0959,  0.0384, -0.1062]]],


        [[[-0.0094,  0.0409, -0.1054],
          [ 0.0317,  0.0486,  0.0400],
          [-0.0245,  0.1189,  0.0631]],

         [[ 0.0454, -0.0350, -0.0475],
          [-0.0162,  0.0475, -0.0599],
          [ 0.0187, -0.0680, -0.0233]],

         [[ 0.0202,  0.1058, -0.0273],
          [-0.0140, -0.0011,  0.0364],
          [ 0.0536, -0.0131,  0.0201]],

         ...,

         [[-0.0385, -0.0323, -0.0453],
          [-0.0199, -0.0873, -0.0393],
          [ 0.0307, -0.0156,  0.0586]],

         [[-0.0206, -0.0332,  0.0584],
          [-0.0360, -0.0213, -0.0796],
          [-0.0293,  0.0740, -0.0565]],

         [[ 0.0769,  0.0174,  0.0402],
          [-0.0155,  0.0570, -0.0472],
          [ 0.0191,  0.0803,  0.0601]]],


        [[[ 0.0680, -0.0064,  0.0945],
          [-0.0354, -0.0390,  0.0604],
          [-0.0350,  0.0298,  0.0253]],

         [[ 0.0378, -0.0402, -0.0407],
          [-0.0250, -0.0094, -0.0750],
          [-0.0470, -0.0301,  0.0281]],

         [[-0.0120,  0.0562,  0.1066],
          [ 0.1390,  0.0004, -0.0881],
          [ 0.1114,  0.0336, -0.0539]],

         ...,

         [[-0.0582, -0.1251, -0.0558],
          [-0.0745,  0.0372,  0.0583],
          [-0.0123,  0.0377,  0.0301]],

         [[ 0.0344,  0.0286, -0.1018],
          [-0.0317, -0.0571, -0.0589],
          [ 0.0600, -0.0781, -0.0819]],

         [[-0.0519,  0.0024, -0.0476],
          [ 0.0195, -0.0655,  0.0181],
          [-0.0152, -0.0594,  0.0027]]]], device='cuda:0')
module.context.res_layer1.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.conv2.weight Parameter containing:
tensor([[[[-0.1336, -0.0830, -0.0159],
          [ 0.0225, -0.0226,  0.0882],
          [-0.0331, -0.0311, -0.0330]],

         [[-0.0973,  0.0274,  0.0380],
          [-0.0317, -0.0588,  0.0232],
          [-0.0486, -0.0845,  0.0479]],

         [[-0.0673, -0.0329,  0.0256],
          [-0.0676, -0.1365,  0.0274],
          [-0.0425,  0.0543,  0.0410]],

         ...,

         [[-0.0918, -0.0410, -0.0543],
          [-0.0795,  0.0166,  0.0428],
          [ 0.0254,  0.0188,  0.0873]],

         [[ 0.0517,  0.0919, -0.1109],
          [-0.0137,  0.0531, -0.0220],
          [ 0.0125,  0.0094, -0.0410]],

         [[ 0.0403,  0.0333, -0.0860],
          [ 0.0086,  0.0040, -0.0235],
          [-0.0093, -0.0775,  0.0016]]],


        [[[ 0.1215, -0.0199,  0.0293],
          [-0.0590, -0.0405, -0.0595],
          [-0.0184,  0.0124, -0.0218]],

         [[-0.0076,  0.0506,  0.0071],
          [ 0.0287,  0.0241,  0.0656],
          [-0.0081, -0.0896,  0.0673]],

         [[-0.0577, -0.0028,  0.0871],
          [-0.0675,  0.0154, -0.0163],
          [ 0.0542,  0.0976,  0.0566]],

         ...,

         [[-0.0223, -0.0417,  0.0493],
          [-0.0862, -0.0675,  0.0074],
          [-0.0252, -0.0445,  0.0123]],

         [[-0.0062, -0.0050, -0.0816],
          [ 0.0075,  0.0484, -0.0543],
          [-0.0133, -0.0486,  0.0097]],

         [[-0.0159, -0.0294, -0.0149],
          [-0.0983, -0.0786, -0.0721],
          [ 0.1038, -0.0301, -0.0298]]],


        [[[ 0.0731,  0.0174,  0.0168],
          [-0.0039, -0.0485, -0.0061],
          [-0.0201,  0.0091, -0.0904]],

         [[ 0.0053,  0.0082,  0.0063],
          [-0.0277, -0.1024,  0.0518],
          [-0.0684, -0.0242, -0.0163]],

         [[-0.0597,  0.0060, -0.0016],
          [-0.0304,  0.1203,  0.0480],
          [ 0.0588, -0.0483, -0.1119]],

         ...,

         [[-0.0361,  0.1456, -0.0012],
          [ 0.0085, -0.0523,  0.0150],
          [ 0.1086,  0.0034,  0.0949]],

         [[ 0.0514, -0.0160, -0.0999],
          [-0.0677,  0.0132, -0.0649],
          [-0.0033,  0.1171, -0.0586]],

         [[ 0.0717,  0.0503, -0.1047],
          [ 0.1071, -0.0707, -0.0117],
          [-0.0107, -0.1153,  0.0023]]],


        ...,


        [[[ 0.0654,  0.0066, -0.0703],
          [-0.0911,  0.0551, -0.0523],
          [-0.0076, -0.0390, -0.0540]],

         [[-0.1115, -0.0394,  0.0222],
          [ 0.0448, -0.0560,  0.0193],
          [-0.0322,  0.0081,  0.0755]],

         [[ 0.0168, -0.0178,  0.0285],
          [-0.0895,  0.0684,  0.0994],
          [ 0.0867, -0.0153,  0.0643]],

         ...,

         [[-0.0225,  0.0354, -0.1230],
          [ 0.0202, -0.0812, -0.0300],
          [ 0.0014,  0.0672,  0.0586]],

         [[-0.0548, -0.0088,  0.0480],
          [ 0.0034, -0.0267,  0.0185],
          [-0.0696, -0.0571,  0.0204]],

         [[ 0.0052, -0.0047, -0.0720],
          [-0.1288,  0.0307, -0.0439],
          [ 0.0668,  0.1011, -0.0948]]],


        [[[-0.0277,  0.0123,  0.0015],
          [ 0.0182, -0.0754, -0.0441],
          [-0.0146, -0.0842,  0.0306]],

         [[ 0.0978, -0.0033, -0.0470],
          [-0.0298,  0.0350, -0.1158],
          [ 0.0294, -0.0805,  0.0182]],

         [[-0.0494,  0.1378,  0.0317],
          [ 0.0575, -0.0025, -0.0479],
          [-0.0007, -0.0009, -0.0235]],

         ...,

         [[ 0.0904,  0.0319,  0.0049],
          [ 0.0623,  0.0307,  0.0055],
          [-0.0518, -0.0565,  0.0009]],

         [[ 0.0115, -0.1168, -0.0042],
          [-0.0316, -0.0021,  0.0883],
          [-0.0161, -0.0025,  0.0663]],

         [[-0.0553, -0.0259,  0.0215],
          [-0.0152,  0.0106, -0.0692],
          [ 0.0481,  0.1050, -0.0147]]],


        [[[ 0.0357, -0.0125,  0.0170],
          [ 0.0611, -0.0561,  0.0714],
          [ 0.0010,  0.0162, -0.0830]],

         [[-0.0629,  0.0737, -0.0289],
          [-0.0203, -0.0420, -0.1093],
          [-0.0889, -0.1370, -0.0398]],

         [[-0.0323, -0.0492,  0.0762],
          [ 0.0008, -0.0098, -0.0211],
          [ 0.1357, -0.0293,  0.0151]],

         ...,

         [[ 0.0995, -0.0671,  0.0239],
          [ 0.0517,  0.0436, -0.0162],
          [-0.0620, -0.0693, -0.0487]],

         [[ 0.0779,  0.0486, -0.0194],
          [ 0.1366, -0.0608, -0.0777],
          [ 0.1721,  0.0305,  0.0496]],

         [[-0.0507,  0.0708, -0.0807],
          [ 0.0308,  0.1496, -0.0327],
          [-0.0419, -0.0313,  0.0682]]]], device='cuda:0')
module.context.res_layer1.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer1.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer1.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.conv2.weight Parameter containing:
tensor([[[[-1.1494e-01]],

         [[-9.1374e-02]],

         [[-2.5627e-02]],

         ...,

         [[ 4.2235e-02]],

         [[ 5.8876e-02]],

         [[-3.7909e-02]]],


        [[[-1.1430e-01]],

         [[-1.0809e-01]],

         [[ 7.4291e-02]],

         ...,

         [[ 6.9424e-02]],

         [[ 1.7056e-02]],

         [[-6.2000e-02]]],


        [[[ 7.2773e-02]],

         [[ 8.4177e-02]],

         [[ 6.8771e-02]],

         ...,

         [[-8.0018e-02]],

         [[ 6.7446e-02]],

         [[-4.1624e-02]]],


        ...,


        [[[-3.4700e-02]],

         [[ 7.0175e-02]],

         [[-1.3882e-03]],

         ...,

         [[ 5.6995e-02]],

         [[-8.6430e-02]],

         [[ 1.7532e-02]]],


        [[[-2.0859e-01]],

         [[-7.5088e-02]],

         [[-7.0303e-02]],

         ...,

         [[ 2.4202e-05]],

         [[-1.3912e-01]],

         [[-5.5693e-02]]],


        [[[-7.7179e-02]],

         [[ 4.3787e-02]],

         [[-2.2294e-02]],

         ...,

         [[ 8.7299e-02]],

         [[-1.1422e-02]],

         [[ 1.5458e-01]]]], device='cuda:0')
module.context.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv1.weight Parameter containing:
tensor([[[[-1.7491e-02, -3.6176e-02, -7.0103e-02],
          [ 1.9082e-02,  4.8911e-02,  2.5969e-02],
          [ 2.5821e-02, -1.4127e-02, -2.1803e-02]],

         [[-5.2636e-02, -7.0635e-03,  3.6563e-02],
          [-9.0482e-02,  4.2737e-03,  5.7792e-02],
          [-4.3980e-02,  1.9839e-03,  3.4903e-02]],

         [[ 1.4470e-02,  1.9721e-02, -4.2418e-02],
          [ 6.0124e-02,  6.3320e-02,  1.5851e-02],
          [-1.8874e-02,  2.1725e-02,  5.0941e-02]],

         ...,

         [[-3.6336e-02, -8.8541e-02,  2.1695e-02],
          [-4.3298e-03, -1.2624e-02, -2.3138e-02],
          [ 5.1782e-02, -1.7684e-02, -1.4292e-02]],

         [[ 1.5717e-02, -4.5845e-02, -4.6743e-02],
          [-4.4424e-02, -2.4831e-02,  5.4190e-03],
          [ 1.6624e-02,  2.8695e-02, -4.5018e-02]],

         [[-8.7930e-02, -6.0399e-02, -6.6953e-02],
          [ 1.6490e-03, -8.1978e-02,  2.1612e-02],
          [-1.2924e-02, -2.5305e-04,  3.7516e-02]]],


        [[[-9.7511e-02,  1.5823e-02, -2.0077e-02],
          [ 3.0938e-02,  5.8749e-02,  8.6928e-02],
          [ 6.8988e-02,  5.8080e-02,  1.6997e-02]],

         [[ 5.4711e-02, -7.8267e-02,  2.5612e-02],
          [ 1.5229e-02,  1.0200e-01,  2.4902e-03],
          [-1.8706e-02, -3.3451e-03, -7.3706e-02]],

         [[ 3.7052e-02, -4.0167e-02, -1.6657e-02],
          [ 3.3405e-02, -5.5552e-02, -4.5849e-03],
          [-6.2175e-02, -7.7157e-02, -1.0510e-02]],

         ...,

         [[ 7.3697e-02, -2.0049e-02, -9.9442e-02],
          [-5.9024e-02, -2.9275e-02, -3.0303e-03],
          [-4.2406e-03,  1.3099e-02,  4.3638e-02]],

         [[-2.4988e-02, -8.2120e-03, -7.8341e-02],
          [ 2.8255e-03, -1.5354e-02,  5.3730e-03],
          [ 3.8488e-02,  3.4712e-02, -2.3599e-02]],

         [[ 4.2668e-02, -3.1079e-02,  4.2820e-02],
          [-2.3889e-02,  5.8150e-02, -4.6045e-02],
          [ 5.2837e-02,  4.1946e-02,  7.7779e-03]]],


        [[[-2.2583e-02, -3.6123e-02, -3.0817e-02],
          [-7.5649e-02,  3.7140e-02, -4.8788e-02],
          [-1.1923e-01,  1.5827e-03, -7.2193e-02]],

         [[ 1.2750e-01, -9.6682e-02,  1.5275e-02],
          [-5.4067e-02,  2.9674e-02,  2.6518e-03],
          [-3.9244e-02, -3.5473e-03,  1.0144e-02]],

         [[-2.7131e-02,  2.9303e-02,  6.8981e-02],
          [ 1.0229e-02, -7.9644e-04, -4.0031e-03],
          [ 6.4612e-02,  2.3054e-03, -2.0998e-03]],

         ...,

         [[ 3.0531e-03, -3.4952e-02, -3.6517e-02],
          [-2.4490e-02,  6.4066e-02,  2.0961e-02],
          [ 1.4697e-02, -1.2099e-02,  1.9157e-04]],

         [[-1.7330e-03,  6.7142e-02, -3.6409e-02],
          [ 6.9292e-02, -2.2963e-02, -1.4539e-02],
          [ 1.5050e-02,  4.2117e-02, -6.0165e-02]],

         [[-3.9326e-02,  3.8211e-03,  2.3612e-02],
          [ 1.5026e-02,  6.1116e-02, -1.2316e-03],
          [-1.0584e-02, -5.2555e-02, -6.5656e-02]]],


        ...,


        [[[-9.4082e-03,  8.8716e-02, -6.2215e-02],
          [-5.9782e-02, -1.0963e-01,  1.6393e-02],
          [-4.1219e-02,  1.8501e-02, -3.7472e-02]],

         [[-5.6068e-02,  8.1668e-02, -1.6447e-01],
          [ 1.5563e-02,  3.0354e-03,  1.7307e-02],
          [-9.7358e-02,  2.0618e-02,  8.8001e-02]],

         [[-3.4110e-02, -1.6612e-02, -4.0021e-02],
          [-2.2412e-02,  4.5772e-02, -7.8058e-03],
          [-2.1038e-04, -1.4856e-02,  2.8687e-02]],

         ...,

         [[-3.2173e-02, -5.0386e-02,  6.5306e-02],
          [ 2.3399e-02, -1.0088e-02, -2.8945e-02],
          [-4.0193e-02, -5.3729e-04,  3.6816e-02]],

         [[ 2.6169e-02, -3.5186e-02, -1.1758e-02],
          [-2.3233e-02,  8.6450e-02, -5.6785e-02],
          [-4.0444e-02,  3.0893e-03,  1.4794e-02]],

         [[-2.3906e-02, -3.9223e-02,  3.4125e-02],
          [ 5.3036e-04, -3.4338e-02, -4.2410e-02],
          [ 3.1509e-02,  7.2525e-02, -1.2538e-02]]],


        [[[-4.0609e-02,  5.7526e-02, -5.8915e-02],
          [ 3.5351e-02,  6.0844e-03, -2.1723e-02],
          [ 6.3303e-02,  6.7528e-03, -2.0387e-02]],

         [[-1.0868e-02, -6.0612e-02,  9.7040e-02],
          [ 2.4357e-02, -3.5155e-02,  4.5767e-02],
          [ 3.4483e-02, -3.8387e-02,  2.0541e-02]],

         [[ 6.4076e-03,  1.1726e-02, -4.8666e-02],
          [-6.2694e-02, -3.5870e-02,  1.9939e-03],
          [-5.3922e-02,  7.7787e-02, -6.8075e-02]],

         ...,

         [[ 4.5425e-03, -3.7578e-02,  1.3608e-02],
          [-1.6397e-02,  4.2642e-03, -2.8589e-02],
          [-2.4235e-02, -1.1914e-02,  4.6868e-02]],

         [[ 4.1811e-02,  1.2313e-02, -1.6061e-02],
          [ 1.4327e-02, -3.1004e-02, -4.8310e-02],
          [ 9.3557e-02,  2.9024e-02, -2.5921e-02]],

         [[-7.5538e-03,  5.1261e-02,  1.3294e-02],
          [ 4.1842e-02, -2.0247e-02,  4.5430e-02],
          [ 9.0005e-02, -1.8956e-02,  6.1109e-02]]],


        [[[ 1.1083e-04,  8.4674e-03,  1.7775e-02],
          [-4.8364e-02,  2.9790e-03,  8.0223e-02],
          [-1.6692e-03, -4.8051e-02, -1.6997e-02]],

         [[-6.9955e-03,  1.8098e-02, -7.7811e-02],
          [-7.2703e-02,  4.9685e-02, -5.2704e-03],
          [-7.3023e-02, -1.9927e-02,  5.5970e-02]],

         [[-4.4834e-03,  5.5636e-02, -9.8853e-03],
          [ 2.1950e-02,  4.7723e-02, -1.1253e-02],
          [-3.5273e-02,  8.3061e-02,  8.3422e-02]],

         ...,

         [[ 4.8036e-03, -4.1514e-02,  8.1764e-02],
          [-7.1008e-02, -4.2672e-02, -2.9506e-03],
          [-1.8338e-02,  1.6334e-02,  2.0560e-02]],

         [[ 5.3530e-03, -3.4905e-02, -1.0927e-02],
          [ 2.7974e-02, -4.2095e-02, -2.6797e-02],
          [ 2.5382e-02, -7.7556e-02, -7.3831e-02]],

         [[ 4.7870e-02,  5.1471e-02, -3.6797e-02],
          [-5.0021e-02, -2.7946e-02, -3.1837e-02],
          [-3.6123e-02,  3.1197e-02,  3.9826e-02]]]], device='cuda:0')
module.context.res_layer2.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.conv2.weight Parameter containing:
tensor([[[[ 0.0492,  0.0150, -0.0363],
          [ 0.0401,  0.0165,  0.0018],
          [-0.0189,  0.0351, -0.0741]],

         [[-0.0326, -0.0177,  0.0247],
          [ 0.0119, -0.0106,  0.1051],
          [-0.0288,  0.0353, -0.0392]],

         [[ 0.0619, -0.0892,  0.1052],
          [ 0.0415,  0.0653, -0.0199],
          [ 0.0162,  0.0029,  0.0196]],

         ...,

         [[ 0.0714,  0.0224, -0.0106],
          [ 0.0177, -0.0476, -0.0453],
          [ 0.0293,  0.0084, -0.0105]],

         [[-0.0148, -0.0378,  0.0038],
          [ 0.0185, -0.0552, -0.0863],
          [ 0.0406, -0.0644, -0.0368]],

         [[ 0.0090,  0.0475, -0.0691],
          [ 0.0014,  0.0429, -0.0647],
          [-0.0171, -0.0696, -0.0248]]],


        [[[ 0.0635, -0.0735,  0.0472],
          [-0.0002,  0.0725,  0.0061],
          [-0.0686,  0.0776,  0.0250]],

         [[-0.0476,  0.0076,  0.0480],
          [ 0.0111, -0.0083,  0.0262],
          [-0.0553, -0.0225, -0.0127]],

         [[-0.0523, -0.0443,  0.1354],
          [ 0.0748,  0.0501,  0.0033],
          [ 0.0138, -0.0946,  0.1036]],

         ...,

         [[-0.0164, -0.0906, -0.0185],
          [-0.0061, -0.0789,  0.0142],
          [ 0.0901,  0.0231,  0.0274]],

         [[ 0.0054, -0.0047,  0.0848],
          [ 0.0271,  0.0119,  0.0072],
          [-0.0298, -0.0276,  0.0410]],

         [[-0.0439,  0.0593,  0.0018],
          [-0.0300, -0.0194, -0.0677],
          [ 0.0534,  0.0725,  0.0371]]],


        [[[ 0.0677, -0.1002, -0.0711],
          [ 0.1273, -0.0277,  0.0216],
          [-0.0249,  0.0208,  0.0317]],

         [[ 0.0158,  0.1029, -0.0445],
          [-0.0902,  0.0315,  0.0681],
          [-0.0281, -0.0482, -0.0294]],

         [[-0.0921, -0.0071, -0.0072],
          [-0.0170,  0.0582,  0.0047],
          [ 0.0616, -0.0631,  0.0132]],

         ...,

         [[ 0.0353,  0.0154, -0.0124],
          [-0.0581,  0.0769, -0.0198],
          [-0.0489, -0.0139, -0.0333]],

         [[-0.0410,  0.0436, -0.1005],
          [-0.0336, -0.1205, -0.0027],
          [ 0.0757, -0.0426, -0.0576]],

         [[ 0.1020,  0.0358,  0.0038],
          [ 0.0051, -0.0055,  0.0170],
          [ 0.0079,  0.0144,  0.0060]]],


        ...,


        [[[-0.0772,  0.0022,  0.0008],
          [-0.0067,  0.0229,  0.0217],
          [-0.0541, -0.0758, -0.0855]],

         [[-0.0377,  0.0074,  0.1268],
          [-0.0602,  0.0146,  0.0106],
          [-0.0074, -0.0261, -0.0353]],

         [[ 0.0560,  0.0522,  0.0448],
          [ 0.0165,  0.0359, -0.0078],
          [ 0.0587,  0.0302,  0.0564]],

         ...,

         [[ 0.0504,  0.0285,  0.0240],
          [-0.0009, -0.0089,  0.0528],
          [ 0.0347,  0.1087, -0.0204]],

         [[ 0.1166, -0.1140, -0.0981],
          [-0.0457, -0.0366, -0.0083],
          [ 0.0387, -0.0848,  0.0354]],

         [[ 0.0286, -0.0346,  0.0633],
          [-0.0299,  0.0134,  0.0165],
          [-0.0180,  0.0137,  0.0058]]],


        [[[ 0.0092,  0.0791, -0.0453],
          [-0.0775,  0.0558, -0.0311],
          [ 0.0186,  0.0503, -0.0295]],

         [[-0.0107,  0.0244, -0.0158],
          [ 0.1283, -0.0454,  0.0066],
          [ 0.0543, -0.0518,  0.0860]],

         [[-0.0046, -0.0124,  0.0338],
          [-0.0392,  0.0440,  0.0394],
          [ 0.0008, -0.0050,  0.0141]],

         ...,

         [[ 0.0143, -0.0093,  0.0320],
          [ 0.0254, -0.0661, -0.0558],
          [ 0.0425,  0.1250, -0.1106]],

         [[-0.0307, -0.0132,  0.0676],
          [-0.0950,  0.0200, -0.0606],
          [-0.0092,  0.0299, -0.0011]],

         [[ 0.0234, -0.0287, -0.0150],
          [-0.0232,  0.0350, -0.0365],
          [ 0.0288, -0.0232, -0.0605]]],


        [[[-0.0100,  0.1029,  0.0159],
          [ 0.0088,  0.0993,  0.0221],
          [ 0.0276,  0.0890,  0.0387]],

         [[ 0.0213,  0.0108,  0.0152],
          [ 0.0227,  0.0426,  0.0412],
          [ 0.0123, -0.0232,  0.0624]],

         [[-0.0431, -0.0821,  0.0259],
          [-0.0064, -0.0489, -0.0601],
          [-0.0574, -0.0504,  0.0729]],

         ...,

         [[ 0.0373, -0.0015, -0.0289],
          [ 0.0640,  0.0011, -0.0365],
          [-0.0302, -0.0352,  0.0027]],

         [[ 0.0314, -0.0757, -0.0553],
          [-0.0543,  0.0428,  0.0292],
          [-0.0953, -0.0179,  0.0308]],

         [[ 0.1335, -0.0762,  0.0223],
          [-0.0484, -0.0267,  0.0032],
          [-0.0607, -0.0329,  0.0055]]]], device='cuda:0')
module.context.res_layer2.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.0.weight Parameter containing:
tensor([[[[-0.0872]],

         [[ 0.0539]],

         [[-0.0414]],

         ...,

         [[-0.0297]],

         [[-0.2174]],

         [[-0.0576]]],


        [[[ 0.1000]],

         [[ 0.1932]],

         [[-0.1010]],

         ...,

         [[ 0.1157]],

         [[-0.2482]],

         [[ 0.1032]]],


        [[[-0.0299]],

         [[ 0.1703]],

         [[-0.0088]],

         ...,

         [[-0.0451]],

         [[ 0.0491]],

         [[ 0.1079]]],


        ...,


        [[[ 0.2277]],

         [[-0.2214]],

         [[ 0.1220]],

         ...,

         [[-0.2742]],

         [[ 0.0091]],

         [[-0.0475]]],


        [[[-0.1984]],

         [[-0.3231]],

         [[-0.1824]],

         ...,

         [[-0.4191]],

         [[ 0.0331]],

         [[-0.0707]]],


        [[[ 0.0504]],

         [[-0.3240]],

         [[ 0.2205]],

         ...,

         [[ 0.2930]],

         [[-0.3590]],

         [[ 0.2795]]]], device='cuda:0')
module.context.res_layer2.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv1.weight Parameter containing:
tensor([[[[-0.0330, -0.0182,  0.0475],
          [ 0.0018, -0.0571, -0.0621],
          [ 0.0150, -0.0358,  0.0462]],

         [[-0.0870, -0.0328,  0.0264],
          [-0.0586, -0.0132, -0.0594],
          [ 0.0158, -0.0698, -0.0051]],

         [[ 0.0036,  0.0397, -0.0695],
          [-0.0488, -0.0032,  0.1192],
          [-0.0359, -0.0141,  0.0358]],

         ...,

         [[ 0.0397,  0.0249, -0.0154],
          [-0.0327,  0.0474,  0.0012],
          [ 0.0062, -0.0556, -0.0220]],

         [[ 0.0225,  0.0531,  0.0395],
          [ 0.0654, -0.0069, -0.0112],
          [-0.0002,  0.0526,  0.0918]],

         [[-0.0305, -0.0049,  0.0671],
          [-0.1061, -0.0303, -0.0222],
          [ 0.0386,  0.0028, -0.0032]]],


        [[[-0.0138,  0.0043,  0.0295],
          [-0.0139, -0.0360, -0.0177],
          [ 0.0173,  0.0224,  0.0132]],

         [[-0.0050, -0.0580,  0.0407],
          [ 0.0504, -0.0732,  0.0428],
          [-0.0294, -0.0378,  0.0204]],

         [[-0.0042,  0.0033, -0.0595],
          [ 0.0376,  0.0752, -0.0285],
          [ 0.0299,  0.0552, -0.0808]],

         ...,

         [[ 0.0589,  0.0680, -0.0086],
          [-0.0097,  0.0105,  0.0030],
          [ 0.0315,  0.0111, -0.0069]],

         [[ 0.0366, -0.0366, -0.0621],
          [-0.0186,  0.0410, -0.0812],
          [ 0.0390, -0.0357, -0.0550]],

         [[-0.0165, -0.0301, -0.0649],
          [-0.0147, -0.0232,  0.0274],
          [ 0.0081,  0.0382,  0.0029]]],


        [[[ 0.0986,  0.0249, -0.0134],
          [-0.0583, -0.0179,  0.0201],
          [ 0.0204,  0.0364, -0.0180]],

         [[ 0.0451, -0.0503,  0.0359],
          [-0.0200, -0.0286,  0.0074],
          [-0.0040, -0.1041, -0.0417]],

         [[-0.0134, -0.0685, -0.0216],
          [-0.0308,  0.0077, -0.0306],
          [ 0.0413,  0.0098, -0.0381]],

         ...,

         [[ 0.1274,  0.0029, -0.0144],
          [-0.0773,  0.0429, -0.0394],
          [-0.0593, -0.0139, -0.0611]],

         [[ 0.0376, -0.0635, -0.0214],
          [ 0.0003,  0.0145,  0.0575],
          [-0.0338,  0.0054, -0.0246]],

         [[ 0.0002,  0.0073,  0.0236],
          [ 0.0253, -0.0645, -0.0683],
          [-0.0224,  0.0506, -0.1513]]],


        ...,


        [[[-0.0596, -0.0646, -0.0536],
          [-0.0964,  0.0292,  0.0116],
          [-0.0216, -0.0514,  0.0148]],

         [[ 0.0665, -0.0228, -0.0080],
          [ 0.0011,  0.1073,  0.0197],
          [-0.0470, -0.0608,  0.0702]],

         [[-0.0258,  0.0525, -0.0557],
          [-0.0241,  0.0242, -0.0185],
          [ 0.0140,  0.0009, -0.0365]],

         ...,

         [[-0.0114, -0.0106,  0.0877],
          [-0.0207, -0.0106,  0.0217],
          [-0.0161, -0.0391,  0.0668]],

         [[ 0.0025, -0.0218, -0.0192],
          [ 0.0575,  0.0571, -0.0069],
          [-0.0202,  0.0644,  0.0416]],

         [[ 0.0031,  0.0472,  0.0831],
          [ 0.0426,  0.0069, -0.0632],
          [-0.0416,  0.0645,  0.0390]]],


        [[[ 0.0027,  0.0369, -0.0116],
          [-0.0015, -0.0270,  0.0564],
          [-0.0469, -0.0745, -0.0617]],

         [[ 0.0159, -0.0784,  0.1203],
          [-0.0403, -0.0506, -0.0166],
          [ 0.0414,  0.0331, -0.0741]],

         [[-0.1035, -0.0399,  0.0520],
          [-0.0215, -0.0341,  0.0175],
          [ 0.0051,  0.0562,  0.0127]],

         ...,

         [[-0.0325, -0.1243,  0.0123],
          [ 0.0460, -0.0201,  0.0011],
          [-0.0306,  0.0835, -0.0117]],

         [[-0.0080, -0.0546,  0.0127],
          [-0.0363, -0.0106, -0.0432],
          [ 0.0589,  0.0297,  0.0031]],

         [[-0.0592, -0.0358, -0.0123],
          [-0.0385, -0.0089,  0.0135],
          [-0.0195, -0.0710, -0.0163]]],


        [[[-0.0083,  0.0019, -0.0404],
          [ 0.1159, -0.0220,  0.0477],
          [ 0.0109,  0.0054,  0.0722]],

         [[-0.0187, -0.0660,  0.0922],
          [-0.0196,  0.0068, -0.0208],
          [ 0.0596,  0.0187, -0.0214]],

         [[ 0.0140,  0.0147,  0.0113],
          [ 0.0253,  0.1115, -0.0248],
          [-0.0025,  0.0491, -0.0155]],

         ...,

         [[ 0.0284,  0.0175, -0.0346],
          [ 0.0481,  0.0710,  0.0289],
          [ 0.0016,  0.0128, -0.1008]],

         [[ 0.0391, -0.0333,  0.0039],
          [-0.0347, -0.0191,  0.0651],
          [-0.0599,  0.0834,  0.0339]],

         [[-0.0240,  0.0332,  0.0459],
          [-0.0257,  0.0388,  0.0027],
          [-0.0496, -0.0912,  0.0311]]]], device='cuda:0')
module.context.res_layer2.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.conv2.weight Parameter containing:
tensor([[[[ 5.3378e-02,  3.6594e-02,  1.0578e-01],
          [-4.5809e-02, -1.5337e-03, -7.6281e-04],
          [ 4.8323e-02,  3.3338e-02, -3.2865e-02]],

         [[ 1.9102e-03,  7.2446e-02,  5.1687e-02],
          [-1.5324e-02,  4.4859e-03, -7.7789e-02],
          [ 8.6917e-02, -9.5053e-03,  5.5689e-03]],

         [[-7.2964e-02, -2.7075e-02,  8.2378e-02],
          [ 4.8761e-02, -2.3407e-02, -6.8002e-02],
          [ 7.8457e-03, -3.3616e-02,  1.8175e-02]],

         ...,

         [[-3.1375e-03, -3.1380e-02, -4.0957e-02],
          [ 2.7054e-02,  4.5027e-02,  4.9140e-02],
          [ 9.6668e-02, -6.8738e-02,  2.0750e-02]],

         [[ 2.3429e-02, -4.4295e-02,  1.1453e-02],
          [ 3.6836e-02,  4.1657e-02,  3.2622e-02],
          [-4.7391e-02, -4.8766e-02, -1.4039e-03]],

         [[ 2.9353e-02, -2.5359e-02,  5.0565e-02],
          [-1.5952e-02,  4.7668e-02,  2.0866e-02],
          [ 3.5658e-02, -2.9152e-02,  1.8147e-02]]],


        [[[ 2.6156e-02, -5.3198e-03, -1.0216e-01],
          [-7.4985e-02,  4.8964e-02, -8.2216e-03],
          [ 7.7290e-02, -8.3031e-03, -1.0001e-02]],

         [[-6.0856e-03,  1.8532e-02, -9.3431e-03],
          [ 2.6200e-02, -4.6017e-03, -8.7148e-03],
          [ 8.8665e-02, -1.0385e-02, -4.7717e-02]],

         [[ 4.0338e-02, -1.4423e-02, -4.4559e-02],
          [-3.9419e-02, -4.3700e-02,  3.2306e-02],
          [-8.1923e-02, -1.8580e-02, -4.2263e-02]],

         ...,

         [[ 1.5649e-02, -4.7395e-02, -7.3272e-02],
          [-5.7509e-02,  2.5335e-02,  1.2647e-02],
          [ 1.1403e-03,  2.3119e-02,  9.0019e-02]],

         [[ 5.9959e-02,  1.9060e-02, -4.3879e-02],
          [-3.7119e-02,  2.1375e-02, -3.0504e-03],
          [ 3.5724e-02, -3.8469e-03, -3.6458e-02]],

         [[-2.0540e-02,  2.0603e-03, -6.3093e-02],
          [-2.3064e-02,  6.3818e-02,  3.4303e-02],
          [-1.5753e-02,  3.2626e-02,  2.8620e-02]]],


        [[[ 4.3026e-02, -7.4524e-02,  5.4115e-02],
          [-2.2319e-02,  1.2184e-02,  6.6035e-02],
          [ 5.4353e-03, -7.3989e-02, -1.5398e-02]],

         [[ 1.8083e-02,  3.5583e-02,  4.1111e-02],
          [ 2.3825e-02, -1.0698e-01, -7.7927e-02],
          [-4.7290e-02, -4.7636e-02, -1.0366e-01]],

         [[-6.8401e-03,  6.8100e-03,  6.6354e-02],
          [ 6.7276e-02, -7.2873e-02, -3.0925e-02],
          [-1.0689e-02,  7.4839e-03, -4.9892e-03]],

         ...,

         [[-3.1909e-02,  1.5068e-02,  6.0297e-02],
          [-4.5898e-02, -1.0489e-02,  1.2033e-01],
          [ 6.1676e-02, -1.6981e-02, -3.8178e-02]],

         [[ 1.0092e-02, -1.4090e-02,  4.7555e-03],
          [ 7.9633e-02, -1.2108e-02,  3.1447e-02],
          [-6.8497e-02, -4.7416e-02,  6.6482e-03]],

         [[ 8.3174e-02,  4.6719e-02,  3.2216e-02],
          [ 5.4251e-02, -4.1207e-02,  3.7628e-02],
          [ 4.7995e-02,  8.0228e-02, -1.6866e-02]]],


        ...,


        [[[-4.9218e-02, -1.9959e-02, -5.6978e-02],
          [ 5.2152e-02, -4.0210e-02, -4.0743e-02],
          [ 3.7115e-02,  1.2062e-01, -3.5174e-02]],

         [[ 8.0710e-02, -3.9464e-02,  1.1942e-02],
          [-1.5139e-02,  8.3764e-03,  6.3085e-02],
          [ 1.3860e-02,  6.6308e-02, -4.2671e-03]],

         [[ 5.8441e-02,  9.9712e-02,  1.9552e-03],
          [ 2.1174e-02,  5.3555e-02, -5.9109e-05],
          [ 2.5500e-02,  9.2566e-03,  2.9713e-03]],

         ...,

         [[-1.1298e-01, -6.1356e-02, -2.2940e-02],
          [-5.7033e-02,  1.8197e-02,  2.8657e-02],
          [ 5.1578e-02, -2.1764e-02,  9.2637e-02]],

         [[ 7.0229e-03,  4.7224e-02, -2.1595e-02],
          [-7.9576e-03, -3.7781e-02,  4.7693e-02],
          [-4.9205e-02,  3.0428e-02,  2.6246e-02]],

         [[ 6.3076e-03,  2.0929e-02, -5.9281e-02],
          [-3.5764e-02,  5.6184e-02,  3.5161e-02],
          [-1.5607e-02, -1.3208e-02,  1.9492e-02]]],


        [[[ 4.3265e-02, -1.1297e-01, -1.4125e-02],
          [-1.8897e-02,  1.2109e-02, -4.2945e-02],
          [-1.2147e-02,  2.4493e-02,  4.4544e-02]],

         [[-1.0185e-02,  2.0074e-02,  3.7755e-04],
          [-2.4553e-02, -1.7184e-02, -3.4890e-02],
          [-3.8753e-02, -6.4553e-02,  3.9341e-03]],

         [[-2.0859e-02,  5.5120e-02,  3.1130e-02],
          [ 4.4404e-02,  4.8547e-02,  7.4038e-02],
          [ 2.8895e-02, -1.0649e-02,  2.3041e-02]],

         ...,

         [[-8.2330e-04, -4.3151e-02,  9.3832e-02],
          [ 4.1105e-02,  2.0120e-02,  1.8203e-02],
          [ 7.9277e-02, -8.9486e-03, -2.0381e-02]],

         [[ 4.8813e-04,  9.0648e-02,  4.5766e-02],
          [ 3.1980e-02, -4.0618e-02,  6.4923e-02],
          [-3.3363e-02,  6.7357e-02, -6.4419e-02]],

         [[ 1.7227e-03, -1.9643e-02,  6.7274e-02],
          [ 2.9015e-04,  6.3373e-02,  7.9576e-03],
          [ 8.8325e-02, -1.0382e-02,  3.0439e-03]]],


        [[[-3.4660e-02, -2.1174e-02, -1.8557e-02],
          [-1.8970e-02,  7.4754e-02, -3.4034e-04],
          [ 6.3694e-02, -5.5436e-02, -1.9425e-03]],

         [[ 7.5541e-02, -1.7212e-02,  4.8433e-02],
          [-6.3416e-02,  4.5346e-02,  5.3688e-02],
          [-9.6752e-03,  1.2831e-02, -1.0176e-01]],

         [[-3.4019e-03, -8.9371e-03, -2.5078e-02],
          [ 4.5427e-02, -9.7398e-04,  2.7219e-02],
          [ 1.8722e-02, -3.3525e-02,  5.7820e-04]],

         ...,

         [[-5.6344e-02,  7.2968e-02, -2.1384e-02],
          [-4.9551e-02, -1.6681e-02, -1.0940e-01],
          [-2.8893e-02, -7.8501e-02, -1.0563e-01]],

         [[ 9.0845e-02, -5.6410e-02, -2.2436e-02],
          [ 4.9399e-02,  1.7829e-02,  3.1734e-02],
          [ 3.5738e-02,  2.5479e-02, -6.9422e-02]],

         [[ 4.2682e-03,  3.1070e-02, -2.2542e-02],
          [ 6.6402e-03,  5.1518e-02, -9.9769e-03],
          [-6.6361e-02,  5.1777e-03,  3.5504e-03]]]], device='cuda:0')
module.context.res_layer2.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer2.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1.], device='cuda:0')
module.context.res_layer2.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0')
module.context.res_layer3.0.conv1.weight Parameter containing:
tensor([[[[ 6.6791e-02,  2.8217e-02, -1.0389e-01],
          [ 6.7220e-03, -3.3201e-02,  4.9256e-02],
          [ 4.4680e-02, -3.0311e-02,  2.2593e-02]],

         [[-4.9979e-03,  3.5520e-02,  2.8966e-02],
          [ 6.8621e-03, -1.6977e-02, -1.8804e-02],
          [-1.6403e-02, -6.0745e-02,  4.4736e-02]],

         [[ 3.2616e-02,  3.0848e-02, -4.9103e-03],
          [-9.3791e-03, -3.4479e-02,  4.1388e-02],
          [ 9.9940e-03,  7.0300e-04,  7.6346e-03]],

         ...,

         [[ 4.6479e-02,  2.6705e-02, -8.6181e-03],
          [ 1.2179e-02,  7.5476e-02, -5.7552e-03],
          [ 3.1986e-02,  3.1177e-02, -7.3678e-02]],

         [[-1.5688e-02,  3.7915e-02, -2.3844e-02],
          [ 2.4151e-02, -1.0249e-02,  2.5957e-02],
          [ 1.2104e-02, -9.3972e-03, -9.9787e-03]],

         [[ 7.6396e-02, -1.4162e-02, -5.0631e-02],
          [-2.3627e-02,  9.9685e-03,  2.7232e-03],
          [ 3.5867e-02,  8.5116e-03, -8.3352e-02]]],


        [[[-2.0967e-02, -1.3254e-02,  1.1452e-01],
          [ 2.9708e-02, -1.4532e-02,  2.3953e-02],
          [-5.6592e-02,  1.5761e-02, -3.2258e-02]],

         [[ 4.4591e-02,  3.7766e-02, -4.1130e-02],
          [ 5.5378e-02,  4.3876e-02,  2.6150e-02],
          [-2.2490e-02,  1.8531e-03, -7.2531e-03]],

         [[ 1.4000e-02,  2.3110e-02, -5.4958e-02],
          [ 2.6653e-02, -1.8483e-02,  3.1047e-02],
          [-4.0563e-02, -4.7399e-02,  8.0963e-02]],

         ...,

         [[ 3.6367e-02, -8.7817e-03, -3.8194e-02],
          [ 1.6720e-02,  7.0035e-02,  6.9351e-02],
          [-5.5258e-03, -1.8036e-02, -4.2049e-02]],

         [[ 1.6301e-02,  4.2046e-02, -1.0397e-02],
          [-1.0616e-01, -2.6333e-02,  3.1471e-02],
          [-3.0940e-02,  5.9133e-02,  2.4425e-02]],

         [[-7.4792e-03,  2.0087e-02,  4.5813e-02],
          [-1.2037e-02, -9.8327e-02, -2.0048e-03],
          [-6.7410e-03,  1.7296e-02,  5.1761e-02]]],


        [[[ 6.8140e-02,  1.1462e-02, -3.1381e-02],
          [ 2.9863e-02, -4.9411e-02,  4.9303e-03],
          [-1.0670e-02, -9.4710e-03,  1.6868e-05]],

         [[ 1.2066e-02, -5.3335e-02,  1.5122e-02],
          [ 9.7133e-02, -2.0419e-02,  5.0623e-02],
          [ 2.0763e-02,  1.6251e-02, -9.9804e-02]],

         [[ 2.8716e-02, -3.1835e-03,  1.1612e-02],
          [-2.1647e-02, -3.8736e-02, -8.5463e-02],
          [-2.0577e-02, -3.0150e-02,  7.5603e-03]],

         ...,

         [[-5.8998e-03,  1.5140e-02,  7.6295e-05],
          [ 3.3768e-02,  2.8318e-02,  2.6036e-02],
          [ 2.0562e-02,  6.6111e-02,  3.2024e-02]],

         [[-3.4666e-02, -7.0356e-03,  8.8197e-02],
          [-9.7051e-03, -5.5541e-02,  4.6533e-02],
          [ 6.5978e-02, -6.1670e-02,  3.1274e-03]],

         [[ 2.9752e-02, -9.6092e-03,  2.4694e-02],
          [ 5.9233e-02, -6.3849e-04, -5.0957e-02],
          [-2.1026e-02, -1.6532e-02, -3.9234e-02]]],


        ...,


        [[[-9.8552e-03,  8.4185e-02,  3.2671e-02],
          [ 2.9706e-02,  7.5960e-03,  8.0546e-03],
          [ 1.1280e-02, -1.5999e-02,  8.6851e-03]],

         [[-1.9174e-02,  1.2778e-02, -1.6371e-02],
          [ 1.9713e-02, -1.0103e-02,  3.2361e-02],
          [-2.5350e-02,  4.8756e-02, -6.1504e-02]],

         [[ 3.7044e-02, -2.9050e-02,  2.2204e-02],
          [ 2.7069e-02,  2.1385e-02, -3.1458e-02],
          [-6.6543e-03,  4.4349e-02, -7.8384e-02]],

         ...,

         [[ 6.8293e-02,  3.5187e-02,  2.2877e-02],
          [-6.0500e-02, -2.3926e-02,  3.5211e-02],
          [ 4.7699e-03,  3.1473e-02, -3.4787e-02]],

         [[ 2.4256e-02,  1.0267e-02, -3.7766e-02],
          [-1.7991e-03, -3.6446e-02,  4.3763e-02],
          [ 3.3942e-02,  7.3993e-03,  3.6143e-02]],

         [[ 3.6927e-02, -1.6863e-02, -4.0040e-02],
          [ 6.8947e-02,  8.0439e-02,  2.7466e-02],
          [ 3.8167e-02,  8.3124e-02, -9.2170e-03]]],


        [[[ 3.8198e-02, -2.1449e-02, -1.0723e-02],
          [ 8.1429e-02, -3.3408e-02,  4.6396e-02],
          [-2.9107e-02,  2.4747e-02, -4.5520e-02]],

         [[-2.9528e-02, -3.7450e-02, -1.1500e-02],
          [ 1.8706e-03, -2.3354e-03, -8.0475e-02],
          [ 5.2470e-02, -2.9609e-02,  1.9438e-02]],

         [[ 4.2871e-02,  5.8279e-02, -2.8660e-03],
          [ 2.5434e-02, -8.7845e-02, -2.4977e-02],
          [ 8.6485e-03,  2.5513e-02, -2.6579e-02]],

         ...,

         [[-1.2879e-02,  1.1406e-02,  1.8508e-02],
          [-1.6159e-02, -4.5201e-02, -4.5262e-02],
          [-1.0836e-02, -4.2892e-02,  6.8291e-03]],

         [[-4.1710e-02, -6.5678e-02,  8.6271e-02],
          [ 2.4527e-02,  3.7609e-03,  4.3021e-02],
          [-9.2381e-03,  1.1989e-02,  1.0591e-01]],

         [[ 2.0547e-02, -2.6678e-02,  8.4535e-02],
          [ 4.5957e-03, -6.0774e-02,  5.4236e-02],
          [ 1.7178e-02,  2.6233e-02, -6.1914e-02]]],


        [[[ 4.9318e-02,  6.4146e-02,  5.9197e-02],
          [-6.1844e-02, -3.0025e-02, -5.4924e-02],
          [ 6.4269e-03,  4.7482e-02, -8.5480e-02]],

         [[ 6.3588e-02,  3.5643e-02,  6.8191e-03],
          [ 3.1586e-02, -3.0243e-02, -9.3366e-03],
          [-2.5767e-02,  1.3043e-02,  1.5989e-02]],

         [[-1.1420e-03,  4.2200e-02,  7.5163e-03],
          [ 1.4995e-02, -1.1491e-02, -2.0746e-02],
          [ 5.9960e-03, -5.8342e-02,  4.1358e-02]],

         ...,

         [[-8.9467e-03, -7.7964e-02,  2.7282e-03],
          [-2.0074e-02, -2.5077e-02, -2.7115e-02],
          [ 4.1763e-02, -1.3294e-02, -1.0258e-02]],

         [[ 1.6893e-02,  6.6689e-02,  1.5778e-02],
          [ 1.6062e-02, -2.0974e-02,  6.7332e-02],
          [ 2.5402e-02,  3.0463e-02, -5.3289e-02]],

         [[ 1.5542e-02, -4.7735e-02, -8.3295e-03],
          [-2.7947e-02, -2.5136e-02, -6.8608e-02],
          [ 3.1240e-03,  9.4655e-03, -2.4388e-03]]]], device='cuda:0')
module.context.res_layer3.0.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.conv2.weight Parameter containing:
tensor([[[[ 0.0629, -0.0241,  0.0433],
          [-0.0104, -0.0145, -0.0201],
          [-0.0433,  0.0405,  0.0002]],

         [[-0.0383, -0.0465, -0.0257],
          [-0.0129, -0.0445, -0.0600],
          [ 0.0531, -0.0144,  0.0424]],

         [[-0.0043, -0.0850,  0.0533],
          [ 0.0238, -0.0404, -0.0500],
          [ 0.0126, -0.0274,  0.0049]],

         ...,

         [[-0.0175,  0.0160, -0.0358],
          [-0.0216,  0.0105, -0.0688],
          [ 0.0102,  0.0128,  0.0478]],

         [[-0.0647,  0.0314, -0.0438],
          [ 0.0161,  0.0214,  0.0164],
          [-0.0505,  0.0373,  0.0798]],

         [[-0.0489,  0.0264, -0.0206],
          [ 0.0803, -0.0031, -0.0054],
          [ 0.0208, -0.0002,  0.0276]]],


        [[[ 0.0420,  0.0634, -0.0360],
          [ 0.0705,  0.0031,  0.0308],
          [ 0.0208,  0.0403, -0.0777]],

         [[ 0.0239,  0.0273, -0.0389],
          [ 0.0561,  0.0479, -0.0395],
          [ 0.0468,  0.0122, -0.0336]],

         [[-0.0434,  0.0156, -0.0298],
          [-0.0210,  0.0319, -0.0500],
          [ 0.0503, -0.0126,  0.0294]],

         ...,

         [[-0.0546,  0.0235,  0.0148],
          [-0.0640,  0.0336,  0.0081],
          [-0.0123, -0.0146,  0.0664]],

         [[ 0.0024, -0.0755,  0.0499],
          [-0.0807, -0.0020,  0.0470],
          [ 0.0451, -0.0021,  0.0119]],

         [[ 0.0476, -0.0332,  0.0606],
          [ 0.0451,  0.0370,  0.0368],
          [ 0.0398, -0.0584,  0.0093]]],


        [[[ 0.0362,  0.0189, -0.0223],
          [-0.0488,  0.0008,  0.0244],
          [-0.0111,  0.0618, -0.0014]],

         [[ 0.0579,  0.0027, -0.1232],
          [-0.0550,  0.0447,  0.0267],
          [-0.0163, -0.0862,  0.0421]],

         [[ 0.0247,  0.0093, -0.0118],
          [-0.0355, -0.0072,  0.0392],
          [ 0.0175, -0.0305, -0.0140]],

         ...,

         [[ 0.0128, -0.0201,  0.0244],
          [-0.0223,  0.0722,  0.0954],
          [ 0.0358, -0.0184,  0.0878]],

         [[-0.0094,  0.0186, -0.0383],
          [-0.0398,  0.0115,  0.0015],
          [-0.0914, -0.0106,  0.0733]],

         [[ 0.0442, -0.0353,  0.0051],
          [ 0.0110, -0.0426, -0.0180],
          [-0.0535, -0.0585, -0.0135]]],


        ...,


        [[[ 0.0206,  0.0032,  0.0392],
          [ 0.0726, -0.0276, -0.0372],
          [ 0.0303,  0.0083,  0.0457]],

         [[-0.0287, -0.0234, -0.0160],
          [ 0.0416,  0.0003, -0.0406],
          [-0.0394, -0.0494, -0.0607]],

         [[ 0.0291,  0.0217,  0.1128],
          [-0.0472,  0.0056,  0.0097],
          [ 0.0518, -0.0002, -0.0423]],

         ...,

         [[-0.0537,  0.0148, -0.0716],
          [ 0.0823,  0.0834,  0.0446],
          [ 0.0006, -0.0491,  0.0379]],

         [[-0.0336,  0.0210,  0.0269],
          [ 0.0253, -0.0379,  0.0089],
          [ 0.0768, -0.0031,  0.0222]],

         [[-0.0468, -0.0411,  0.0379],
          [-0.0072,  0.0061, -0.1089],
          [-0.0437, -0.0243,  0.0241]]],


        [[[-0.0220, -0.0077, -0.1005],
          [ 0.0168,  0.0231,  0.0022],
          [ 0.0255, -0.0047,  0.0565]],

         [[-0.1110, -0.0155, -0.0349],
          [-0.0779, -0.0426, -0.0004],
          [-0.0487, -0.0229, -0.0021]],

         [[ 0.1167,  0.0470, -0.0399],
          [ 0.0584, -0.0280,  0.0083],
          [-0.0376, -0.0560, -0.0018]],

         ...,

         [[-0.0434,  0.0532, -0.0221],
          [ 0.0476,  0.0720, -0.0270],
          [ 0.0699,  0.0181, -0.0053]],

         [[ 0.0456,  0.0123,  0.0234],
          [ 0.0410,  0.0055, -0.0413],
          [ 0.0435,  0.0011,  0.0533]],

         [[-0.0967,  0.0765,  0.0481],
          [-0.0316,  0.0534,  0.0140],
          [-0.0688, -0.0436, -0.0870]]],


        [[[-0.0203, -0.0087, -0.0151],
          [-0.0520, -0.0161,  0.0307],
          [ 0.0133,  0.0232, -0.1173]],

         [[ 0.0162,  0.0724,  0.0072],
          [-0.0323,  0.0027,  0.0119],
          [ 0.0230,  0.0108, -0.0792]],

         [[ 0.0104, -0.0214, -0.0308],
          [ 0.0767,  0.0851,  0.0420],
          [-0.0668,  0.0232,  0.0693]],

         ...,

         [[ 0.0986, -0.0400, -0.0145],
          [ 0.0472, -0.0087, -0.0301],
          [-0.0282, -0.0712, -0.0395]],

         [[-0.0426, -0.0306, -0.0493],
          [ 0.0019,  0.0916, -0.0122],
          [-0.0992, -0.0626, -0.0333]],

         [[ 0.0458,  0.0396, -0.0409],
          [ 0.0514,  0.0047,  0.0722],
          [ 0.0566,  0.0042,  0.0244]]]], device='cuda:0')
module.context.res_layer3.0.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.0.weight Parameter containing:
tensor([[[[ 0.1251]],

         [[-0.0490]],

         [[ 0.0369]],

         ...,

         [[ 0.1366]],

         [[-0.0322]],

         [[-0.0989]]],


        [[[ 0.0829]],

         [[ 0.1975]],

         [[ 0.0409]],

         ...,

         [[-0.2547]],

         [[ 0.2052]],

         [[ 0.0918]]],


        [[[ 0.0506]],

         [[ 0.1079]],

         [[ 0.0303]],

         ...,

         [[-0.1281]],

         [[ 0.0471]],

         [[ 0.1346]]],


        ...,


        [[[-0.0400]],

         [[ 0.0008]],

         [[ 0.0659]],

         ...,

         [[-0.0278]],

         [[ 0.0195]],

         [[-0.0668]]],


        [[[ 0.0533]],

         [[ 0.0291]],

         [[-0.0055]],

         ...,

         [[-0.0514]],

         [[ 0.1741]],

         [[-0.0280]]],


        [[[ 0.1932]],

         [[ 0.1567]],

         [[ 0.1095]],

         ...,

         [[-0.0813]],

         [[-0.1058]],

         [[ 0.0868]]]], device='cuda:0')
module.context.res_layer3.0.downsample.0.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.0.downsample.1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.0.downsample.1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv1.weight Parameter containing:
tensor([[[[ 0.0215,  0.0045, -0.0094],
          [-0.0382,  0.0351,  0.0129],
          [-0.0492, -0.0054,  0.0323]],

         [[ 0.0466, -0.0350,  0.0212],
          [ 0.0321, -0.0262, -0.0048],
          [ 0.0469, -0.0857,  0.0317]],

         [[-0.0150, -0.0024,  0.0331],
          [ 0.0050,  0.0058,  0.0270],
          [ 0.0494,  0.0245, -0.0568]],

         ...,

         [[-0.0160,  0.0030,  0.0416],
          [ 0.0227, -0.0225, -0.0435],
          [ 0.0282,  0.0297,  0.0181]],

         [[-0.0235, -0.0460, -0.0301],
          [ 0.0626,  0.0296, -0.0022],
          [ 0.0474,  0.0277, -0.0463]],

         [[-0.0018,  0.0040,  0.0117],
          [ 0.0232, -0.0299,  0.0004],
          [-0.0039, -0.0038, -0.0220]]],


        [[[-0.0775, -0.0694, -0.0150],
          [ 0.0559, -0.0159,  0.0162],
          [-0.0376, -0.0029,  0.0195]],

         [[ 0.0107, -0.0358, -0.0273],
          [-0.0941, -0.0487, -0.0222],
          [ 0.0019, -0.0445,  0.0334]],

         [[-0.0210, -0.0559,  0.0163],
          [-0.0664, -0.0123, -0.0616],
          [-0.0497,  0.0136, -0.1057]],

         ...,

         [[ 0.0528,  0.0384,  0.0276],
          [-0.0516,  0.0062, -0.0469],
          [ 0.0218, -0.0387,  0.0519]],

         [[-0.0086, -0.0460, -0.0131],
          [-0.0347,  0.0526,  0.0281],
          [ 0.0183,  0.0260,  0.0419]],

         [[-0.0263,  0.0554,  0.0067],
          [ 0.0480,  0.0414, -0.0140],
          [-0.0036,  0.0104,  0.0369]]],


        [[[-0.0033, -0.0570, -0.0383],
          [ 0.0001, -0.0114, -0.0841],
          [ 0.0387,  0.0325,  0.0202]],

         [[ 0.0054, -0.0031, -0.0089],
          [ 0.0055, -0.0500, -0.0063],
          [-0.0736, -0.0199,  0.0581]],

         [[-0.0134, -0.0393, -0.0389],
          [ 0.0142,  0.0213, -0.0258],
          [ 0.0297, -0.0086,  0.0485]],

         ...,

         [[-0.0510,  0.0636, -0.0013],
          [-0.0147,  0.0664,  0.0327],
          [-0.0393,  0.0775, -0.0860]],

         [[ 0.0363, -0.0580, -0.0422],
          [ 0.0346, -0.0427,  0.0990],
          [ 0.0095,  0.0626, -0.0043]],

         [[ 0.0359,  0.0450, -0.0341],
          [-0.0178, -0.1045, -0.0011],
          [ 0.0157,  0.0038, -0.0072]]],


        ...,


        [[[ 0.0376, -0.0135, -0.0033],
          [ 0.0478, -0.0088, -0.0338],
          [-0.0006, -0.0109, -0.0577]],

         [[-0.0587,  0.0140,  0.0676],
          [-0.0251, -0.0221, -0.0448],
          [ 0.0278, -0.0104, -0.0226]],

         [[-0.0004,  0.0930,  0.0079],
          [-0.0376,  0.0304, -0.0153],
          [-0.0320,  0.0013,  0.0150]],

         ...,

         [[-0.0026, -0.0626, -0.0138],
          [ 0.0253,  0.0003,  0.0017],
          [ 0.0507,  0.0291, -0.0485]],

         [[ 0.0528,  0.0460, -0.0188],
          [-0.0196,  0.0013, -0.0753],
          [ 0.0236, -0.0361, -0.0655]],

         [[-0.0978,  0.0226,  0.0054],
          [-0.0178,  0.0303,  0.0161],
          [ 0.0297,  0.0374,  0.0694]]],


        [[[-0.0209, -0.0019, -0.0776],
          [ 0.0627,  0.0486, -0.0380],
          [-0.0196, -0.0368, -0.0162]],

         [[-0.0545, -0.0011,  0.0261],
          [ 0.0152, -0.0237, -0.0215],
          [-0.0505,  0.0019, -0.0395]],

         [[-0.0318, -0.0072,  0.0177],
          [-0.0326,  0.0050, -0.0652],
          [-0.0458,  0.0101, -0.0295]],

         ...,

         [[-0.0375,  0.0422, -0.0207],
          [-0.0108, -0.0009,  0.0865],
          [ 0.0218, -0.0167, -0.0257]],

         [[ 0.0006, -0.0256,  0.0046],
          [-0.0426,  0.0537,  0.0078],
          [ 0.0138,  0.0256, -0.0039]],

         [[-0.0836,  0.0267,  0.0298],
          [-0.0124,  0.0848,  0.0097],
          [-0.0240, -0.0251, -0.0336]]],


        [[[-0.0822,  0.0339, -0.0475],
          [ 0.0256, -0.0560,  0.0121],
          [ 0.0153, -0.0131,  0.0498]],

         [[-0.0170, -0.0456, -0.0165],
          [-0.0895,  0.0513, -0.0169],
          [ 0.0357, -0.0048, -0.1118]],

         [[ 0.0573, -0.0292, -0.0102],
          [-0.0547, -0.0881, -0.0542],
          [ 0.0150,  0.0182, -0.0028]],

         ...,

         [[ 0.0986, -0.0013, -0.0079],
          [ 0.0134, -0.0404, -0.0459],
          [ 0.0175, -0.0270,  0.0035]],

         [[-0.0144,  0.0313, -0.0494],
          [ 0.0390, -0.0119,  0.0315],
          [-0.0106,  0.0345,  0.0610]],

         [[-0.0860,  0.0658,  0.0909],
          [-0.0152, -0.0474,  0.0391],
          [-0.0369, -0.0046,  0.0197]]]], device='cuda:0')
module.context.res_layer3.1.conv1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn1.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0')
module.context.res_layer3.1.bn1.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.conv2.weight Parameter containing:
tensor([[[[ 0.0243,  0.0364, -0.0078],
          [ 0.0448, -0.0044,  0.0088],
          [ 0.0293,  0.0180,  0.0598]],

         [[-0.1236, -0.1004,  0.0609],
          [-0.0355, -0.0335, -0.0819],
          [-0.0022,  0.0137, -0.0159]],

         [[-0.0103,  0.0226, -0.0013],
          [-0.0326,  0.0419, -0.0734],
          [-0.0293,  0.0157,  0.0259]],

         ...,

         [[-0.0624, -0.0106, -0.0372],
          [ 0.0087,  0.0832, -0.0456],
          [-0.0940,  0.0438, -0.0248]],

         [[-0.0036,  0.0238,  0.0325],
          [ 0.0087, -0.0442,  0.0047],
          [-0.0032,  0.0431,  0.0756]],

         [[ 0.0055,  0.0389,  0.0693],
          [-0.0341,  0.0166,  0.0733],
          [-0.0081,  0.0090, -0.0238]]],


        [[[-0.0210, -0.0140, -0.0266],
          [-0.0548, -0.0296, -0.0029],
          [-0.0463, -0.0033,  0.0241]],

         [[-0.0479,  0.0343, -0.0311],
          [ 0.0162, -0.0894, -0.0390],
          [ 0.0158,  0.0330, -0.0022]],

         [[-0.0467,  0.0488, -0.0163],
          [-0.0048, -0.0033, -0.0671],
          [-0.0432, -0.0663,  0.0039]],

         ...,

         [[-0.0350,  0.0585, -0.0140],
          [-0.0274,  0.0115, -0.0042],
          [ 0.0750,  0.0154,  0.0580]],

         [[ 0.0096, -0.0097, -0.0272],
          [-0.0017,  0.0379, -0.0219],
          [ 0.0283,  0.0024, -0.0038]],

         [[ 0.0156, -0.0077, -0.0125],
          [ 0.0325,  0.0894,  0.0583],
          [ 0.0382, -0.0249, -0.0853]]],


        [[[-0.0662,  0.0021, -0.0323],
          [-0.0310,  0.0010,  0.0063],
          [ 0.0061, -0.0306, -0.0294]],

         [[-0.0053, -0.0725, -0.0748],
          [-0.0218, -0.0222,  0.0219],
          [ 0.0286, -0.0203, -0.0025]],

         [[ 0.0578,  0.0468,  0.0297],
          [-0.0019, -0.0507,  0.0590],
          [ 0.0213, -0.0110,  0.0244]],

         ...,

         [[-0.0509,  0.0445,  0.0370],
          [ 0.0499, -0.0309,  0.0365],
          [ 0.0855, -0.1138,  0.0583]],

         [[-0.0010, -0.0590, -0.0673],
          [ 0.0170, -0.0050,  0.0538],
          [-0.0121, -0.0268, -0.0065]],

         [[-0.0093, -0.0554, -0.0583],
          [ 0.0603, -0.0671, -0.0591],
          [-0.0339, -0.0007,  0.0602]]],


        ...,


        [[[-0.0748, -0.0187,  0.0453],
          [ 0.0057,  0.0394,  0.0360],
          [ 0.0232, -0.0337,  0.0630]],

         [[ 0.1034,  0.0178,  0.0375],
          [-0.0416, -0.0086,  0.0346],
          [ 0.0269,  0.0448, -0.0281]],

         [[-0.0277, -0.0084, -0.0384],
          [-0.0177, -0.0032, -0.0314],
          [ 0.0421,  0.0325,  0.0353]],

         ...,

         [[ 0.0182,  0.0649, -0.0030],
          [-0.0012,  0.0054, -0.0559],
          [ 0.0494,  0.1013, -0.0206]],

         [[-0.0341, -0.0480, -0.0119],
          [-0.0257,  0.0180, -0.0282],
          [ 0.0290, -0.0381,  0.0229]],

         [[ 0.0648, -0.0412,  0.0281],
          [ 0.0035,  0.0601,  0.0254],
          [ 0.0465,  0.0297, -0.0361]]],


        [[[-0.0132,  0.1183,  0.0097],
          [ 0.0335, -0.0144,  0.0089],
          [-0.0449,  0.1323, -0.0623]],

         [[ 0.0210,  0.0146,  0.0399],
          [ 0.0035,  0.0397,  0.0373],
          [ 0.0152,  0.0283,  0.0012]],

         [[ 0.0143, -0.0503, -0.0083],
          [ 0.0358,  0.0235,  0.0074],
          [ 0.0340,  0.0074, -0.0207]],

         ...,

         [[-0.0207, -0.0297, -0.0444],
          [-0.0514,  0.0491, -0.0286],
          [-0.0181,  0.0354, -0.0082]],

         [[-0.0426, -0.0401, -0.0171],
          [ 0.0169, -0.0433,  0.0116],
          [-0.0568, -0.0251, -0.0176]],

         [[-0.1113, -0.0114,  0.0403],
          [-0.0085,  0.0141,  0.0053],
          [-0.0609,  0.0609, -0.0295]]],


        [[[ 0.0122, -0.0823,  0.0387],
          [-0.0354, -0.0439,  0.0395],
          [-0.1072,  0.0887,  0.0778]],

         [[-0.0416, -0.0293, -0.0061],
          [-0.0290, -0.0488, -0.0014],
          [-0.0129, -0.0019,  0.0388]],

         [[-0.0384,  0.0209, -0.0090],
          [-0.0138, -0.0244, -0.0529],
          [ 0.0749,  0.1122, -0.0253]],

         ...,

         [[ 0.0316,  0.0080,  0.0535],
          [ 0.0504, -0.0177,  0.0044],
          [ 0.0340,  0.0491,  0.0474]],

         [[ 0.0134,  0.0005, -0.0419],
          [ 0.0578, -0.0851, -0.0289],
          [-0.0193,  0.0279, -0.0076]],

         [[-0.0397, -0.0192,  0.0142],
          [-0.0210,  0.0491, -0.0134],
          [-0.0825, -0.0527, -0.0065]]]], device='cuda:0')
module.context.res_layer3.1.conv2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
module.context.res_layer3.1.bn2.weight Parameter containing:
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.], device='cuda:0', requires_grad=True)
module.context.res_layer3.1.bn2.bias Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/functional.py:478: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1659484810403/work/aten/src/ATen/native/TensorShape.cpp:2894.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "tools/train.py", line 208, in <module>
    main()
  File "tools/train.py", line 197, in main
    train_model(
  File "/home/s.starace/FlowNets/mmflow/mmflow/apis/train.py", line 267, in train_model
    runner.run(data_loaders, cfg.workflow)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 61, in train
    data_batch = next(data_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 34, in __next__
    data = next(self.iter_loader)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
cv2.error: Caught error in DataLoader worker process 1.
Original Traceback (most recent call last):
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/torch/utils/data/dataset.py", line 235, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 87, in __getitem__
    return self.prepare_data(idx)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/base_dataset.py", line 71, in prepare_data
    return self.pipeline(results)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/compose.py", line 42, in __call__
    data = t(data)
  File "/home/s.starace/FlowNets/mmflow/mmflow/datasets/pipelines/loading.py", line 70, in __call__
    img2 = mmcv.imfrombytes(
  File "/home/s.starace/.conda/envs/openmmlabMim/lib/python3.8/site-packages/mmcv/image/io.py", line 259, in imfrombytes
    img = cv2.imdecode(img_np, flag)
cv2.error: OpenCV(4.6.0) /io/opencv/modules/imgcodecs/src/loadsave.cpp:816: error: (-215:Assertion failed) !buf.empty() in function 'imdecode_'


